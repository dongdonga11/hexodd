[{"title":"使用免费国外服务器搭建ChatGPT接口服务[附注册教程/源码]","date":"2023-06-26T07:09:32.000Z","url":"/2023/06/26/%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9%E5%9B%BD%E5%A4%96%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAChatGPT%E6%8E%A5%E5%8F%A3%E6%9C%8D%E5%8A%A1-%E9%99%84%E6%B3%A8%E5%86%8C%E6%95%99%E7%A8%8B-%E6%BA%90%E7%A0%81/","tags":[["ChatGPT","/tags/ChatGPT/"],["服务器","/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"]],"categories":[["undefined",""]],"content":"最近这段时间，ChatGPT火的一塌糊涂，到处都是介绍ChatGPT的文章，但自从前段时间开始，很多人可能都发现了ChatGPT接口国内调用不了了，而很多人可能是抱着玩玩的心态，并不愿意去花钱另外购买国外的服务器，当然这其中也包括我，由于没有预算去购买一台国外的服务器，所以我公众号的ChatGPT功能也被迫停止运行了一段时间，但是今天我想告诉大家，本站公众号ChatGPT服务重启了，还是之前的使用方式，但是速度快了很多，有兴趣的朋友可以去关注公众号去体验，不知道怎么用的可以看公众号的“使用帮助”。 回到正题，虽然我重启了公众号的ChatGPT功能，但是我并没有额外花钱，因为我找到了免费的国外服务器，它不香吗？？？市面上提供服务器免费试用的厂商不少，比如阿里云、亚马逊等等，但是注册比较麻烦，需要信用卡，国外手机号、国外身份信息等等之类的信息，我最先也是准备注册阿里云，后来卡在了手机号这块儿，免费的手机号根本注册不了，而我又不想花钱去买验证码，直到最后我找到了hostbuddy这个网站，全程只需要一个邮箱即可，下面介绍一下注册流程。 一、hostbuddy注册 1、注册账号 首先我们访问hostbuddy官网，地址：，并点击“GET STARTED”按钮， 填写注册信息，并点击注册 不出意外的话，我们会进入以下界面 2、验证账号 进入注册账号时填写的邮箱，找到激活邮件，并点击激活链接 3、登录账号 账号成功激活后会转向到登录页，填写我们注册的账号并登录 4、激活试用计划 首次登录完毕之后我们需要激活我们的试用计划，点击“Try Now” 可以看到默认的地区是美国，刚好可以用于我们访问ChatGPT服务，然后我们填入密码和网站名，这里的密码就是后面我们登录FTP的密码，网站名就是网站的目录名称，然后点击“Next” 确认信息并点击“提交” 此时不要关闭窗口，需要等待激活完成，一般1-3分钟 5、创建node应用 在激活完成后，我们登录主机面板并创建node应用， 这里显示了我们的FTP登录信息和对外域名，我们点击“管理网站”并点击“NodeJs“进入node应用创建界面 按序号依次点击完成node应用的创建，需要注意的是当激活NodeJS后，所有的javascript将会被当作NodeJS运行。 6、登录FTP 在node应用创建完成后，我们用步骤5截图中显示的FTP信息和步骤4设置的密码登录FTP，登录后目录结构如下： “www”即为存放网站源码的目录，我们进入目录 目录中有2个文件，default.asp是网站的默认页，我们需要删除掉，web.config是网站的配置文件。 7、测试node应用 在node应用创建完毕后我们就可以开始测试了，创建app.js， 并编写如下代码： 注意这里不能自定义端口，必须使用process.env.PORT。将app.js文件传到www目录下，并更改配置文件如下： 访问步骤5中获取的对外域名，如果页面显示”Hello, world!“则测试通过。 二、部署ChatGPT接口服务 通过步骤一，我们注册了免费的国外服务器，并创建了node应用环境，接下来我们需要开始部署ChatGPT的接口服务，这里我们使用koa搭建一个简单的服务，首先创建基础项目结构， app.js的代码如下： gpt.js代码如下： 对于getData方法的实现，这里图方便使用request库（目前已废弃）来发起请求，大家可以根据自己的习惯更改，代码如下： 将所有的源码连同node_modules一起上传到www目录下，这里稍微有点慢，可以尝试压缩后再上传，然后在线解压， 等待所有文件上传完毕后，通过“对外地址&#x2F;gpt&#x2F;chat?q&#x3D;你的问题”即可访问我们部署的ChatGPT服务。 三、问题总结 1、hostbuddy服务器的免费试用时长目前是60天即2个月，这个门槛比较低，到期前找个邮箱重新注册即可继续使用，当然也可以选择其他的厂商，比如LAF，免费时长是一个月，需要手机号注册，具体可参考：用Laf云平台，两步将ChatGPT接入微信公众号(含代码) 2、注册hostbuddy一个IP只可注册一次，如果遇到访问注册页显示已经注册的情况，可以选择重启路由器换IP或者使用代理。 3、如果使用代理注册hostbuddy需要注意并不是所有的地区都可以注册免费试用账号，具体支持的地区需要自测，我只发现日本是不行的。 4、hostbuddy服务器目前默认的node版本是v18x，如果需要自定义node版本，可参考： 5、在更新程序文件时，如遇到代码不更新的情况，需要重新保存入口文件比如app.js，重新上传即可。 6、如果网站无法访问，又没有给出具体的错误信息，可以到FTP网站目录如www下根据访问时间查看iisnode目录下对应的txt文件获得报错信息。 四、结语 如需下载本文所涉及的源码及素材包，请在关注公众号后发送：gpt"},{"title":"有趣的chrom插件","date":"2023-06-20T06:09:23.000Z","url":"/2023/06/20/%E6%9C%89%E8%B6%A3%E7%9A%84chrom%E6%8F%92%E4%BB%B6/","tags":[["插件","/tags/%E6%8F%92%E4%BB%B6/"],["chrom","/tags/chrom/"],["github","/tags/github/"]],"categories":[["undefined",""]],"content":"推荐一位国外全栈开发者大神：Alyssa，在 Github 上有 5.34K 的关注者。她是一名全栈开发者、Sonuum 公司的创始人。 被 Maker Mag 评为 2018 最佳女性 Maker，并两次入围 Product Hunt Maker of the Year 决赛。 注：Product Hunt 是国外的一个寻找好产品的网站，开发者或者开发团队可以把自己开发的产品发布到网站，与社区的用户一起讨论。本文中推荐 4 个有趣的开源项目，都是由开发者 Alyssa 完成。 本期推荐开源项目目录： \\1. 适用于 Chrome 的屏幕录制工具 \\2. 强大的浏览器插件 \\3. 实时协作的地图工具 \\4. 创建漂亮的流程图 01适用于 Chrome 的屏幕录制工具 适用于 Chrome 的最强大的屏幕录像机和注释工具，使用该插件你可以录制你的屏幕和并且在屏幕任意位置进行绘画、添加文本、添加箭头，同时还可以录制你的电脑音频。 录制完成，你可以对录制的视频片段进行修剪，导出为 MP4、Gif 并且一键保存到谷歌云盘。该开源项目的地址和使用的库的地址都放在了下面。 编程语言：Javascript 开源地址： 相关开源组件地址： 用于交互式文本和箭头：下拉菜单的开源组件：用于修剪&#x2F;删除录音部分的范围组件：颜色选择块：用于在录制时异步保存视频：使下载的视频可搜索的开源组件： 02强大的浏览器插件 使用开源项目 Omni 可以帮助你更专业的管理你的浏览器， Omni 提供了一个简单界面，在界面中你只需要使用简单的命令就能管理选项卡、书签、浏览器历史记录、执行各种操作等等。 你可以方便的搜索、浏览管理标签、快速搜索浏览历史记录、与 Notion、Figma、稳定集成，同时好包含更多高级设置。 编程语言：JavaScript 开源地址： 03实时协作的地图工具 Mapus 是一种在地图上协作探索和注释的工具，开源一年获得了近 3K 的 Star。使用该开源项目你可以在地图上绘制、标记、画出区域等等，想当于在普通的地图上增加了实时协作的功能。 通过实时协作，你可以与其他用户同步计划和行程；你能使用画笔或者箭头在地图上标记和注释；还可以创建一些标记，方便快速定位标注地图上的位置，同样可以把地图数据导出。 编程语言：JavaScript、CSS、HTML 开源地址： 04创建漂亮的流程图 这是一个轻量级的 JavaScript 库 近1W人 Star，通过该 Flowy 你能在你的应用中创建漂亮的流程图，使用步骤如下： 更详细的教程可以参考该项目的 Readme 文件： 开源地址： "},{"title":"申请永久免费域名并绑定到个人网站","date":"2023-06-20T06:02:05.000Z","url":"/2023/06/20/%E7%94%B3%E8%AF%B7%E6%B0%B8%E4%B9%85%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E5%B9%B6%E7%BB%91%E5%AE%9A%E5%88%B0%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/","tags":[["域名","/tags/%E5%9F%9F%E5%90%8D/"],["绑定域名","/tags/%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"]],"categories":[["undefined",""]],"content":"eu.org一个从1996开始提供免费域名的组织, 其官网地址是  ，他帮助学生、爱好者或者非营利组织不用花费购买域名就可能拥有自己的免费域名，虽然 eu.org 网域切确来说这是一个子域名（Subdomain）或者二级域名，但是根据一些网站的资讯，有许多大型互联网公司，像是 Google, Cloudflare, Bing 等厂商都已经将eu.org域名当成是一个顶级网域了。 eu.org对个人和组织是免费注册的。 域名申请申请地址申请地址： 第一次打开你可能会怀疑进错了页面，不用怀疑，他们就是这么简洁的页面。 点击 Sign-in or sign-up here! 进入登录页面。 注册然后点击Register进入注册页面。输入你的基本信息，比如Name，Email等等基本信息，这里不建议填国内的地址信息，你可以进入  网站随机生成一个虚拟英国或者美国地址，会提高通过的概率。 注册成功之后点击New Domain申请新的域名， 设置你的域名，eu.org后缀，比如我申请一个新的域名：techxiaofei.eu.org ![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’‘ xmlns:xlink&#x3D;’ stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E) 最主要的就是NameServers也就是域名解析，也就是我们要用什么域名解析商来解析域名。 ![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’‘ xmlns:xlink&#x3D;’ stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E) DNSPod这里填DNSPod的地址，也就是腾讯云的域名解析商，使用微信扫码登录就可以。 扫码之后点击右上角管理控制台-&gt;我的域名-&gt;添加域名，添加刚才你申请的域名，也就是techxiaofei.eu.org 点击确认，会提示未使用DNSPod，鼠标放上去会显示具体的DNS服务器地址： 这个DNS服务器就是我们需要在eu.org填写的Name Servers Name Servers选择server names，然后填写刚才DNSPod上的两个DNS服务器地址： 然后点击Submit后跳转页面显示： 说明你申请成功了，需要等待1到30天，通过会给邮件通知。 申请通过我这里等待了大半个月收到邮件通知，这个时候说明你的免费域名已经申请通过了。 收到通知之后就可以去DNSPod上添加具体的解析记录绑定到你的个人网站了： 绑定个人网站DNSPod记录申请通过之后DNSPod记录会从未使用DNSPod变为无记录，就说明域名已经授权使用DNSPod来解析了。只是还没有添加解析记录。 绑定域名到Vercel托管平台由于我的网站是部署在Vercel托管平台，所以我们需要先回到Vercel来添加域名： 回到你的vercel，点击你的项目-&gt;Settings-&gt;Domains 添加你刚申请的域名 添加之后会提示你需要域名解析商添加一条A记录。 添加一条A记录回到DNSPod域名解析商那里添加一条A记录，记录值就是Vercel平台提示的IP地址。 添加成功回到Verel托管平台，会自动刷新，显示合法配置。 然后点击域名后面的跳转链接，直接打开个人网站。 后记希望大家都能早日成功申请到自己的免费域名。"},{"title":"一键部署你的ChatGPT Web网站","date":"2023-06-20T05:57:00.000Z","url":"/2023/06/20/%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E4%BD%A0%E7%9A%84ChatGPT-Web%E7%BD%91%E7%AB%99/","tags":[["vercel","/tags/vercel/"],["ChatGPT","/tags/ChatGPT/"]],"categories":[["undefined",""]],"content":"想要搭建自己的ChatGPT Web网站，我们只需要两个账号： 1.Github账号 -账号 - 其实Vercel账号可以使用Github账号直接登录： 所以我们只需要注册一个Github账号即可。 开始1. Github我们首先先在Github上访问这个地址： 然后点击右上角的Fork也就是克隆，然后点击Create Fork把这个仓库克隆到你的账号下 这个时候就会把这个github 仓库克隆到你的个人账号下面。 Vercel克隆之后我们去到Vercel平台。Vercel 使用刚才的Github账号登录并授权。 我们直接点击Add New-&gt;Project，然后找到我们的ChatGPT-next-web这个Github仓库，点击Import导入 这个project name我们可以随便选，使用默认的即可。 我们唯一要注意的就是这个环境变量，我们需要把ChatGPT的API Key添加进来，然后部署。 这个API Key是为了验证你的身份，需要你有OpenAI账号。 ![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’‘ xmlns:xlink&#x3D;’ stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E) API key如果你不知道上面的API Key怎么获得，这个非常简单，我们打开openai的平台地址： 登录之后点击右上角的头像，点击Manage Account-&gt;API Keys-&gt;Create New Secret Key, 然后复制下来保存备用。 部署然后回到刚才的部署界面，在刚才的环境变量在Name里面输入 OEPNAI_API_KEY，然后Value就输入我们刚才复制的API Key 点击Add添加，然后我们点击Deploy部署。 当然如果你需要你的ChatGPT支持密码访问，可以添加一个新的环境变量， - 这个时候，我们的网站就会需要密码访问 我们点击Deploy，可以看到它就开始部署了 我们稍等一会就可以看到我们的网站就能部署成功了。 使用我们可以点击就可以进入到我们的ChatGPT 个人网站了。 此时Vercel 给我们自动分配了域名，当然这个域名由于某些原因，在国内可能无法访问，你可能需要使用自己的域名。 我们在刚才的部署成功的页面点击右边的Add Domain添加域名， 然后输入我们的域名，点击添加。我们选择默认的选项， 然后点击添加 添加之后Vercel会提示我们需要添加两条记录，一条是A记录，一条是CNAME记录。 我们进入到我们的域名解析商，这里我使用cloudflare来解析我的域名。 我们在这里点击添加记录： •首先我们添加A记录，记录类型是A，名称是@，然后ipv4地址就是刚才的ip地址•然后我们再添加一条 CNAME 记录，记录类型是CNAME，名称是www，值是刚才的值 现在我们这两条记录，就已经添加成功了 我们再回到我们的 Vercel 托管平台，可以看到，我们的DNS记录已经设置成功了 我们添加成功之后直接点击跳转，用我们自己的域名就可以访问ChatGPT Web网站了。 那我们可以开始在这里和ChatGPT进行聊天了。 角色扮演我们也可以让ChatGPT来扮演各种角色，此时ChatGPT的回答会更具有专业性。 我们可以看到这里有非常多的角色，我们来让他帮我们扮演一个职业顾问，点击左下角新的聊天，找到职业顾问点击跳转新的聊天。 然后我们问他问题：作为一个程序员，我以后的职业生涯应该怎么规划？ 点击发送，可以看到作为一个职业顾问，他给我们详细列明了我们有很多职业道路可以选择，然后还给我们的职业生活也做了一些规划。 如果不让它扮演职业顾问，它给的回答是怎么样的呢？ 可以看到，同样的问题，当我们不让他扮演任何角色的时候，他给我们的答案就相对专业性就没有那么强。 所以角色扮演在专业的问题上，ChatGPT能给到更好的回答，我们可以使用这个来获得更优秀的答案。 密码访问同时这个ChatGPT网站也是支持密码访问的，想要支持密码访问非常简单，上面已经告诉你如何添加环境变量。 如果你之前没有添加，这里教你如何再次添加。 点击你的当前项目，找到settings设置项，然后找到左边的Environment Variables也就是环境变量。 密码的环境变量的key是CODE，这个值你可以填写你的密码，比如说我填写techxiaofei，然后点击保存 现在我们环境已经添加成功了，添加成功之后我们重新编译一下，我们点击redeploy就是重编译。 重新访问我们的ChatGPT网站，可以看到上面提示：现在是未授权状态，请点击左下角设置按钮输入访问密码。 我们点击左下角的设置，然后找到访问密码，输入我们的访问密码，就可以正常和ChatGPT对话了。 后记这个ChatGPT Web网站可以解决在国内无法正常访问ChatGPT的问题 而且它也不需要云服务器，不需要你购买任何东西，完全免费，任何人都可以轻松一键部署，所以赶紧尝试一下吧。"},{"title":"Markdown 书写示例","date":"2023-06-19T03:35:27.300Z","url":"/2023/06/19/exp/","categories":[["undefined",""]],"content":"插槽 目录[[toc]] 引用 这是一条引用 自定义容器::: info 信息这是一个信息::: ::: tip 告示这是一个提示::: ::: warning 警告这是一个警告::: ::: danger STOP危险区域，禁止通行::: ::: details 点击查看代码 ::: ::: v-pre&#123;&#123; This will be displayed as-is &#125;&#125;::: ::: center居中文字::: ::: right居右文字::: 高亮我是 &#x3D;&#x3D;高亮&#x3D;&#x3D; 的 代码块行高亮&#123;1,3-5&#125; 更多用法参照： emoji:tada: 复选框 看板娘 调色板 多语言 上下标19^th^H2O 脚注脚注 1 链接^first. 流程图 TexEuler’s identity $e^{i\\pi}+1&#x3D;0$ is a beautiful formula in $\\mathbb{R}^2$. $$\\frac {\\partial^r} {\\partial \\omega^r} \\left(\\frac {y^{\\omega}} {\\omega}\\right)&#x3D; \\left(\\frac {y^{\\omega}} {\\omega}\\right) \\left{(\\log y)^r + \\sum_{i&#x3D;1}^r \\frac {(-1)^i r \\cdots (r-i+1) (\\log y)^{r-i}} {\\omega^i} \\right}$$ 演示::: demo 这是 demo 标题 ::: 存在超自然现象，谨慎使用！ 常用Front Matter 其他其他格式 请使用 Typora 编辑器辅助使用或者参照   书写规范，参见 此处"},{"title":"记录我的小项目-第一弹","date":"2023-06-19T00:57:46.000Z","url":"/2023/06/19/%E8%AE%B0%E5%BD%95%E6%88%91%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%AC%AC%E4%B8%80%E5%BC%B9/","tags":[["项目集锦","/tags/%E9%A1%B9%E7%9B%AE%E9%9B%86%E9%94%A6/"],["ideas","/tags/ideas/"],["小爬虫","/tags/%E5%B0%8F%E7%88%AC%E8%99%AB/"],["高考网站","/tags/%E9%AB%98%E8%80%83%E7%BD%91%E7%AB%99/"],["志愿填报","/tags/%E5%BF%97%E6%84%BF%E5%A1%AB%E6%8A%A5/"]],"categories":[["undefined",""]],"content":"记录我的小项目-第一弹 一、项目起因： 最近一致在琢磨一个有趣的项目，可以涵盖自己的所学知识，运营、技术、产品、销售。最初规划是希望通过chatgpt的Vercel项目免费开发给美术生，Midjourney出一些美图在小红书、抖音上发进行引流，chatGPT做钩子引导公众号，通过公众号做文章软文做转化，小程序做chatgpt活跃,。最后完成产品的售卖。 而后切入到6月高考季，发现社会热点的仍是聚焦志愿填报，而且自己的目标人群也有十分之一是美术生，所幸自己的Excel运用也不错，就想通过Excel做一个高考志愿填报的系统，主要用公式进行志愿分析，用于引流，料想应该不会差。遂进行初期尝试。 记录工具：hexojs&#x2F;hexo博客，vercel部署 chatGpt：Yidadaa&#x2F;ChatGPT-Next-Web，vercel部署 流程工具：aipaw &#x2F; dootask，docker部署 小程序工具：月星墙 &#x2F; ChatGPT-MP，（未开发） 二、项目逻辑： Midjourney出图，在小红书（美术生栋栋阿）、抖音号（美术生栋栋阿）发，通过简介发布美术生-找我免费领chatGPT。Midjourney教程。引导（美考攻略公众号） 美考攻略账号直播“美术生志愿填报”引导加公众号领取 公众号发布美术生文章和产品软文，菜单发布ChatGPT单日密码，引导加小程序 小程序有chatGPT,内含升序规划和资料包，引导加微信 产品包设计，美术生小班课、直播插画课、美术生找画室产品 chatgpt可以涵盖美术生找画室、美术生查成绩、美术生升学规划、美术报志愿等功能。通过小红书、抖音等新媒体渠道进行引流。 三、整体规划： 小红书、抖音账号注册；公众号注册（6月完成） 完成Midjourney出图。（6月完成） 完成美术生志愿填报系统设计（6月完成） 公众号文章存档（7月完成10篇） 小班课产品营销物料设计（7月完成10篇） 找老师，出课程（待定） 小程序完善（待定） 四、当前进展： 小红书、抖音账号、公众号注册完成(已完成) 美术生志愿填报设计制作中（计划6月29日前完成） 五、指标计划：暂未涉及 &#x3D;&#x3D; 当前项目进展：&#x3D;&#x3D; 已经延后"},{"title":"pandas 使用方法","date":"2023-06-14T06:24:22.000Z","url":"/2023/06/14/pandas-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","tags":[["-pandas","/tags/pandas/"]],"categories":[["undefined",""]],"content":"好的，我可以帮你介绍如何使用 Pandas 来读取 Excel 数据并实现追加数据或追加 Sheet。 首先需要安装 Pandas 库，可以使用以下命令进行安装： 有了 Pandas 库，就可以通过 read_excel() 方法读取 Excel 文件了。假设我们有一个名为 data.xlsx 的 Excel 文件，可以使用以下代码读取其中的 Sheet1 中的数据： 其中 sheet_name 参数可以用来指定要读取的 Sheet 名称或 Sheet 的下标。 接下来可以使用 Pandas 提供的方法往 Excel 中追加数据。假设我们有一个名为 new_data.xlsx 的 Excel 文件，要将数据追加到其中的 Sheet1，可以使用以下代码： 以上代码中，我们首先使用 read_excel() 方法读取名为 new_data.xlsx 的 Excel 文件中的 Sheet1 数据，然后创建一个包含新数据的数据帧 df2，接着使用 concat() 方法将新数据追加到原有数据后面，最后使用 ExcelWriter() 创建一个 ExcelWriter 对象，并使用 to_excel() 方法将数据写入 Excel 文件中的 Sheet1。 如果要新增一个 Sheet，可以使用以下代码： 以上代码中，我们使用 read_excel() 方法读取名为 new_data.xlsx 的 Excel 文件中的所有数据，接着创建一个包含新数据的数据帧 df2，最后使用 ExcelWriter() 创建一个 ExcelWriter 对象，并使用 to_excel() 方法将新数据写入 Excel 文件中的新 Sheet 中。请注意，我们在 ExcelWriter() 中指定了 engine 为 openpyxl，并将 mode 参数设置为 a，这样可以以追加模式打开 Excel 文件。"},{"title":"高考志愿网JS逆向","date":"2023-06-14T01:15:05.000Z","url":"/2023/06/14/%E9%AB%98%E8%80%83%E5%BF%97%E6%84%BF%E7%BD%91JS%E9%80%86%E5%90%91/","tags":[["高考网站","/tags/%E9%AB%98%E8%80%83%E7%BD%91%E7%AB%99/"],["逆向","/tags/%E9%80%86%E5%90%91/"]],"categories":[["undefined",""]],"content":"起因：最近想出一个高考志愿填报的excel系统，想先从网上拿一些资源，最开始的设计是希望从网站上找到近5年的报考指南PDF，然后写代码OCR扫描PDF，摘取关键数据，后发现网站没有PDF,于是告吹。后来就找寻网站，看看有没有我想要的数据，于是找到了”掌上高考“，发现有一些数据是想要的。（其实公司内有一个高考志愿网站，草率了） 处理数据： 第一步：打开开发者工具找到对应的数据文件 第二步：分析payload发现是一个POST请求，需要给他的服务器发送数据，再分析payload，发现里面有要发送的数据，里面有个signsafe（估计是个加密数据）看来必须要逆向才行了 后来发现这个网站做逆向纯属脱裤子放屁了。（既然可以用GET请求得到数据，signsafe就是个摆设）不过正好可以学习一下如何逆向。 第三步：用search搜索一下signsafe（这个需要用H5模式）发现了一堆数据，但是能用的就是第一个 第四步：分析数据通过上下文判断是用的Hmac sha1加密，找到了signsafe 第五步：找到文件，用source打断点试试根据文件夹的headers找到数据文件夹 经过断点运行，多试了几次，发现就是这个代码。 这是一个加密的方法，所有的singsafe都走这一个方法，断点可以走第二遍，就能出现我们想要的safe 具体的加密逻辑是这样的：首先获取url（包括传递的数据），然后去掉https:\\\\,进行sha1加密，密钥是D23ABC@#56,加密后再进行Base64加密，再将加密的数据用MD5进行加密。最后进行拼接。 代码实现："},{"title":"搭建一个Hexo博客并用vercel部署","date":"2023-05-31T00:28:47.588Z","url":"/2023/05/31/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAHexo%E5%8D%9A%E5%AE%A2%E5%B9%B6%E7%94%A8vercel%E9%83%A8%E7%BD%B2%20(2)/","categories":[["undefined",""]],"content":"Hexo 是一款基于Node.js的静态博客生成器，具有简单易用、快速高效、丰富主题、插件支持等特点，适合用于个人博客、技术文档、个人网站等场景。而且基于 markdown 编写起来非常顺畅，个人非常喜欢这个博客。这次下定决心搭建一个 Hexo 博客来实现我日常分享的一个小博客网站。 前置准备 一台 windows 笔记本电脑，当然 mac 电脑也是没问题的，即使 Linux 电脑也是可以的。 Git工具: Git (git-scm.com) Node+ Npm工具：Node.js (nodejs.org) 准备好 Hexo 博客程序：  创建一个 Git 仓库 注册一个 vercel 账号(如果有自己的服务器或者不适用 vercel 可以不用管这一步)： 准备一个域名(如果不需要独立域名可以略过这一步) hexo 本地图片部署 正式开始安装 Hexo 工具上面的 GIT和 Node在百度或者谷歌上已经有很多相关专业的教程，这里就不详细讲解这块的知识了。一般来说到官网上下载完毕直接下一步下一步即可。我们先来全局安装一个 Hexo 工具 创建 hexo 本地博客程序安装完成之后我们就可以使用 hexo 的工具来创建博客了。在电脑上创建一个目录并进入该目录，我起名叫做 javier-blog，刚才我们安装过 Git 工具这时候就派上用场了。在该目录内右键找到 Git Bash Here 点击打开一个 Git的命令行窗口或者你可以使用其他的命令行工具。执行以下命令 启动 hexo 本地服务安装完成 hexo程序直接执行 hexo s 命令就可以打开 hexo 的本地服务。在命令行上会显示启动后的服务地址。 以上就正式搭建完成 hexo 的博客程序了。 修改博客的基本信息修改 博客的标题，副标题，描述，语言时区等信息 修改博客地址 创建 github 仓库打开  创建一个仓库用来存储我们的部署程序,创建后是这个样子的。 同步本地 Hexo 部署页面到 github 中初始化 git 项目 打开本地 **hexo **项目目录并执行下面的命令,用来安装 git 的部署组件 安装之后在项目目录中找到**_config.yml **修改 deploy 参数 执行 hexo g 然后执行 hexo d 将静态页面部署到 github 上，是这个样子的。 将项目部署到 vercel 上如果不需要部署到 vercel 上此步可以略过 在 **dashboard **上 选择 Create a New Project 在关联的 **github **账户中，找到刚才的博客仓库，选择 import 进入部署页面选择 deploy 生成之后点击 Continue to Dashboard 点击 Visit 就可以看到刚刚生成的博客程序了 将项目资源文件放入同一个仓库中在命令行创建一个新的分支并切换过去 提交代码 常用命令 "}]