[{"title":"大麦网抢票软件工具开发系列（一）","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["抢票软件开发参考","/tags/%E6%8A%A2%E7%A5%A8%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%8F%82%E8%80%83/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":"前言 《大麦网》都知道吧，就是那个被网友声称“大麦网你卖啥了?”票务平台。近期有听到朋友说《大麦网》的票很难抢，基本上都是说：“哎哟喂,被挤爆啦,请稍后重试!”，也不知道《大麦网》到底有没有票！！！ 言归正传，准备做个《大麦网》抢票的软件，就是想证明下《大麦网》到底有没有票（推广公众号）！！，做之前也从百度、Github里面搜索过， Github里面有几个好用的Python抢票脚本，有兴趣的可以去里面搜索。此次做的抢票小工具是基于《大麦网》移动端接口的，直达《大麦网》服务器，没有网页元素，速度肯定棒。 这个系列的文章主要是偏教程方面，学习一些Hook、抓包、反编译的知识。再者《大麦网》已经被阿里给收了，所以这是个阿里系的App，看完这个系统的文章对某宝、某猪、某猫App的逆向很有帮助。说了这么多，先列出逆向时用到的工具软件，以及主要用途： Frida Xposed Apktool Selenium Root后的手机一台 还有一些逆向过程中的难点： Charles抓包 生成Api签名 自动过人机校验 大纲为了思路更加清晰，为大家列出这个系列后面的一些文章相关内容： 基本工具使用、介绍 阿里网络库逆向分析、Charles抓包 MTOP签名参数分析、绕路 人机检验分析、绕路 Frida基本使用使用Frida的目地是为了hook应用关键方法，找到App的突破口如：日志开关、ssl开关等关键方法或变量。Frida的安装方式也非常简单，只需要将frida-server上传到手机里面使用shell运行起来，然后就可以执行一些hook操作，篇幅有限就不一一讲解了，只简单介绍一下本系列文章中使用的一些命令，有兴趣到查看具体使用文档。 将frida-server上传到手机目录： 查看系统运行进程： 这几条命令下来，差不多就够了，hook相关的点都在src/index.js里面，后面再来讲解需要hook的关键点。 Xposed基本使用 使用Xposed的目的是为是数据签名的，接过阿里系Api的都知道会有签名这个步骤的。签名算法就不去倒腾了，技术有限…, 但是可以绕过的麻，退而求其次。Xposed只需要会创建Module了了解几个核心Api就可以啦。 引入Xposed依赖： 声明你的模块信息： 实现模块入口： Selenium基本使用 使用Selenium主要是过人机校验，Api调太多后端程序会检测出是机器在访问Api，所以为了限制保护系统《大麦网》会弹出一个带滑块的网页来辨别用户身份，如果不处理就会限制访问Api基本调用不了Api除非限制时间过了，才能正常访问，引入Selenium就是模拟人为行为滑动完成人机校验，告诉后端不是机器人在抢票。 添加Selenium依赖： 设置WebDriver: 打开滑动网页： 解锁地址是动态的，后续再来说明地址的使用和操作。 总结 基本上使用Frida、Selenium、Xposed就能解决抓包、人机校验、生成签名这几个关键问题了，后续再来讲解具体的操作流程，以及逆向分析关键代码。"},{"title":"阿里系App抓包分析（一）","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E9%98%BF%E9%87%8C%E7%B3%BBApp%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["阿里系App抓包分析3节","/tags/%E9%98%BF%E9%87%8C%E7%B3%BBApp%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%903%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":"阿里移动端产品网络层大多使用Mtop、ANetwork框架，Mtop是阿里云的移动端网关SDk，ANetwork是比较底层的网络实现库，分析这两个框架就能找出App抓不到包的原因。本文将逆向分析smali文件，找出阿里系App网络的开关，最终能使用Charles实现抓包的功能。 以《大麦网》App为例子，从应用宝将APK下载下来将文件后缀改为zip然后解压，然后使用baksmail将dex文件转成smali文件： 注意classes.dex会有多个，每个文件都执行一次上面的命令，确保所有的dex文件都被反编译再来分析。 《大麦网》的网络是使用Service的形式，所以首先打开anetwork/channel/aidl/NetworkService.smali这个文件，分析里面的onBind方法： 去掉一些无用的代码，可以看到几个关键的类： IRemoteNetworkGetter DegradableNetworkDelegate HttpNetworkDelegate IRemoteNetworkGetter看名字大概就能猜测是获取某个东西的类，它是一个AIDL生成的类，它就只有一个方法： 接收一个Int型参数，用于获取RemoteNetwork实例。它的实现类在anetwork/channel/aidl/NetworkService$1.smali文件中： 大概意思就是判断type是0就返回httpNetwork其他的就返回degradeableNetwork，这两个实例都是NetworkServie中的onBind方法中创建的。 经过上面的分析就能确定《大麦网》中有两种网络实现一种是比较熟悉的httpNetwork和目前不知道有啥区别的degradeableNetwork，由于咱们的主要目的是实现抓包，具体的网络实现啥的就不去探索了，有兴趣的可以去研究哈。 现在都知道《大麦网》的网络请求是使用AIDL的方式发送的，大家都知道AIDL会自动生成Proxy和Stub， Stub就不去分析了，他的实现类就是DegradableNetworkDelegate和HttpNetworkDelegate，下面得找出绑定NetworkService服务的代码，要使用网络那也要绑定服务才行，打开AndroidManifest.xml文件，找到服务的声明如下： 现在要去找到绑定NetworkService服务的代码，全局搜索anetwork.channel.aidl.IRemoteNetworkGetter这action没有发现有相关的代码，后来发现这个action其实就是IRemoteNetworkGetter这个类的类名，所以通过全局搜索找到了一个RemoteGetterHelper的类，这个类主要用来绑定服务，获取IRemoteNetworkGetter实例，然后获取网络实现类： 自此可以确定获取网络实例会经过以下步骤： 使用RemoteGetterHelper绑定服务 获取到IRemoteNetworkGetter 调用IRemoteNetworkGetter.get(int)方法获取实例 网络就分析到这里啦，要想实现抓包还得分析Mtop，第二部分再来分析Mtop然后实现抓包，最后简单画个图，理一理： 最后欢迎大家关注我的公众号，获取最新的进展。"},{"title":"阿里系App抓包分析（三）","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E9%98%BF%E9%87%8C%E7%B3%BBApp%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%89%EF%BC%89/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["阿里系App抓包分析3节","/tags/%E9%98%BF%E9%87%8C%E7%B3%BBApp%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%903%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":"上一篇文章《阿里系App抓包分析（二）》简单介绍了Mtop的初始化，发现IMtopInitTask是主要用来处理Mtop的初始化的类，经过查看它有三个实现类： InnerMtopInitTask OpenMtopInitTask ProductMtopInitTask 三个实现分别对应的instanceId为：OPEN、INNER、PRODUCT，咱们主要看InnerMtopInitTask这个实现，分析里面重要的初始化步骤，最后再使用Charles完成抓包。 IMtopInitTask接口只有二个方法： 分别执行不同的初始化任务，分析executeCoreTask它主要做了四件事： 设置ISign的实现类 设置FilterManager 设置AntiAttackHandler 设置callFactory 对应的设置与实现类如下（基于大麦网：7.5.4）： 设置项 抽象类 实现类 作用 MtopConfig.sign mtopsdk.security.ISign mtopsdk.security.b 参数签名 MtopConfig.filterManager mtopsdk.framework.manager.FilterManager tb.anj 网络请求过滤器 MtopConfig.antiAttackHandler mtopsdk.mtop.antiattack.AntiAttackHandler mtopsdk.mtop.antiattack.AntiAttackHandlerImpl 滑动解锁处理类 MtopConfig.callFactory mtopsdk.network.Call$Factory mtopsdk.network.impl.a 网络请求Call工厂类 再看executeExtraTask里面主要是调用了SwitchConfig.initConfig()方法，一看SwitchConfig里面全是设置方法，细看下发现两个关键的hook点： setGlobalSpdySslSwitchOpen setGlobalSpdySwitchOpen 先使用Frida调一下试试： 用上面的脚本，启动App试试： 设置好手机代理，再启动Charles查看是否有请求数据，如果有那说明爬包成功了： 抓到包看到数据基本上是完成一小步了，为什么是一小步呢？因为Mtop有签名机制和防机器人机制，这些要解决才能爬到数据的，不然调不了API或者人机校验过不了的。 欢迎大家关注公众号，一起交流Java、Android、逆向知识。"},{"title":"阿里系App抓包分析（二）","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E9%98%BF%E9%87%8C%E7%B3%BBApp%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90%EF%BC%88%E4%BA%8C%EF%BC%89/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["阿里系App抓包分析3节","/tags/%E9%98%BF%E9%87%8C%E7%B3%BBApp%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%903%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":"经过上一篇文章分析ANetwork框架的基础运行方式后，本篇文章准备分析一下MtopSDK的初始化流程，如果大家还不知道Mtop在移动端App里面干啥的建议先读一下《移动API网关 》这篇文章简单了解MtopSDK。 话不多说，直接开始分析先将文件定位到Lmtopsdk/mtop/intf/Mtop;这个类上： 里面有几个重要的实例属性: instanceMap（存放Mtop实例的） initTask（初始化任务） instanceId（实例ID可能为: OPEN、INNER、PRODUCT） mtopConfig（MTOP配置信息） 那Mtop这个类是如何构造的呢？细看之下会发现Mtop只有一个私有的构造方法： 翻译成Java代码大概就是这样: MtopConfig稍后再来分析，再继续往下分析Mtop类还有个私有init方法和几个静态instance的方法： 因为init方法是个私有的，不太可能从外部调用，所以直接先看下几个instance方法。虽然instance有好几个重载形式，但最终都还是调用的instance(Ljava/lang/String;Landroid/content/Context;Ljava/lang/String;)，简单的翻译成Java代码如下： 知道最终的走向后，咱们就直接分析第四个instance方法就行啦，smali代码就不贴了直接转成Java方便阅读： 上面的instance方法差不多就是创建Mtop实例、调用init方法，所以再来看一个Mtop的构造方法： Mtop构造方法做了一些实例属性的初始化工作，需要注意的是initTask这个实例属性的获取是从MtopInitTaskFactory里面获取的，跟过去看一下，是如何获取IMtopInitTask的实例的： 大概意思就是通过不同的instancceId获取对应的初始化任务。 有了IMtopInitTask实例后在哪里执行呢？继续分析Mtop的init方法会发现有一段运行IMtopInitTask的代码： 在分析IMtopInitTask的几个实现类之前，先去分析一下比较重要的类：MtopSetting，看名字知道专门用来配置Mtop和MtopConfig的，它有个静态属性和几个方法来设置一些配置： getMtopConfigByID这个方法会通过instanceId获取MtopConfig的实例，如果没有的话会创建一个新的并且将它放入到mtopConfigMap中，方便下次获取。其他的方法都是通过getMtopConfigByID获取Mtop或MtopConfig实例后调用相应的设置项。 经过上面的一翻分析，猜测以下类的主要作用： MtopSettings （设置工具类） MtopConfig (存在Mtop配置类) Mtop （Mtop核心功能类） IMtopInitTask (Mtop初始化任务) 现在有人instanceId就能知道对应的IMtopInitTask实例来初始化Mtop，下一篇文章再来分析IMtopInitTask实例，最终完成爬包功能！！"},{"title":"Android逆向-某麦网APK抢票接口加密参数分析","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/Android%E9%80%86%E5%90%91-%E6%9F%90%E9%BA%A6%E7%BD%91APK%E6%8A%A2%E7%A5%A8%E6%8E%A5%E5%8F%A3%E5%8A%A0%E5%AF%86%E5%8F%82%E6%95%B0%E5%88%86%E6%9E%90/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":"一、前言针对某麦网部分演唱会门票仅能在app渠道抢票的问题，本文研究了APK的抢票接口并编写了抢票工具。本文介绍的顺序为环境搭建、抓包、trace分析、接口参数获取、rpc调用实现，以及最终的功能实现。通过阅读本文，你将学到反抓包技术破解、Frida hook、jadx apk逆向技术，并能对淘系APP的运行逻辑有所了解。本文仅用于学习交流，严禁用于非法用途。 关键词：frida, damai.cn, Android逆向先放成功截图： 二、环境搭建目前Android模拟器竞品很多，选择Bluestacks 5是因为它能和windows的hyper-v完美兼容，root过程也相对简单。 下载安装Bluestacks。 运行Bluestacks Multi-instance Manager，发现默认安装的版本为Android Pie 64bit版本，即Android 9.0。此时退出bluestack所有程序。 关闭bluestack后编辑bluestacks配置文件， %programdata%\\BlueStacks_nxt\\bluestacks.conf&gt; 由于作者安装时C盘空间不足，真实的bluestacks.conf在D:\\BlueStacks_nxt\\bluestacks.conf，大家也根据实际情况调整 在配置文件中查找root关键词，对应值修改为1，共两处。 启动bluestack模拟器，安装 Root Checker APP，点击验证root，即可发现root已开启 三、adb调试 bluestack设置-高级中打开Adb调试，并记录下端口 打开主机命令行，运行 adb connect localhost:6652，端口号修改为上一步的端口号，即可连接。再运行adb devices，如有对应设备则连接成功。 进入adb shell，执行su进入root权限，命令行标识由$变为#，即表示adb 进入root权限成功 frida环境 frida是大名鼎鼎的动态分析的hook神器，用它可以直接访问修改二进制的内存、函数和对象，非常方便。它对于Android的支持也是很完美。 frida的运行采用C&#x2F;S架构，客户端为电脑端的开发环境，服务器端为Android，均需对应部署搭建。 客户端环境搭建(Windows)firda客户端基于python3开发，因此首先需要配置好python3的运行环境，然后执行 pip install frida-tools即可完成安装。运行 frida --version可验证frida版本。 服务器 环境搭建(Android)环境搭建第二步是在Android模拟器中运行frida-server。这样可以让Frida通过ADB&#x2F;USB调试与我们的Android模拟器连接。 下载frida-server最新的frida-server可以从  下载。请注意下载与设备匹配的架构。如果您的模拟器是x86_64，请下载相应版本的frida-server。本文使用的版本为 frida-server-16.0.18-android-x86_64.xz 传入Android模拟器。 将下载后的.xz文件解压，将frida-server传入Android模拟器 运行 frida-server 使用adb root以root模式重新启动ADB，并通过adb shell重新进入shell的访问。进入shell后，进入我们放置frida-server的目录并为其授予执行权限： 执行：./frida-server ，运行frida-server，并保持本shell窗口开启。 成功截图： 有些情况下，应用程序会检测在是否在模拟器中运行，但对某麦网app的分析暂无影响。 测试是否连接成功 在window端运行frida-ps命令： 看到一堆熟悉的Android进程，我们就连接成功啦 转发frida-server端口 (可选) frida-server跑在Android端，frida需要通过连接frida-server。上一步使用adb的方式连接，frida认为是USB模式，需要-U命令。frida也支持依赖端口的远程连接模式，在某些场景下更加灵活。可以通过端口转发的方式实现此功能。 抓包 1. 搞定tcpdump本文基于termux安装使用tcpdump。 首先安装termux apk。 打开termux运行： 挂载存储 安装tcpdump 运行抓包 tcpdump 成功截图: 之后就可以把downloads目录下的抓包文件拷贝到电脑上，用wireshark打开做进一步分析。 2. 解密https流量Wireshark解密https流量的方法和原理介绍有很多，可参考以下文章，本文不再赘述。   wireshark解密技术的重点在于拿到客户端通信的密钥日志文件(ssl key log)，像下面这种： 在Android中实现抓取ssl key log需要hook系统的SSL相关函数，可以用frida实现。 首先将下面的hook代码保存为sslkeyfilelog.js 然后用frida加载运行hook 最后，抓包结束后将得到的key保存到sslkey.txt，格式是下面这样的，不要掺杂别的。 在运行Frida Hook获取sslkey的同时，运行tcpdump抓包。抓包中依次测试获取详情页、选择价位、提交订单等操作，并对应记录下执行操作的时间，方便后续分析。 抓包完成后，用wireshark打开tcpdump抓包获得的pcap文件，在wireshark首选项-protocols-TLS中，设置 (Pre)-Master-Secret log filename为上述sslkey.txt。 即可实现https流量的解密。 流量分析 某麦网的API流在此铺垫一下，通过前期对某麦网PC端和移动端H5的分析，某麦网购票的工作流程大概为： 获得详情：接口为mtop.alibaba.damai.detail.getdetail。基于某演出的id(itemId)获得演出的详细信息，包括详情、场次、票档(SkuId)价位及状态信息， 构建订单：接口为mtop.trade.order.build.h5。发送 演出id+数量+票档id(itemId_count_skuId)，得到提交订单所需的表单信息，包括观众、收货地址等。 提交订单：接口为mtop.trade.order.create.h5。对上一步构建订单得到的表单参数作出修改后，发送给服务器，得到最后的订单提交结果和支付信息。 apk流量分析首先用过滤器http &amp;&amp; tcp.dstport==443，得到向服务器发送的https包，如下图： 可以看到大量向服务器请求的数据包，但其中有很多干扰的图片请求，因为修改过滤器把图片过滤一下。过滤器：http &amp;&amp; tcp.dstport==443 and !(http.request.uri contains &quot;.webp&quot; or http.request.uri contains &quot;.jpg&quot; or http.request.uri contains &quot;.png&quot;) 结果清爽了很多。 订单构建(order.build)根据之前记录的操作的时间，以及对网页版的分析结果，笔者注意到了下图的这条流量： 然后我们右键选择这条流量包，点击追踪http流，可以看到对应的响应包。 响应包里有些中文使用了UTF-8编码，可以点击右下角的Show data as，选择UTF-8，便可以正常显示。此时可以点击另存为，保存为txt文件，方便后续分析。 订单构建的请求包中核心的数据部分为图中青色圈出来的部分，使用URL解码后为： buyParam为最核心的部分，拼接方式为演出id+数量+票档id。其他部分只需照抄。 请求包中还包含大量的各种加密参数、ID，而破解实现自动购票脚本的关键就在于如何通过代码的方式拿到这些加密参数。 订单构建的响应包为订单提交表单的各项参数，用于生成“确认订单”的表单。 订单提交(order.create)按照同样的方式可以找到订单提交包，订单提交包的API路径为/gw/mtop.trade.order.create， 其中青色圈出来的部分为data发送的核心数据，对数据用URL解码后为： 看起来像是把原始数据用gzip压缩后又使用了base64编码，尝试解码： 解码成功，存到order.create-params.json, 解码后发现order.create发送的data参数和order.build请求返回的结果很相似，增加了一些用户对表单操作的记录。 order.create请求的header中的各种加密参数和order.build一致。 order.create请求的返回结果中包含了订单创建是否成功的结果以及支付链接. TRACE分析 通过前面对流量的分析，我们已经知道客户端向服务器发送的核心数据和加密参数，核心数据的拼接相对简单，但加密参数怎么获得还比较困难。因此，下面要开始分析加密参数的生成方法。本章节主要采用frida trace动态分析和jadx静态分析相结合的方式，旨在找到加密参数生成的核心函数和输入输出数据的格式。 根据文章 ( app安卓逆向x-sign，x-sgext，x_mini_wua，x_umt加密参数解析 )，其中数据包的加密参数和本文的某麦网很类似，而且提到了 mtopsdk.security.InnerSignImpl 生成的加密函数，本文也参考了这篇文章的思路进行分析。 跟踪 InnerSignImpl运行frida-trace -U -j &quot;*InnerSignImpl*!*&quot; 大麦，执行选座提交订单的操作，发现确实有结果输出： 点击发送请求时，调用了InnerSignImpl.getUnifiedSign函数。但是输入参数和数据参数均为HashMap类型，结果中未显示具体内容。从结果输出中猜测frida-trace是通过对需要hook的函数在__handlers__下生成js文件，并调用js文件进行hook操作的，因此笔者修改了“handlers\\mtopsdk.security.InnerSignImpl\\getUnifiedSign.js”，使其能正确输出HashMap类型。 再次运行frida-trace，输出的结果已经可以看到具体内容了： 可以看到返回结果中包含了 x-sgext,x-umt,x-mini-wua,x-sign 等加密参数。至此，前面的一大堆分析也算有了小的收获。但对比流量分析结果中的发送参数，还是缺失了很多参数。下面我们继续跟踪，找出剩下的参数。 跟踪 mtopsdk调研发现淘系的apk都包含mtopsdk，猜想会不会有公开的官方文档描述mtopsdk的使用方法，因此我们就找到了 【阿里云mtopsdk Android接入文档】 。其中介绍了请求构建的流程为，笔者重点关注了请求构建和发送的部分： 因此我们不妨大胆一些，直接跟踪所有对mtopsdk中函数的调用。 输出的结果大概有2000行，直接看太费劲，我们复制到文本编辑器里做进一步分析。 我们按照阿里的官方文档介绍的流程，对应可以找到在输出的trace中找到一些关键的日志。 笔者注意到了InnerProtocolParamBuilderImpl.buildParams函数的输出结果完全覆盖了需要的各类加密参数，其输入类型是MtopContext。从jadx逆向的apk代码中可以找到MtopContext类，即包含Mtop生命周期的各个类的一个容器。 所以现在的问题变为如何能够构建出来MtopContext，然后调用buildParams函数生成各类加密参数。 分析业务模块与mtopsdk的交互过程在写本文复盘分析过程的时候，笔者发现仅依赖mtopsdk的调用过程其实已经可以得到MtopContext的全部生成逻辑了。但所谓当局者迷，笔者在当时分析的时候还是一头雾水。因此在此也介绍一下笔者的思考逻辑。 当时看着mtopsdk的调用过程，感觉很复杂。但是猜想从用户点击操作-&gt;业务代码-&gt;mtopsdk的数据流，以及模块间高内聚低耦合的原则，所以猜想模块间的调用不会很复杂，所以笔者就想分析业务代码与mtopsdk的调用逻辑。所以就想跟踪主要业务代码的trace。所以笔者继续跟踪trace，运行frida-trace -U -j &quot;*cn.damai*!*&quot; 大麦 ，以分析cn.damai包的调用过程，在其中发现了 NcovSkuFragment.buyNow() 函数，看起来是和购买紧密相关的函数。又找到DMBaseMtopRequest类。 但是在这里有点卡住了，因为只找到了构建MtopRequest，并未在cn.damai的trace日志中并未发现其他对mtop的调用。 然后笔者又尝试搜索和api(order.build)相关的代码，找到了： 然而并没有多大用处。 然后，作者又读了大量的源代码，终于定位到了 com.taobao.tao.remotebusiness.MtopBussiness这个关键类。 笔者本以为com.taobao开头的代码不是那么重要，所以最开始把这个类完全忽略了。但通过对源码的阅读，发现这个类是motpsdk中MtopBuilder类的子类，主要负责管理业务代码和Mtopsdk的交互。 因此我们继续通过trace跟踪MtopBussiness类。运行frida-trace -U -j &quot;*!*buyNow*&quot; -j &quot;com.taobao.tao.remotebusiness.MtopBusiness!*&quot; -j &quot;*MtopContext!*&quot; -j &quot;*mtopsdk.mtop.intf.MtopBuilder!*&quot; 大麦 现在业务代码和mtopsdk的交互就很清晰了，红色的部分是业务代码的函数，绿色的部分是mtopsdk的函数。 0x06 hook得到接口参数通过以上对trace的分析，已经知道了具体执行的操作，因此我们可以使用frida编写js代码，直接调用APK中的类，实现功能调用。 先展示一个简单的示例，用于构建一个自定义的MtopRequest 类: 再使用运行命令 frida -U -l .\\reverse\\new_request.js 大麦，以在某麦Apk中执行js hook代码。运行之后即可输出笔者自己构建的MtopRequest实例。（frida真的很奇妙！） 有了上面的结果，下面继续完善这个示例，添加MtopBussiness的构建过程和输出过程 再次执行frida -U -l .\\reverse\\new_request.js 大麦，输出结果如下图，此时已能根据笔者任意构建的请求data输出其他加密参数： 对于order.create的原理类似，此处不再赘述。 ![图片](data:image&#x2F;svg+xml,&lt;%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F&gt;) 原文链接："},{"title":"吾爱破解安卓逆向入门教程《安卓逆向这档事》","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(10)/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["吾爱破解教程10节","/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B10%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":"由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向 0基础 小白入门教程《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！ 前情提要：《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗 一、课程目标 1.初识ELF文件格式、常见节区2.了解NDK开发，写一个简单的so3.学习IDA Pro工具的使用来分析so文件4.通过学习ARM基础知识，能进行简单的修改5.通过Chatgpt&amp;IDA快速分析二进制文件** 二、工具 1.教程Demo(更新)2.MT管理器&#x2F;NP管理器3.IDA Pro4.雷电模拟器5.Android Studio 三、课程内容 1. 初识ELF文件格式ELF（Executable and Linkable Format）是一种可执行和可链接的文件格式，是linux底下二进制文件，可以理解为windows下的PE文件，在Android中可以比作dll，方便函数的移植，在常用于保护Android软件，增加逆向难度。 ELF文件的主要组成部分包括： ELF Header：文件头，描述文件的基本信息 Program Header Table：程序头表，描述进程映像的布局 Section Header Table：节区头表，描述文件的各个节区 节区名 描述 .text 代码段，存放程序的指令 .data 数据段，存放已初始化的全局变量和静态变量 .rodata 只读数据段，存放只读数据 .bss 未初始化数据段，存放未初始化的全局变量和静态变量 .symtab 符号表，存放符号信息 .strtab 字符串表，存放字符串数据 .dynsym 动态符号表，存放动态链接需要的符号信息 .dynamic 动态链接信息，存放动态链接器需要的信息 2.NDK开发NDK（Native Development Kit）是一套用于开发Android应用程序的工具集，它允许您在C&#x2F;C++中编写性能关键的部分代码，并将这些代码与Java代码进行连接。 步骤：1.下载NDK和CMake2.新建一个项目,往下拉,找到”c++”这个选项3.查看CMakeLists.txt和编写native-lib.cpp下面是cmakelist.txt和native-lib.cpp文件的作用以及简要说明： 文件名 作用 说明 CMakeLists.txt 构建配置文件 CMakeLists.txt是用于配置NDK项目的构建系统的文件。它指定了构建所需的源文件、依赖项、编译选项等。在构建过程中，CMake会根据该文件的指示生成对应的构建脚本，用于编译本地代码并生成本地库。 native-lib.cpp 本地代码实现文件 native-lib.cpp是包含本地代码实现的文件。它定义了通过Java和本地代码之间进行通信的本地方法。该文件中的函数实现将被编译为本地库，供Java代码调用。 1.JNI的前世今生NDK是开发套件，JNI才是调用的框架。所以与其说是NDK开发，不如说是JNI的开发。不过NDK是Android提供的开发套件。JNI可不是，JNI全称Java Native Interface,即Java本地接口，JNI是Java调用Native 语言的一种特性。通过JNI可以使得Java与C&#x2F;C++机型交互。即可以在Java代码中调用C&#x2F;C++等语言的代码或者在C&#x2F;C++代码中调用Java代码。 2.JNI的两种注册方式jni静态注册方式 优点: 理解和使用方式简单, 属于傻瓜式操作, 使用相关工具按流程操作就行, 出错率低 缺点: 当需要更改类名,包名或者方法时, 需要按照之前方法重新生成头文件, 灵活性不高 jni动态注册方式 数据类型下面是一些常见的C++数据类型和它们在Java中的对应关系，以及它们在JNI动态注册中的数据类型签名（signature）： C++ 数据类型 Java 数据类型 JNI 数据类型签名 jint int “I” jboolean boolean “Z” jbyte byte “B” jchar char “C” jshort short “S” jlong long “J” jfloat float “F” jdouble double “D” jobject Object “Ljava&#x2F;lang&#x2F;Object;” jstring String “Ljava&#x2F;lang&#x2F;String;” jarray Array “[elementType” jobjectArray Object[] “[Ljava&#x2F;lang&#x2F;Object;” jbooleanArray boolean[] “[Z” jbyteArray byte[] “[B” jcharArray char[] “[C” jshortArray short[] “[S” jintArray int[] “[I” jlongArray long[] “[J” jfloatArray float[] “[F” jdoubleArray double[] “[D” 在JNI动态注册中，需要使用正确的数据类型签名来声明本地方法。例如，如果你要注册一个返回int类型的本地方法，其数据类型签名应为I。 3.IDA Pro使用技巧与Patch简介：IDA Pro（Interactive Disassembler Professional）是一款功能强大的交互式反汇编和调试工具，广泛应用于软件逆向工程、漏洞分析和二进制代码分析。它支持多种处理器架构和可执行文件格式，包括但不限于x86、ARM、MIPS、PowerPC等。通过使用IDA Pro，可以对程序进行静态分析、动态调试和代码修改等操作。 快捷键： 快捷键 功能 Esc 回到上一个位置 Enter 跳转到当前光标处的地址 - 折叠代码 + 展开代码 * 创建一个结构 Alt + A 手动定义一个数组 Alt + F 寻找直接引用的函数 Alt + G 跳转到特定的地址 Alt + T 显示调用树 Alt + X 重命名 Ctrl + G 快速跳转到指定地址 Ctrl + J 显示引用列表 Ctrl + K 显示 XREF 到选中的函数&#x2F;数据 Ctrl + N 创建一个函数 Ctrl + Q 快速重命名 Ctrl + X 显示从选中的函数&#x2F;数据的 XREF Ctrl + E 显示结构类型 Ctrl + R 手动定义一个数据结构 Ctrl + W 打开函数列表 Ctrl + D 以十进制显示当前值 Ctrl + B 以二进制显示当前值 Ctrl + H 以十六进制显示当前值 Space 在图形&#x2F;文本视图中切换 shift + f12 打开字符串窗口 F5 转伪C代码 Patch方式1.keypatch插件快速修补快捷键：Ctrl+Alt+k2.ARM TO Hex 4.ARM基础知识常见寻址方式 寻址方式 描述 立即数寻址 直接使用立即数值作为操作数，例如：MOV R0, #5 寄存器直接寻址 使用寄存器中的值作为操作数，例如：MOV R0, R1 寄存器间接寻址 使用寄存器中的值作为内存地址，访问该地址中的数据，例如：LDR R0, [R1] 寄存器相对寻址 使用寄存器中的值加上一个立即偏移量作为内存地址，例如：LDR R0, [R1, #4] 寄存器变址寻址 使用两个寄存器中的值相加作为内存地址，例如：LDR R0, [R1, R2] 带有变址寄存器的寄存器相对寻址 使用寄存器中的值加上另一个寄存器的值乘以一个比例因子作为内存地址，例如：LDR R0, [R1, R2, LSL #2] 堆栈寻址 使用堆栈指针寄存器（如SP）进行操作，例如：PUSH &#123;R0, R1&#125; 或 POP &#123;R0, R1&#125; 压栈和出栈指令 指令类型 指令示例 描述 压栈 PUSH &#123;R0, R1&#125; 将寄存器R0和R1的内容压入堆栈中 压栈 PUSH &#123;R0-R5&#125; 将寄存器R0到R5的内容压入堆栈中 压栈 STMDB SP!, &#123;R0-R5&#125; 将寄存器R0到R5的内容压入堆栈中（与PUSH等效） 出栈 POP &#123;R0, R1&#125; 从堆栈中弹出数据，恢复到寄存器R0和R1中 出栈 POP &#123;R0-R5&#125; 从堆栈中弹出数据，恢复到寄存器R0到R5中 跳转指令 指令类型 指令示例 描述 无条件跳转 B label 无条件跳转到标签label指向的位置 子程序调用 BL label 调用子程序，将当前指令的下一条指令地址存入链接寄存器（LR），然后跳转到标签label指向的位置 子程序返回 BX LR 返回子程序调用前的位置，跳转到链接寄存器（LR）中存储的地址 寄存器跳转 BX Rn 跳转到寄存器Rn中存储的地址 算术运算指令汇编中也可以进行算术运算， 比如加减乘除，常用的运算指令用法如表 所示： 指令 计算公式 备注 ADD Rd, Rn, Rm Rd &#x3D; Rn + Rm 加法运算，指令为 ADD ADD Rd, Rn, #immed Rd &#x3D; Rn + #immed 加法运算，指令为 ADD ADC Rd, Rn, Rm Rd &#x3D; Rn + Rm + 进位 带进位的加法运算，指令为 ADC ADC Rd, Rn, #immed Rd &#x3D; Rn + #immed + 进位 带进位的加法运算，指令为 ADC SUB Rd, Rn, Rm Rd &#x3D; Rn - Rm 减法 SUB Rd, #immed Rd &#x3D; Rd - #immed 减法 SUB Rd, Rn, #immed Rd &#x3D; Rn - #immed 减法 SBC Rd, Rn, #immed Rd &#x3D; Rn - #immed - 借位 带借位的减法 SBC Rd, Rn ,Rm Rd &#x3D; Rn - Rm - 借位 带借位的减法 MUL Rd, Rn, Rm Rd &#x3D; Rn * Rm 乘法 (32 位) UDIV Rd, Rn, Rm Rd &#x3D; Rn &#x2F; Rm 无符号除法 SDIV Rd, Rn, Rm Rd &#x3D; Rn &#x2F; Rm 有符号除法 逻辑运算汇编语言的时候也可以使用逻辑运算指令，常用的运算指令用法如表 所示： 偷懒小插件WPeChatGPT api报错问题，可以参考仓库里的解决方法： 如果 urllib3 版本没错或重装 1.25 版本还是存在 API 访问问题的话，那么请下载最新版本，对插件指定代{过}{滤}理： 将下面三行代码取消注释，然后把代{过}{滤}理地址及端口信息填入 proxies 变量即可： 四、课后小作业 1.修改教程demo第五关里的native校验 五、答疑 待更新 Obsidian主题：Blue-topaz-example  推荐书籍:王爽老师的《汇编语言(第三版)》《IDA Pro权威指南(第二版)》 六、视频及课件地址 百度云：  阿里云PS：  哔哩哔哩：  PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压 七、其他章节 《安卓逆向这档事》一、模拟器环境搭建 《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改《安卓逆向这档事》三、初识smail，vip终结者《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api 《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook 《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗 八、参考文档 官方NDK入门案例ARM汇编入门指南ARM汇编基础详解Android so(ELF)文件解析小米学安卓逆向一 - NDK开发(1)WPeChatGPT工具使用-IDA从入门到理解什么是NDK开发（一） 详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文： "},{"title":"吾爱破解安卓逆向入门教程《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(2)%E3%80%81%E5%88%9D%E8%AF%86APK%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E3%80%81%E5%8F%8C%E5%BC%80%E3%80%81%E6%B1%89%E5%8C%96%E3%80%81%E5%9F%BA%E7%A1%80%E4%BF%AE%E6%94%B9/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["吾爱破解教程10节","/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B10%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":"前情提要：吾爱破解安卓逆向入门教程《安卓逆向这档事》一、模拟器环境搭建 一、课程目标 1.了解APK文件结构2.双开APK，简单了解原理3.汉化APK4.简单修改APK名字、图标 二、工具 1.教程Demo2.MT管理器&#x2F;NP管理器3.开发者助手4.雷电模拟器 三、课程内容 1.Apk结构apk 全称 Android Package，它相当于一个压缩文件，只要在电脑上将apk后缀改为zip即可解压。 文件 注释 assets目录 存放APK的静态资源文件，比如视频，音频，图片等 lib 目录 armeabi-v7a基本通用所有android设备，arm64-v8a只适用于64位的android设备，x86常见用于android模拟器，其目录下的.so文件是c或c++编译的动态链接库文件 META-INF目录 保存应用的签名信息，签名信息可以验证APK文件的完整性，相当于APK的身份证(验证文件是否又被修改) res目录 res目录存放资源文件，包括图片，字符串等等，APK的脸蛋由他的layout文件设计 AndroidMainfest.xml文件 APK的应用清单信息，它描述了应用的名字，版本，权限，引用的库文件等等信息 classes.dex文件 classes.dex是java源码编译后生成的java字节码文件，APK运行的主要逻辑 resources.arsc文件 resources.arsc是编译后的二进制资源文件，它是一个映射表，映射着资源和id，通过R文件中的id就可以找到对应的资源 2.双开及原理双开：简单来说，就是手机同时运行两个或多个相同的应用，例如同时运行两个微信 原理 解释 修改包名 让手机系统认为这是2个APP，这样的话就能生成2个数据存储路径，此时的多开就等于你打开了两个互不干扰的APP 修改Framework 对于有系统修改权限的厂商，可以修改Framework来实现双开的目的，例如：小米自带多开 通过虚拟化技术实现 虚拟Framework层、虚拟文件系统、模拟Android对组件的管理、虚拟应用进程管理 等一整套虚拟技术，将APK复制一份到虚拟空间中运行，例如：平行空间 以插件机制运行 利用反射替换，动态代{过}{滤}理，hook了系统的大部分与system—server进程通讯的函数，以此作为“欺上瞒下”的目的，欺骗系统“以为”只有一个apk在运行，瞒过插件让其“认为”自己已经安装。例如：VirtualApp 3.汉化APK汉化：使用专门的工具对外文版的软件资源进行读取、翻译、修改、回写等一系列处理，使软件的菜单、对话框、提示等用户界面显示为中文，而程序的内核和功能保持不变，这个过程即为软件汉化 基本上字符串都是在arsc里，建议一键汉化，然后再润色。少量没汉化到的字符串参考视频中的方法定位去逐个汉化。 流程图这里还需要注意的是，如果要直装应用，那就应该先签名安装，看看是否有签名校验导致的闪退 4.初识AndroidManifest.xmlAndroidManifest.xml文件是整个应用程序的信息描述文件，定义了应用程序中包含的Activity,Service,Content provider和BroadcastReceiver组件信息。每个应用程序在根目录下必须包含一个AndroidManifest.xml文件，且文件名不能修改。它描述了package中暴露的组件，他们各自的实现类，各种能被处理的数据和启动位置。 属性 定义 versionCode 版本号，主要用来更新，例如:12 versionName 版本名，给用户看的，例如:1.2 package 包名，例如：com.zj.52pj.demo uses-permission android:name&#x3D;”” 应用权限，例如：android.permission.INTERNET 代表网络权限 android:label&#x3D;”@string&#x2F;app_name” 应用名称 android:icon&#x3D;”@mipmap&#x2F;ic_launcher” 应用图标路径 android:debuggable&#x3D;”true” 应用是否开启debug权限 四、课后小作业 1.试着自己找个应用双开、修改名字、找个英文应用汉化2.替换第一关挑战中的图片 五、答疑 待更新 六、视频及课件地址 百度云：  阿里云：  哔哩哔哩：  七、其他章节 《安卓逆向这档事》一、模拟器环境搭建 八、参考文档 【VirtualAPP 双开系列08】如何实现多开 - UID PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压 详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文： "},{"title":"安卓逆向这档事（三）-初识smali，vip终结者","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(3)%E3%80%81%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["吾爱破解教程10节","/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B10%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":" 一、课程目标 1.了解JVM、Dalvik、ART2.初识smali语法3.实战修改smali 二、工具 1.教程Demo(更新)2.MT管理器&#x2F;NP管理器3.雷电模拟器4.jadx-gui5.核心破解 三、课程内容 1.什么是JVM、Dalvik、ARTJVM是JAVA虚拟机，运行JAVA字节码程序Dalvik是Google专门为Android设计的一个虚拟机，Dalvik有专属的文件执行格式dex(Dalvik executable)Art(Android Runtime)相当于Dalvik的升级版，本质与Dalvik无异 2.smali及其语法smali是Dalvik的寄存器语言，smali代码是dex反编译而来的。 关键字 名称 注释 .class 类名 .super 父类名，继承的上级类名名称 .source 源名 .field 变量 .method 方法名 .register 寄存器 .end method 方法名的结束 public 公有 protected 半公开，只有同一家人才能用 private 私有，只能自己使用 .parameter 方法参数 .prologue 方法开始 .line xxx 位于第xxx行 数据类型对应 smali类型 java类型 注释 V void 无返回值 Z boolean 布尔值类型，返回0或1 B byte 字节类型，返回字节 S short 短整数类型，返回数字 C char 字符类型，返回字符 I int 整数类型，返回数字 J long （64位 需要2个寄存器存储） 长整数类型，返回数字 F float 单浮点类型，返回数字 D double （64位 需要2个寄存器存储） 双浮点类型，返回数字 string String 文本类型，返回字符串 Lxxx&#x2F;xxx&#x2F;xxx object 对象类型，返回对象 常用指令 关键字 注释 const 重写整数属性，真假属性内容，只能是数字类型 const-string 重写字符串内容 const-wide 重写长整数类型，多用于修改到期时间。 return 返回指令 if-eq 全称equal(a&#x3D;b)，比较寄存器ab内容，相同则跳 if-ne 全称not equal(a!&#x3D;b)，ab内容不相同则跳 if-eqz 全称equal zero(a&#x3D;0)，z即是0的标记，a等于0则跳 if-nez 全称not equal zero(a!&#x3D;0)，a不等于0则跳 if-ge 全称garden equal(a&gt;&#x3D;b)，a大于或等于则跳 if-le 全称little equal(a&lt;&#x3D;b)，a小于或等于则跳 goto 强制跳到指定位置 switch 分支跳转，一般会有多个分支线，并根据指令跳转到适当位置 iget 获取寄存器数据 其余指令可用语法工具查询 定位方法：搜索弹窗关键字、抓取按钮id 例子： 修改方法：修改判断、强制跳转、修改寄存器的值 3.寄存器在smali里的所有操作都必须经过寄存器来进行:本地寄存器用v开头数字结尾的符号来表示，如v0、 v1、v2。参数寄存器则使用p开头数字结尾的符号来表示，如p0、p1、p2。特别注意的是，p0不一定是函数中的第一个参数，在非static函数中，p0代指“this”，p1表示函数的第一个 参数，p2代表函数中的第二个参数。而在static函数中p0才对应第一个参数(因为Java的static方法中没有this方法） 四、课后小作业 1.关掉视频自己复现三种方法2.完成这个作业demo(因为最近实在是太太太忙了，绝对不是因为我懒，咕咕咕。搞懂这个demo那也基本上能理解本节课的内容)丑小鸭师傅的demo链接： 密码：07p9原文链接：教我兄弟学Android逆向02 破解第一个Android程序 五、反思&amp;答疑 由于准备不是很充足，我感觉我讲的不是太好，多看看我列举参考文档有利于理解smali语法。 对于开发者而言，在打包应用时，最好对代码进行混淆，否则逆向人员轻而易举得进行Crack，或者说在写代码的时候就不要用isvip、getvip等易辨识的单词作为方法名 待更新 六、视频及课件地址 百度云：  阿里云PS：阿里云在维护，暂时看不到第三课内容  哔哩哔哩：  PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压 七、其他章节 《安卓逆向这档事》一、模拟器环境搭建《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改 八、参考文档 吾爱破解安卓逆向入门教程（三）—深入Smali文件吾爱破解安卓逆向入门教程（四）—Smali函数分析【原木文章】Android改造者之路-02.初探smali功法 详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文： "},{"title":"《安卓逆向这档事》四、恭喜你获得广告&弹窗静默卡","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(4)%E3%80%81%E6%81%AD%E5%96%9C%E4%BD%A0%E8%8E%B7%E5%BE%97%E5%B9%BF%E5%91%8A&%E5%BC%B9%E7%AA%97%E9%9D%99%E9%BB%98%E5%8D%A1/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["吾爱破解教程10节","/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B10%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":"一、课程目标 1.了解安卓四大组件、Activity生命周期2.弹窗定位、去更新3.广告分析与布局优化 二、工具 1.教程Demo(更新)2.MT管理器&#x2F;NP管理器3.算法助手4.雷电模拟器5.jadx-gui6.开发助手 三、课程内容 1.广告类型启动广告 弹窗&amp;更新广告 横幅广告 2.安卓四大组件 组件 描述 Activity(活动) 在应用中的一个Activity可以用来表示一个界面，意思可以理解为“活动”，即一个活动开始，代表 Activity组件启动，活动结束，代表一个Activity的生命周期结束。一个Android应用必须通过Activity来运行和启动，Activity的生命周期交给系统统一管理。 Service(服务) Service它可以在后台执行长时间运行操作而没有用户界面的应用组件，不依赖任何用户界面，例如后台播放音乐，后台下载文件等。 Broadcast Receiver(广播接收器) 一个用于接收广播信息，并做出对应处理的组件。比如我们常见的系统广播：通知时区改变、电量低、用户改变了语言选项等。 Content Provider(内容提供者) 作为应用程序之间唯一的共享数据的途径，Content Provider主要的功能就是存储并检索数据以及向其他应用程序提供访问数据的接口。Android内置的许多数据都是使用Content Provider形式，供开发者调用的（如视频，音频，图片，通讯录等） 1.activity的切换 启动广告流程：启动Activity-&gt;广告Activity-&gt;主页Activity 修改方法：1.修改加载时间2.Acitivity切换定位，修改Intent的Activity类名 3.Activity生命周期 函数名称 描述 onCreat() 一个Activity启动后第一个被调用的函数，常用来在此方法中进行Activity的一些初始化操作。例如创建View，绑定数据，注册监听，加载参数等。 onStart() 当Activity显示在屏幕上时，此方法被调用但此时还无法进行与用户的交互操作。 onResume() 这个方法在onStart()之后调用，也就是在Activity准备好与用户进行交互的时候调用，此时的Activity一定位于Activity栈顶，处于运行状态。 onPause() 这个方法是在系统准备去启动或者恢复另外一个Activity的时候调用，通常在这个方法中执行一些释放资源的方法，以及保存一些关键数据。 onStop() 这个方法是在Activity完全不可见的时候调用的。 onDestroy() 这个方法在Activity销毁之前调用，之后Activity的状态为销毁状态。 onRestart() 当Activity从停止stop状态恢进入start状态时调用状态。 4.弹窗定位&amp;堆栈分析修改方法：1.修改xml中的versiocode2.Hook弹窗(推荐算法助手开启弹窗定位)3.修改dex弹窗代码4.抓包修改响应体(也可以路由器拦截) 5.布局优化1.开发者助手抓布局2.MT管理器xml搜索定位3.修改xml代码 四、课后小作业 定位并去除作业demo首页中的弹窗 五、答疑 待更新 六、视频及课件地址 百度云：  阿里云PS：  哔哩哔哩：  PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压 七、其他章节 《安卓逆向这档事》一、模拟器环境搭建《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改《安卓逆向这档事》三、初识smail，vip终结者 详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文： "},{"title":"《安卓逆向这档事》五、1000-7=？&动态调试&Log插桩","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(5)%E3%80%811000-7=%EF%BC%9F&%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95&Log%E6%8F%92%E6%A1%A9/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["吾爱破解教程10节","/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B10%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":"一、课程目标 1.配置java环境2.了解并掌握动态调试3.了解并掌握Log插桩 二、工具 1.教程Demo2.MT管理器&#x2F;NP管理器3.jeb4.雷电模拟器5.XappDebug 三、课程内容 1.配置java环境1.下载jdk文件并安装(课件里有)2.配置java环境ps：在视频里面环境配置只配置了一个JAVA_HOME还有一个Path和CLASSPATH，请参考这篇文档，写得很详细，配置完后记得cmd窗口输入java验证一下java 环境配置(详细教程) 2.什么是动态调试动态调试是指自带的调试器跟踪自己软件的运行，可以在调试的过程中知道参数或者局部变量的值以及履清代码运行的先后顺序。多用于爆破注册码(CTF必备技能) 3.动态调试步骤1.修改debug权限方法一:在AndroidManifest.xml里添加可调试权限 方法二：XappDebug模块hook对应的app 项目地址 XappDebug 方法三：Magisk命令(重启失效) 方法四:刷入MagiskHide Props Config模块(永久有效，但我这两台手机都不行，哭死，呜呜呜) 一般来说，在4选项中如果有ro.debuggable那就直接修改没有的话就选5修改ro.debuggable的值为1 2.端口转发以及开启adb权限版本号点击七次开启开发者模式并开启adb调试权限 夜神模拟器：adb connect 127.0.0.1:62001 3.下段点ctrl+b下断点 4.debug模式启动 adb shell am start -D -nadb shell am start -D -n 包名&#x2F;类名am start -n 表示启动一个activityam start -D 表示将应用设置为可调试模式 5.Jeb附加调试进程激活jeb 在线python运行 算号代码： 快捷键：^F6进入方法F6跳过方法F7从方法中跳出来R运行到光标处 3.Log插桩定义：Log插桩指的是反编译APK文件时，在对应的smali文件里，添加相应的smali代码，将程序中的关键信息，以log日志的形式进行输出。 调用命令 四、课后小作业 动态调试获取注册码作业提交地址：《安卓逆向这档事》第五节课后小作业贴 五、答疑 待更新 六、视频及课件地址 百度云：  阿里云PS：  哔哩哔哩：  PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压 七、其他章节 《安卓逆向这档事》一、模拟器环境搭建《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改《安卓逆向这档事》第三课、初识smail，vip终结者《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡 八、参考文档 Android修改ro.debuggable 的四种方法Log简易打印工具，超简单的调用方法JEB动态调试Smali-真机&#x2F;模拟器（详细，新手必看） 详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文： "},{"title":"吾爱破解安卓逆向入门教程《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM理、IO重定向","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(6)%E3%80%81%E6%A0%A1%E9%AA%8C%E7%9A%84N%E6%AC%A1%E6%96%B9-%E7%AD%BE%E5%90%8D%E6%A0%A1%E9%AA%8C%E5%AF%B9%E6%8A%97%E3%80%81PM%E7%90%86%E3%80%81IO%E9%87%8D%E5%AE%9A%E5%90%91/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["吾爱破解教程10节","/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B10%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":" 一、课程目标 1.了解APK文件签名2.了解APK常见校验及校验对抗方法3.了解PM代理和IO重定向4.smali语法之赋值 二、工具 1.教程Demo(更新)2.MT管理器&#x2F;NP管理器3.雷电模拟器4.Jadx-gui(第三课课件里有)5.算法助手(第四课课件里有) 三、课程内容 1.什么是校验是开发者在数据传送时采用的一种校正数据的一种方式常见的校验有:签名校验(最常见)、dexcrc校验、apk完整性校验、路径文件校验等 2.什么是APK签名通过对 Apk 进行签名，开发者可以证明对 Apk 的所有权和控制权，可用于安装和更新其应用。而在 Android 设备上的安装 Apk ，如果是一个没有被签名的 Apk，则会被拒绝安装。在安装 Apk 的时候，软件包管理器也会验证 Apk 是否已经被正确签名，并且通过签名证书和数据摘要验证是否合法没有被篡改。只有确认安全无篡改的情况下，才允许安装在设备上。 简单来说，APK 的签名主要作用有两个： 证明 APK 的所有者。 允许 Android 市场和设备校验 APK 的正确性。 Android 目前支持以下四种应用签名方案：v1 方案：基于 JAR 签名。v2 方案：APK 签名方案 v2（在 Android 7.0 中引入）v3 方案：APK 签名方案 v3（在 Android 9 中引入）v4 方案：APK 签名方案 v4（在 Android 11 中引入） V1 签名的机制主要就在 META-INF 目录下的三个文件，MANIFEST.MF，ANDROID.SF，ANDROID.RSA，他们都是 V1 签名的产物。（1）MANIFEST.MF：这是摘要文件。程序遍历Apk包中的所有文件(entry)，对非文件夹非签名文件的文件，逐个用SHA1(安全哈希算法)生成摘要信息，再用Base64进行编码。如果你改变了apk包中的文件，那么在apk安装校验时，改变后的文件摘要信息与MANIFEST.MF的检验信息不同，于是程序就不能成功安装。 （2）c.SF：这是对摘要的签名文件。对前一步生成的MANIFEST.MF，使用SHA1-RSA算法，用开发者的私钥进行签名。在安装时只能使用公钥才能解密它。解密之后，将它与未加密的摘要信息（即，MANIFEST.MF文件）进行对比，如果相符，则表明内容没有被异常修改。（3）ANDROID.RSA文件中保存了公钥、所采用的加密算法等信息。在某些情况下，直接对apk进行v1签名可以绕过apk的签名校验 v2方案会将 APK 文件视为 blob，并对整个文件进行签名检查。对 APK 进行的任何修改（包括对 ZIP 元数据进行的修改）都会使 APK 签名作废。这种形式的 APK 验证不仅速度要快得多，而且能够发现更多种未经授权的修改。 3.什么是签名校验如何判断是否有签名校验？不做任何修改，直接签名安装，应用闪退则说明大概率有签名校验 一般来说，普通的签名校验会导致软件的闪退，黑屏，卡启动页等当然，以上都算是比较好的，有一些比较狠的作者，则会直接rm -rf &#x2F;，把基带都格掉的一键变砖。 在我个人见过最恶心的签名校验中，当属三角校验(低调大佬教的)最烦人。所谓三角校验，就是so检测dex，动态加载的dex(在软件运行时会解压释放一段dex文件，检测完后就删除)检测so，dex检测动态加载的dex 普通获取签名校验代码： 系统将应用的签名信息封装在 PackageInfo 中，调用 PackageManager 的 getPackageInfo(String packageName, int flags) 即可获取指定包名的签名信息 4.签名校验对抗方法一:核心破解插件，不签名安装应用方法二:一键过签名工具，例如MT、NP、ARMPro、CNFIX、Modex的去除签名校验功能方法三:具体分析签名校验逻辑(手撕签名校验)方法四:io重定向–VA&amp;SVC：ptrace+seccompSVC的TraceHook沙箱的实现&amp;无痕Hook实现思路方法五:去作者家严刑拷打拿到.jks文件和密码 5.手动实现PM代理1.什么是PMS思路源自：Android中Hook 应用签名方法 PackageManagerService（简称PMS），是Android系统核心服务之一，处理包管理相关的工作，常见的比如安装、卸载应用等。 2.实现方法以及原理解析HOOK PMS代码: ActivityThread的静态变量sPackageManagerApplicationPackageManager对象里面的mPM变量 6.IO重定向什么是IO重定向？ 例：在读A文件的时候指向B文件 平头哥的核心代码Virtual Engine for Android(Support 12.0 in business version) IO重定向可以干嘛？ 1，可以让文件只读，不可写 2，禁止访问文件 3，路径替换 具体实现：过签名检测(读取原包)风控对抗(例:一个文件记录App启动的次数)过Root检测，Xposed检测(文件不可取) 7.其他常见校验root检测：反制手段1.算法助手、对话框取消等插件一键hook2.分析具体的检测代码3.利用IO重定向使文件不可读4.修改Andoird源码，去除常见指纹 定义了一个 isDeviceRooted() 函数，该函数调用了三个检测 root 的方法：checkRootMethod1()、checkRootMethod2() 和 checkRootMethod3()。 checkRootMethod1() 方法检查设备的 build tags 是否包含 test-keys。这通常是用于测试的设备，因此如果检测到这个标记，则可以认为设备已被 root。 checkRootMethod2() 方法检查设备是否存在一些特定的文件，这些文件通常被用于执行 root 操作。如果检测到这些文件，则可以认为设备已被 root。 checkRootMethod3() 方法使用 Runtime.exec() 方法来执行 which su 命令，然后检查命令的输出是否不为空。如果输出不为空，则可以认为设备已被 root。 模拟器检测 通过检测系统的 Build 对象来判断当前设备是否为模拟器。具体方法是检测 Build.FINGERPRINT 属性是否包含字符串 &quot;generic&quot;。 模拟器检测对抗 反调试检测安卓系统自带调试检测函数 debuggable属性 ptrace检测 每个进程同时刻只能被1个调试进程ptrace ，主动ptrace本进程可以使得其他调试器无法调试 调试进程名检测 [原创]对安卓反调试和校验检测的一些实践与结论 frida检测一些Frida检测手段 8.smali语法小课堂之赋值1.Int型赋值 const&#x2F;4和const&#x2F;16的区别？4代表4字节16代表16字节 2.Long型赋值const-wide vx, lit32 表示将一个 32 位的常量存储到 vx 与 vx+1 两个寄存器中 —— 即一个 long 类型的数据 会员到期时间就是2022年12月24日。那么1854460ef29L 怎么来的呢？也就是（2022年12月24日-1970年1月1日）×365天×24小时×60分钟×60秒×1000毫秒，转换成16进制就大概是那个数了 在线时间戳转换 3.变量赋值(正则) 9.反思签名的博弈日新月异，善用工具，拥抱开源！！！ 通过系统自带的api去获取签名很容易被伪造，不妨试试通过SVC的方式去获取(参考MT开源的方法)隐式签名校验有一些则比较隐晦，在发现apk被修改后，会偷偷修改apk的部分功能，例如在某些多开定位软件中，会暗改ip的经纬网等，跟实际产生一定的偏差。PS:推荐学习芽衣大神的手撕签名校验教程 点击学习 四、课后小作业 1.手动实现PM代理2.移植我的重定向代码(要学会偷代码！) 3.完成作业demo 作业反馈贴（前50名交作业有奖励）  五、答疑 待更新 六、视频及课件地址 百度云：  阿里云PS：  哔哩哔哩：  PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压 七、其他章节 《安卓逆向这档事》一、模拟器环境搭建《安卓逆向这档事》二、初识APK安卓逆向这文件结构、双开、汉化、基础修改《安卓逆向这档事》第三课、初识smail，vip终结者《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩 八、参考文档 APK 签名：v1 v2 v3 v4如何把签名校验做到极致Android PMS HOOK[实战破解]白描-动态代理Hook签名校验[原创]对安卓反调试和校验检测的一些实践与结论新版MT去签及对抗【小白教程】正则匹配的写法 多行匹配 批量赋值 smali逆向 简单实用 详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文： "},{"title":"吾爱破解安卓逆向入门教程《安卓逆向这档事》七、会Hook真的可以为所欲为-xposed快速上手(上)模块编写","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(7)%E3%80%81Sorry%EF%BC%8C%E4%BC%9AHook%E7%9C%9F%E7%9A%84%E5%8F%AF%E4%BB%A5%E4%B8%BA%E6%89%80%E6%AC%B2%E4%B8%BA-xposed%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B(%E4%B8%8A)%E6%A8%A1%E5%9D%97%E7%BC%96%E5%86%99/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["吾爱破解教程10节","/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B10%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":" 一、课程目标 1.了解Xposed原理及发展2.从0到1编写xposed模块3.配置ubuntu的逆向环境4.了解xposed的常用Api 二、工具 1.教程Demo(更新)2.jadx-gui3.雷电模拟器4.vmware5.Android Studio 三、课程内容 1.什么是Xposed？Xposed是一款可以在不修改APK的情况下影响程序运行的框架，基于它可以制作出许多功能强大的模块，且在功能不冲突的情况下同时运作。在这个框架下，我们可以编写并加载自己编写的插件APP，实现对目标apk的注入拦截等。 2.Xposed原理用自己实现的app_process替换掉了系统原本提供的app_process，加载一个额外的jar包，入口从原来的： **com.android.internal.osZygoteInit.main()被替换成了： de.robv.android.xposed.XposedBridge.main()**，创建的Zygote进程就变成Hook的Zygote进程了，从而完成对zygote进程及其创建的Dalvik&#x2F;ART虚拟机的劫持(zytoge注入) 3.Xposed的发展及免root框架 名称 地址 支持版本 是否免root xposed  2.3-8.1 否 EDXposed  8.0-10 否 LSPosed  8.1-13 否 VirtualXposed  5.0-10.0 是 太极  5.0-10.0 是 两仪  8.1-12 是 天鉴  6-10 是 4.Xposed可以做什么？1.修改app布局:上帝模式2.劫持数据，修改参数值、返回值、主动调用等。例:微信防撤回、步数修改、一键新机应用变量 3.自动化操作，例:微信抢红包 学习项目: 2022 最好的Xposed模块: GravityBox, Pixelify, XPrivacyLua基于Xposed的抖音爬虫，抖音风控后自动一键新机，模拟一个全新的运行环境基于xposed的frida持久化方案A Xposed Module for Android Penetration Test, with NanoHttpd.GravityBoxXposed-Modules-Repo]一个旨在使QQ变得更好用的开源Xposed模块杜比大喇叭知乎去广告Xposed模块哔哩漫游曲境自动化创建Xposed模块及钩子，让Xposed模块编写时只需关注钩子实现 5.Xposed环境配置前置ubuntu虚拟机镜像，感谢沐阳哥提供的镜像！！！内置: Frida开发环境 动态分析及开发工具：android-studio 动态分析工具：ddms 静态分析工具：jadx1.4.4 动静态分析工具：jeb 动态分析工具：集成HyperPwn 静态分析工具：010 editor 抓包工具：Charles 抓包工具：WireShark 动态分析工具:unidbg vm虚拟机：(或下载我打包好的)激活码：‘’’ZZ5RR-6AF8H-M8EKQ-TGMNG-X2UV6JU090-6039P-08409-8J0QH-2YR7F4A4RR-813DK-M81A9-4U35H-06KNDNZ4RR-FTK5H-H81C1-Q30QH-1V2LAJU090-6039P-08409-8J0QH-2YR7F4Y09U-AJK97-089Z0-A3054-83KLA4C21U-2KK9Q-M8130-4V2QH-CF810MC60H-DWHD5-H80U9-6V85M-8280D‘’’这几个密钥都试试看 第一步，安装虚拟机调整路径，输入激活码 第二步，导入镜像，文件-&gt;打开-&gt;选择解压好的镜像 第三步，点击运行，待初始化，输入密码:toor 1.Android Studio创建新项目2.将下载的xposedBridgeApi.jar包拖进libs文件夹3.右击jar包，选择add as library4.修改xml文件配置 5.修改build.gradle,将此处修改为compileOnly 默认的是implementation 6.新建–&gt;Folder–&gt;Assets Folder，创建xposed_init(不要后缀名):只有一行代码，就是说明入口类7.新建Hook类，实现IXposedHookLoadPackage接口，然后在handleLoadPackage函数内编写Hook逻辑 继承了IXposedHookLoadPackag便拥有了hook的能力 6.Xpoosed常用APIAn efficient Hook API and Xposed Module solution built in Kotlin 1.Hook普通方法修改返回值 修改参数 2.Hook复杂&amp;自定义参数 3.Hook替换函数 4.Hook加固通杀 四、课后小作业 写一个xposed模块去修改上节课smali相关学习里的方法，并修改参数以及返回值 五、答疑 待更新 六、视频及课件地址 百度云：  阿里云PS：  哔哩哔哩：  PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压 七、其他章节 《安卓逆向这档事》一、模拟器环境搭建《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改《安卓逆向这档事》三、初识smail，vip终结者《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向 八、参考文档 [原创]源码编译（2）——Xopsed源码编译详解[原创]Xposed Hook技巧，代{过}{滤}理abstract[原创]Xposed callMethod 如何传入接口参数 详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文： "},{"title":"吾爱破解安卓逆向入门教程《安卓逆向这档事》八、会Hook真的可以为所欲为-xposed快速上手(下)快速hook","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(8)%E3%80%81Sorry%EF%BC%8C%E4%BC%9AHook%E7%9C%9F%E7%9A%84%E5%8F%AF%E4%BB%A5%E4%B8%BA%E6%89%80%E6%AC%B2%E4%B8%BA-xposed%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B(%E4%B8%8B)%E5%BF%AB%E9%80%9Fhook/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["吾爱破解教程10节","/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B10%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":" 一、课程目标 1.了解Xposed常用API2.借助lspatch实现免root注入3.SimpleHook快速hook 二、工具 1.教程Demo(更新)2.MT管理器&#x2F;NP管理器3.算法助手4.jadx-gui5.simplehook6.Android Studio 三、课程内容 虚拟机连接模拟器方法 Xposed常用API1.Hook变量静态变量与实例变量： 静态变量（static）：类被初始化，同步进行初始化 非静态变量：类被实例化（产生一个对象的时候），进行初始化 静态变量 实例变量 2.Hook构造函数无参构造函数 有参构造函数 3.Hook multiDex方法 4.主动调用静态方法: 实例方法: 5.Hook内部类内部类:类里还有一个类class 6.反射大法 7.遍历所有类下的所有方法 8.Xposed妙用字符串赋值定位: 点击事件监听: 改写布局: Xposed模块patchLSPatch：![图片](./../img/640-1695707005630-33.png) PS:最低支持安卓9 Xposed快速HookSimpleHook：![图片](./../img/640-1695707005630-34.png) jshook： Xpsoed源码XPOSED魔改一：获取特征Lsposed 技术原理探讨 &amp;&amp; 基本安装使用[原创]源码编译（2）——Xopsed源码编译详解 四、课后小作业 让我想想 五、答疑 提一嘴，我感觉肯定会有人问我的as怎么跟他的不一样，那是因为我用了一些插件。插件入口：左上角File-&gt;Settings-&gt;Plugins，在这里可以搜索并安装你想安装的插件，以下是我用的插件 六、视频及课件地址 百度云：  阿里云PS：  哔哩哔哩：  PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压 七、其他章节 《安卓逆向这档事》一、模拟器环境搭建《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改《安卓逆向这档事》三、初识smail，vip终结者《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api 详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文： "},{"title":"吾爱破解安卓逆向入门教程《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(9)%E3%80%81%E5%AF%86%E7%A0%81%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%81%E7%AE%97%E6%B3%95%E8%87%AA%E5%90%90%E3%80%81%E9%9D%9E%E6%A0%87%E5%87%86%E5%8A%A0%E5%AF%86%E5%AF%B9%E6%8A%97/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["吾爱破解教程10节","/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B10%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":" 一、课程目标 1.密码学基础2.常见编码与算法3.非标准加密对抗 二、工具 1.教程Demo(更新)2.MT管理器&#x2F;NP管理器3.算法助手4.雷电模拟器5.Android Studio6.jadx-gui 三、课程内容 1.为什么要学这个？ CTF 爬虫:算法还原、协议分析 网络安全:渗透测试、安全防护 2.密码学基础1.什么是密码学?密码学(cryptography)是一种将信息表述为不可读的方式，并使用一种秘密的方法将信息恢复出来的科学。密码学提供的最基本的服务是数据机密性服务，就是使通信双方可以互相发送消息，并且避免他人窃取消息的内容。加密算法是密码学的核心。 明文：原始消息 密文：加密后的消息 加密：从明文到密文的变换过程 解密：从密文到明文的变换过程 密钥：相用来完成加解密等过程的秘密信息 3.常见编码1.Base64编码CyberChef定义:Base64是一种用64个字符表示任意二进制数据的方法，是一种编码，并非加密字符编码，由 A-Z a-z 0-9 + &#x2F; 和补充字符 “&#x3D;” 组成，Base64编码后的字符数是4的倍数（不足会补”&#x3D;”） 明文: 密文: 逻辑实现: 自实现base64： 2.Hex编码定义:hex编码，又称十六进制编码(也称base16)，一般用于方便人们查看二进制文件内容，它将字节数据中的每4个bit使用数字(0-9)、字母(A-F)共16个字符等效表示，由于一个字节有8个bit，所以一个字节会被编码为2个hex字符PS:在 ASCII 编码中，只有0到127之间的数字是表示英文字母、数字和符号的，超出这个范围的字符需要使用其他编码方式,例如汉字就需要使用 UTF-8 或 UTF-16 明文: 密文: 逻辑实现:%02X 是一个格式化字符串，其中 % 是转义符，02 是最小宽度，表示输出的字符串至少包含两个字符，不足两个字符时用 0 填充，X 表示输出的字符集为大写的十六进制数。(算是一个特征) 3.Unicode编码定义:Unicode（统一码、万国码、单一码）是一种在计算机上使用的字符编码。 明文: 密文: 逻辑实现: 4.Byte数组PS：常用于字符串加密明文： 密文： 4.加密算法1.消息摘要算法&amp;单向散列函数&amp;哈希算法定义:单向散列函数算法也称Hash（哈希）算法(消息摘要算法)，是一种将任意长度的消息压缩到某一固定长度（消息摘要）的函数（该过程不可逆）。Hash函数可用于数字签名、 消息的完整性检测、消息起源的认证检测等。常见的算法:MD5、HMAC、SHA-X(SHA-1,SHA-2) MD5摘要特性: 压缩性:无论数据长度是多少,计算出来的MD5值长度相同(16位、32位) 抗修改性:即便修改一个字节，计算出来的MD5值也会巨大差异 抗碰撞性:知道数据和MD5值，很小概率找到相同MD5值相同的原数据 易计算性:由原数据容易计算出MD5值(逆推) 明文: 密文: 逻辑实现: 2.对称加密算法定义:加密和解密使用相同密钥的密码算法叫对称加解密算法，简称对称算法。对称算法速度快，通常在需要加密大量数据时使用。所谓对称，就是采用这种密码方法的双方使用同样的密钥进行加密和解密。对称加密算法可以分为以下几种类型： DES（数据加密标准）：DES是一种对称加密算法，使用56位密钥，将数据分成64位块，然后进行加密。由于DES的密钥长度比较短，易受到暴力破解攻击。 3DES（三重DES）：3DES是基于DES算法的改进版本，使用三个56位的密钥，对数据进行三次加密，从而增加了加密强度。3DES比DES更加安全，但是加密速度较慢。 AES（高级加密标准）：AES是一种高级的对称加密算法，使用128、192或256位密钥，可以对不同长度的数据块进行加密。AES比DES和3DES更加安全，且加密速度更快。 RC4：RC4是一种流加密算法，使用相同的密钥对数据进行加密和解密。RC4的密钥长度可以是40位、64位、128位等不同长度。RC4在实际应用中已经被证明存在漏洞，不再被推荐使用。 (1)AES加解密明文: 密文: 逻辑实现: (2)DES加解密明文: 密文: 逻辑实现: 3.非对称加密算法定义:非对称加密，也称为公钥加密，使用两个不同的密钥进行加密和解密，这两个密钥是一对，一个被称为公钥，一个被称为私钥。公钥可以随意分发给任何需要通信的人，而私钥则只能由密钥持有者保留。在非对称加密中，公钥用于加密消息，而私钥用于解密消息，这使得非对称加密更加安全，因为即使公钥被泄露，也无法破解密文。常见的非对称加密:RSA RSA加解密定义:RSA是最具代表性的公钥密码体制。由于算法完善（既可用于数据加密又可用于数字签名）、安全性良好、易于实现和理解，RSA已成为一种应用极广的公钥密码体制，也是目前世界上唯一被广泛使用的公钥密码。在广泛的应用中，它不仅实现技术日趋成熟而且安全性逐渐得到证明。由此人们越发对RSA偏爱有加，并提出了许多基于RSA的加强或变形公钥密码体制。根据不同的应用需要，人们基于RSA算法开发了大量的加密方案与产品。 明文: 密文: 逻辑实现: 总的来说，非对称加密比对称加密更加安全，但同时也更加计算密集和复杂，因此在实际应用中需要根据具体情况来选择合适的加密方式。常见的做法是使用对称加密算法加密数据，然后使用非对称加密算法加密对称加密算法使用的密钥，这样既保证了数据的安全性，又避免了非对称加密算法的资源消耗。 4.非标准加密算法遇到不是常规的加密怎么办？方法一:主动调用方法二:扣算法方法三:问问神奇的ChatGPT 四、课后小作业 修改教程demo中的值 五、答疑 推荐书目:加密与解密（第4版）Java加密与解密的艺术(第2版)密码学原理与Java实现 六、视频及课件地址 百度云：  阿里云PS：  哔哩哔哩：  PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压 七、其他章节 《安卓逆向这档事》一、模拟器环境搭建《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改《安卓逆向这档事》三、初识smail，vip终结者《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api 《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook 八、参考文档 安卓逆向中关于密码学、NDK开发（JNI调用）以及Java层逆向基础知识思维导图密码学原理与Java实现MD5加密概述，原理及实现RSA 加解密（Java 实现）密码学：RSA加密算法详解 详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文： "},{"title":"吾爱破解安卓逆向入门教程《安卓逆向这档事》 一、模拟器环境搭建","date":"2023-09-27T00:33:49.000Z","url":"/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B%EF%BC%881%EF%BC%89%E3%80%81%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","tags":[["逆向","/tags/%E9%80%86%E5%90%91/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["android逆向","/tags/android%E9%80%86%E5%90%91/"],["大麦网抢票","/tags/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8/"],["吾爱破解教程10节","/tags/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B10%E8%8A%82/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":"一.什么是安卓逆向？ 安卓逆向是对已经打包好的APP进行反编译、源码分析了解APP实现逻辑的一门技术 二.安卓逆向可以干嘛？ 去更新去广告内购&#x2F;会员破解协议自动签到白嫖！！！拜托，会逆向的人超酷的好嘛 三.教程简介 参考之前发的《关于我在吾爱破解论坛学安卓逆向这档事》预告PS:我不是程序员，安卓逆向只是兴趣，可能讲的不好，还请各位大佬多多包涵。另外本教程只是个基础的，并没有什么含金量。所以，如果能帮到一些新朋友培养起对安卓逆向的兴趣，那已经是物尽其用了。 四、Magisk介绍 Magisk 是一套用于定制 Android 的开源软件，支持高于 Android 5.0 的设备。 以下是一些功能亮点： MagiskSU：为应用程序提供 root 访问权限 Magisk 模块：通过安装模块修改只读分区 MagiskHide：从根检测 &#x2F; 系统完整性检查中隐藏 Magisk(Shamiko) MagiskBoot : 最完整的安卓启动镜像解包和重新打包工具 五、安装步骤 1.到官网下载9.0模拟器，并安装 [更新!]适用于几乎所有安卓模拟器(7+)安装magisk的教程-简单无脑向(出处: 吾爱破解论坛) 2.下载配置文件 3.安装面具 六、可能存在的问题 Magisk刷不上这种情况可能是你下的是最新版雷电模拟器，需要在设置里把读写权限打开 七、视频及课件地址 百度云： 阿里云： 哔哩哔哩： 论坛原帖： 八、后续更新地址 《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改 PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压"},{"date":"2023-09-26T06:31:20.188Z","url":"/2023/09/26/app%E9%80%86%E5%90%91/Android%E9%80%86%E5%90%91-%E6%9F%90%E9%BA%A6%E7%BD%91APK%E6%8A%A2%E7%A5%A8%E6%8E%A5%E5%8F%A3%E5%8A%A0%E5%AF%86%E5%8F%82%E6%95%B0%E5%88%86%E6%9E%90/","categories":[["undefined",""]],"content":"[Android逆向] 某麦网APK抢票接口加密参数分析一、前言针对某麦网部分演唱会门票仅能在app渠道抢票的问题，本文研究了APK的抢票接口并编写了抢票工具。本文介绍的顺序为环境搭建、抓包、trace分析、接口参数获取、rpc调用实现，以及最终的功能实现。通过阅读本文，你将学到反抓包技术破解、Frida hook、jadx apk逆向技术，并能对淘系APP的运行逻辑有所了解。本文仅用于学习交流，严禁用于非法用途。 关键词：frida, damai.cn, Android逆向先放成功截图： 二、环境搭建目前Android模拟器竞品很多，选择Bluestacks 5是因为它能和windows的hyper-v完美兼容，root过程也相对简单。 下载安装Bluestacks。 运行Bluestacks Multi-instance Manager，发现默认安装的版本为Android Pie 64bit版本，即Android 9.0。此时退出bluestack所有程序。 关闭bluestack后编辑bluestacks配置文件， %programdata%\\BlueStacks_nxt\\bluestacks.conf&gt; 由于作者安装时C盘空间不足，真实的bluestacks.conf在D:\\BlueStacks_nxt\\bluestacks.conf，大家也根据实际情况调整 在配置文件中查找root关键词，对应值修改为1，共两处。 启动bluestack模拟器，安装 Root Checker APP，点击验证root，即可发现root已开启 三、adb调试 bluestack设置-高级中打开Adb调试，并记录下端口 打开主机命令行，运行 adb connect localhost:6652，端口号修改为上一步的端口号，即可连接。再运行adb devices，如有对应设备则连接成功。 进入adb shell，执行su进入root权限，命令行标识由$变为#，即表示adb 进入root权限成功 frida环境 frida是大名鼎鼎的动态分析的hook神器，用它可以直接访问修改二进制的内存、函数和对象，非常方便。它对于Android的支持也是很完美。 frida的运行采用C&#x2F;S架构，客户端为电脑端的开发环境，服务器端为Android，均需对应部署搭建。 客户端环境搭建(Windows)firda客户端基于python3开发，因此首先需要配置好python3的运行环境，然后执行 pip install frida-tools即可完成安装。运行 frida --version可验证frida版本。 服务器 环境搭建(Android)环境搭建第二步是在Android模拟器中运行frida-server。这样可以让Frida通过ADB&#x2F;USB调试与我们的Android模拟器连接。 下载frida-server最新的frida-server可以从  下载。请注意下载与设备匹配的架构。如果您的模拟器是x86_64，请下载相应版本的frida-server。本文使用的版本为 frida-server-16.0.18-android-x86_64.xz 传入Android模拟器。 将下载后的.xz文件解压，将frida-server传入Android模拟器 运行 frida-server 使用adb root以root模式重新启动ADB，并通过adb shell重新进入shell的访问。进入shell后，进入我们放置frida-server的目录并为其授予执行权限： 执行：./frida-server ，运行frida-server，并保持本shell窗口开启。 成功截图： 有些情况下，应用程序会检测在是否在模拟器中运行，但对某麦网app的分析暂无影响。 测试是否连接成功 在window端运行frida-ps命令： 看到一堆熟悉的Android进程，我们就连接成功啦 转发frida-server端口 (可选) frida-server跑在Android端，frida需要通过连接frida-server。上一步使用adb的方式连接，frida认为是USB模式，需要-U命令。frida也支持依赖端口的远程连接模式，在某些场景下更加灵活。可以通过端口转发的方式实现此功能。 抓包 1. 搞定tcpdump本文基于termux安装使用tcpdump。 首先安装termux apk。 打开termux运行： 挂载存储 安装tcpdump 运行抓包 tcpdump 成功截图: 之后就可以把downloads目录下的抓包文件拷贝到电脑上，用wireshark打开做进一步分析。 2. 解密https流量Wireshark解密https流量的方法和原理介绍有很多，可参考以下文章，本文不再赘述。   wireshark解密技术的重点在于拿到客户端通信的密钥日志文件(ssl key log)，像下面这种： 在Android中实现抓取ssl key log需要hook系统的SSL相关函数，可以用frida实现。 首先将下面的hook代码保存为sslkeyfilelog.js 然后用frida加载运行hook 最后，抓包结束后将得到的key保存到sslkey.txt，格式是下面这样的，不要掺杂别的。 在运行Frida Hook获取sslkey的同时，运行tcpdump抓包。抓包中依次测试获取详情页、选择价位、提交订单等操作，并对应记录下执行操作的时间，方便后续分析。 抓包完成后，用wireshark打开tcpdump抓包获得的pcap文件，在wireshark首选项-protocols-TLS中，设置 (Pre)-Master-Secret log filename为上述sslkey.txt。 即可实现https流量的解密。 流量分析 某麦网的API流在此铺垫一下，通过前期对某麦网PC端和移动端H5的分析，某麦网购票的工作流程大概为： 获得详情：接口为mtop.alibaba.damai.detail.getdetail。基于某演出的id(itemId)获得演出的详细信息，包括详情、场次、票档(SkuId)价位及状态信息， 构建订单：接口为mtop.trade.order.build.h5。发送 演出id+数量+票档id(itemId_count_skuId)，得到提交订单所需的表单信息，包括观众、收货地址等。 提交订单：接口为mtop.trade.order.create.h5。对上一步构建订单得到的表单参数作出修改后，发送给服务器，得到最后的订单提交结果和支付信息。 apk流量分析首先用过滤器http &amp;&amp; tcp.dstport==443，得到向服务器发送的https包，如下图： 可以看到大量向服务器请求的数据包，但其中有很多干扰的图片请求，因为修改过滤器把图片过滤一下。过滤器：http &amp;&amp; tcp.dstport==443 and !(http.request.uri contains &quot;.webp&quot; or http.request.uri contains &quot;.jpg&quot; or http.request.uri contains &quot;.png&quot;) 结果清爽了很多。 订单构建(order.build)根据之前记录的操作的时间，以及对网页版的分析结果，笔者注意到了下图的这条流量： 然后我们右键选择这条流量包，点击追踪http流，可以看到对应的响应包。 响应包里有些中文使用了UTF-8编码，可以点击右下角的Show data as，选择UTF-8，便可以正常显示。此时可以点击另存为，保存为txt文件，方便后续分析。 订单构建的请求包中核心的数据部分为图中青色圈出来的部分，使用URL解码后为： buyParam为最核心的部分，拼接方式为演出id+数量+票档id。其他部分只需照抄。 请求包中还包含大量的各种加密参数、ID，而破解实现自动购票脚本的关键就在于如何通过代码的方式拿到这些加密参数。 订单构建的响应包为订单提交表单的各项参数，用于生成“确认订单”的表单。 订单提交(order.create)按照同样的方式可以找到订单提交包，订单提交包的API路径为/gw/mtop.trade.order.create， 其中青色圈出来的部分为data发送的核心数据，对数据用URL解码后为： 看起来像是把原始数据用gzip压缩后又使用了base64编码，尝试解码： 解码成功，存到order.create-params.json, 解码后发现order.create发送的data参数和order.build请求返回的结果很相似，增加了一些用户对表单操作的记录。 order.create请求的header中的各种加密参数和order.build一致。 order.create请求的返回结果中包含了订单创建是否成功的结果以及支付链接. TRACE分析 通过前面对流量的分析，我们已经知道客户端向服务器发送的核心数据和加密参数，核心数据的拼接相对简单，但加密参数怎么获得还比较困难。因此，下面要开始分析加密参数的生成方法。本章节主要采用frida trace动态分析和jadx静态分析相结合的方式，旨在找到加密参数生成的核心函数和输入输出数据的格式。 根据文章 ( app安卓逆向x-sign，x-sgext，x_mini_wua，x_umt加密参数解析 )，其中数据包的加密参数和本文的某麦网很类似，而且提到了 mtopsdk.security.InnerSignImpl 生成的加密函数，本文也参考了这篇文章的思路进行分析。 跟踪 InnerSignImpl运行frida-trace -U -j &quot;*InnerSignImpl*!*&quot; 大麦，执行选座提交订单的操作，发现确实有结果输出： 点击发送请求时，调用了InnerSignImpl.getUnifiedSign函数。但是输入参数和数据参数均为HashMap类型，结果中未显示具体内容。从结果输出中猜测frida-trace是通过对需要hook的函数在__handlers__下生成js文件，并调用js文件进行hook操作的，因此笔者修改了“handlers\\mtopsdk.security.InnerSignImpl\\getUnifiedSign.js”，使其能正确输出HashMap类型。 再次运行frida-trace，输出的结果已经可以看到具体内容了： 可以看到返回结果中包含了 x-sgext,x-umt,x-mini-wua,x-sign 等加密参数。至此，前面的一大堆分析也算有了小的收获。但对比流量分析结果中的发送参数，还是缺失了很多参数。下面我们继续跟踪，找出剩下的参数。 跟踪 mtopsdk调研发现淘系的apk都包含mtopsdk，猜想会不会有公开的官方文档描述mtopsdk的使用方法，因此我们就找到了 【阿里云mtopsdk Android接入文档】 。其中介绍了请求构建的流程为，笔者重点关注了请求构建和发送的部分： 因此我们不妨大胆一些，直接跟踪所有对mtopsdk中函数的调用。 输出的结果大概有2000行，直接看太费劲，我们复制到文本编辑器里做进一步分析。 我们按照阿里的官方文档介绍的流程，对应可以找到在输出的trace中找到一些关键的日志。 笔者注意到了InnerProtocolParamBuilderImpl.buildParams函数的输出结果完全覆盖了需要的各类加密参数，其输入类型是MtopContext。从jadx逆向的apk代码中可以找到MtopContext类，即包含Mtop生命周期的各个类的一个容器。 所以现在的问题变为如何能够构建出来MtopContext，然后调用buildParams函数生成各类加密参数。 分析业务模块与mtopsdk的交互过程在写本文复盘分析过程的时候，笔者发现仅依赖mtopsdk的调用过程其实已经可以得到MtopContext的全部生成逻辑了。但所谓当局者迷，笔者在当时分析的时候还是一头雾水。因此在此也介绍一下笔者的思考逻辑。 当时看着mtopsdk的调用过程，感觉很复杂。但是猜想从用户点击操作-&gt;业务代码-&gt;mtopsdk的数据流，以及模块间高内聚低耦合的原则，所以猜想模块间的调用不会很复杂，所以笔者就想分析业务代码与mtopsdk的调用逻辑。所以就想跟踪主要业务代码的trace。所以笔者继续跟踪trace，运行frida-trace -U -j &quot;*cn.damai*!*&quot; 大麦 ，以分析cn.damai包的调用过程，在其中发现了 NcovSkuFragment.buyNow() 函数，看起来是和购买紧密相关的函数。又找到DMBaseMtopRequest类。 但是在这里有点卡住了，因为只找到了构建MtopRequest，并未在cn.damai的trace日志中并未发现其他对mtop的调用。 然后笔者又尝试搜索和api(order.build)相关的代码，找到了： 然而并没有多大用处。 然后，作者又读了大量的源代码，终于定位到了 com.taobao.tao.remotebusiness.MtopBussiness这个关键类。 笔者本以为com.taobao开头的代码不是那么重要，所以最开始把这个类完全忽略了。但通过对源码的阅读，发现这个类是motpsdk中MtopBuilder类的子类，主要负责管理业务代码和Mtopsdk的交互。 因此我们继续通过trace跟踪MtopBussiness类。运行frida-trace -U -j &quot;*!*buyNow*&quot; -j &quot;com.taobao.tao.remotebusiness.MtopBusiness!*&quot; -j &quot;*MtopContext!*&quot; -j &quot;*mtopsdk.mtop.intf.MtopBuilder!*&quot; 大麦 现在业务代码和mtopsdk的交互就很清晰了，红色的部分是业务代码的函数，绿色的部分是mtopsdk的函数。 0x06 hook得到接口参数通过以上对trace的分析，已经知道了具体执行的操作，因此我们可以使用frida编写js代码，直接调用APK中的类，实现功能调用。 先展示一个简单的示例，用于构建一个自定义的MtopRequest 类: 再使用运行命令 frida -U -l .\\reverse\\new_request.js 大麦，以在某麦Apk中执行js hook代码。运行之后即可输出笔者自己构建的MtopRequest实例。（frida真的很奇妙！） 有了上面的结果，下面继续完善这个示例，添加MtopBussiness的构建过程和输出过程 再次执行frida -U -l .\\reverse\\new_request.js 大麦，输出结果如下图，此时已能根据笔者任意构建的请求data输出其他加密参数： 对于order.create的原理类似，此处不再赘述。 ![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’‘ xmlns:xlink&#x3D;’ stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E) 原文链接："},{"title":"项目部署踩坑记录","date":"2023-09-11T01:29:43.000Z","url":"/2023/09/11/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"]],"categories":[["excel","/categories/excel/"]],"content":" 项目即将进入生产环境，部署在内部还需要一些操作。做了不少的踩坑。记录一下 一、首先是数据库 安装wps宏插件【我的项目-第二弹】丢失问题踩坑 SQLserver 安装踩坑 SQLserver 远程连接踩坑 二、wps宏插件踩坑： 三、动态IP转静态IP dns 静态IP：打开 cmd 利用ipconfig- all 获取ipv4 地址，获取 子掩码 ：255.255.255.0； 获取首选DNS服务器地址；获取备选DNS服务器地址：8.8.8.8。 通过网络适配器更改iP 四、SQLserver 安装踩坑​ sql server 安装踩坑其实也比较大，主要在安装的时候不要图省事，还是需要 自定义 安装，可以看教程 我的项目-第二弹，这在后面可以省很多事 五、sql server 远程连接踩坑最大问题描述：SQL Serve [SQL Server无法连接到服务器] 首先：在自定义安装的时候，一定要打开sqlserver windows身份验证 和SQL server 账户验证，很重要 然后是 电脑需要打开远程访问；telnet； 入站规则； sqlserver 允许远程； tcp/ip 打开,设置 等； 其次是设置账户和密码，“如何需要可以设置账户权限” 最后找到电脑的ip地址，需要用ip地址访问。 结论：首先是上代码： 第一步：首先是确认下 SQL Server名称或IP地址拼写是否有误； 第二步：检查网络物理连接： ping ＜服务器IP地址＞或者 ping ＜服务器名称＞ 如果 ping ＜服务器IP地址＞ 失败，说明物理连接有问题，这时候要检查硬件设备，如网卡、HUB、路由器等。还有一种可能是由于客户端和服务器之间安装有防火墙软件造成的，比如 ISA Server。防火墙软件可能会屏蔽对 ping、telnet 等的响应，因此在检查连接问题的时候，我们要先把防火墙软件暂时关闭，或者打开所有被封闭的端口。 如果ping ＜服务器IP地址＞ 成功而 ping ＜服务器名称＞ 失败，则说明名字解析有问题，这时候要检查 DNS 服务是否正常，有时候客户端和服务器不在同一个局域网里面，这时候很可能无法直接使用服务器名称来标识该服务器 这个部分我也没解决，所以没用实例名称，用的ip地址 第三步：检查SQL Server服务器工作状态： ​ 使用 telnet 命令， telnet ＜服务器IP地址＞ 1433； ​ 如果命令执行成功，可以看到屏幕一闪之后光标在左上角不停闪动，这说明 SQL Server 服务器工作正常，并且正在监听1433端口的 TCP&#x2F;IP 连接；如果命令返回”无法打开连接”的错误信息，则说明服务器端没有启动 SQL Server 服务，也可能服务器端没启用 TCP&#x2F;IP 协议，或者服务器端没有在 SQL Server 默认的端口1433上监听。 ​ 解决办法： 启用TCP&#x2F;IP协议： 1、打开SQL配置管理器； 2、启用TCP&#x2F;IP服务； 3、打开端口（默认1433）4、重启服务 ​ 第四步：在【连接】属性里面打开允许远程连接。 第五步：确认权限（这个部分我没用，用的Ip就行，这个部分我也不确定） 1、确认是否有服务器读写权限？ 方法：a、客户端访问服务器共享文件夹；b、文件夹里面新建，确认是否有权限 2、修改默认用户名（sa）密码试试； 如果还没解决，就把SQL server 重新安装一下，记得用自定义。然后再 SSMS 中查看下实例，把多余的那个关掉，然后再试一下。"},{"title":"我的小项目-第三弹","date":"2023-09-04T09:30:29.000Z","url":"/2023/09/04/%E5%A4%A7%E9%BA%A6%E7%BD%91APP%E9%80%86%E5%90%91%E9%A1%B9%E7%9B%AE/%E6%88%91%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%AC%AC%E4%B8%89%E5%BC%B9/","tags":[["项目集锦","/tags/%E9%A1%B9%E7%9B%AE%E9%9B%86%E9%94%A6/"],["ideas","/tags/ideas/"],["小爬虫","/tags/%E5%B0%8F%E7%88%AC%E8%99%AB/"],["APP逆向","/tags/APP%E9%80%86%E5%90%91/"],["抢票软件","/tags/%E6%8A%A2%E7%A5%A8%E8%BD%AF%E4%BB%B6/"]],"categories":[["项目日记","/categories/%E9%A1%B9%E7%9B%AE%E6%97%A5%E8%AE%B0/"]],"content":"一、项目起因： 停滞挺久了，最近这段时间感觉各处不顺，工作没思路，干什么都提不起精神，这2年都没什么成长，有时候想自己不能这样下去，但是也不知道该做什么，怎么做，感觉很焦虑。 最近思考了很多，但是一下子又想不起来自己想了些什么，就是人马上要到35岁了，一想到自己未来30-35岁的样子，就莫名的有点害怕； 以前的时候吧，想着电视上的哪些人，科学家，律师，教师，一个成功的Leader穿西服挂领带，商人，企业家，包工头….以为将来会像这样，但是最近想的更多的吧，自己将来更多的其实是芸芸众生，就像自己的父母那样，平淡，为几毛几块钱也要争个面红耳赤，未来40岁，也许像许哥，也许像赵哥，人到中年，力不从心，却不想认命，却无能为力。也许现在找一份工作，到干不动了，被辞退了，然后为生计发愁。 还想了，人到底要一条路走到黑，还是要兴趣广泛一些，想了一个比较好的比喻，就好比一颗树，是只在一边长还是要多生枝叶。破土而出的时候，总归要多长枝叶，只有这样才能吸取更多养分，要专注自己的主干，才能长高高。 感触就这么多吧，说说项目。 最近缺钱，最近花钱没有数，存款几乎全部花掉了，然后还想着要买车，大概3、5万，还有新家还没装修，乱七八糟的花销还有很多，另外，支付宝欠款还有1万多，想想压力就很大，所以准备一个能赚快钱的项目，另外需要准备一个能在未来持续走下去的项目。 抢票软件最近聊的人比较多，这种演唱会门票感觉有搞头，有钱赚，可以先试试，之前曾试过环球影城的，难度是挺高的。这次试一下大麦的，如果能搞定，后续的赚钱路径等于多了一条。 二、使用工具： 待定：未开始 三、项目思考： 难题： 代理抓包难题：大麦和环球影城有点像，没有网页端，只有小程序和app，环球影城开代理会被屏蔽掉，直接抓包并能抓到包，不过我记得模拟器的小程序好像可以。但是大麦网的小程序也一样抢不到票，比较麻烦。 app 脱壳和反编译难题：这种app只能通过反编译来处理 逆向难题：这两个大公司，里面的加密包应该都是自己设计的，反编译起来，没有十足的把握。 法律风险：可能涉及法律风险。 四、项目规划："},{"title":"销售系统搭建（二）","date":"2023-08-31T12:04:18.000Z","url":"/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"]],"categories":[["excel","/categories/excel/"]],"content":"最后一个章节就是调用所有的数据，这个部分很简单了，直接上代码 一、初始化数组 具体实现：​ excel-中台数据库搭建（一） ​ excel-中台数据库搭建（二） ​ excel-中台数据库搭建（三） ​ excel-中台数据库搭建（四） ​ 销售系统搭建（一）"},{"title":"销售系统搭建（一）","date":"2023-08-31T11:35:02.000Z","url":"/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"]],"categories":[["excel","/categories/excel/"]],"content":"本章节是继中台数据库后的第二章，中台数据库搭建完成，需要销售填充数据。其实有了最开始踩的坑，做起销售系统就的心应手了。 功能设计： 点击单元格–&gt;弹出弹窗–&gt; 填写相关信息 –&gt; 提交 获取最新的分配数据。 卡点问题：这个部分遇到的卡点就是如何把信息分成两个部分发送数据库，因为销售数据，回访中的数据是要逐次添加的，但是跟进结果的数据只有一次，这是放在一起填写，但是拆分成了两个表。在设计窗体的时候花了一些功夫。 另外，在数据更新上面也花了些功夫，就是，数据双击后，跟进结构的数据需要再更新，设计这个部分也花了不少时间。 上代码 窗体设计： 第二步：双击单元格，弹出窗体，并把已有数据填入chackBOX 再客户跟进表的VBA里打开 第三步，窗体代码 ​ 3.1 初始化变量 3.2 初始化窗体，原有的数据填充进窗体 具体实现：​ excel-中台数据库搭建（一） ​ excel-中台数据库搭建（二） ​ excel-中台数据库搭建（三） ​ excel-中台数据库搭建（四） ​ 销售系统搭建（二）"},{"title":"excel-中台数据库搭建（四）","date":"2023-08-29T03:13:35.000Z","url":"/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E5%9B%9B%EF%BC%89/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"]],"categories":[["excel","/categories/excel/"]],"content":"补充部分：这个部分卡的时间最长，主要就是一句sql, 正是这句sql 让我重新设计了数据库 需求：根据数据总表中销售的id获取这个销售所有的学校数据，再跟进这个学校数据的ID ,获取回访数据里最后一条回访数据，并且计算回访数据中，这个学校一共有多少条数据，然后再去跟进结果里面获取这个学校的跟进结果的数据。这个联表联到我怀疑人生。 拆解下需求： 根据销售id 获取 这个销售被分配的所有的学校数据 根据学校的id, 获取回访表中这个学校所有的回访数据，并取最后一条 获取所有的回访数据后，计算一下这个学校一共被回访了多少次 最后，根据学校的id查询下跟进结果里的结果数据。 就是这句sql，差点把整个项目鸽了。太费劲了。而且我只想用一句sql，不想来回调数据，既费内存，又费效率，好在终于搞出来了。 上代码 具体实现：​ excel-中台数据库搭建（一） ​ excel-中台数据库搭建（二） ​ excel-中台数据库搭建（三） ​ 销售系统搭建（一） ​ 销售系统搭建（二）"},{"title":"excel-中台数据库搭建（三）","date":"2023-08-29T02:53:20.000Z","url":"/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%89%EF%BC%89/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"]],"categories":[["excel","/categories/excel/"]],"content":"最后一个部分，完成数据修改、和删除 一、part1功能设计：双击单元格 –&gt; 获取单元格的数据 –&gt; 放入指定的TEXTBOX中 –&gt; 修改数据 –&gt; 提交修改 –&gt; 单元格自动更新，不用重复调用数据库 ； 删除数据（从数据库中删除） 遇到的卡点： 联表增加和删除问题，因为做了多个表，需要多个表同时删除 修改完数据，单元格要自动更新修改后的数据 窗体的设计，这个窗体设计卡的比较久，主要是想不放到更方便的方法，尝试了很多中，最后用的这种暴力方式，果然，最简单的，最暴力的方法是最有效的方法。另外，还想做一个人员分配的修改，琢磨了一下，实现难实现，同时要更新好多个表的ID，就没做了，以后有需求再说。 二、具体实现 窗体设计 双击单元格，弹出弹窗；将默认信息添加到窗体里，这里需要打开worksheet 数据总表 vba 提交修改后的数据，双击窗体，打开VB 单元格数据更新 删除数据 具体实现：​ excel-中台数据库搭建（一） ​ excel-中台数据库搭建（二） ​ excel-中台数据库搭建（四） ​ 销售系统搭建（一） ​ 销售系统搭建（二）"},{"title":"excel-中台数据库搭建（二）","date":"2023-08-29T00:43:25.000Z","url":"/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"]],"categories":[["excel","/categories/excel/"]],"content":"继续上次的话题，完成了新增的功能 一、第二个部分是需要完成线索分配的功能 功能设计： 点击线索分配 –&gt; 弹出弹窗 –&gt; 选择分配数据类型 –&gt; 选择分配数量 –&gt; 选择查询方式 –&gt; 选择分配人–&gt; 更新分配时间 –&gt; 提交数据 遇到的卡点： ​ 这个部分做起来相对容易一些，主要遇到的是数据库设计的问题，access数据库没有动态生成id的功能，也没有事务，表的设计最初想的麻烦了，想分成很多个表，然后根据情况调取不同的表，后来发现，这个方式实在是太复杂了，放弃了，重新设计了数据库。 ​ 另外就是窗体设计和代码的编辑问题，这个部分看了教程和视频，用了chatgpt就完成了。记得之前渡一的袁老师说，程序员最重要的是思路，代码并不重要，现在发现是对的，有思路就不怕不能实现。 ​ 指针问题，这个问题困扰了很久，因为不想一直重复调用数据库，提交的时候，整体调用一次，结果就是这个坑，费了很久的时间。如果用完指针，一定要恢复指针的初始位置 二、具体实现：接下来说一说具体功能的实现 窗体展示： 窗体设计的时候有个问题，就是viewList 这个在原本的设计中并没有，需要打开这个按钮： 第一步：右击空白处，点击附加控件 ​ 第二步：添加附件： 代码–获取列表框中的默认数据 这个部分的设计是这样的，想从设置中获取数据 （1）先在设置中列出数据 ​ （2）具体代码 在 窗体USERFORM 中双击窗体打开代码 这个 UserForm_Initialize()很重要，是初始化数据用的 注意，如果在提交的时候没有关闭记录集，一定要把记录集的指针调到开头，很重要（在提交代码里有） 具体实现：​ excel-中台数据库搭建（一） ​ excel-中台数据库搭建（三） ​ excel-中台数据库搭建（四） ​ 销售系统搭建（一） ​ 销售系统搭建（二）"},{"title":"excel-中台数据库搭建（一）","date":"2023-08-28T09:15:00.000Z","url":"/2023/08/28/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"]],"categories":[["excel","/categories/excel/"]],"content":" 最近事情很多，有好的，有不好的。项目拖延了很久，大概有20多天，项目是之前答应好的，总算告一段落，想着做一些总结，写一份8月的日志。 在这个月，姥爷去世了，第一次直面亲人的离世，没有看到水晶棺的那一刻，总归没有多少感触，当看到的那一刻，眼泪怎么也止不住的流，以前的种种经历就像灯片一样在眼前划过。 另一个事情，和小彭的感情也变好了一些，可能是两人在最近都经历了亲人的离开，心理上难免走进了一点，也算是这个月的安慰吧 还有一个事是对于自己的思考，有两个项目的机会，一个是慧婷希望一起合作一个画画的项目，一个是牛杰的抢票业务。但是最近也不知道为什么，总也提不起精神。以前的时候老因为项目的事放别人鸽子，最近突然觉得，人，要守信 最后聊聊工作，最近工作上也有点不顺，感觉最近没有精神头，很多知道的事也不知道怎么干了，很困扰，不知道是瓶颈还是什么，总说不清，反正工作上是不太舒服，没什么事，也有点事，有点事又不想干，不想干又不甘心，说不清。 经过半个多月的学习，查资料，构思，加上家里乱七八糟的事，终于把系统做的差不多。 这个项目属于第一次写VBA项目，之前都是用公式做自动化，但是公式能做的毕竟有限，所以还是想练习下VBA的系统，没准以后用的着，也是自己百闲中的一个小兴趣吧。 一、part1在做这个系统中，初想挺简单的，无非就是调调数据库，做做查询，实际做起来还是有点东西的，在这个项目中遇到几个困难 数据库的设计（如何把数据库分开设计，都有哪些数据需要分开，设计的时候给自己造成了很多的困难） 窗体的设计（设计窗体我没试过，第一次设计窗体，还行，没那么复杂） 数据更新后不想调数据库，如何把数据放到指定位置 数据库联表查询，多个数据库，联表查询可费了老鼻子劲了 数据库ID值更新，更新一个数据，在其他数据库中更新这个id（后来我放弃了） 总体来说就是这几个问题，幸好有chatgpt，要不自己真不知道啥时候能整出来。 二、part2接下来说一下具体功能上的实现 第一个：新增数据 功能设计： 这个功能就是一个批量导入数据，需要一个固定的excel模板，点击按钮 &#x3D;&gt; 选则文件 &#x3D;&gt; 获取数据 &#x3D;&gt; 添加数据库 &#x3D;&gt; 同步添加到这个excel里 遇到的问题和卡点： 最初设计的时候最后一步是希望直接添加到excel里的，但是后来在实现的过程中，发现如果不调取数据库,id值的获取是个问题，因为如果要删除的话，id就全乱了，所有最后还是添加完数据以后再调用一次数据库。 代码设计： 连接数据库和调取全部数据用的次数比较多，需要封装一个方法 调用数据库中”字段名“也使用频繁，而且改动比较麻烦，为了方便维护，需要用数组将数据存起来，以后需要改动代码，只用改动数组就可以了 步骤比较繁琐，后续用的也不多，可以根据功能用”面向过程“思路实现 具体实现： 具体实现：​ excel-中台数据库搭建（二） ​ excel-中台数据库搭建（三） ​ excel-中台数据库搭建（四） ​ 销售系统搭建（一） ​ 销售系统搭建（二）"},{"title":"Access-小示例-02-连接mdb数据库","date":"2023-08-01T09:01:38.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E5%B0%8F%E7%A4%BA%E4%BE%8B-02-%E8%BF%9E%E6%8E%A5mdb%E6%95%B0%E6%8D%AE%E5%BA%93/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["常用小实例","/tags/%E5%B8%B8%E7%94%A8%E5%B0%8F%E5%AE%9E%E4%BE%8B/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"目录 Part 1：本篇目标 常用Access数据库格式为accdb，近来发现一种mdb数据格式的 作为数据库端，本文就是验证一下两者在使用VBA连接时是否有一些明显区别 示例：连接***mdb***数据库，并将内容显示到前端 mdb数据库 前端效果 目录 Part 2：实现步骤 新建一个Access文件，默认为accdb格式，转变为mdb格式步骤如下 打开该文件，点击文件菜单，另存为mdb格式即可 在该文件中录入相关信息 再新建一个Access文件，作为界面端，VBA代码也是写在这里 搭建一个简单界面，包括一个按钮和一个列表框 设计视图下，设置列表框的列数、列标题：是、行来源类型：值列表 设计视图下，按钮的单击事件写入以下代码 另存为mdb文件 目录 Part 3：代码 代码截图 目录 Part 4：部分代码解读 对数据库的操作，一般分为以下几个步骤 确定数据库地址 连接数据库 确定SQL语句 执行SQL语句 若有返回结果，对返回结果进行处理 执行SQL语句一般有两种方法 Set rs = adConn.Execute(SQL)，若无需返回结果，可以采用该方法，例如插入、删除、更新等操作 rs.Open SQL, adConn, adOpenKeyset, adLockOptimistic，若需要返回结果，可以采用该方法，例如查询 当然还有一些更细致的区别，但一般也只用到这两个区别 本文使用ADODB.Connection连接数据库，记得务必在Access中手动加入引用，本文采用的是Microsoft ActiveX Data Objects 6.1 Library,加入方法如下 VBE界面下工具菜单-引用 目录 Part 5：小结 本文中对mdb数据库的连接方法与accdb采用一样的方法，目前来看可以适用 "},{"title":"Access-常用功能解析-01-账户权限管理","date":"2023-08-01T08:58:26.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90-01-%E8%B4%A6%E6%88%B7%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["常用小实例","/tags/%E5%B8%B8%E7%94%A8%E5%B0%8F%E5%AE%9E%E4%BE%8B/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 根据打开软件的不同用户，赋予不同操作权限 本质上就是将一部分控件禁用，一部分控件启用 如下图所示，打开窗体时，禁用按钮非管理员按钮，启用按钮管理员按钮，在文本框中写入当前登录账户 效果图 Part 2：实现步骤 画出设计图，文本框名称为txt1*，管理员按钮名称为*cmd1**，非管理员按钮名称为cmd2** 界面设计 Part 3：代码 代码截图 Part 3：部分代码解读 currentUserName = Environ(&quot;username&quot;)获取当前登录账户 ctrl1.Enabled = True启用控件ctrl1 ctrl2.Enabled = False禁用控件ctrl2 ***Private Sub Form_Load()***，窗体启动事件 "},{"title":"Access-控件解析-窗体-02-进度条","date":"2023-08-01T08:54:09.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%AA%97%E4%BD%93-02-%E8%BF%9B%E5%BA%A6%E6%9D%A1/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["弹出控件","/tags/%E5%BC%B9%E5%87%BA%E6%8E%A7%E4%BB%B6/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：示例 点击按钮实现进度条显示，并显示完成程度百分比 效果图 动态图 Part 2：代码 代码截图 Part 3：窗体搭建 新建一个窗体，插入控件ProgressBar 如果没有发现控件工具箱，可以在菜单栏：视图-工具箱打开 默认是没有进度条控件的，需要人工加入，鼠标悬浮在工具箱控件区域位置上，右键附加控件，注意鼠标位置，不同位置右键效果不同。添加控件Microsoft ProgressBar Control 显示工箱 添加进度条控件 Part 4：部分代码解读 UserForm1.Show 0，显示窗体 Unload UserForm1，关闭窗体 Set ProgressBar1 = UserForm1.ProgressBar1，定义控件 "},{"title":"Access-控件解析-窗体-01-弹出","date":"2023-08-01T08:51:45.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%AA%97%E4%BD%93-01-%E5%BC%B9%E5%87%BA/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["弹出空间","/tags/%E5%BC%B9%E5%87%BA%E7%A9%BA%E9%97%B4/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍窗体。涉及功能为：点击按钮后，弹出一个窗体 严格来说窗体不是控件，它是控件的载体 效果动图 Part 2：实现步骤 本项目中涉及到两个窗体 窗体main作为主窗体，有一个按钮，点击后弹出窗体弹窗 窗体弹窗，需要将其弹出方式选择是 窗体main中设置按钮对应的代码 代码截图 窗体弹窗 弹出方式设置 Part 3：部分代码解读 DoCmd.OpenForm (frmName)打开窗体 frm.Caption = &quot;说明&quot;设置标题 设置标题效果 "},{"title":"Access-控件解析-按钮-02-来个双击","date":"2023-08-01T08:50:10.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E6%8C%89%E9%92%AE-02-%E6%9D%A5%E4%B8%AA%E5%8F%8C%E5%87%BB/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["按钮","/tags/%E6%8C%89%E9%92%AE/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：按钮。涉及功能为：双击事件 效果动图 Part 2：实现步骤 设计视图下，插入按钮 选中按钮，右键-属性，事件选项卡下，双击，关联事件过程 点击右侧的...，直接打开VBE界面，进行代码编写 直接关联的代码是在窗体对应的代码窗口，建议核心代码还是写在模块下，方便管理，窗体代码只是一个事件导入 仔细看下图，发现有很多事件，不仅仅只是最近写的两篇文章，单击事件，双击事件，其它事件大家可以试试 对于其它控件，也有一些事件，但是每个控件支持的事件可能是不同的 属性设置 标签支持事件 "},{"title":"Access-控件解析-按钮-01-关联代码","date":"2023-08-01T08:48:52.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E6%8C%89%E9%92%AE-01-%E5%85%B3%E8%81%94%E4%BB%A3%E7%A0%81/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["按钮","/tags/%E6%8C%89%E9%92%AE/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：按钮。涉及功能为：关联代码 效果动图 Part 2：实现步骤 设计视图下，插入按钮 选中按钮，右键-属性，事件选项卡下，单击，关联事件过程 点击右侧的...，直接打开VBE界面，进行代码编写 直接关联的代码是在窗体对应的代码窗口，建议核心代码还是写在模块下，方便管理，窗体代码只是一个事件导入 插入按钮 属性设置 代码位置 "},{"title":"Access-控件解析-文本框-01-格式设置","date":"2023-08-01T08:46:01.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E6%96%87%E6%9C%AC%E6%A1%86-01-%E6%A0%BC%E5%BC%8F%E8%AE%BE%E7%BD%AE/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["文本框","/tags/%E6%96%87%E6%9C%AC%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：文本框。涉及功能为：文本框输入内容的格式限制 一般系统可以简单理解为有3个部分组成：输入-处理-输出 对于输入这部分往往会有些要求，例如要求输入日期。因为使用客户不同，如果希望由客户来主动规范化输入是不现实的，所以希望系统方面来限制 功能效果 Part 2：实现步骤 设计视图下，插入文本框 选中文本框，右键-属性，格式选项卡下，选择需求的格式 设置完格式后，当用户输入不满足要求的数据时，系统会提示 插入文本框 格式选项卡 输入格式错误 "},{"title":"Access-控件解析-组合框-02-两个组合框联动","date":"2023-08-01T08:41:52.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%BB%84%E5%90%88%E6%A1%86-02-%E4%B8%A4%E4%B8%AA%E7%BB%84%E5%90%88%E6%A1%86%E8%81%94%E5%8A%A8/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["组合框","/tags/%E7%BB%84%E5%90%88%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：组合框。涉及功能为：两个组合框联动 功能动图 Part 2：实现功能 手动设置省组合框下拉列表：广东，湖南 省组合框变化时，市组合框下拉列表随之变化 这里省组合框有3个事件，都引起市组合框下拉列表变化，包括更改，键按下，进入三个事件。具体哪些事件会触发，根据需要自己制定。一般来说这三种即可 界面 3类事件 Part 3：代码 事件代码 实际动作 代码截图****代码位置：将通用代码写在模块内了，方便代码复用 Part 4：部分代码解读 虽然本示例中涉及3个事件，但只是触发不一样，但引起的结果是一样的，所以将共用代码写在了模块内 frmName = Me.Name，获取当前窗体名称，该代码必须放在对应的窗体中才有效 "},{"title":"Access-控件解析-组合框-01-下拉列表","date":"2023-08-01T08:38:52.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%BB%84%E5%90%88%E6%A1%86-01-%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["组合框","/tags/%E7%BB%84%E5%90%88%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：组合框。涉及功能为：下拉列表的实现 功能动图 Part 2：实现功能 手动设置组合框下拉列表：长江；黄河；珠江；淮河 通过代码修改组合框下拉列表：1；2；3；4 应用场景，组合框的下拉列表随着另外一个控件的取值变化而变化。例如，两个组合框，一个显示省份，一个显示城市，当省份不同时，城市组合框下拉列表也会不同 手动设置：打开组合框属性 - 数据选项卡 - 行来源类型设置为值列表 - 行来源设置下拉列表数据，以分号**;**隔开 Part 3：代码 代码截图 Part 4：部分代码解读 cbo.RowSource = &quot;&quot;，将下拉列表清空 cbo.Value = &quot;&quot;，将组合框取值清空 cbo.AddItem x ，增加组合框下拉列表 "},{"title":"Access-控件解析-列表框-04-双击效果","date":"2023-08-01T08:36:21.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-04-%E5%8F%8C%E5%87%BB%E6%95%88%E6%9E%9C/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["列表框","/tags/%E5%88%97%E8%A1%A8%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：列表框。涉及功能为：双击列表框显示所选行第1列信息 功能动图 Part 2：代码 代码截图 Part 3：事件设置 获取选项内容在上一篇文章中已经讲过，核心函数ctrl.Column 设置双击事件：设计视图下-右键列表框-选择属性-选择事件选项卡-设置双击事件 对应双击事件Sub名称：List0_DblClick(Cancel As Integer)，***DblClick，double click***的缩写 整个Sub名称是系统自动生成的，尽量不要自己看出规律后人为建立，有时候系统无法识别 事件设置 "},{"title":"Access-控件解析-列表框-03-向列表框录入信息","date":"2023-08-01T08:34:05.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-03-%E5%90%91%E5%88%97%E8%A1%A8%E6%A1%86%E5%BD%95%E5%85%A5%E4%BF%A1%E6%81%AF/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["列表框","/tags/%E5%88%97%E8%A1%A8%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"目录 Part 1：本篇目标 本篇介绍的控件为：列表框。涉及功能为：向列表框中录入信息 功能动图 静图 目录 Part 2：代码 录入信息 代码截图 数组转为字符串 代码截图 清空列表框 代码截图 目录 Part 3：部分代码解读 ctrl.AddItem inputContents，向列表框一行一行加入信息，要求输入内容为字符串，不同列之间用**;**分开 op = x &amp; &quot;&quot;，将其它数据类型转为字符串，其实在本示例可以不使用，会自动转为字符串，可以手动测试一下 ListBox.AddItem官方解读 "},{"title":"Access-控件解析-列表框-02-获取选项","date":"2023-08-01T07:25:10.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-02-%E8%8E%B7%E5%8F%96%E9%80%89%E9%A1%B9/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["列表框","/tags/%E5%88%97%E8%A1%A8%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：列表框。涉及功能为：后台获取用户的选择项 UI界面存在大量与用户互动的部分，根据客户不同的选择展现不同的信息 功能动图 静图 Part 2：代码 控件关联代码 核心函数：获取不同列，改变***colNum***值即可 代码截图 Part 3：部分代码解读 chooseRow = ctrl.ListIndex，注意是否设置列标题选项，在计数时，是不包括列标题的 ListBox.Column(Index, Row)，列表框可以看成一个Excel表格，不同的是 行和列都是从0开始计数 与Excel中不同的是，先是列再是行，格式：（列，行） ListBox.Column官方解读 "},{"title":"Access-控件解析-列表框-01-多选数目获取","date":"2023-08-01T07:22:53.000Z","url":"/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-01-%E5%A4%9A%E9%80%89%E6%95%B0%E7%9B%AE%E8%8E%B7%E5%8F%96/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["列表框","/tags/%E5%88%97%E8%A1%A8%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：列表框 列表框可以理解成一个简单的***Excel***表格，只不过不能直接编辑 可以将第一行设置为列标题 列表框支持多选（属性表-其他-多重选择-展开的），本文目标在于：每次选择后获取选择的行数 关于多重选择，有两种：简单；展开的 简单：左键直接多选 展开的：windows多选方法（结合ctrl和shift） 功能动图 展示给客户的最终界面如下 列表框控件位置 列表框录入数据 打开多重选择功能 打开列标题功能 Part 2：代码 窗体内代码 代码截图 "},{"title":"Access/VBA/Excel-15-表信息整体迁移","date":"2023-08-01T07:20:34.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-15-%E8%A1%A8%E4%BF%A1%E6%81%AF%E6%95%B4%E4%BD%93%E8%BF%81%E7%A7%BB/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：问题 有一个原信息表存储着学生的姓名和成绩信息，现在需要对信息进行扩容 有一个新信息表，不仅有学生的姓名和成绩信息，还有一些其它信息 问题：将原信息表中满足要求的信息复制到新信息表中去，示例复制张三的信息 原信息数据表 新信息表 Part 2：代码 代码截图 执行结果 Part 3：部分代码解读 **核心*SQL***：Insert Into 新信息 Select * From 原信息 Where (姓名=&#39;张三&#39;) 上面SQL由两部分组成：Insert Into 加入新表部分，Select 查询获取拟加入新表的信息 这种方法要求新信息表中必须有相同的字段 核心*SQL* Part 4：延伸 只从旧信息表中获取2个字段：姓名，语文 执行结果 从旧信息表中获取所有字段所有记录 执行结果 思考：下面这句***SQL***的结果又是什么效果呢？ "},{"title":"Access/VBA/Excel-14-消除重复值","date":"2023-08-01T07:18:39.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-14-%E6%B6%88%E9%99%A4%E9%87%8D%E5%A4%8D%E5%80%BC/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：题目 从地址表中获取含有的省份信息，结果是：广东省，湖南省，安徽省 那么怎么使用SQL实现呢 地址数据表 Part 2：代码 代码截图 执行结果 Part 3：部分代码解读 **核心*SQL***：Select distinct 省份 from 地址 中文释义： 从地址中获取省份字段非重复的值 关键字：distinct，在字段前加上这个关键字，输出值中就没有重复值 核心SQL"},{"title":"Access/VBA/Excel-13-嵌套查询","date":"2023-08-01T07:15:40.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-13-%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：题目 获取张三，李四的数学成绩 已知条件：数据库中有两个表（学生信息表，成绩表），如下图 逻辑过程：从学生信息表中获取张三&#x2F;李四的学号，从成绩表中以学号查询满足条件的数学成绩 学生信息表 成绩表 Part 2：代码 代码截图 执行结果 Part 3：部分代码解读 **核心*SQL***：Select 学号,年级,数学成绩 from 成绩表 where (学号 in (Select 学号 from 学生信息表 where (姓名 in (&#39;张三&#39;,&#39;李四&#39;)))) order by 学号 asc,年级 desc 中文释义： 两层***Select***，内层获取张三&#x2F;李四的学号，外层以学号检索需要的信息 输出排序：第一级排序以学号升序（asc），第二级排序以年级降序（desc） 核心SQL 思考：输出的信息中不含有姓名信息，看起来不清晰，那么如何将姓名信息加进来呢？和之前的left join结合吗？"},{"title":"Access/VBA/Excel-12-模糊查询","date":"2023-08-01T07:14:14.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-12-%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标商品清单 根据商品ID检索需要的商品 通过模糊检索实现，有点百度的味道，只知道部分信息，来查询 逻辑过程 连接数据库 根据需求确定***SQL***语句 执行SQL*语句，得到recordset* 将***recordset***写入工作表（字段名+所有记录 即 列名+每一行） 断开与数据库的连接 检索商品ID首字母为m的商品 Part 2：代码 代码截图 执行结果 Part 3：部分代码解读 Select 商品ID,商品名称,厂家,数量 from 商品清单 where (商品ID like &#39;m%&#39;) 中文释义：选取满足商品ID第1位为字母*m*的商品信息，从结果看，没有区分大小写 这样的***%表示0*或者任意字符，有点像*的作用 Part 4：延伸 _代表单一字符，searchC = &quot;商品ID like &#39;____&#39;&quot;，四个下划线，结果如下 []指定范围，searchC = &quot;商品ID like &#39;[0-9]%&#39;&quot;，表示***0-9***开头的字符串，结果如下 [ ]指定范围，searchC = &quot;商品ID like &#39;[a-z]%&#39;&quot;，表示a-z开头的字符串，依然没有区分大小写，结果如下 [!]指定范围之外，searchC = &quot;商品ID like &#39;[!a-z]%&#39;&quot;，表示不以***a-z***开头，结果如下 not like取反，searchC = &quot;商品ID not like &#39;[a-z]%&#39;&quot;，表示不满足a-z开头的字符串，依然没有区分大小写，结果如下 "},{"title":"Access/VBA/Excel-左连接-11","date":"2023-08-01T07:12:24.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E5%B7%A6%E8%BF%9E%E6%8E%A5-11/","tags":[["excel - access - vba","/tags/excel-access-vba/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标成绩表 学生信息表 运行过程 获取学号为1101学生在不同年级的语文成绩，输出信息包括：姓名，学号，性别，年级，语文成绩 最终想要获得的信息来自于两个工作表，所以需要连接查询 逻辑过程 连接数据库 根据需求确定SQL语句 执行SQL语句，得到*recordset* 将recordset写入工作表（字段名+所有记录 即 列名+每一行） 断开与数据库的连接 SQL语句 &quot;Select &quot; &amp; opFilds &amp; &quot; from &quot; &amp; &quot;(&quot; &amp; tbls &amp; &quot;)&quot; &amp; &quot; where (&quot; &amp; searchC &amp; &quot;)&quot; opFilds = &quot;姓名,&quot; &amp; tblNote &amp; &quot;.学号,性别,年级,语文成绩&quot; searchC = tblNote &amp; &quot;.学号=1101&quot; tbls = tblNote &amp; &quot; left join &quot; &amp; tblName &amp; &quot; on &quot; &amp; tblNote &amp; &quot;.学号=&quot; &amp; tblName &amp; &quot;.学号&quot; Part 2：代码 代码截图 执行结果 Part 3：部分代码解读 SQL = &quot;Select &quot; &amp; opFilds &amp; &quot; from &quot; &amp; &quot;(&quot; &amp; tbls &amp; &quot;)&quot; &amp; &quot; where (&quot; &amp; searchC &amp; &quot;)&quot; 本问题中，相关变量取值后SQL语句如下 *Select* 姓名,成绩表.学号,性别,年级,语文成绩 *from* (成绩表 *left join* 学生信息表 *on* 成绩表.学号&#x3D;学生信息表.学号) *where* (成绩表.学号&#x3D;1101) 中文解读：从成绩表和学生信息表连接表中获取学号为1101的学生信息 表1 left join 表2 on 表1.ID=表2.ID 两个表进行连接，以左侧为基准，即这里的表1 连接条件：表1与表2的ID号相同 当表2中满足表1中ID条件的有多条记录，那么进行分别匹配 当表2中没有满足表1中ID的条件时，匹配Null 例1：匹配多个，修改学生信息表，增加同样学号的 查询结果 例2：若未匹配上，则对应信息为空 "},{"title":"Access/VBA/Excel-多条件筛选数据-10","date":"2023-08-01T07:10:42.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E5%A4%9A%E6%9D%A1%E4%BB%B6%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE-10/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 目标1：将数据库中数据表学生信息表中的语文成绩大于85分且学号大于4的人员信息读入当前工作簿示例工作表 目标2：将数据库中数据表学生信息表中姓名为张三或者小红的人员信息读入当前工作簿示例工作表 逻辑过程 连接数据库 根据需求确定SQL语句 执行SQL语句，得到recordset 将recordset写入工作表（字段名+所有记录 即 列名+每一行） 断开与数据库的连接 实现两个目标只有SQL语句不同，其余一致 目标1：SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 语文成绩&gt;85 and 学号&gt;4&quot; 目标2：SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 姓名 in(&#39;张三&#39;,&#39;小红&#39;)&quot; 目标1 目标2 Part 2：代码 代码截图 Part 3：部分代码解读 SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 语文成绩&gt;85 and 学号&gt;4&quot;，中文释义：从工作表中获取满足语文成绩&gt;85且学号&gt;4的所有信息 SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 姓名 in(&#39;张三&#39;,&#39;小红&#39;)&quot;，中文释义：从工作表中获取满足姓名为张三或者小红的所有信息，也可以使用or来实现该功能 &quot;Select * from &quot; &amp; tblName &amp; &quot; where 姓名=&#39;张三&#39; or 姓名=&#39;小红&#39;&quot; "},{"title":"Access/VBA/Excel-单表筛选数据-09","date":"2023-08-01T07:08:01.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E5%8D%95%E8%A1%A8%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE-09/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 将数据库中数据表学生信息表中的语文成绩大于85分的人员信息读入当前工作簿示例工作表 逻辑过程 连接数据库 根据需求确定SQL语句 执行SQL*语句，得到recordset* 将recordset写入工作表（字段名+所有记录 即 列名+每一行） 断开与数据库的连接 所以与上一篇文章的区别在于SQL语句 Part 2：代码 代码截图 Access与Excel数据对比 Part 3：部分代码解读 &quot;Select * from &quot; &amp; tblName &amp; &quot; where 语文成绩&gt;85&quot;，中文释义：从工作表中获取满足语文成绩&gt;85所有信息 rs.Fields.Count获取字段数目 字段是从0开始计数，所以最后一个字段表示为rs.Fields(rs.Fields.Count-1) rs.Fields(j).Name获取字段的名称（列名） CopyFromRecordset复制整个rs（所有记录） 联想：那么是不是还有其它筛选方式呢？那必须有，这也是SQL的强大之处，常规VBA语句需要写很多代码实现的功能，SQL一句可能就搞定了"},{"title":"Access/VBA/Excel-获取数据库数据-08","date":"2023-08-01T07:05:46.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE-08/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 将Access*数据库中数据表学生信息表中的所有信息读入当前Excel*工作簿示例工作表 ***VBA***逻辑过程 连接数据库 根据需求确定SQL语句 执行SQL语句，得到recordset 将recordset写入工作表（字段名+所有记录 即 列名+每一行） 断开与数据库的连接 Part 2：代码 代码截图 **运行过程** Access与Excel数据对比 Part 3：部分代码解读 Select * from &quot; &amp; tblName，中文释义：从工作表中获取所有信息 rs.Fields.Count获取字段数目 rs.Fields(j).Name获取字段的名称（列名） CopyFromRecordset复制整个rs（所有记录） "},{"title":"Access/VBA/Excel-Access字段删除-07","date":"2023-08-01T06:45:15.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-Access%E5%AD%97%E6%AE%B5%E5%88%A0%E9%99%A4-07/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":" 这个系列开展一个新的篇章，重点关注Access数据库 主体框架：以Excel作为操作界面，Access作为数据库 今天讲讲如何删除特定字段 涉及知识：ADO，SQL：Alter + drop Part 1：目标 如上图所示，删除性别这一字段（列） 逻辑过程 连接数据库 根据需求确定***SQL***语句 执行SQL语句 断开与数据库的连接 Part 2：代码 **代码截图** 执行后效果 Part 3：部分代码解读 Alter table &quot; &amp; tblName &amp; &quot; drop Column 性别 中文释义：改变工作表，具体变化点为删除性别列（字段） 删除不同表下不同的字段，只需替换表名称及字段名称即可 "},{"title":"Access/VBA/Excel-Access记录删除-06","date":"2023-08-01T06:44:02.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-Access%E8%AE%B0%E5%BD%95%E5%88%A0%E9%99%A4-06/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 删除姓名为张三的这一条记录 逻辑过程 连接数据库 根据需求确定***SQL***语句 执行***SQL***语句 断开与数据库的连接 删除记录前 Part 2：代码 执行后效果 Part 3：部分代码解读 delete from &quot; &amp; tblName &amp; &quot; where 姓名=&#39;张三&#39; 中文释义：从工作表中删除一条 姓名字段取值为张三的一条记录 注意：张三有单引号包围起来 "},{"title":"Access/VBA/Excel-Access记录修改-05","date":"2023-08-01T06:42:14.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-Access%E8%AE%B0%E5%BD%95%E4%BF%AE%E6%94%B9-05/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 前文中，我们已经获取了一个工作表（学生信息表）和4个字段（ID，姓名，学号，性别），并输入了两行记录 今天在原有字段的基础上增加籍贯，语文成绩两个新的字段 并对原张三的记录做一些修改：修改学号信息，增加籍贯及语文成绩信息 原记录：张三，11，男 修改后：张三，1，男，广东省，85 结果如下 Part 2：代码 Part 3：部分代码解读 Update 工作表名 set 字段1=X1，字段2=X2 where 字段4=X4 中文释义：修改（更新）工作表，字段4&#x3D;X4所在记录（行）中，字段1的值改为&#x3D;X1，字段2改为X2 即：通过某一字段的值，定位到某一记录（行），修改这一记录（行）中其它字段的值 小结：对数据库的操作转化为对应的SQL语句，然后运行，搞定"},{"title":"Access/VBA/Excel-Access记录创建-04","date":"2023-08-01T06:40:05.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-Access%E8%AE%B0%E5%BD%95%E5%88%9B%E5%BB%BA-04/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 从上一篇文章中，我们已经获取了一个工作表（学生信息表）和4个字段（ID，姓名，学号，性别） 今天的文章开始向Access数据库中录入一条条数据 包括两条记录 张三，11，男 李四，12，男 结果如下 Part 2：代码 Part 3：部分代码解读s INSERT INTO 工作表名称 （字段1，字段2，字段3） VALUES（字段1对应值，字段2对应值，字段3对应值） 中文释义：向工作表X中的字段1中录入数据X，字段2中录入数据X，字段3录入数据X 若字段中对应值为字符串，需在单引号（**Chr(39)**）中&#39;&#39;，若是时间，则使用#时间信息# ID字段是自增式，无需额外赋值，每有一个新的记录，会自动+1 "},{"title":"Excel-Excel-入门（Excel作为界面端，Excel作为数据库）","date":"2023-08-01T06:32:03.000Z","url":"/2023/08/01/Excel-Excel-%E5%85%A5%E9%97%A8%EF%BC%88Excel%E4%BD%9C%E4%B8%BA%E7%95%8C%E9%9D%A2%E7%AB%AF%EF%BC%8CExcel%E4%BD%9C%E4%B8%BA%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%89/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["access","/tags/access/"]],"categories":[["excel","/categories/excel/"]],"content":"示例：Excel*作为数据库，从Excel中获取来自于交通院，语文和数学成绩都是*&gt;80**分的信息 实现结果 思考 传统方法：对数据表进行循环判断，找到满足条件的行 新方法：查询通过一句***SQL***实现SQL = &quot;Select &quot; &amp; filds &amp; &quot; From &quot; &amp; tbl_name &amp; &quot; Where (&quot; &amp; searchC &amp; &quot;)&quot;，逻辑过程如下： 连接数据库 确定***SQL***语句 执行***SQL***语句 获取结果 断开数据库 SQL 代码过程main 代码截图 部分代码解读 数据库连接***Excel***连接 Access连接 工作表的表示方法tbl_name = &quot;[data$]&quot;，使用[$] 复制***rs***信息到工作表：sht.Range(&quot;A2&quot;).CopyFromRecordset rs **** Ps：1）采用ADO的方式连接的数据库，需要人为先在*VBE*中打开这个引用，菜单工具-引用2)当数据量越大，本文中采用的方式，效率越明显，是不错的方法幺"},{"title":"Access/VBA/Excel-Access表及字段创建-03","date":"2023-08-01T06:26:22.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-Access%E8%A1%A8%E5%8F%8A%E5%AD%97%E6%AE%B5%E5%88%9B%E5%BB%BA-03/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：前面的话 对Access数据库的大部分操作都可以通过SQL语言来实现 SQL:Structure Query Language，结构化查询语言，语法简单，非常容易学 SQL语言的执行可借助于ADO，ADO本身也支持对数据库的各种操作，但是涉及到一些其它知识的学习 这个系列中，除非无法用SQL来实现，否则会使用SQL SQL作为数据库操作的通用语言，学会了后也可用于对其它数据库的操作，那也是极好的 Part 2：本篇目标 对已有空白数据库创建一个数据表 根据要求创建新的字段，指定字段的约束 基本逻辑过程： 连接数据库 确定SQL语句 执行SQL语句 根据需求重复上面两步 关闭数据库的连接 记得引用Microsoft ActiveX Data Objects 2.8 Library Part 3：代码 执行结果：新建表 执行结果：新建字段 Part 4：部分代码解读 ADO连接不同数据库采用不同引擎 Microsoft.ACE.OLEDB.12.0 **连接Access** 老版本的Access（.mdb后缀的）可以使用引擎 Microsoft.Jet.OLEDB.4.0 CREATE TABLE &quot; &amp; tblName &amp; &quot; (ID AUTOINCREMENT primary key)创建了一个工作表，并设置一个字段（主键，唯一且自增） CREATE TABLE 工作表名称 （字段信息），中文释义可以理解为：新建数据表XX，字段XX且为主键 ID这个字段每增加一行记录，会自增1，设为主键 SQL = &quot;ALTER TABLE &quot; &amp; tblName &amp; &quot; ADD &quot; &amp; field1 &amp; &quot;,&quot; &amp; field2 &amp; &quot;,&quot; &amp; field3，新增字段 ALTER，修改，上面的SQL中文释义可以理解为，修改数据表XX增加字段XX，其实还是比较直白的 field2 = &quot;学号 single&quot;，设置字段特性，字段名称为学号，类型为Single，单精度实数 Set rs = cnn.Execute(SQL)，运行该SQL语句 字段约束 "},{"title":"Access/VBA/Excel-新建Access文件-02","date":"2023-08-01T06:25:46.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E6%96%B0%E5%BB%BAAccess%E6%96%87%E4%BB%B6-02/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：逻辑过程 引用Microsoft DAO 3.6 Object Library（工具-引用） 定义DAO及地址变量 变量赋值 判断拟创建文件是否存在，不存在则创建（带密码和不带密码的） 应用场景 Access文件的创建，当然可以通过右键创建 当存在大量的Access数据库时，根据实际需要自动创建 或者是快速创建特定需求的数据库（如带密码） Part 2：代码（创建空白数据库） Part 3：代码（创建带密码数据库） 将创建数据库代码替换如下，新建Access数据库密码为xxx 其中pwd可以理解为password简写 手动打开该数据库时，会弹出输入密码框 输入密码界面 Part 4：部分代码解读 Dir(dbAddr1) = &quot;&quot;判断文件是否存在，若成立表示不存在 CreateDatabase(数据库绝对地址,字符串比较规则)，这里采用的是简体中文 官方解读网址： dbLangChineseSimplified意义，官方定义：A string expression that specifies a collating order for creating the database “;pwd&#x3D;xxx”，表示密码为xxx，注意那个;不能省略 番外：其实也可以通过在硬盘中设置一个空白的Access文件，若需新建文件，直接复制该文件即可"},{"title":"Access/VBA/Excel-数据库-01","date":"2023-08-01T06:25:25.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E6%95%B0%E6%8D%AE%E5%BA%93-01/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：概览 在我们之前介绍种种VBA的使用，其实主要就是一个数据处理过程，类比我们的工作很多时候人承担的也是一个信息处理的角色 用户直接看到的Excel工作表整体可以分为四个部分 操作界面，就是使用者可以点击的一系列按钮 数据处理过渡表格（可选，可以直接在内存中处理），就是一些计算借助了Excel工作表（类似于数组，看起来更直接） 数据库，计算完的数据保存到这些工作表之中，输出时会用到其中的数据 输出模板，信息处理后按照什么形式输出 这个系列中重点介绍的Access替代的就是原数据库工作表这个部分，其中ADO&#x2F;DAO&#x2F;SQL都是操作Access的方法 整体的思路是将数据库从整个信息处理过程中独立出来，用专门方法去操作 那么为什么这么做？看看下篇 Part 2：Access 定义：Microsoft Office Access是由微软发布的关系数据库管理系统。它结合了 Microsoft Jet Database Engine 和 图形用户界面两项特点，是 Microsoft Office 的系统程序之一（百度百科） 这个系列中，对数据库的操作全部是后台进行的，都是通过代码实现的 本系列用的功能主要就是Access的表，其它的暂且不需要使用，所以理论上来说不需要了解Access软件的各个操作按钮，但是建议各位打开这个软件看看，有个感性认识 可以简单理解为Excel，也是由一个个工作表构成，只不过约束更多 Access一个工作表的列称为字段，一行称为一个记录，这两点记住 为什么要使用Access，竟然主要使用的也是工作表，原因如下： Excel文件过大时，例如超过50M，普通办公电脑处理起来就非常卡了 Access支持2GB文件的处理，理论上允许255个人并发处理，这个基本上已经满足日常办公所需 Access操作起来非常方便，对数据的管理很省心，例如增加一个新的记录只需一句SQL,而不用寻找存储具体的行号 Access允许同时对多个工作表进行连接处理，就是很容易从不同的表获取关联信息，底层的寻找数据工作是Access系统自己处理的 如果你想在数据处理的道路上走的更远，数据库技术是必须要学习的 Access界面 Access规格（Access软件打开后F1按钮，输入规格得到对应帮助文件） Part 3：ADO&#x2F;DAO ADO&#x2F;DAO类似于FSO使用前需先引用 对于新手建议可以采用前期引用，这样输入代码的时候会有提示，打开Excel的VBE界面，前期引用方法：工具菜单-引用，勾选 Microsoft ActiveX Data Objects 2.8 Library Microsoft DAO 3.6 Object Library 后续的代码使用都是默认大家已经勾选了这两个选项 如果大家有看上一篇关于网页操作的：VBA&#x2F;Excel-网页操作-01，其实也是引用一个库，VBA的扩展库还是蛮多，有需求的可以研究一下 通过ADO&#x2F;DAO打通Excel与Access的连接 引用 Part 3：SQL 定义：结构化查询语言(Structured Query Language)简称SQL(发音：&#x2F;ˈes kjuː ˈel&#x2F; “S-Q-L”)，是一种特殊目的的编程语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统；同时也是数据库脚本文件的扩展名（百度百科） SQL不仅仅使用在Access这样的数据库，基本所有的关系型数据库都支持该语言，但是针对不同的数据库同一个操作写法上可能会有区别 这个系列中主要涉及的就是对数据库的增、删、建、改、查 "},{"title":"Access-VBA-目录","date":"2023-08-01T06:23:23.000Z","url":"/2023/08/01/ACCESS-VBA/Access-VBA-%E7%9B%AE%E5%BD%95/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"目录： Excel-Access-入门（Excel作为界面端，Access作为数据库） Access-控件解析 Access-小示例 Access-大项目-培训管理系统 Excel-Excel-入门（Excel作为界面端，Excel作为数据库） Excel-Access-入门（Excel作为界面端，Access作为数据库） Access&#x2F;VBA&#x2F;Excel-数据库-01 Access&#x2F;VBA&#x2F;Excel-新建Access文件-02 Access&#x2F;VBA&#x2F;Excel-Access表及字段创建-03 Access&#x2F;VBA&#x2F;Excel-Access记录创建-04 Access&#x2F;VBA&#x2F;Excel-Access记录修改-05 Access&#x2F;VBA&#x2F;Excel-Access记录删除-06 Access&#x2F;VBA&#x2F;Excel-Access字段删除-07 Access&#x2F;VBA&#x2F;Excel-获取数据库数据-08 Access&#x2F;VBA&#x2F;Excel-单表筛选数据-09 Access&#x2F;VBA&#x2F;Excel-多条件筛选数据-10 Access&#x2F;VBA&#x2F;Excel-左连接-11 Access&#x2F;VBA&#x2F;Excel-12-模糊查询 Access&#x2F;VBA&#x2F;Excel-13-嵌套查询 Access&#x2F;VBA&#x2F;Excel-14-消除重复值 Access&#x2F;VBA&#x2F;Excel-15-表信息整体迁移 我是分界线 Access-控件解析 Access-控件解析-列表框-01-多选数目获取 Access-控件解析-列表框-02-获取选项 Access-控件解析-列表框-03-向列表框录入信息 Access-控件解析-列表框-04-双击效果 Access-控件解析-组合框-01-下拉列表 Access-控件解析-组合框-02-两个组合框联动 Access-控件解析-文本框-01-格式设置 Access-控件解析-按钮-01-关联代码 Access-控件解析-按钮-02-来个双击 Access-控件解析-标签-01-控件提示 Access-控件解析-窗体-01-弹出 我是分界线 Access-小示例 Access-常用功能解析-01-账户权限管理（Environ(“username”)） Access-小示例-02-连接mdb数据库 我是分界线 Access-实战项目-培训管理系统 Access-培训管理系统-01-概括 Access-培训管理系统-02-来个界面 Access-培训管理系统-03-建个数据库 Access-培训管理系统-04-清空界面及下拉列表实现（上篇） Access-培训管理系统-04-清空界面及下拉列表实现（下篇） Access-培训管理系统-06-按钮代码设置之 清空所有 Access-培训管理系统-07-按钮代码设置之增加学员 Access-培训管理系统-08-按钮代码设置之 删除所选行 Access-培训管理系统-09-按钮代码设置之 录入（1） Access-培训管理系统-10-按钮代码设置之 录入（2） Access-培训管理系统-11-按钮代码设置之 录入（3） Access-培训管理系统-12-输出界面 Access-培训管理系统-13-输出个人培训档案 Access-培训管理系统-14-输出老师上课记录 Access-培训管理系统-15-输出所有老师上课记录 Access-培训管理系统-16-首页 Access-培训管理系统-17-番外篇-程序发布 "},{"title":"微信图文编辑器-Markdown","date":"2023-08-01T05:49:50.000Z","url":"/2023/08/01/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E6%96%87%E7%BC%96%E8%BE%91%E5%99%A8-Markdown/","tags":[["markdown","/tags/markdown/"],["github","/tags/github/"]],"categories":[["github","/categories/github/"]],"content":"今天推荐的开源项目可以将 Markdown 文档自动即时渲染为微信图文，还可以自动排版，支持自定义 CSS 样式，最终什么样式你可以自己定义。 也就是说你只需要在 Markdown 编辑器上写文章，就能一键生成一篇样式简洁而又美观大方的微信图文，这就大大提高了你的效率，不用每天去排版了。 图片怎么办？别担心，这个开源项目还支持 GitHub、阿里云、腾讯云、七牛云 等图床。 功能特性 支持 Markdown 所有基础语法 支持浅色、暗黑两种主题模式 支持 Ctrl + F 快速格式化文档 支持色盘取色，快速替换文章整体色调 支持多图上传，可自定义配置图床 支持自定义上传逻辑 支持在编辑框右键弹出功能选项卡 支持批量转换本地图片为线上图片 "},{"title":"excel-vba 数据库操作方式","date":"2023-07-28T05:44:42.000Z","url":"/2023/07/28/excel-vba-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E6%96%B9%E5%BC%8F/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"]],"categories":[["excel","/categories/excel/"]],"content":"一、卡点： 这个问题是用wps连接的OLEDB（access数据库）, 用excel打开就没有问题，如果用wps就需要用其他方式 excel： wps： SQLserver： 数据库本身（非服务器本身的密码）没有账号密码 数据库本身有密码 示例： 二、access 数据库操作指南 第一步：告诉电脑我要用ADO了， ​ 这个操作在【工具】–&gt; 【引用】–&gt; 【Microsoft ActiveX Data Objects 6.1 Libray】 第二步：创建连接对对象 第三步：连接数据库 (注意这个部分，OLEDB, 2007以上是12.0，一下是8.0或4.0) 第四步：执行sql语句 第五步： 关闭数据库连接，并释放变量（一定要） 三、数据库语法 增加数据 删除数据 修改数据 查找数据 数据库记录集 通过查询或其他方式获取数据后，需要存放在一个记录集对象中 创建一个记录集对象，创建记录集主要有两个方法(第二种用的最多) 第一中不能修改记录集对象，第二种可以修改 使用 Set rs = con.Execute(sql) 语句可以直接执行 SQL 查询，并将结果集赋值给记录集对象 rs。这种方法适用于执行 SQL 查询并将结果保存在记录集中。 使用 rs.Open sql, con, adOpenReyset, adLicjOptimistic 语句可以在已经创建的记录集对象 (rs) 上打开一个结果集。这个方法可以用于在已经存在的记录集对象上重新打开一个新的结果集。 获取记录集中的字段，需要用Fields.name 将记录集返回到数据表 释放对象变量空间 四、多表查询（where连接) 案例1：查询所有学生的姓名、性别、选修的课程名称及成绩 案例2：查询“王维欣”同学的性别、选修的课程名称及考试成绩 五、多表查询（内连接） 案例1：查询所有课程的平均成绩，结果包含课程名称，平均成绩两个字段 案例2： 查询所有课程的平均成绩，结果包含课程名称，平均成绩两个字段，平均成绩要大于85分 （sql语句的执行顺序是: from –&gt; where –&gt; group –&gt; having –&gt; select） 六、多表查询（外连接） 基本格式： from 左表 连接类型 右表 on 连接条件 案例1：查询所有导师的院系信息，包含姓名，性别，职称，系号、系名 ​ 左连接：左边连接字段有的，而右表没有的，左表全部显示，右表留空 (根据左表查右表) 案例2：查询所有院系的导师信息，包含系号、系名、姓名、职称 右连接：右表连接字段有的，而左表没有的，右边全部显示，左表留空 （根据右表查左表） 案例3：查询所有导师、所有院系的信息，包含姓名、性别、职称、系号、系名 七、多表查询（自连接）含义：自己连接自己 案例1：查询员工表中姓名有重复的员工记录(刷出全部记录看看) 八、子查询（嵌套查询） 案例1：查询每个部门年龄在30岁以上的员工的平均年龄 案例2： 查询年龄高于平均年龄的员工信息，包含姓名、身份证号、部门、年龄职务 案例3： 查询年龄排在第5-10名的员工信息，包含姓名、身份证号、部门、年龄职务 "},{"title":"记录我的小项目-第二弹","date":"2023-07-28T02:58:51.000Z","url":"/2023/07/28/%E8%AE%B0%E5%BD%95%E6%88%91%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%AC%AC%E4%BA%8C%E5%BC%B9/","tags":[["项目集锦","/tags/%E9%A1%B9%E7%9B%AE%E9%9B%86%E9%94%A6/"],["excel","/tags/excel/"],["销售流程","/tags/%E9%94%80%E5%94%AE%E6%B5%81%E7%A8%8B/"],["vba","/tags/vba/"]],"categories":[["项目日记","/categories/%E9%A1%B9%E7%9B%AE%E6%97%A5%E8%AE%B0/"]],"content":"一、项目起因： 前段时间开会，跟公司快递营销组两位同事闹了点不愉快，这个原因是两方面的：第一是因为也是对工作项确实不太清楚（说实话，官僚主义太严重，全是形式主义，扣字眼一个比一个厉害，整一些形式主义的东西，什么三大标准化，要必须产出，也没明白什么是三大标准，不清楚怎么定义，也不清楚什么算什么标准，怎么提交怎么弄）第二是对这项工作的不认可（业务本身是千变万化的，标准是在工作中形成的，不清楚这件事对项目有什么帮助，在产品还在定义中，出标准化有什么意义。花大量的时间做了一些纸面文档【说多了，算是吐槽吧】）后来被批了，想想也没什么，思想本身也无法统一也无法调和，只能低头默认（得吃饭呀），后来挨批了一顿，然后想想怎么缓和下关系（写到这里，突然觉得自己活成自己讨厌的样子了，社会发展，个人成长，环境适应） 针对这件事，自己也有问题，对事情的不认可可以向上提出，可以无法接收文化离开，可以沉默隐忍接受，但是不应该对项目里执行的人出言刁难，（本意并非如此，只是提出了疑问，没想到点了炸药包，确实不知三大标准化是什么）尤其不应该对一个小专员，然她下不来台。现在也没到权力斗争的地步，搞掉别人对自己也没什么好处，自己的思维和工作方式的问题，也需要检讨。 后来想想，自己在以前的工作中做过一个《培训管理系统》就琢磨用excel做一个自动化系统吧，算是关系的缓和，也不是有意刁难的，这个事情也算过去了 二、使用工具：​ wps：最新版就可以 ​ excel：最好是2017-2023版 ​ WPS宏插件： VBA宏插件（含安装说明）.rar ​ 密码：1234 提取码：yypd ​ access数据库： ​ office_ tool Office_Tool_with_runtime_v10.1.3.4.zip ​ 破解工具 ReBirth Activator 1.4.zip ​ sqlServer数据库：SQLserver 安装教程 三、项目需求： 可以分发数据，让销售自己的数据看自己 可以有一个数据对照，因为用“vlookup”有时候会出错（销售填写的表格有时候会加一个空格） 有一个数据看板和查找系统 四、项目思考： 根据现有的信息来看，无法通过钉钉进行文件共享，通过公式来满足 数据库有两套方案： (1). 用传统的数据库进行，access，sqlServer ​ 优势：数据库安全，易操作，数据调用方便 ​ 劣势：需要给他人电脑安装access数据库和sqlserver，比较麻烦 (2).用excel 的xls 作为数据库，ocdb 用 jet，通过共享文件进行 ​ 优势： 简单方便，wps也能用 ​ 劣势：数据不安全，不确定效率如何，另外是否也需要给别人的电脑安装OBDC不确定 数据分配方式： 准备多个表格，用名字区分，每人一个（简单易行就好了，不整太复杂的）用数据库区分 数据展示： 看下模板，有合适的模板直接套用，加代码就可以了 五、项目逻辑： 将所有的数据放入数据库，中台可以获取所有的数据，给中台加入一个数据获取按钮，获取最新的所有数据，数据最好是更新过来的（因为数据量有几千条，不能所有数据一起更新） 中台做一个数据分配按钮（每天更新一次数据，分配给销售） 销售一人准备一个表，做数据的提交，注意限制原始数据的改动 六、项目计划： 测试数据库：测试access，及xlsx 找合适的表模板 敲代码 结论：最后采用了sqlserver，苦笑不得。代码逻辑基本上完成，改数据库比较简单 发现sqlserver 优点： 和access数据库共用了Microsoft ActivateX Data Object(ado), SQLserver的SQL语句和access是共用的。相较于xlsx ，这个数据不能用联表查，就只能打开，然后取数据，然后操作，会更麻烦一些。 SQLserver wps也是可以用的 七、具体实现：​ excel-中台数据库搭建（一） ​ excel-中台数据库搭建（二） ​ excel-中台数据库搭建（三） ​ excel-中台数据库搭建（四） ​ 销售系统搭建（一） ​ 销售系统搭建（二） 八、项目指标：​ 暂未涉及（后续精进再看） ​ &#x3D;&#x3D; 当前项目进展：&#x3D;&#x3D; 完成"},{"title":"使用免费国外服务器搭建ChatGPT接口服务[附注册教程/源码]","date":"2023-06-26T07:09:32.000Z","url":"/2023/06/26/%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9%E5%9B%BD%E5%A4%96%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAChatGPT%E6%8E%A5%E5%8F%A3%E6%9C%8D%E5%8A%A1-%E9%99%84%E6%B3%A8%E5%86%8C%E6%95%99%E7%A8%8B-%E6%BA%90%E7%A0%81/","tags":[["ChatGPT","/tags/ChatGPT/"],["服务器","/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"]],"categories":[["chatgpt","/categories/chatgpt/"]],"content":"最近这段时间，ChatGPT火的一塌糊涂，到处都是介绍ChatGPT的文章，但自从前段时间开始，很多人可能都发现了ChatGPT接口国内调用不了了，而很多人可能是抱着玩玩的心态，并不愿意去花钱另外购买国外的服务器，当然这其中也包括我，由于没有预算去购买一台国外的服务器，所以我公众号的ChatGPT功能也被迫停止运行了一段时间，但是今天我想告诉大家，本站公众号ChatGPT服务重启了，还是之前的使用方式，但是速度快了很多，有兴趣的朋友可以去关注公众号去体验，不知道怎么用的可以看公众号的“使用帮助”。 回到正题，虽然我重启了公众号的ChatGPT功能，但是我并没有额外花钱，因为我找到了免费的国外服务器，它不香吗？？？市面上提供服务器免费试用的厂商不少，比如阿里云、亚马逊等等，但是注册比较麻烦，需要信用卡，国外手机号、国外身份信息等等之类的信息，我最先也是准备注册阿里云，后来卡在了手机号这块儿，免费的手机号根本注册不了，而我又不想花钱去买验证码，直到最后我找到了hostbuddy这个网站，全程只需要一个邮箱即可，下面介绍一下注册流程。 一、hostbuddy注册 1、注册账号 首先我们访问hostbuddy官网，地址：，并点击“GET STARTED”按钮， 填写注册信息，并点击注册 不出意外的话，我们会进入以下界面 2、验证账号 进入注册账号时填写的邮箱，找到激活邮件，并点击激活链接 3、登录账号 账号成功激活后会转向到登录页，填写我们注册的账号并登录 4、激活试用计划 首次登录完毕之后我们需要激活我们的试用计划，点击“Try Now” 可以看到默认的地区是美国，刚好可以用于我们访问ChatGPT服务，然后我们填入密码和网站名，这里的密码就是后面我们登录FTP的密码，网站名就是网站的目录名称，然后点击“Next” 确认信息并点击“提交” 此时不要关闭窗口，需要等待激活完成，一般1-3分钟 5、创建node应用 在激活完成后，我们登录主机面板并创建node应用， 这里显示了我们的FTP登录信息和对外域名，我们点击“管理网站”并点击“NodeJs“进入node应用创建界面 按序号依次点击完成node应用的创建，需要注意的是当激活NodeJS后，所有的javascript将会被当作NodeJS运行。 6、登录FTP 在node应用创建完成后，我们用步骤5截图中显示的FTP信息和步骤4设置的密码登录FTP，登录后目录结构如下： “www”即为存放网站源码的目录，我们进入目录 目录中有2个文件，default.asp是网站的默认页，我们需要删除掉，web.config是网站的配置文件。 7、测试node应用 在node应用创建完毕后我们就可以开始测试了，创建app.js， 并编写如下代码： 注意这里不能自定义端口，必须使用process.env.PORT。将app.js文件传到www目录下，并更改配置文件如下： 访问步骤5中获取的对外域名，如果页面显示”Hello, world!“则测试通过。 二、部署ChatGPT接口服务 通过步骤一，我们注册了免费的国外服务器，并创建了node应用环境，接下来我们需要开始部署ChatGPT的接口服务，这里我们使用koa搭建一个简单的服务，首先创建基础项目结构， app.js的代码如下： gpt.js代码如下： 对于getData方法的实现，这里图方便使用request库（目前已废弃）来发起请求，大家可以根据自己的习惯更改，代码如下： 将所有的源码连同node_modules一起上传到www目录下，这里稍微有点慢，可以尝试压缩后再上传，然后在线解压， 等待所有文件上传完毕后，通过“对外地址&#x2F;gpt&#x2F;chat?q&#x3D;你的问题”即可访问我们部署的ChatGPT服务。 三、问题总结 1、hostbuddy服务器的免费试用时长目前是60天即2个月，这个门槛比较低，到期前找个邮箱重新注册即可继续使用，当然也可以选择其他的厂商，比如LAF，免费时长是一个月，需要手机号注册，具体可参考：用Laf云平台，两步将ChatGPT接入微信公众号(含代码) 2、注册hostbuddy一个IP只可注册一次，如果遇到访问注册页显示已经注册的情况，可以选择重启路由器换IP或者使用代理。 3、如果使用代理注册hostbuddy需要注意并不是所有的地区都可以注册免费试用账号，具体支持的地区需要自测，我只发现日本是不行的。 4、hostbuddy服务器目前默认的node版本是v18x，如果需要自定义node版本，可参考： 5、在更新程序文件时，如遇到代码不更新的情况，需要重新保存入口文件比如app.js，重新上传即可。 6、如果网站无法访问，又没有给出具体的错误信息，可以到FTP网站目录如www下根据访问时间查看iisnode目录下对应的txt文件获得报错信息。 四、结语 如需下载本文所涉及的源码及素材包，请在关注公众号后发送：gpt"},{"title":"有趣的chrom插件","date":"2023-06-20T06:09:23.000Z","url":"/2023/06/20/%E6%9C%89%E8%B6%A3%E7%9A%84chrom%E6%8F%92%E4%BB%B6/","tags":[["插件","/tags/%E6%8F%92%E4%BB%B6/"],["chrom","/tags/chrom/"],["github","/tags/github/"]],"categories":[["undefined",""]],"content":"推荐一位国外全栈开发者大神：Alyssa，在 Github 上有 5.34K 的关注者。她是一名全栈开发者、Sonuum 公司的创始人。 被 Maker Mag 评为 2018 最佳女性 Maker，并两次入围 Product Hunt Maker of the Year 决赛。 注：Product Hunt 是国外的一个寻找好产品的网站，开发者或者开发团队可以把自己开发的产品发布到网站，与社区的用户一起讨论。本文中推荐 4 个有趣的开源项目，都是由开发者 Alyssa 完成。 本期推荐开源项目目录： \\1. 适用于 Chrome 的屏幕录制工具 \\2. 强大的浏览器插件 \\3. 实时协作的地图工具 \\4. 创建漂亮的流程图 01适用于 Chrome 的屏幕录制工具 适用于 Chrome 的最强大的屏幕录像机和注释工具，使用该插件你可以录制你的屏幕和并且在屏幕任意位置进行绘画、添加文本、添加箭头，同时还可以录制你的电脑音频。 录制完成，你可以对录制的视频片段进行修剪，导出为 MP4、Gif 并且一键保存到谷歌云盘。该开源项目的地址和使用的库的地址都放在了下面。 编程语言：Javascript 开源地址： 相关开源组件地址： 用于交互式文本和箭头：下拉菜单的开源组件：用于修剪&#x2F;删除录音部分的范围组件：颜色选择块：用于在录制时异步保存视频：使下载的视频可搜索的开源组件： 02强大的浏览器插件 使用开源项目 Omni 可以帮助你更专业的管理你的浏览器， Omni 提供了一个简单界面，在界面中你只需要使用简单的命令就能管理选项卡、书签、浏览器历史记录、执行各种操作等等。 你可以方便的搜索、浏览管理标签、快速搜索浏览历史记录、与 Notion、Figma、稳定集成，同时好包含更多高级设置。 编程语言：JavaScript 开源地址： 03实时协作的地图工具 Mapus 是一种在地图上协作探索和注释的工具，开源一年获得了近 3K 的 Star。使用该开源项目你可以在地图上绘制、标记、画出区域等等，想当于在普通的地图上增加了实时协作的功能。 通过实时协作，你可以与其他用户同步计划和行程；你能使用画笔或者箭头在地图上标记和注释；还可以创建一些标记，方便快速定位标注地图上的位置，同样可以把地图数据导出。 编程语言：JavaScript、CSS、HTML 开源地址： 04创建漂亮的流程图 这是一个轻量级的 JavaScript 库 近1W人 Star，通过该 Flowy 你能在你的应用中创建漂亮的流程图，使用步骤如下： 更详细的教程可以参考该项目的 Readme 文件： 开源地址： "},{"title":"申请永久免费域名并绑定到个人网站","date":"2023-06-20T06:02:05.000Z","url":"/2023/06/20/%E7%94%B3%E8%AF%B7%E6%B0%B8%E4%B9%85%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E5%B9%B6%E7%BB%91%E5%AE%9A%E5%88%B0%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/","tags":[["域名","/tags/%E5%9F%9F%E5%90%8D/"],["绑定域名","/tags/%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"]],"categories":[["undefined",""]],"content":"eu.org一个从1996开始提供免费域名的组织, 其官网地址是  ，他帮助学生、爱好者或者非营利组织不用花费购买域名就可能拥有自己的免费域名，虽然 eu.org 网域切确来说这是一个子域名（Subdomain）或者二级域名，但是根据一些网站的资讯，有许多大型互联网公司，像是 Google, Cloudflare, Bing 等厂商都已经将eu.org域名当成是一个顶级网域了。 eu.org对个人和组织是免费注册的。 域名申请申请地址申请地址： 第一次打开你可能会怀疑进错了页面，不用怀疑，他们就是这么简洁的页面。 点击 Sign-in or sign-up here! 进入登录页面。 注册然后点击Register进入注册页面。输入你的基本信息，比如Name，Email等等基本信息，这里不建议填国内的地址信息，你可以进入  网站随机生成一个虚拟英国或者美国地址，会提高通过的概率。 注册成功之后点击New Domain申请新的域名， 设置你的域名，eu.org后缀，比如我申请一个新的域名：techxiaofei.eu.org ![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’‘ xmlns:xlink&#x3D;’ stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E) 最主要的就是NameServers也就是域名解析，也就是我们要用什么域名解析商来解析域名。 ![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’‘ xmlns:xlink&#x3D;’ stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E) DNSPod这里填DNSPod的地址，也就是腾讯云的域名解析商，使用微信扫码登录就可以。 扫码之后点击右上角管理控制台-&gt;我的域名-&gt;添加域名，添加刚才你申请的域名，也就是techxiaofei.eu.org 点击确认，会提示未使用DNSPod，鼠标放上去会显示具体的DNS服务器地址： 这个DNS服务器就是我们需要在eu.org填写的Name Servers Name Servers选择server names，然后填写刚才DNSPod上的两个DNS服务器地址： 然后点击Submit后跳转页面显示： 说明你申请成功了，需要等待1到30天，通过会给邮件通知。 申请通过我这里等待了大半个月收到邮件通知，这个时候说明你的免费域名已经申请通过了。 收到通知之后就可以去DNSPod上添加具体的解析记录绑定到你的个人网站了： 绑定个人网站DNSPod记录申请通过之后DNSPod记录会从未使用DNSPod变为无记录，就说明域名已经授权使用DNSPod来解析了。只是还没有添加解析记录。 绑定域名到Vercel托管平台由于我的网站是部署在Vercel托管平台，所以我们需要先回到Vercel来添加域名： 回到你的vercel，点击你的项目-&gt;Settings-&gt;Domains 添加你刚申请的域名 添加之后会提示你需要域名解析商添加一条A记录。 添加一条A记录回到DNSPod域名解析商那里添加一条A记录，记录值就是Vercel平台提示的IP地址。 添加成功回到Verel托管平台，会自动刷新，显示合法配置。 然后点击域名后面的跳转链接，直接打开个人网站。 后记希望大家都能早日成功申请到自己的免费域名。"},{"title":"一键部署你的ChatGPT Web网站","date":"2023-06-20T05:57:00.000Z","url":"/2023/06/20/%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E4%BD%A0%E7%9A%84ChatGPT-Web%E7%BD%91%E7%AB%99/","tags":[["vercel","/tags/vercel/"],["ChatGPT","/tags/ChatGPT/"]],"categories":[["chatgpt","/categories/chatgpt/"]],"content":"想要搭建自己的ChatGPT Web网站，我们只需要两个账号： 1.Github账号 -账号 - 其实Vercel账号可以使用Github账号直接登录： 所以我们只需要注册一个Github账号即可。 开始1. Github我们首先先在Github上访问这个地址： 然后点击右上角的Fork也就是克隆，然后点击Create Fork把这个仓库克隆到你的账号下 这个时候就会把这个github 仓库克隆到你的个人账号下面。 Vercel克隆之后我们去到Vercel平台。Vercel 使用刚才的Github账号登录并授权。 我们直接点击Add New-&gt;Project，然后找到我们的ChatGPT-next-web这个Github仓库，点击Import导入 这个project name我们可以随便选，使用默认的即可。 我们唯一要注意的就是这个环境变量，我们需要把ChatGPT的API Key添加进来，然后部署。 这个API Key是为了验证你的身份，需要你有OpenAI账号。 ![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’‘ xmlns:xlink&#x3D;’ stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E) API key如果你不知道上面的API Key怎么获得，这个非常简单，我们打开openai的平台地址： 登录之后点击右上角的头像，点击Manage Account-&gt;API Keys-&gt;Create New Secret Key, 然后复制下来保存备用。 部署然后回到刚才的部署界面，在刚才的环境变量在Name里面输入 OEPNAI_API_KEY，然后Value就输入我们刚才复制的API Key 点击Add添加，然后我们点击Deploy部署。 当然如果你需要你的ChatGPT支持密码访问，可以添加一个新的环境变量， - 这个时候，我们的网站就会需要密码访问 我们点击Deploy，可以看到它就开始部署了 我们稍等一会就可以看到我们的网站就能部署成功了。 使用我们可以点击就可以进入到我们的ChatGPT 个人网站了。 此时Vercel 给我们自动分配了域名，当然这个域名由于某些原因，在国内可能无法访问，你可能需要使用自己的域名。 我们在刚才的部署成功的页面点击右边的Add Domain添加域名， 然后输入我们的域名，点击添加。我们选择默认的选项， 然后点击添加 添加之后Vercel会提示我们需要添加两条记录，一条是A记录，一条是CNAME记录。 我们进入到我们的域名解析商，这里我使用cloudflare来解析我的域名。 我们在这里点击添加记录： •首先我们添加A记录，记录类型是A，名称是@，然后ipv4地址就是刚才的ip地址•然后我们再添加一条 CNAME 记录，记录类型是CNAME，名称是www，值是刚才的值 现在我们这两条记录，就已经添加成功了 我们再回到我们的 Vercel 托管平台，可以看到，我们的DNS记录已经设置成功了 我们添加成功之后直接点击跳转，用我们自己的域名就可以访问ChatGPT Web网站了。 那我们可以开始在这里和ChatGPT进行聊天了。 角色扮演我们也可以让ChatGPT来扮演各种角色，此时ChatGPT的回答会更具有专业性。 我们可以看到这里有非常多的角色，我们来让他帮我们扮演一个职业顾问，点击左下角新的聊天，找到职业顾问点击跳转新的聊天。 然后我们问他问题：作为一个程序员，我以后的职业生涯应该怎么规划？ 点击发送，可以看到作为一个职业顾问，他给我们详细列明了我们有很多职业道路可以选择，然后还给我们的职业生活也做了一些规划。 如果不让它扮演职业顾问，它给的回答是怎么样的呢？ 可以看到，同样的问题，当我们不让他扮演任何角色的时候，他给我们的答案就相对专业性就没有那么强。 所以角色扮演在专业的问题上，ChatGPT能给到更好的回答，我们可以使用这个来获得更优秀的答案。 密码访问同时这个ChatGPT网站也是支持密码访问的，想要支持密码访问非常简单，上面已经告诉你如何添加环境变量。 如果你之前没有添加，这里教你如何再次添加。 点击你的当前项目，找到settings设置项，然后找到左边的Environment Variables也就是环境变量。 密码的环境变量的key是CODE，这个值你可以填写你的密码，比如说我填写techxiaofei，然后点击保存 现在我们环境已经添加成功了，添加成功之后我们重新编译一下，我们点击redeploy就是重编译。 重新访问我们的ChatGPT网站，可以看到上面提示：现在是未授权状态，请点击左下角设置按钮输入访问密码。 我们点击左下角的设置，然后找到访问密码，输入我们的访问密码，就可以正常和ChatGPT对话了。 后记这个ChatGPT Web网站可以解决在国内无法正常访问ChatGPT的问题 而且它也不需要云服务器，不需要你购买任何东西，完全免费，任何人都可以轻松一键部署，所以赶紧尝试一下吧。"},{"title":"Markdown 书写示例","date":"2023-06-19T03:35:27.300Z","url":"/2023/06/19/exp/","categories":[["undefined",""]],"content":"插槽 目录[[toc]] 引用 这是一条引用 自定义容器::: info 信息这是一个信息::: ::: tip 告示这是一个提示::: ::: warning 警告这是一个警告::: ::: danger STOP危险区域，禁止通行::: ::: details 点击查看代码 ::: ::: v-pre&#123;&#123; This will be displayed as-is &#125;&#125;::: ::: center居中文字::: ::: right居右文字::: 高亮我是 &#x3D;&#x3D;高亮&#x3D;&#x3D; 的 代码块行高亮&#123;1,3-5&#125; 更多用法参照： emoji:tada: 复选框 看板娘 调色板 多语言 上下标19^th^H2O 脚注脚注 1 链接^first. 流程图 TexEuler’s identity $e^{i\\pi}+1&#x3D;0$ is a beautiful formula in $\\mathbb{R}^2$. $$\\frac {\\partial^r} {\\partial \\omega^r} \\left(\\frac {y^{\\omega}} {\\omega}\\right)&#x3D; \\left(\\frac {y^{\\omega}} {\\omega}\\right) \\left{(\\log y)^r + \\sum_{i&#x3D;1}^r \\frac {(-1)^i r \\cdots (r-i+1) (\\log y)^{r-i}} {\\omega^i} \\right}$$ 演示::: demo 这是 demo 标题 ::: 存在超自然现象，谨慎使用！ 常用Front Matter 其他其他格式 请使用 Typora 编辑器辅助使用或者参照   书写规范，参见 此处"},{"title":"记录我的小项目-第一弹","date":"2023-06-19T00:57:46.000Z","url":"/2023/06/19/%E8%AE%B0%E5%BD%95%E6%88%91%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%AC%AC%E4%B8%80%E5%BC%B9/","tags":[["项目集锦","/tags/%E9%A1%B9%E7%9B%AE%E9%9B%86%E9%94%A6/"],["ideas","/tags/ideas/"],["小爬虫","/tags/%E5%B0%8F%E7%88%AC%E8%99%AB/"],["高考网站","/tags/%E9%AB%98%E8%80%83%E7%BD%91%E7%AB%99/"],["志愿填报","/tags/%E5%BF%97%E6%84%BF%E5%A1%AB%E6%8A%A5/"]],"categories":[["项目日记","/categories/%E9%A1%B9%E7%9B%AE%E6%97%A5%E8%AE%B0/"]],"content":"记录我的小项目-第一弹 一、项目起因： 最近一致在琢磨一个有趣的项目，可以涵盖自己的所学知识，运营、技术、产品、销售。最初规划是希望通过chatgpt的Vercel项目免费开发给美术生，Midjourney出一些美图在小红书、抖音上发进行引流，chatGPT做钩子引导公众号，通过公众号做文章软文做转化，小程序做chatgpt活跃,。最后完成产品的售卖。 而后切入到6月高考季，发现社会热点的仍是聚焦志愿填报，而且自己的目标人群也有十分之一是美术生，所幸自己的Excel运用也不错，就想通过Excel做一个高考志愿填报的系统，主要用公式进行志愿分析，用于引流，料想应该不会差。遂进行初期尝试。 记录工具：hexojs&#x2F;hexo博客，vercel部署 chatGpt：Yidadaa&#x2F;ChatGPT-Next-Web，vercel部署 流程工具：aipaw &#x2F; dootask，docker部署 小程序工具：月星墙 &#x2F; ChatGPT-MP，（未开发） 二、项目逻辑： Midjourney出图，在小红书（美术生栋栋阿）、抖音号（美术生栋栋阿）发，通过简介发布美术生-找我免费领chatGPT。Midjourney教程。引导（美考攻略公众号） 美考攻略账号直播“美术生志愿填报”引导加公众号领取 公众号发布美术生文章和产品软文，菜单发布ChatGPT单日密码，引导加小程序 小程序有chatGPT,内含升序规划和资料包，引导加微信 产品包设计，美术生小班课、直播插画课、美术生找画室产品 chatgpt可以涵盖美术生找画室、美术生查成绩、美术生升学规划、美术报志愿等功能。通过小红书、抖音等新媒体渠道进行引流。 三、整体规划： 小红书、抖音账号注册；公众号注册（6月完成） 完成Midjourney出图。（6月完成） 完成美术生志愿填报系统设计（6月完成） 公众号文章存档（7月完成10篇） 小班课产品营销物料设计（7月完成10篇） 找老师，出课程（待定） 小程序完善（待定） 四、当前进展： 小红书、抖音账号、公众号注册完成(已完成) 美术生志愿填报设计制作中（计划6月29日前完成）(未完成) 五、指标计划：暂未涉及 &#x3D;&#x3D; 当前项目进展：&#x3D;&#x3D; 已经延后"},{"title":"pandas 使用方法","date":"2023-06-14T06:24:22.000Z","url":"/2023/06/14/pandas-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","tags":[["pandas","/tags/pandas/"]],"categories":[["undefined",""]],"content":"好的，我可以帮你介绍如何使用 Pandas 来读取 Excel 数据并实现追加数据或追加 Sheet。 首先需要安装 Pandas 库，可以使用以下命令进行安装： 有了 Pandas 库，就可以通过 read_excel() 方法读取 Excel 文件了。假设我们有一个名为 data.xlsx 的 Excel 文件，可以使用以下代码读取其中的 Sheet1 中的数据： 其中 sheet_name 参数可以用来指定要读取的 Sheet 名称或 Sheet 的下标。 接下来可以使用 Pandas 提供的方法往 Excel 中追加数据。假设我们有一个名为 new_data.xlsx 的 Excel 文件，要将数据追加到其中的 Sheet1，可以使用以下代码： 以上代码中，我们首先使用 read_excel() 方法读取名为 new_data.xlsx 的 Excel 文件中的 Sheet1 数据，然后创建一个包含新数据的数据帧 df2，接着使用 concat() 方法将新数据追加到原有数据后面，最后使用 ExcelWriter() 创建一个 ExcelWriter 对象，并使用 to_excel() 方法将数据写入 Excel 文件中的 Sheet1。 如果要新增一个 Sheet，可以使用以下代码： 以上代码中，我们使用 read_excel() 方法读取名为 new_data.xlsx 的 Excel 文件中的所有数据，接着创建一个包含新数据的数据帧 df2，最后使用 ExcelWriter() 创建一个 ExcelWriter 对象，并使用 to_excel() 方法将新数据写入 Excel 文件中的新 Sheet 中。请注意，我们在 ExcelWriter() 中指定了 engine 为 openpyxl，并将 mode 参数设置为 a，这样可以以追加模式打开 Excel 文件。"},{"title":"高考志愿网JS逆向","date":"2023-06-14T01:15:05.000Z","url":"/2023/06/14/%E9%AB%98%E8%80%83%E5%BF%97%E6%84%BF%E7%BD%91JS%E9%80%86%E5%90%91/","tags":[["高考网站","/tags/%E9%AB%98%E8%80%83%E7%BD%91%E7%AB%99/"],["逆向","/tags/%E9%80%86%E5%90%91/"]],"categories":[["爬虫逆向","/categories/%E7%88%AC%E8%99%AB%E9%80%86%E5%90%91/"]],"content":" 起因：最近想出一个高考志愿填报的excel系统，想先从网上拿一些资源，最开始的设计是希望从网站上找到近5年的报考指南PDF，然后写代码OCR扫描PDF，摘取关键数据，后发现网站没有PDF,于是告吹。后来就找寻网站，看看有没有我想要的数据，于是找到了”掌上高考“，发现有一些数据是想要的。（其实公司内有一个高考志愿网站，草率了） 处理数据： 第一步：打开开发者工具找到对应的数据文件 第二步：分析payload发现是一个POST请求，需要给他的服务器发送数据，再分析payload，发现里面有要发送的数据，里面有个signsafe（估计是个加密数据）看来必须要逆向才行了 后来发现这个网站做逆向纯属脱裤子放屁了。（既然可以用GET请求得到数据，signsafe就是个摆设）不过正好可以学习一下如何逆向。 第三步：用search搜索一下signsafe（这个需要用H5模式）发现了一堆数据，但是能用的就是第一个 第四步：分析数据通过上下文判断是用的Hmac sha1加密，找到了signsafe 第五步：找到文件，用source打断点试试根据文件夹的headers找到数据文件夹 经过断点运行，多试了几次，发现就是这个代码。 这是一个加密的方法，所有的singsafe都走这一个方法，断点可以走第二遍，就能出现我们想要的safe 具体的加密逻辑是这样的：首先获取url（包括传递的数据），然后去掉https:\\\\,进行sha1加密，密钥是D23ABC@#56,加密后再进行Base64加密，再将加密的数据用MD5进行加密。最后进行拼接。 代码实现："},{"title":"搭建一个Hexo博客并用vercel部署","date":"2023-05-31T00:28:47.588Z","url":"/2023/05/31/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAHexo%E5%8D%9A%E5%AE%A2%E5%B9%B6%E7%94%A8vercel%E9%83%A8%E7%BD%B2%20(2)/","tags":[["vervel","/tags/vervel/"],["hexo","/tags/hexo/"]],"categories":[["github","/categories/github/"]],"content":"Hexo 是一款基于Node.js的静态博客生成器，具有简单易用、快速高效、丰富主题、插件支持等特点，适合用于个人博客、技术文档、个人网站等场景。而且基于 markdown 编写起来非常顺畅，个人非常喜欢这个博客。这次下定决心搭建一个 Hexo 博客来实现我日常分享的一个小博客网站。 前置准备 一台 windows 笔记本电脑，当然 mac 电脑也是没问题的，即使 Linux 电脑也是可以的。 Git工具: Git (git-scm.com) Node+ Npm工具：Node.js (nodejs.org) 准备好 Hexo 博客程序：  创建一个 Git 仓库 注册一个 vercel 账号(如果有自己的服务器或者不适用 vercel 可以不用管这一步)： 准备一个域名(如果不需要独立域名可以略过这一步) hexo 本地图片部署 正式开始安装 Hexo 工具上面的 GIT和 Node在百度或者谷歌上已经有很多相关专业的教程，这里就不详细讲解这块的知识了。一般来说到官网上下载完毕直接下一步下一步即可。我们先来全局安装一个 Hexo 工具 创建 hexo 本地博客程序安装完成之后我们就可以使用 hexo 的工具来创建博客了。在电脑上创建一个目录并进入该目录，我起名叫做 javier-blog，刚才我们安装过 Git 工具这时候就派上用场了。在该目录内右键找到 Git Bash Here 点击打开一个 Git的命令行窗口或者你可以使用其他的命令行工具。执行以下命令 启动 hexo 本地服务安装完成 hexo程序直接执行 hexo s 命令就可以打开 hexo 的本地服务。在命令行上会显示启动后的服务地址。 以上就正式搭建完成 hexo 的博客程序了。 修改博客的基本信息修改 博客的标题，副标题，描述，语言时区等信息 修改博客地址 创建 github 仓库打开  创建一个仓库用来存储我们的部署程序,创建后是这个样子的。 同步本地 Hexo 部署页面到 github 中初始化 git 项目 打开本地 **hexo **项目目录并执行下面的命令,用来安装 git 的部署组件 安装之后在项目目录中找到**_config.yml **修改 deploy 参数 执行 hexo g 然后执行 hexo d 将静态页面部署到 github 上，是这个样子的。 将项目部署到 vercel 上如果不需要部署到 vercel 上此步可以略过 在 **dashboard **上 选择 Create a New Project 在关联的 **github **账户中，找到刚才的博客仓库，选择 import 进入部署页面选择 deploy 生成之后点击 Continue to Dashboard 点击 Visit 就可以看到刚刚生成的博客程序了 将项目资源文件放入同一个仓库中在命令行创建一个新的分支并切换过去 提交代码 常用命令 "}]