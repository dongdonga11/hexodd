[{"title":"Access-小示例-02-连接mdb数据库","date":"2023-08-01T09:01:38.000Z","url":"/2023/08/01/Access-%E5%B0%8F%E7%A4%BA%E4%BE%8B-02-%E8%BF%9E%E6%8E%A5mdb%E6%95%B0%E6%8D%AE%E5%BA%93/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["常用小实例","/tags/%E5%B8%B8%E7%94%A8%E5%B0%8F%E5%AE%9E%E4%BE%8B/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"目录 Part 1：本篇目标 常用Access数据库格式为accdb，近来发现一种mdb数据格式的 作为数据库端，本文就是验证一下两者在使用VBA连接时是否有一些明显区别 示例：连接***mdb***数据库，并将内容显示到前端 mdb数据库 前端效果 目录 Part 2：实现步骤 新建一个Access文件，默认为accdb格式，转变为mdb格式步骤如下 打开该文件，点击文件菜单，另存为mdb格式即可 在该文件中录入相关信息 再新建一个Access文件，作为界面端，VBA代码也是写在这里 搭建一个简单界面，包括一个按钮和一个列表框 设计视图下，设置列表框的列数、列标题：是、行来源类型：值列表 设计视图下，按钮的单击事件写入以下代码 另存为mdb文件 目录 Part 3：代码 代码截图 目录 Part 4：部分代码解读 对数据库的操作，一般分为以下几个步骤 确定数据库地址 连接数据库 确定SQL语句 执行SQL语句 若有返回结果，对返回结果进行处理 执行SQL语句一般有两种方法 Set rs = adConn.Execute(SQL)，若无需返回结果，可以采用该方法，例如插入、删除、更新等操作 rs.Open SQL, adConn, adOpenKeyset, adLockOptimistic，若需要返回结果，可以采用该方法，例如查询 当然还有一些更细致的区别，但一般也只用到这两个区别 本文使用ADODB.Connection连接数据库，记得务必在Access中手动加入引用，本文采用的是Microsoft ActiveX Data Objects 6.1 Library,加入方法如下 VBE界面下工具菜单-引用 目录 Part 5：小结 本文中对mdb数据库的连接方法与accdb采用一样的方法，目前来看可以适用 "},{"title":"Access-常用功能解析-01-账户权限管理","date":"2023-08-01T08:58:26.000Z","url":"/2023/08/01/Access-%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90-01-%E8%B4%A6%E6%88%B7%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["常用小实例","/tags/%E5%B8%B8%E7%94%A8%E5%B0%8F%E5%AE%9E%E4%BE%8B/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 根据打开软件的不同用户，赋予不同操作权限 本质上就是将一部分控件禁用，一部分控件启用 如下图所示，打开窗体时，禁用按钮非管理员按钮，启用按钮管理员按钮，在文本框中写入当前登录账户 效果图 Part 2：实现步骤 画出设计图，文本框名称为txt1*，管理员按钮名称为*cmd1**，非管理员按钮名称为cmd2** 界面设计 Part 3：代码 代码截图 Part 3：部分代码解读 currentUserName = Environ(&quot;username&quot;)获取当前登录账户 ctrl1.Enabled = True启用控件ctrl1 ctrl2.Enabled = False禁用控件ctrl2 ***Private Sub Form_Load()***，窗体启动事件 "},{"title":"Access-控件解析-窗体-02-进度条","date":"2023-08-01T08:54:09.000Z","url":"/2023/08/01/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%AA%97%E4%BD%93-02-%E8%BF%9B%E5%BA%A6%E6%9D%A1/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["弹出控件","/tags/%E5%BC%B9%E5%87%BA%E6%8E%A7%E4%BB%B6/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：示例 点击按钮实现进度条显示，并显示完成程度百分比 效果图 动态图 Part 2：代码 代码截图 Part 3：窗体搭建 新建一个窗体，插入控件ProgressBar 如果没有发现控件工具箱，可以在菜单栏：视图-工具箱打开 默认是没有进度条控件的，需要人工加入，鼠标悬浮在工具箱控件区域位置上，右键附加控件，注意鼠标位置，不同位置右键效果不同。添加控件Microsoft ProgressBar Control 显示工箱 添加进度条控件 Part 4：部分代码解读 UserForm1.Show 0，显示窗体 Unload UserForm1，关闭窗体 Set ProgressBar1 = UserForm1.ProgressBar1，定义控件 "},{"title":"Access-控件解析-窗体-01-弹出","date":"2023-08-01T08:51:45.000Z","url":"/2023/08/01/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%AA%97%E4%BD%93-01-%E5%BC%B9%E5%87%BA/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["弹出空间","/tags/%E5%BC%B9%E5%87%BA%E7%A9%BA%E9%97%B4/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍窗体。涉及功能为：点击按钮后，弹出一个窗体 严格来说窗体不是控件，它是控件的载体 效果动图 Part 2：实现步骤 本项目中涉及到两个窗体 窗体main作为主窗体，有一个按钮，点击后弹出窗体弹窗 窗体弹窗，需要将其弹出方式选择是 窗体main中设置按钮对应的代码 代码截图 窗体弹窗 弹出方式设置 Part 3：部分代码解读 DoCmd.OpenForm (frmName)打开窗体 frm.Caption = &quot;说明&quot;设置标题 设置标题效果 "},{"title":"Access-控件解析-按钮-02-来个双击","date":"2023-08-01T08:50:10.000Z","url":"/2023/08/01/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E6%8C%89%E9%92%AE-02-%E6%9D%A5%E4%B8%AA%E5%8F%8C%E5%87%BB/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["按钮","/tags/%E6%8C%89%E9%92%AE/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：按钮。涉及功能为：双击事件 效果动图 Part 2：实现步骤 设计视图下，插入按钮 选中按钮，右键-属性，事件选项卡下，双击，关联事件过程 点击右侧的...，直接打开VBE界面，进行代码编写 直接关联的代码是在窗体对应的代码窗口，建议核心代码还是写在模块下，方便管理，窗体代码只是一个事件导入 仔细看下图，发现有很多事件，不仅仅只是最近写的两篇文章，单击事件，双击事件，其它事件大家可以试试 对于其它控件，也有一些事件，但是每个控件支持的事件可能是不同的 属性设置 标签支持事件 "},{"title":"Access-控件解析-按钮-01-关联代码","date":"2023-08-01T08:48:52.000Z","url":"/2023/08/01/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E6%8C%89%E9%92%AE-01-%E5%85%B3%E8%81%94%E4%BB%A3%E7%A0%81/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["按钮","/tags/%E6%8C%89%E9%92%AE/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：按钮。涉及功能为：关联代码 效果动图 Part 2：实现步骤 设计视图下，插入按钮 选中按钮，右键-属性，事件选项卡下，单击，关联事件过程 点击右侧的...，直接打开VBE界面，进行代码编写 直接关联的代码是在窗体对应的代码窗口，建议核心代码还是写在模块下，方便管理，窗体代码只是一个事件导入 插入按钮 属性设置 代码位置 "},{"title":"Access-控件解析-文本框-01-格式设置","date":"2023-08-01T08:46:01.000Z","url":"/2023/08/01/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E6%96%87%E6%9C%AC%E6%A1%86-01-%E6%A0%BC%E5%BC%8F%E8%AE%BE%E7%BD%AE/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["文本框","/tags/%E6%96%87%E6%9C%AC%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：文本框。涉及功能为：文本框输入内容的格式限制 一般系统可以简单理解为有3个部分组成：输入-处理-输出 对于输入这部分往往会有些要求，例如要求输入日期。因为使用客户不同，如果希望由客户来主动规范化输入是不现实的，所以希望系统方面来限制 功能效果 Part 2：实现步骤 设计视图下，插入文本框 选中文本框，右键-属性，格式选项卡下，选择需求的格式 设置完格式后，当用户输入不满足要求的数据时，系统会提示 插入文本框 格式选项卡 输入格式错误 "},{"title":"Access-控件解析-组合框-02-两个组合框联动","date":"2023-08-01T08:41:52.000Z","url":"/2023/08/01/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%BB%84%E5%90%88%E6%A1%86-02-%E4%B8%A4%E4%B8%AA%E7%BB%84%E5%90%88%E6%A1%86%E8%81%94%E5%8A%A8/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["组合框","/tags/%E7%BB%84%E5%90%88%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：组合框。涉及功能为：两个组合框联动 功能动图 Part 2：实现功能 手动设置省组合框下拉列表：广东，湖南 省组合框变化时，市组合框下拉列表随之变化 这里省组合框有3个事件，都引起市组合框下拉列表变化，包括更改，键按下，进入三个事件。具体哪些事件会触发，根据需要自己制定。一般来说这三种即可 界面 3类事件 Part 3：代码 事件代码 实际动作 代码截图****代码位置：将通用代码写在模块内了，方便代码复用 Part 4：部分代码解读 虽然本示例中涉及3个事件，但只是触发不一样，但引起的结果是一样的，所以将共用代码写在了模块内 frmName = Me.Name，获取当前窗体名称，该代码必须放在对应的窗体中才有效 "},{"title":"Access-控件解析-组合框-01-下拉列表","date":"2023-08-01T08:38:52.000Z","url":"/2023/08/01/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%BB%84%E5%90%88%E6%A1%86-01-%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["组合框","/tags/%E7%BB%84%E5%90%88%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：组合框。涉及功能为：下拉列表的实现 功能动图 Part 2：实现功能 手动设置组合框下拉列表：长江；黄河；珠江；淮河 通过代码修改组合框下拉列表：1；2；3；4 应用场景，组合框的下拉列表随着另外一个控件的取值变化而变化。例如，两个组合框，一个显示省份，一个显示城市，当省份不同时，城市组合框下拉列表也会不同 手动设置：打开组合框属性 - 数据选项卡 - 行来源类型设置为值列表 - 行来源设置下拉列表数据，以分号**;**隔开 Part 3：代码 代码截图 Part 4：部分代码解读 cbo.RowSource = &quot;&quot;，将下拉列表清空 cbo.Value = &quot;&quot;，将组合框取值清空 cbo.AddItem x ，增加组合框下拉列表 "},{"title":"Access-控件解析-列表框-04-双击效果","date":"2023-08-01T08:36:21.000Z","url":"/2023/08/01/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-04-%E5%8F%8C%E5%87%BB%E6%95%88%E6%9E%9C/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["列表框","/tags/%E5%88%97%E8%A1%A8%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：列表框。涉及功能为：双击列表框显示所选行第1列信息 功能动图 Part 2：代码 代码截图 Part 3：事件设置 获取选项内容在上一篇文章中已经讲过，核心函数ctrl.Column 设置双击事件：设计视图下-右键列表框-选择属性-选择事件选项卡-设置双击事件 对应双击事件Sub名称：List0_DblClick(Cancel As Integer)，***DblClick，double click***的缩写 整个Sub名称是系统自动生成的，尽量不要自己看出规律后人为建立，有时候系统无法识别 事件设置 "},{"title":"Access-控件解析-列表框-03-向列表框录入信息","date":"2023-08-01T08:34:05.000Z","url":"/2023/08/01/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-03-%E5%90%91%E5%88%97%E8%A1%A8%E6%A1%86%E5%BD%95%E5%85%A5%E4%BF%A1%E6%81%AF/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["列表框","/tags/%E5%88%97%E8%A1%A8%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"目录 Part 1：本篇目标 本篇介绍的控件为：列表框。涉及功能为：向列表框中录入信息 功能动图 静图 目录 Part 2：代码 录入信息 代码截图 数组转为字符串 代码截图 清空列表框 代码截图 目录 Part 3：部分代码解读 ctrl.AddItem inputContents，向列表框一行一行加入信息，要求输入内容为字符串，不同列之间用**;**分开 op = x &amp; &quot;&quot;，将其它数据类型转为字符串，其实在本示例可以不使用，会自动转为字符串，可以手动测试一下 ListBox.AddItem官方解读 "},{"title":"Access-控件解析-列表框-02-获取选项","date":"2023-08-01T07:25:10.000Z","url":"/2023/08/01/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-02-%E8%8E%B7%E5%8F%96%E9%80%89%E9%A1%B9/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["列表框","/tags/%E5%88%97%E8%A1%A8%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：列表框。涉及功能为：后台获取用户的选择项 UI界面存在大量与用户互动的部分，根据客户不同的选择展现不同的信息 功能动图 静图 Part 2：代码 控件关联代码 核心函数：获取不同列，改变***colNum***值即可 代码截图 Part 3：部分代码解读 chooseRow = ctrl.ListIndex，注意是否设置列标题选项，在计数时，是不包括列标题的 ListBox.Column(Index, Row)，列表框可以看成一个Excel表格，不同的是 行和列都是从0开始计数 与Excel中不同的是，先是列再是行，格式：（列，行） ListBox.Column官方解读 "},{"title":"Access-控件解析-列表框-01-多选数目获取","date":"2023-08-01T07:22:53.000Z","url":"/2023/08/01/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-01-%E5%A4%9A%E9%80%89%E6%95%B0%E7%9B%AE%E8%8E%B7%E5%8F%96/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"],["控件","/tags/%E6%8E%A7%E4%BB%B6/"],["列表框","/tags/%E5%88%97%E8%A1%A8%E6%A1%86/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：本篇目标 本篇介绍的控件为：列表框 列表框可以理解成一个简单的***Excel***表格，只不过不能直接编辑 可以将第一行设置为列标题 列表框支持多选（属性表-其他-多重选择-展开的），本文目标在于：每次选择后获取选择的行数 关于多重选择，有两种：简单；展开的 简单：左键直接多选 展开的：windows多选方法（结合ctrl和shift） 功能动图 展示给客户的最终界面如下 列表框控件位置 列表框录入数据 打开多重选择功能 打开列标题功能 Part 2：代码 窗体内代码 代码截图 "},{"title":"Access/VBA/Excel-15-表信息整体迁移","date":"2023-08-01T07:20:34.000Z","url":"/2023/08/01/Access-VBA-Excel-15-%E8%A1%A8%E4%BF%A1%E6%81%AF%E6%95%B4%E4%BD%93%E8%BF%81%E7%A7%BB/","categories":[["undefined",""]],"content":"Part 1：问题 有一个原信息表存储着学生的姓名和成绩信息，现在需要对信息进行扩容 有一个新信息表，不仅有学生的姓名和成绩信息，还有一些其它信息 问题：将原信息表中满足要求的信息复制到新信息表中去，示例复制张三的信息 原信息数据表 新信息表 Part 2：代码 代码截图 执行结果 Part 3：部分代码解读 **核心*SQL***：Insert Into 新信息 Select * From 原信息 Where (姓名=&#39;张三&#39;) 上面SQL由两部分组成：Insert Into 加入新表部分，Select 查询获取拟加入新表的信息 这种方法要求新信息表中必须有相同的字段 核心*SQL* Part 4：延伸 只从旧信息表中获取2个字段：姓名，语文 执行结果 从旧信息表中获取所有字段所有记录 执行结果 思考：下面这句***SQL***的结果又是什么效果呢？ "},{"title":"Access/VBA/Excel-14-消除重复值","date":"2023-08-01T07:18:39.000Z","url":"/2023/08/01/Access-VBA-Excel-14-%E6%B6%88%E9%99%A4%E9%87%8D%E5%A4%8D%E5%80%BC/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：题目 从地址表中获取含有的省份信息，结果是：广东省，湖南省，安徽省 那么怎么使用SQL实现呢 地址数据表 Part 2：代码 代码截图 执行结果 Part 3：部分代码解读 **核心*SQL***：Select distinct 省份 from 地址 中文释义： 从地址中获取省份字段非重复的值 关键字：distinct，在字段前加上这个关键字，输出值中就没有重复值 核心SQL"},{"title":"Access/VBA/Excel-13-嵌套查询","date":"2023-08-01T07:15:40.000Z","url":"/2023/08/01/Access-VBA-Excel-13-%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：题目 获取张三，李四的数学成绩 已知条件：数据库中有两个表（学生信息表，成绩表），如下图 逻辑过程：从学生信息表中获取张三&#x2F;李四的学号，从成绩表中以学号查询满足条件的数学成绩 学生信息表 成绩表 Part 2：代码 代码截图 执行结果 Part 3：部分代码解读 **核心*SQL***：Select 学号,年级,数学成绩 from 成绩表 where (学号 in (Select 学号 from 学生信息表 where (姓名 in (&#39;张三&#39;,&#39;李四&#39;)))) order by 学号 asc,年级 desc 中文释义： 两层***Select***，内层获取张三&#x2F;李四的学号，外层以学号检索需要的信息 输出排序：第一级排序以学号升序（asc），第二级排序以年级降序（desc） 核心SQL 思考：输出的信息中不含有姓名信息，看起来不清晰，那么如何将姓名信息加进来呢？和之前的left join结合吗？"},{"title":"Access/VBA/Excel-12-模糊查询","date":"2023-08-01T07:14:14.000Z","url":"/2023/08/01/Access-VBA-Excel-12-%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标商品清单 根据商品ID检索需要的商品 通过模糊检索实现，有点百度的味道，只知道部分信息，来查询 逻辑过程 连接数据库 根据需求确定***SQL***语句 执行SQL*语句，得到recordset* 将***recordset***写入工作表（字段名+所有记录 即 列名+每一行） 断开与数据库的连接 检索商品ID首字母为m的商品 Part 2：代码 代码截图 执行结果 Part 3：部分代码解读 Select 商品ID,商品名称,厂家,数量 from 商品清单 where (商品ID like &#39;m%&#39;) 中文释义：选取满足商品ID第1位为字母*m*的商品信息，从结果看，没有区分大小写 这样的***%表示0*或者任意字符，有点像*的作用 Part 4：延伸 _代表单一字符，searchC = &quot;商品ID like &#39;____&#39;&quot;，四个下划线，结果如下 []指定范围，searchC = &quot;商品ID like &#39;[0-9]%&#39;&quot;，表示***0-9***开头的字符串，结果如下 [ ]指定范围，searchC = &quot;商品ID like &#39;[a-z]%&#39;&quot;，表示a-z开头的字符串，依然没有区分大小写，结果如下 [!]指定范围之外，searchC = &quot;商品ID like &#39;[!a-z]%&#39;&quot;，表示不以***a-z***开头，结果如下 not like取反，searchC = &quot;商品ID not like &#39;[a-z]%&#39;&quot;，表示不满足a-z开头的字符串，依然没有区分大小写，结果如下 "},{"title":"Access/VBA/Excel-左连接-11","date":"2023-08-01T07:12:24.000Z","url":"/2023/08/01/Access-VBA-Excel-%E5%B7%A6%E8%BF%9E%E6%8E%A5-11/","tags":[["excel - access - vba","/tags/excel-access-vba/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标成绩表 学生信息表 运行过程 获取学号为1101学生在不同年级的语文成绩，输出信息包括：姓名，学号，性别，年级，语文成绩 最终想要获得的信息来自于两个工作表，所以需要连接查询 逻辑过程 连接数据库 根据需求确定SQL语句 执行SQL语句，得到*recordset* 将recordset写入工作表（字段名+所有记录 即 列名+每一行） 断开与数据库的连接 SQL语句 &quot;Select &quot; &amp; opFilds &amp; &quot; from &quot; &amp; &quot;(&quot; &amp; tbls &amp; &quot;)&quot; &amp; &quot; where (&quot; &amp; searchC &amp; &quot;)&quot; opFilds = &quot;姓名,&quot; &amp; tblNote &amp; &quot;.学号,性别,年级,语文成绩&quot; searchC = tblNote &amp; &quot;.学号=1101&quot; tbls = tblNote &amp; &quot; left join &quot; &amp; tblName &amp; &quot; on &quot; &amp; tblNote &amp; &quot;.学号=&quot; &amp; tblName &amp; &quot;.学号&quot; Part 2：代码 代码截图 执行结果 Part 3：部分代码解读 SQL = &quot;Select &quot; &amp; opFilds &amp; &quot; from &quot; &amp; &quot;(&quot; &amp; tbls &amp; &quot;)&quot; &amp; &quot; where (&quot; &amp; searchC &amp; &quot;)&quot; 本问题中，相关变量取值后SQL语句如下 *Select* 姓名,成绩表.学号,性别,年级,语文成绩 *from* (成绩表 *left join* 学生信息表 *on* 成绩表.学号&#x3D;学生信息表.学号) *where* (成绩表.学号&#x3D;1101) 中文解读：从成绩表和学生信息表连接表中获取学号为1101的学生信息 表1 left join 表2 on 表1.ID=表2.ID 两个表进行连接，以左侧为基准，即这里的表1 连接条件：表1与表2的ID号相同 当表2中满足表1中ID条件的有多条记录，那么进行分别匹配 当表2中没有满足表1中ID的条件时，匹配Null 例1：匹配多个，修改学生信息表，增加同样学号的 查询结果 例2：若未匹配上，则对应信息为空 "},{"title":"Access/VBA/Excel-多条件筛选数据-10","date":"2023-08-01T07:10:42.000Z","url":"/2023/08/01/Access-VBA-Excel-%E5%A4%9A%E6%9D%A1%E4%BB%B6%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE-10/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 目标1：将数据库中数据表学生信息表中的语文成绩大于85分且学号大于4的人员信息读入当前工作簿示例工作表 目标2：将数据库中数据表学生信息表中姓名为张三或者小红的人员信息读入当前工作簿示例工作表 逻辑过程 连接数据库 根据需求确定SQL语句 执行SQL语句，得到recordset 将recordset写入工作表（字段名+所有记录 即 列名+每一行） 断开与数据库的连接 实现两个目标只有SQL语句不同，其余一致 目标1：SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 语文成绩&gt;85 and 学号&gt;4&quot; 目标2：SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 姓名 in(&#39;张三&#39;,&#39;小红&#39;)&quot; 目标1 目标2 Part 2：代码 代码截图 Part 3：部分代码解读 SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 语文成绩&gt;85 and 学号&gt;4&quot;，中文释义：从工作表中获取满足语文成绩&gt;85且学号&gt;4的所有信息 SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 姓名 in(&#39;张三&#39;,&#39;小红&#39;)&quot;，中文释义：从工作表中获取满足姓名为张三或者小红的所有信息，也可以使用or来实现该功能 &quot;Select * from &quot; &amp; tblName &amp; &quot; where 姓名=&#39;张三&#39; or 姓名=&#39;小红&#39;&quot; "},{"title":"Access/VBA/Excel-单表筛选数据-09","date":"2023-08-01T07:08:01.000Z","url":"/2023/08/01/Access-VBA-Excel-%E5%8D%95%E8%A1%A8%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE-09/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 将数据库中数据表学生信息表中的语文成绩大于85分的人员信息读入当前工作簿示例工作表 逻辑过程 连接数据库 根据需求确定SQL语句 执行SQL*语句，得到recordset* 将recordset写入工作表（字段名+所有记录 即 列名+每一行） 断开与数据库的连接 所以与上一篇文章的区别在于SQL语句 Part 2：代码 代码截图 Access与Excel数据对比 Part 3：部分代码解读 &quot;Select * from &quot; &amp; tblName &amp; &quot; where 语文成绩&gt;85&quot;，中文释义：从工作表中获取满足语文成绩&gt;85所有信息 rs.Fields.Count获取字段数目 字段是从0开始计数，所以最后一个字段表示为rs.Fields(rs.Fields.Count-1) rs.Fields(j).Name获取字段的名称（列名） CopyFromRecordset复制整个rs（所有记录） 联想：那么是不是还有其它筛选方式呢？那必须有，这也是SQL的强大之处，常规VBA语句需要写很多代码实现的功能，SQL一句可能就搞定了"},{"title":"Access/VBA/Excel-获取数据库数据-08","date":"2023-08-01T07:05:46.000Z","url":"/2023/08/01/Access-VBA-Excel-%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE-08/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 将Access*数据库中数据表学生信息表中的所有信息读入当前Excel*工作簿示例工作表 ***VBA***逻辑过程 连接数据库 根据需求确定SQL语句 执行SQL语句，得到recordset 将recordset写入工作表（字段名+所有记录 即 列名+每一行） 断开与数据库的连接 Part 2：代码 代码截图 **运行过程** Access与Excel数据对比 Part 3：部分代码解读 Select * from &quot; &amp; tblName，中文释义：从工作表中获取所有信息 rs.Fields.Count获取字段数目 rs.Fields(j).Name获取字段的名称（列名） CopyFromRecordset复制整个rs（所有记录） "},{"title":"Access/VBA/Excel-Access字段删除-07","date":"2023-08-01T06:45:15.000Z","url":"/2023/08/01/Access-VBA-Excel-Access%E5%AD%97%E6%AE%B5%E5%88%A0%E9%99%A4-07/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":" 这个系列开展一个新的篇章，重点关注Access数据库 主体框架：以Excel作为操作界面，Access作为数据库 今天讲讲如何删除特定字段 涉及知识：ADO，SQL：Alter + drop Part 1：目标 如上图所示，删除性别这一字段（列） 逻辑过程 连接数据库 根据需求确定***SQL***语句 执行SQL语句 断开与数据库的连接 Part 2：代码 **代码截图** 执行后效果 Part 3：部分代码解读 Alter table &quot; &amp; tblName &amp; &quot; drop Column 性别 中文释义：改变工作表，具体变化点为删除性别列（字段） 删除不同表下不同的字段，只需替换表名称及字段名称即可 "},{"title":"Access/VBA/Excel-Access记录删除-06","date":"2023-08-01T06:44:02.000Z","url":"/2023/08/01/Access-VBA-Excel-Access%E8%AE%B0%E5%BD%95%E5%88%A0%E9%99%A4-06/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 删除姓名为张三的这一条记录 逻辑过程 连接数据库 根据需求确定***SQL***语句 执行***SQL***语句 断开与数据库的连接 删除记录前 Part 2：代码 执行后效果 Part 3：部分代码解读 delete from &quot; &amp; tblName &amp; &quot; where 姓名=&#39;张三&#39; 中文释义：从工作表中删除一条 姓名字段取值为张三的一条记录 注意：张三有单引号包围起来 "},{"title":"Access/VBA/Excel-Access记录修改-05","date":"2023-08-01T06:42:14.000Z","url":"/2023/08/01/Access-VBA-Excel-Access%E8%AE%B0%E5%BD%95%E4%BF%AE%E6%94%B9-05/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 前文中，我们已经获取了一个工作表（学生信息表）和4个字段（ID，姓名，学号，性别），并输入了两行记录 今天在原有字段的基础上增加籍贯，语文成绩两个新的字段 并对原张三的记录做一些修改：修改学号信息，增加籍贯及语文成绩信息 原记录：张三，11，男 修改后：张三，1，男，广东省，85 结果如下 Part 2：代码 Part 3：部分代码解读 Update 工作表名 set 字段1=X1，字段2=X2 where 字段4=X4 中文释义：修改（更新）工作表，字段4&#x3D;X4所在记录（行）中，字段1的值改为&#x3D;X1，字段2改为X2 即：通过某一字段的值，定位到某一记录（行），修改这一记录（行）中其它字段的值 小结：对数据库的操作转化为对应的SQL语句，然后运行，搞定"},{"title":"Access/VBA/Excel-Access记录创建-04","date":"2023-08-01T06:40:05.000Z","url":"/2023/08/01/Access-VBA-Excel-Access%E8%AE%B0%E5%BD%95%E5%88%9B%E5%BB%BA-04/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：目标 从上一篇文章中，我们已经获取了一个工作表（学生信息表）和4个字段（ID，姓名，学号，性别） 今天的文章开始向Access数据库中录入一条条数据 包括两条记录 张三，11，男 李四，12，男 结果如下 Part 2：代码 Part 3：部分代码解读s INSERT INTO 工作表名称 （字段1，字段2，字段3） VALUES（字段1对应值，字段2对应值，字段3对应值） 中文释义：向工作表X中的字段1中录入数据X，字段2中录入数据X，字段3录入数据X 若字段中对应值为字符串，需在单引号（**Chr(39)**）中&#39;&#39;，若是时间，则使用#时间信息# ID字段是自增式，无需额外赋值，每有一个新的记录，会自动+1 "},{"title":"Excel-Excel-入门（Excel作为界面端，Excel作为数据库）","date":"2023-08-01T06:32:03.000Z","url":"/2023/08/01/Excel-Excel-%E5%85%A5%E9%97%A8%EF%BC%88Excel%E4%BD%9C%E4%B8%BA%E7%95%8C%E9%9D%A2%E7%AB%AF%EF%BC%8CExcel%E4%BD%9C%E4%B8%BA%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%89/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["access","/tags/access/"]],"categories":[["excel","/categories/excel/"]],"content":"示例：Excel*作为数据库，从Excel中获取来自于交通院，语文和数学成绩都是*&gt;80**分的信息 实现结果 思考 传统方法：对数据表进行循环判断，找到满足条件的行 新方法：查询通过一句***SQL***实现SQL = &quot;Select &quot; &amp; filds &amp; &quot; From &quot; &amp; tbl_name &amp; &quot; Where (&quot; &amp; searchC &amp; &quot;)&quot;，逻辑过程如下： 连接数据库 确定***SQL***语句 执行***SQL***语句 获取结果 断开数据库 SQL 代码过程main 代码截图 部分代码解读 数据库连接***Excel***连接 Access连接 工作表的表示方法tbl_name = &quot;[data$]&quot;，使用[$] 复制***rs***信息到工作表：sht.Range(&quot;A2&quot;).CopyFromRecordset rs **** Ps：1）采用ADO的方式连接的数据库，需要人为先在*VBE*中打开这个引用，菜单工具-引用2)当数据量越大，本文中采用的方式，效率越明显，是不错的方法幺"},{"title":"Access/VBA/Excel-Access表及字段创建-03","date":"2023-08-01T06:26:22.000Z","url":"/2023/08/01/Access-VBA-Excel-Access%E8%A1%A8%E5%8F%8A%E5%AD%97%E6%AE%B5%E5%88%9B%E5%BB%BA-03/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：前面的话 对Access数据库的大部分操作都可以通过SQL语言来实现 SQL:Structure Query Language，结构化查询语言，语法简单，非常容易学 SQL语言的执行可借助于ADO，ADO本身也支持对数据库的各种操作，但是涉及到一些其它知识的学习 这个系列中，除非无法用SQL来实现，否则会使用SQL SQL作为数据库操作的通用语言，学会了后也可用于对其它数据库的操作，那也是极好的 Part 2：本篇目标 对已有空白数据库创建一个数据表 根据要求创建新的字段，指定字段的约束 基本逻辑过程： 连接数据库 确定SQL语句 执行SQL语句 根据需求重复上面两步 关闭数据库的连接 记得引用Microsoft ActiveX Data Objects 2.8 Library Part 3：代码 执行结果：新建表 执行结果：新建字段 Part 4：部分代码解读 ADO连接不同数据库采用不同引擎 Microsoft.ACE.OLEDB.12.0 **连接Access** 老版本的Access（.mdb后缀的）可以使用引擎 Microsoft.Jet.OLEDB.4.0 CREATE TABLE &quot; &amp; tblName &amp; &quot; (ID AUTOINCREMENT primary key)创建了一个工作表，并设置一个字段（主键，唯一且自增） CREATE TABLE 工作表名称 （字段信息），中文释义可以理解为：新建数据表XX，字段XX且为主键 ID这个字段每增加一行记录，会自增1，设为主键 SQL = &quot;ALTER TABLE &quot; &amp; tblName &amp; &quot; ADD &quot; &amp; field1 &amp; &quot;,&quot; &amp; field2 &amp; &quot;,&quot; &amp; field3，新增字段 ALTER，修改，上面的SQL中文释义可以理解为，修改数据表XX增加字段XX，其实还是比较直白的 field2 = &quot;学号 single&quot;，设置字段特性，字段名称为学号，类型为Single，单精度实数 Set rs = cnn.Execute(SQL)，运行该SQL语句 字段约束 "},{"title":"Access/VBA/Excel-新建Access文件-02","date":"2023-08-01T06:25:46.000Z","url":"/2023/08/01/Access-VBA-Excel-%E6%96%B0%E5%BB%BAAccess%E6%96%87%E4%BB%B6-02/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：逻辑过程 引用Microsoft DAO 3.6 Object Library（工具-引用） 定义DAO及地址变量 变量赋值 判断拟创建文件是否存在，不存在则创建（带密码和不带密码的） 应用场景 Access文件的创建，当然可以通过右键创建 当存在大量的Access数据库时，根据实际需要自动创建 或者是快速创建特定需求的数据库（如带密码） Part 2：代码（创建空白数据库） Part 3：代码（创建带密码数据库） 将创建数据库代码替换如下，新建Access数据库密码为xxx 其中pwd可以理解为password简写 手动打开该数据库时，会弹出输入密码框 输入密码界面 Part 4：部分代码解读 Dir(dbAddr1) = &quot;&quot;判断文件是否存在，若成立表示不存在 CreateDatabase(数据库绝对地址,字符串比较规则)，这里采用的是简体中文 官方解读网址： dbLangChineseSimplified意义，官方定义：A string expression that specifies a collating order for creating the database “;pwd&#x3D;xxx”，表示密码为xxx，注意那个;不能省略 番外：其实也可以通过在硬盘中设置一个空白的Access文件，若需新建文件，直接复制该文件即可"},{"title":"Access/VBA/Excel-数据库-01","date":"2023-08-01T06:25:25.000Z","url":"/2023/08/01/Access-VBA-Excel-%E6%95%B0%E6%8D%AE%E5%BA%93-01/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"Part 1：概览 在我们之前介绍种种VBA的使用，其实主要就是一个数据处理过程，类比我们的工作很多时候人承担的也是一个信息处理的角色 用户直接看到的Excel工作表整体可以分为四个部分 操作界面，就是使用者可以点击的一系列按钮 数据处理过渡表格（可选，可以直接在内存中处理），就是一些计算借助了Excel工作表（类似于数组，看起来更直接） 数据库，计算完的数据保存到这些工作表之中，输出时会用到其中的数据 输出模板，信息处理后按照什么形式输出 这个系列中重点介绍的Access替代的就是原数据库工作表这个部分，其中ADO&#x2F;DAO&#x2F;SQL都是操作Access的方法 整体的思路是将数据库从整个信息处理过程中独立出来，用专门方法去操作 那么为什么这么做？看看下篇 Part 2：Access 定义：Microsoft Office Access是由微软发布的关系数据库管理系统。它结合了 Microsoft Jet Database Engine 和 图形用户界面两项特点，是 Microsoft Office 的系统程序之一（百度百科） 这个系列中，对数据库的操作全部是后台进行的，都是通过代码实现的 本系列用的功能主要就是Access的表，其它的暂且不需要使用，所以理论上来说不需要了解Access软件的各个操作按钮，但是建议各位打开这个软件看看，有个感性认识 可以简单理解为Excel，也是由一个个工作表构成，只不过约束更多 Access一个工作表的列称为字段，一行称为一个记录，这两点记住 为什么要使用Access，竟然主要使用的也是工作表，原因如下： Excel文件过大时，例如超过50M，普通办公电脑处理起来就非常卡了 Access支持2GB文件的处理，理论上允许255个人并发处理，这个基本上已经满足日常办公所需 Access操作起来非常方便，对数据的管理很省心，例如增加一个新的记录只需一句SQL,而不用寻找存储具体的行号 Access允许同时对多个工作表进行连接处理，就是很容易从不同的表获取关联信息，底层的寻找数据工作是Access系统自己处理的 如果你想在数据处理的道路上走的更远，数据库技术是必须要学习的 Access界面 Access规格（Access软件打开后F1按钮，输入规格得到对应帮助文件） Part 3：ADO&#x2F;DAO ADO&#x2F;DAO类似于FSO使用前需先引用 对于新手建议可以采用前期引用，这样输入代码的时候会有提示，打开Excel的VBE界面，前期引用方法：工具菜单-引用，勾选 Microsoft ActiveX Data Objects 2.8 Library Microsoft DAO 3.6 Object Library 后续的代码使用都是默认大家已经勾选了这两个选项 如果大家有看上一篇关于网页操作的：VBA&#x2F;Excel-网页操作-01，其实也是引用一个库，VBA的扩展库还是蛮多，有需求的可以研究一下 通过ADO&#x2F;DAO打通Excel与Access的连接 引用 Part 3：SQL 定义：结构化查询语言(Structured Query Language)简称SQL(发音：&#x2F;ˈes kjuː ˈel&#x2F; “S-Q-L”)，是一种特殊目的的编程语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统；同时也是数据库脚本文件的扩展名（百度百科） SQL不仅仅使用在Access这样的数据库，基本所有的关系型数据库都支持该语言，但是针对不同的数据库同一个操作写法上可能会有区别 这个系列中主要涉及的就是对数据库的增、删、建、改、查 "},{"title":"Access-VBA-目录","date":"2023-08-01T06:23:23.000Z","url":"/2023/08/01/Access-VBA-%E7%9B%AE%E5%BD%95/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["access","/tags/access/"]],"categories":[["vba-access","/categories/vba-access/"]],"content":"目录： Excel-Access-入门（Excel作为界面端，Access作为数据库） Access-控件解析 Access-小示例 Access-大项目-培训管理系统 Excel-Excel-入门（Excel作为界面端，Excel作为数据库） Excel-Access-入门（Excel作为界面端，Access作为数据库） Access&#x2F;VBA&#x2F;Excel-数据库-01 Access&#x2F;VBA&#x2F;Excel-新建Access文件-02 Access&#x2F;VBA&#x2F;Excel-Access表及字段创建-03 Access&#x2F;VBA&#x2F;Excel-Access记录创建-04 Access&#x2F;VBA&#x2F;Excel-Access记录修改-05 Access&#x2F;VBA&#x2F;Excel-Access记录删除-06 Access&#x2F;VBA&#x2F;Excel-Access字段删除-07 Access&#x2F;VBA&#x2F;Excel-获取数据库数据-08 Access&#x2F;VBA&#x2F;Excel-单表筛选数据-09 Access&#x2F;VBA&#x2F;Excel-多条件筛选数据-10 Access&#x2F;VBA&#x2F;Excel-左连接-11 Access&#x2F;VBA&#x2F;Excel-12-模糊查询 Access&#x2F;VBA&#x2F;Excel-13-嵌套查询 Access&#x2F;VBA&#x2F;Excel-14-消除重复值 Access&#x2F;VBA&#x2F;Excel-15-表信息整体迁移 我是分界线 Access-控件解析 Access-控件解析-列表框-01-多选数目获取 Access-控件解析-列表框-02-获取选项 Access-控件解析-列表框-03-向列表框录入信息 Access-控件解析-列表框-04-双击效果 Access-控件解析-组合框-01-下拉列表 Access-控件解析-组合框-02-两个组合框联动 Access-控件解析-文本框-01-格式设置 Access-控件解析-按钮-01-关联代码 Access-控件解析-按钮-02-来个双击 Access-控件解析-标签-01-控件提示 Access-控件解析-窗体-01-弹出 我是分界线 Access-小示例 Access-常用功能解析-01-账户权限管理（Environ(“username”)） Access-小示例-02-连接mdb数据库 我是分界线 Access-实战项目-培训管理系统 Access-培训管理系统-01-概括 Access-培训管理系统-02-来个界面 Access-培训管理系统-03-建个数据库 Access-培训管理系统-04-清空界面及下拉列表实现（上篇） Access-培训管理系统-04-清空界面及下拉列表实现（下篇） Access-培训管理系统-06-按钮代码设置之 清空所有 Access-培训管理系统-07-按钮代码设置之增加学员 Access-培训管理系统-08-按钮代码设置之 删除所选行 Access-培训管理系统-09-按钮代码设置之 录入（1） Access-培训管理系统-10-按钮代码设置之 录入（2） Access-培训管理系统-11-按钮代码设置之 录入（3） Access-培训管理系统-12-输出界面 Access-培训管理系统-13-输出个人培训档案 Access-培训管理系统-14-输出老师上课记录 Access-培训管理系统-15-输出所有老师上课记录 Access-培训管理系统-16-首页 Access-培训管理系统-17-番外篇-程序发布 "},{"title":"微信图文编辑器-Markdown","date":"2023-08-01T05:49:50.000Z","url":"/2023/08/01/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E6%96%87%E7%BC%96%E8%BE%91%E5%99%A8-Markdown/","tags":[["markdown","/tags/markdown/"],["github","/tags/github/"]],"categories":[["github","/categories/github/"]],"content":"今天推荐的开源项目可以将 Markdown 文档自动即时渲染为微信图文，还可以自动排版，支持自定义 CSS 样式，最终什么样式你可以自己定义。 也就是说你只需要在 Markdown 编辑器上写文章，就能一键生成一篇样式简洁而又美观大方的微信图文，这就大大提高了你的效率，不用每天去排版了。 图片怎么办？别担心，这个开源项目还支持 GitHub、阿里云、腾讯云、七牛云 等图床。 功能特性 支持 Markdown 所有基础语法 支持浅色、暗黑两种主题模式 支持 Ctrl + F 快速格式化文档 支持色盘取色，快速替换文章整体色调 支持多图上传，可自定义配置图床 支持自定义上传逻辑 支持在编辑框右键弹出功能选项卡 支持批量转换本地图片为线上图片 "},{"title":"excel-vba 数据库操作方式","date":"2023-07-28T05:44:42.000Z","url":"/2023/07/28/excel-vba-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E6%96%B9%E5%BC%8F/","tags":[["excel","/tags/excel/"],["vba","/tags/vba/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"]],"categories":[["excel","/categories/excel/"]],"content":"一、卡点： 这个问题是用wps连接的OLEDB（access数据库）, 用excel打开就没有问题，如果用wps就需要用其他方式 excel： wps： 二、access 数据库操作指南 第一步：告诉电脑我要用ADO了， ​ 这个操作在【工具】–&gt; 【引用】–&gt; 【Microsoft ActiveX Data Objects 6.1 Libray】 第二步：创建连接对对象 第三步：连接数据库 (注意这个部分，OLEDB, 2007以上是12.0，一下是8.0或4.0) 第四步：执行sql语句 第五步： 关闭数据库连接，并释放变量（一定要） 三、数据库语法 增加数据 删除数据 修改数据 查找数据 数据库记录集 通过查询或其他方式获取数据后，需要存放在一个记录集对象中 创建一个记录集对象，创建记录集主要有两个方法(第二种用的最多) 第一中不能修改记录集对象，第二种可以修改 使用 Set rs = con.Execute(sql) 语句可以直接执行 SQL 查询，并将结果集赋值给记录集对象 rs。这种方法适用于执行 SQL 查询并将结果保存在记录集中。 使用 rs.Open sql, con, adOpenReyset, adLicjOptimistic 语句可以在已经创建的记录集对象 (rs) 上打开一个结果集。这个方法可以用于在已经存在的记录集对象上重新打开一个新的结果集。 获取记录集中的字段，需要用Fields.name 将记录集返回到数据表 释放对象变量空间 四、多表查询（where连接) 案例1：查询所有学生的姓名、性别、选修的课程名称及成绩 案例2：查询“王维欣”同学的性别、选修的课程名称及考试成绩 五、多表查询（内连接） 案例1：查询所有课程的平均成绩，结果包含课程名称，平均成绩两个字段 案例2： 查询所有课程的平均成绩，结果包含课程名称，平均成绩两个字段，平均成绩要大于85分 （sql语句的执行顺序是: from –&gt; where –&gt; group –&gt; having –&gt; select） 六、多表查询（外连接） 基本格式： from 左表 连接类型 右表 on 连接条件 案例1：查询所有导师的院系信息，包含姓名，性别，职称，系号、系名 ​ 左连接：左边连接字段有的，而右表没有的，左表全部显示，右表留空 (根据左表查右表) 案例2：查询所有院系的导师信息，包含系号、系名、姓名、职称 右连接：右表连接字段有的，而左表没有的，右边全部显示，左表留空 （根据右表查左表） 案例3：查询所有导师、所有院系的信息，包含姓名、性别、职称、系号、系名 七、多表查询（自连接）含义：自己连接自己 案例1：查询员工表中姓名有重复的员工记录(刷出全部记录看看) 八、子查询（嵌套查询） 案例1：查询每个部门年龄在30岁以上的员工的平均年龄 案例2： 查询年龄高于平均年龄的员工信息，包含姓名、身份证号、部门、年龄职务 案例3： 查询年龄排在第5-10名的员工信息，包含姓名、身份证号、部门、年龄职务 "},{"title":"记录我的小项目-第二弹","date":"2023-07-28T02:58:51.000Z","url":"/2023/07/28/%E8%AE%B0%E5%BD%95%E6%88%91%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%AC%AC%E4%BA%8C%E5%BC%B9/","tags":[["项目集锦","/tags/%E9%A1%B9%E7%9B%AE%E9%9B%86%E9%94%A6/"],["excel","/tags/excel/"],["销售流程","/tags/%E9%94%80%E5%94%AE%E6%B5%81%E7%A8%8B/"],["vba","/tags/vba/"]],"categories":[["项目日记","/categories/%E9%A1%B9%E7%9B%AE%E6%97%A5%E8%AE%B0/"]],"content":"一、项目起因： 前段时间开会，跟公司快递营销组两位同事闹了点不愉快，这个原因是两方面的：第一是因为也是对工作项确实不太清楚（说实话，官僚主义太严重，全是形式主义，扣字眼一个比一个厉害，整一些形式主义的东西，什么三大标准化，要必须产出，也没明白什么是三大标准，不清楚怎么定义，也不清楚什么算什么标准，怎么提交怎么弄）第二是对这项工作的不认可（业务本身是千变万化的，标准是在工作中形成的，不清楚这件事对项目有什么帮助，在产品还在定义中，出标准化有什么意义。花大量的时间做了一些纸面文档【说多了，算是吐槽吧】）后来被批了，想想也没什么，思想本身也无法统一也无法调和，只能低头默认（得吃饭呀），后来挨批了一顿，然后想想怎么缓和下关系（写到这里，突然觉得自己活成自己讨厌的样子了，社会发展，个人成长，环境适应） 针对这件事，自己也有问题，对事情的不认可可以向上提出，可以无法接收文化离开，可以沉默隐忍接受，但是不应该对项目里执行的人出言刁难，（本意并非如此，只是提出了疑问，没想到点了炸药包，确实不知三大标准化是什么）尤其不应该对一个小专员，然她下不来台。现在也没到权力斗争的底部，搞掉别人对自己也没什么好处，自己的思维和工作方式的问题，也需要检讨。 后来想想，自己在以前的工作中做过一个《培训管理系统》就琢磨给你们用excel也做一个自动化系统吧，算是关系的缓和，也不是有意刁难的，这个事情也算过去了 二、使用工具：​ wps：最新版就可以 ​ excel：最好是2017-2023版 ​ WPS宏插件： VBA宏插件（含安装说明）.rar ​ 密码：1234 提取码：yypd ​ access数据库： ​ office_ tool Office_Tool_with_runtime_v10.1.3.4.zip ​ 破解工具 ReBirth Activator 1.4.zip ​ sqlServer数据库：SQLserver 安装教程 三、项目需求： 可以分发数据，让销售自己的数据看自己 可以有一个数据对照，因为用“vlookup”有时候会出错（销售填写的表格有时候会加一个空格） 有一个数据看板和查找系统 四、项目思考： 根据现有的信息来看，无法通过钉钉进行文件共享，通过公式来满足 数据库有两套方案： (1). 用传统的数据库进行，access，sqlServer ​ 优势：数据库安全，易操作，数据调用方便 ​ 劣势：需要给他人电脑安装access数据库和sqlserver，比较麻烦 (2).用excel 的xls 作为数据库，ocdb 用 jet，通过共享文件进行 ​ 优势： 简单方便，wps也能用 ​ 劣势：数据不安全，不确定效率如何，另外是否也需要给别人的电脑安装OCDB不确定 数据分配方式： 准备多个表格，用名字区分，每人一个（简单易行就好了，不整太复杂的）用数据库区分 数据展示： 看下模板，有合适的模板直接套用，加代码就可以了 五、项目逻辑： 将所有的数据放入数据库，中台可以获取所有的数据，给中台加入一个数据获取按钮，获取最新的所有数据，数据最好是更新过来的（因为数据量有几千条，不能所有数据一起更新） 中台做一个数据分配按钮（每天更新一次数据，分配给销售） 销售一人准备一个表，做数据的提交，注意限制原始数据的改动 六、项目计划： 测试数据库：测试access，及xlsx 找合适的表模板 敲代码 七、具体实现：​ 见： 八、项目指标：​ 暂未涉及 ​ &#x3D;&#x3D; 当前项目进展：&#x3D;&#x3D;"},{"title":"使用免费国外服务器搭建ChatGPT接口服务[附注册教程/源码]","date":"2023-06-26T07:09:32.000Z","url":"/2023/06/26/%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9%E5%9B%BD%E5%A4%96%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAChatGPT%E6%8E%A5%E5%8F%A3%E6%9C%8D%E5%8A%A1-%E9%99%84%E6%B3%A8%E5%86%8C%E6%95%99%E7%A8%8B-%E6%BA%90%E7%A0%81/","tags":[["ChatGPT","/tags/ChatGPT/"],["服务器","/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"]],"categories":[["chatgpt","/categories/chatgpt/"]],"content":"最近这段时间，ChatGPT火的一塌糊涂，到处都是介绍ChatGPT的文章，但自从前段时间开始，很多人可能都发现了ChatGPT接口国内调用不了了，而很多人可能是抱着玩玩的心态，并不愿意去花钱另外购买国外的服务器，当然这其中也包括我，由于没有预算去购买一台国外的服务器，所以我公众号的ChatGPT功能也被迫停止运行了一段时间，但是今天我想告诉大家，本站公众号ChatGPT服务重启了，还是之前的使用方式，但是速度快了很多，有兴趣的朋友可以去关注公众号去体验，不知道怎么用的可以看公众号的“使用帮助”。 回到正题，虽然我重启了公众号的ChatGPT功能，但是我并没有额外花钱，因为我找到了免费的国外服务器，它不香吗？？？市面上提供服务器免费试用的厂商不少，比如阿里云、亚马逊等等，但是注册比较麻烦，需要信用卡，国外手机号、国外身份信息等等之类的信息，我最先也是准备注册阿里云，后来卡在了手机号这块儿，免费的手机号根本注册不了，而我又不想花钱去买验证码，直到最后我找到了hostbuddy这个网站，全程只需要一个邮箱即可，下面介绍一下注册流程。 一、hostbuddy注册 1、注册账号 首先我们访问hostbuddy官网，地址：，并点击“GET STARTED”按钮， 填写注册信息，并点击注册 不出意外的话，我们会进入以下界面 2、验证账号 进入注册账号时填写的邮箱，找到激活邮件，并点击激活链接 3、登录账号 账号成功激活后会转向到登录页，填写我们注册的账号并登录 4、激活试用计划 首次登录完毕之后我们需要激活我们的试用计划，点击“Try Now” 可以看到默认的地区是美国，刚好可以用于我们访问ChatGPT服务，然后我们填入密码和网站名，这里的密码就是后面我们登录FTP的密码，网站名就是网站的目录名称，然后点击“Next” 确认信息并点击“提交” 此时不要关闭窗口，需要等待激活完成，一般1-3分钟 5、创建node应用 在激活完成后，我们登录主机面板并创建node应用， 这里显示了我们的FTP登录信息和对外域名，我们点击“管理网站”并点击“NodeJs“进入node应用创建界面 按序号依次点击完成node应用的创建，需要注意的是当激活NodeJS后，所有的javascript将会被当作NodeJS运行。 6、登录FTP 在node应用创建完成后，我们用步骤5截图中显示的FTP信息和步骤4设置的密码登录FTP，登录后目录结构如下： “www”即为存放网站源码的目录，我们进入目录 目录中有2个文件，default.asp是网站的默认页，我们需要删除掉，web.config是网站的配置文件。 7、测试node应用 在node应用创建完毕后我们就可以开始测试了，创建app.js， 并编写如下代码： 注意这里不能自定义端口，必须使用process.env.PORT。将app.js文件传到www目录下，并更改配置文件如下： 访问步骤5中获取的对外域名，如果页面显示”Hello, world!“则测试通过。 二、部署ChatGPT接口服务 通过步骤一，我们注册了免费的国外服务器，并创建了node应用环境，接下来我们需要开始部署ChatGPT的接口服务，这里我们使用koa搭建一个简单的服务，首先创建基础项目结构， app.js的代码如下： gpt.js代码如下： 对于getData方法的实现，这里图方便使用request库（目前已废弃）来发起请求，大家可以根据自己的习惯更改，代码如下： 将所有的源码连同node_modules一起上传到www目录下，这里稍微有点慢，可以尝试压缩后再上传，然后在线解压， 等待所有文件上传完毕后，通过“对外地址&#x2F;gpt&#x2F;chat?q&#x3D;你的问题”即可访问我们部署的ChatGPT服务。 三、问题总结 1、hostbuddy服务器的免费试用时长目前是60天即2个月，这个门槛比较低，到期前找个邮箱重新注册即可继续使用，当然也可以选择其他的厂商，比如LAF，免费时长是一个月，需要手机号注册，具体可参考：用Laf云平台，两步将ChatGPT接入微信公众号(含代码) 2、注册hostbuddy一个IP只可注册一次，如果遇到访问注册页显示已经注册的情况，可以选择重启路由器换IP或者使用代理。 3、如果使用代理注册hostbuddy需要注意并不是所有的地区都可以注册免费试用账号，具体支持的地区需要自测，我只发现日本是不行的。 4、hostbuddy服务器目前默认的node版本是v18x，如果需要自定义node版本，可参考： 5、在更新程序文件时，如遇到代码不更新的情况，需要重新保存入口文件比如app.js，重新上传即可。 6、如果网站无法访问，又没有给出具体的错误信息，可以到FTP网站目录如www下根据访问时间查看iisnode目录下对应的txt文件获得报错信息。 四、结语 如需下载本文所涉及的源码及素材包，请在关注公众号后发送：gpt"},{"title":"有趣的chrom插件","date":"2023-06-20T06:09:23.000Z","url":"/2023/06/20/%E6%9C%89%E8%B6%A3%E7%9A%84chrom%E6%8F%92%E4%BB%B6/","tags":[["插件","/tags/%E6%8F%92%E4%BB%B6/"],["chrom","/tags/chrom/"],["github","/tags/github/"]],"categories":[["undefined",""]],"content":"推荐一位国外全栈开发者大神：Alyssa，在 Github 上有 5.34K 的关注者。她是一名全栈开发者、Sonuum 公司的创始人。 被 Maker Mag 评为 2018 最佳女性 Maker，并两次入围 Product Hunt Maker of the Year 决赛。 注：Product Hunt 是国外的一个寻找好产品的网站，开发者或者开发团队可以把自己开发的产品发布到网站，与社区的用户一起讨论。本文中推荐 4 个有趣的开源项目，都是由开发者 Alyssa 完成。 本期推荐开源项目目录： \\1. 适用于 Chrome 的屏幕录制工具 \\2. 强大的浏览器插件 \\3. 实时协作的地图工具 \\4. 创建漂亮的流程图 01适用于 Chrome 的屏幕录制工具 适用于 Chrome 的最强大的屏幕录像机和注释工具，使用该插件你可以录制你的屏幕和并且在屏幕任意位置进行绘画、添加文本、添加箭头，同时还可以录制你的电脑音频。 录制完成，你可以对录制的视频片段进行修剪，导出为 MP4、Gif 并且一键保存到谷歌云盘。该开源项目的地址和使用的库的地址都放在了下面。 编程语言：Javascript 开源地址： 相关开源组件地址： 用于交互式文本和箭头：下拉菜单的开源组件：用于修剪&#x2F;删除录音部分的范围组件：颜色选择块：用于在录制时异步保存视频：使下载的视频可搜索的开源组件： 02强大的浏览器插件 使用开源项目 Omni 可以帮助你更专业的管理你的浏览器， Omni 提供了一个简单界面，在界面中你只需要使用简单的命令就能管理选项卡、书签、浏览器历史记录、执行各种操作等等。 你可以方便的搜索、浏览管理标签、快速搜索浏览历史记录、与 Notion、Figma、稳定集成，同时好包含更多高级设置。 编程语言：JavaScript 开源地址： 03实时协作的地图工具 Mapus 是一种在地图上协作探索和注释的工具，开源一年获得了近 3K 的 Star。使用该开源项目你可以在地图上绘制、标记、画出区域等等，想当于在普通的地图上增加了实时协作的功能。 通过实时协作，你可以与其他用户同步计划和行程；你能使用画笔或者箭头在地图上标记和注释；还可以创建一些标记，方便快速定位标注地图上的位置，同样可以把地图数据导出。 编程语言：JavaScript、CSS、HTML 开源地址： 04创建漂亮的流程图 这是一个轻量级的 JavaScript 库 近1W人 Star，通过该 Flowy 你能在你的应用中创建漂亮的流程图，使用步骤如下： 更详细的教程可以参考该项目的 Readme 文件： 开源地址： "},{"title":"申请永久免费域名并绑定到个人网站","date":"2023-06-20T06:02:05.000Z","url":"/2023/06/20/%E7%94%B3%E8%AF%B7%E6%B0%B8%E4%B9%85%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E5%B9%B6%E7%BB%91%E5%AE%9A%E5%88%B0%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/","tags":[["域名","/tags/%E5%9F%9F%E5%90%8D/"],["绑定域名","/tags/%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"]],"categories":[["undefined",""]],"content":"eu.org一个从1996开始提供免费域名的组织, 其官网地址是  ，他帮助学生、爱好者或者非营利组织不用花费购买域名就可能拥有自己的免费域名，虽然 eu.org 网域切确来说这是一个子域名（Subdomain）或者二级域名，但是根据一些网站的资讯，有许多大型互联网公司，像是 Google, Cloudflare, Bing 等厂商都已经将eu.org域名当成是一个顶级网域了。 eu.org对个人和组织是免费注册的。 域名申请申请地址申请地址： 第一次打开你可能会怀疑进错了页面，不用怀疑，他们就是这么简洁的页面。 点击 Sign-in or sign-up here! 进入登录页面。 注册然后点击Register进入注册页面。输入你的基本信息，比如Name，Email等等基本信息，这里不建议填国内的地址信息，你可以进入  网站随机生成一个虚拟英国或者美国地址，会提高通过的概率。 注册成功之后点击New Domain申请新的域名， 设置你的域名，eu.org后缀，比如我申请一个新的域名：techxiaofei.eu.org ![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’‘ xmlns:xlink&#x3D;’ stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E) 最主要的就是NameServers也就是域名解析，也就是我们要用什么域名解析商来解析域名。 ![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’‘ xmlns:xlink&#x3D;’ stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E) DNSPod这里填DNSPod的地址，也就是腾讯云的域名解析商，使用微信扫码登录就可以。 扫码之后点击右上角管理控制台-&gt;我的域名-&gt;添加域名，添加刚才你申请的域名，也就是techxiaofei.eu.org 点击确认，会提示未使用DNSPod，鼠标放上去会显示具体的DNS服务器地址： 这个DNS服务器就是我们需要在eu.org填写的Name Servers Name Servers选择server names，然后填写刚才DNSPod上的两个DNS服务器地址： 然后点击Submit后跳转页面显示： 说明你申请成功了，需要等待1到30天，通过会给邮件通知。 申请通过我这里等待了大半个月收到邮件通知，这个时候说明你的免费域名已经申请通过了。 收到通知之后就可以去DNSPod上添加具体的解析记录绑定到你的个人网站了： 绑定个人网站DNSPod记录申请通过之后DNSPod记录会从未使用DNSPod变为无记录，就说明域名已经授权使用DNSPod来解析了。只是还没有添加解析记录。 绑定域名到Vercel托管平台由于我的网站是部署在Vercel托管平台，所以我们需要先回到Vercel来添加域名： 回到你的vercel，点击你的项目-&gt;Settings-&gt;Domains 添加你刚申请的域名 添加之后会提示你需要域名解析商添加一条A记录。 添加一条A记录回到DNSPod域名解析商那里添加一条A记录，记录值就是Vercel平台提示的IP地址。 添加成功回到Verel托管平台，会自动刷新，显示合法配置。 然后点击域名后面的跳转链接，直接打开个人网站。 后记希望大家都能早日成功申请到自己的免费域名。"},{"title":"一键部署你的ChatGPT Web网站","date":"2023-06-20T05:57:00.000Z","url":"/2023/06/20/%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E4%BD%A0%E7%9A%84ChatGPT-Web%E7%BD%91%E7%AB%99/","tags":[["vercel","/tags/vercel/"],["ChatGPT","/tags/ChatGPT/"]],"categories":[["chatgpt","/categories/chatgpt/"]],"content":"想要搭建自己的ChatGPT Web网站，我们只需要两个账号： 1.Github账号 -账号 - 其实Vercel账号可以使用Github账号直接登录： 所以我们只需要注册一个Github账号即可。 开始1. Github我们首先先在Github上访问这个地址： 然后点击右上角的Fork也就是克隆，然后点击Create Fork把这个仓库克隆到你的账号下 这个时候就会把这个github 仓库克隆到你的个人账号下面。 Vercel克隆之后我们去到Vercel平台。Vercel 使用刚才的Github账号登录并授权。 我们直接点击Add New-&gt;Project，然后找到我们的ChatGPT-next-web这个Github仓库，点击Import导入 这个project name我们可以随便选，使用默认的即可。 我们唯一要注意的就是这个环境变量，我们需要把ChatGPT的API Key添加进来，然后部署。 这个API Key是为了验证你的身份，需要你有OpenAI账号。 ![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’‘ xmlns:xlink&#x3D;’ stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E) API key如果你不知道上面的API Key怎么获得，这个非常简单，我们打开openai的平台地址： 登录之后点击右上角的头像，点击Manage Account-&gt;API Keys-&gt;Create New Secret Key, 然后复制下来保存备用。 部署然后回到刚才的部署界面，在刚才的环境变量在Name里面输入 OEPNAI_API_KEY，然后Value就输入我们刚才复制的API Key 点击Add添加，然后我们点击Deploy部署。 当然如果你需要你的ChatGPT支持密码访问，可以添加一个新的环境变量， - 这个时候，我们的网站就会需要密码访问 我们点击Deploy，可以看到它就开始部署了 我们稍等一会就可以看到我们的网站就能部署成功了。 使用我们可以点击就可以进入到我们的ChatGPT 个人网站了。 此时Vercel 给我们自动分配了域名，当然这个域名由于某些原因，在国内可能无法访问，你可能需要使用自己的域名。 我们在刚才的部署成功的页面点击右边的Add Domain添加域名， 然后输入我们的域名，点击添加。我们选择默认的选项， 然后点击添加 添加之后Vercel会提示我们需要添加两条记录，一条是A记录，一条是CNAME记录。 我们进入到我们的域名解析商，这里我使用cloudflare来解析我的域名。 我们在这里点击添加记录： •首先我们添加A记录，记录类型是A，名称是@，然后ipv4地址就是刚才的ip地址•然后我们再添加一条 CNAME 记录，记录类型是CNAME，名称是www，值是刚才的值 现在我们这两条记录，就已经添加成功了 我们再回到我们的 Vercel 托管平台，可以看到，我们的DNS记录已经设置成功了 我们添加成功之后直接点击跳转，用我们自己的域名就可以访问ChatGPT Web网站了。 那我们可以开始在这里和ChatGPT进行聊天了。 角色扮演我们也可以让ChatGPT来扮演各种角色，此时ChatGPT的回答会更具有专业性。 我们可以看到这里有非常多的角色，我们来让他帮我们扮演一个职业顾问，点击左下角新的聊天，找到职业顾问点击跳转新的聊天。 然后我们问他问题：作为一个程序员，我以后的职业生涯应该怎么规划？ 点击发送，可以看到作为一个职业顾问，他给我们详细列明了我们有很多职业道路可以选择，然后还给我们的职业生活也做了一些规划。 如果不让它扮演职业顾问，它给的回答是怎么样的呢？ 可以看到，同样的问题，当我们不让他扮演任何角色的时候，他给我们的答案就相对专业性就没有那么强。 所以角色扮演在专业的问题上，ChatGPT能给到更好的回答，我们可以使用这个来获得更优秀的答案。 密码访问同时这个ChatGPT网站也是支持密码访问的，想要支持密码访问非常简单，上面已经告诉你如何添加环境变量。 如果你之前没有添加，这里教你如何再次添加。 点击你的当前项目，找到settings设置项，然后找到左边的Environment Variables也就是环境变量。 密码的环境变量的key是CODE，这个值你可以填写你的密码，比如说我填写techxiaofei，然后点击保存 现在我们环境已经添加成功了，添加成功之后我们重新编译一下，我们点击redeploy就是重编译。 重新访问我们的ChatGPT网站，可以看到上面提示：现在是未授权状态，请点击左下角设置按钮输入访问密码。 我们点击左下角的设置，然后找到访问密码，输入我们的访问密码，就可以正常和ChatGPT对话了。 后记这个ChatGPT Web网站可以解决在国内无法正常访问ChatGPT的问题 而且它也不需要云服务器，不需要你购买任何东西，完全免费，任何人都可以轻松一键部署，所以赶紧尝试一下吧。"},{"title":"Markdown 书写示例","date":"2023-06-19T03:35:27.300Z","url":"/2023/06/19/exp/","categories":[["undefined",""]],"content":"插槽 目录[[toc]] 引用 这是一条引用 自定义容器::: info 信息这是一个信息::: ::: tip 告示这是一个提示::: ::: warning 警告这是一个警告::: ::: danger STOP危险区域，禁止通行::: ::: details 点击查看代码 ::: ::: v-pre&#123;&#123; This will be displayed as-is &#125;&#125;::: ::: center居中文字::: ::: right居右文字::: 高亮我是 &#x3D;&#x3D;高亮&#x3D;&#x3D; 的 代码块行高亮&#123;1,3-5&#125; 更多用法参照： emoji:tada: 复选框 看板娘 调色板 多语言 上下标19^th^H2O 脚注脚注 1 链接^first. 流程图 TexEuler’s identity $e^{i\\pi}+1&#x3D;0$ is a beautiful formula in $\\mathbb{R}^2$. $$\\frac {\\partial^r} {\\partial \\omega^r} \\left(\\frac {y^{\\omega}} {\\omega}\\right)&#x3D; \\left(\\frac {y^{\\omega}} {\\omega}\\right) \\left{(\\log y)^r + \\sum_{i&#x3D;1}^r \\frac {(-1)^i r \\cdots (r-i+1) (\\log y)^{r-i}} {\\omega^i} \\right}$$ 演示::: demo 这是 demo 标题 ::: 存在超自然现象，谨慎使用！ 常用Front Matter 其他其他格式 请使用 Typora 编辑器辅助使用或者参照   书写规范，参见 此处"},{"title":"记录我的小项目-第一弹","date":"2023-06-19T00:57:46.000Z","url":"/2023/06/19/%E8%AE%B0%E5%BD%95%E6%88%91%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%AC%AC%E4%B8%80%E5%BC%B9/","tags":[["项目集锦","/tags/%E9%A1%B9%E7%9B%AE%E9%9B%86%E9%94%A6/"],["ideas","/tags/ideas/"],["小爬虫","/tags/%E5%B0%8F%E7%88%AC%E8%99%AB/"],["高考网站","/tags/%E9%AB%98%E8%80%83%E7%BD%91%E7%AB%99/"],["志愿填报","/tags/%E5%BF%97%E6%84%BF%E5%A1%AB%E6%8A%A5/"]],"categories":[["项目日记","/categories/%E9%A1%B9%E7%9B%AE%E6%97%A5%E8%AE%B0/"]],"content":"记录我的小项目-第一弹 一、项目起因： 最近一致在琢磨一个有趣的项目，可以涵盖自己的所学知识，运营、技术、产品、销售。最初规划是希望通过chatgpt的Vercel项目免费开发给美术生，Midjourney出一些美图在小红书、抖音上发进行引流，chatGPT做钩子引导公众号，通过公众号做文章软文做转化，小程序做chatgpt活跃,。最后完成产品的售卖。 而后切入到6月高考季，发现社会热点的仍是聚焦志愿填报，而且自己的目标人群也有十分之一是美术生，所幸自己的Excel运用也不错，就想通过Excel做一个高考志愿填报的系统，主要用公式进行志愿分析，用于引流，料想应该不会差。遂进行初期尝试。 记录工具：hexojs&#x2F;hexo博客，vercel部署 chatGpt：Yidadaa&#x2F;ChatGPT-Next-Web，vercel部署 流程工具：aipaw &#x2F; dootask，docker部署 小程序工具：月星墙 &#x2F; ChatGPT-MP，（未开发） 二、项目逻辑： Midjourney出图，在小红书（美术生栋栋阿）、抖音号（美术生栋栋阿）发，通过简介发布美术生-找我免费领chatGPT。Midjourney教程。引导（美考攻略公众号） 美考攻略账号直播“美术生志愿填报”引导加公众号领取 公众号发布美术生文章和产品软文，菜单发布ChatGPT单日密码，引导加小程序 小程序有chatGPT,内含升序规划和资料包，引导加微信 产品包设计，美术生小班课、直播插画课、美术生找画室产品 chatgpt可以涵盖美术生找画室、美术生查成绩、美术生升学规划、美术报志愿等功能。通过小红书、抖音等新媒体渠道进行引流。 三、整体规划： 小红书、抖音账号注册；公众号注册（6月完成） 完成Midjourney出图。（6月完成） 完成美术生志愿填报系统设计（6月完成） 公众号文章存档（7月完成10篇） 小班课产品营销物料设计（7月完成10篇） 找老师，出课程（待定） 小程序完善（待定） 四、当前进展： 小红书、抖音账号、公众号注册完成(已完成) 美术生志愿填报设计制作中（计划6月29日前完成） 五、指标计划：暂未涉及 &#x3D;&#x3D; 当前项目进展：&#x3D;&#x3D; 已经延后"},{"title":"pandas 使用方法","date":"2023-06-14T06:24:22.000Z","url":"/2023/06/14/pandas-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","tags":[["pandas","/tags/pandas/"]],"categories":[["undefined",""]],"content":"好的，我可以帮你介绍如何使用 Pandas 来读取 Excel 数据并实现追加数据或追加 Sheet。 首先需要安装 Pandas 库，可以使用以下命令进行安装： 有了 Pandas 库，就可以通过 read_excel() 方法读取 Excel 文件了。假设我们有一个名为 data.xlsx 的 Excel 文件，可以使用以下代码读取其中的 Sheet1 中的数据： 其中 sheet_name 参数可以用来指定要读取的 Sheet 名称或 Sheet 的下标。 接下来可以使用 Pandas 提供的方法往 Excel 中追加数据。假设我们有一个名为 new_data.xlsx 的 Excel 文件，要将数据追加到其中的 Sheet1，可以使用以下代码： 以上代码中，我们首先使用 read_excel() 方法读取名为 new_data.xlsx 的 Excel 文件中的 Sheet1 数据，然后创建一个包含新数据的数据帧 df2，接着使用 concat() 方法将新数据追加到原有数据后面，最后使用 ExcelWriter() 创建一个 ExcelWriter 对象，并使用 to_excel() 方法将数据写入 Excel 文件中的 Sheet1。 如果要新增一个 Sheet，可以使用以下代码： 以上代码中，我们使用 read_excel() 方法读取名为 new_data.xlsx 的 Excel 文件中的所有数据，接着创建一个包含新数据的数据帧 df2，最后使用 ExcelWriter() 创建一个 ExcelWriter 对象，并使用 to_excel() 方法将新数据写入 Excel 文件中的新 Sheet 中。请注意，我们在 ExcelWriter() 中指定了 engine 为 openpyxl，并将 mode 参数设置为 a，这样可以以追加模式打开 Excel 文件。"},{"title":"高考志愿网JS逆向","date":"2023-06-14T01:15:05.000Z","url":"/2023/06/14/%E9%AB%98%E8%80%83%E5%BF%97%E6%84%BF%E7%BD%91JS%E9%80%86%E5%90%91/","tags":[["高考网站","/tags/%E9%AB%98%E8%80%83%E7%BD%91%E7%AB%99/"],["逆向","/tags/%E9%80%86%E5%90%91/"]],"categories":[["undefined",""]],"content":"起因：最近想出一个高考志愿填报的excel系统，想先从网上拿一些资源，最开始的设计是希望从网站上找到近5年的报考指南PDF，然后写代码OCR扫描PDF，摘取关键数据，后发现网站没有PDF,于是告吹。后来就找寻网站，看看有没有我想要的数据，于是找到了”掌上高考“，发现有一些数据是想要的。（其实公司内有一个高考志愿网站，草率了） 处理数据： 第一步：打开开发者工具找到对应的数据文件 第二步：分析payload发现是一个POST请求，需要给他的服务器发送数据，再分析payload，发现里面有要发送的数据，里面有个signsafe（估计是个加密数据）看来必须要逆向才行了 后来发现这个网站做逆向纯属脱裤子放屁了。（既然可以用GET请求得到数据，signsafe就是个摆设）不过正好可以学习一下如何逆向。 第三步：用search搜索一下signsafe（这个需要用H5模式）发现了一堆数据，但是能用的就是第一个 第四步：分析数据通过上下文判断是用的Hmac sha1加密，找到了signsafe 第五步：找到文件，用source打断点试试根据文件夹的headers找到数据文件夹 经过断点运行，多试了几次，发现就是这个代码。 这是一个加密的方法，所有的singsafe都走这一个方法，断点可以走第二遍，就能出现我们想要的safe 具体的加密逻辑是这样的：首先获取url（包括传递的数据），然后去掉https:\\\\,进行sha1加密，密钥是D23ABC@#56,加密后再进行Base64加密，再将加密的数据用MD5进行加密。最后进行拼接。 代码实现："},{"title":"搭建一个Hexo博客并用vercel部署","date":"2023-05-31T00:28:47.588Z","url":"/2023/05/31/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAHexo%E5%8D%9A%E5%AE%A2%E5%B9%B6%E7%94%A8vercel%E9%83%A8%E7%BD%B2%20(2)/","tags":[["vervel","/tags/vervel/"],["hexo","/tags/hexo/"]],"categories":[["github","/categories/github/"]],"content":"Hexo 是一款基于Node.js的静态博客生成器，具有简单易用、快速高效、丰富主题、插件支持等特点，适合用于个人博客、技术文档、个人网站等场景。而且基于 markdown 编写起来非常顺畅，个人非常喜欢这个博客。这次下定决心搭建一个 Hexo 博客来实现我日常分享的一个小博客网站。 前置准备 一台 windows 笔记本电脑，当然 mac 电脑也是没问题的，即使 Linux 电脑也是可以的。 Git工具: Git (git-scm.com) Node+ Npm工具：Node.js (nodejs.org) 准备好 Hexo 博客程序：  创建一个 Git 仓库 注册一个 vercel 账号(如果有自己的服务器或者不适用 vercel 可以不用管这一步)： 准备一个域名(如果不需要独立域名可以略过这一步) hexo 本地图片部署 正式开始安装 Hexo 工具上面的 GIT和 Node在百度或者谷歌上已经有很多相关专业的教程，这里就不详细讲解这块的知识了。一般来说到官网上下载完毕直接下一步下一步即可。我们先来全局安装一个 Hexo 工具 创建 hexo 本地博客程序安装完成之后我们就可以使用 hexo 的工具来创建博客了。在电脑上创建一个目录并进入该目录，我起名叫做 javier-blog，刚才我们安装过 Git 工具这时候就派上用场了。在该目录内右键找到 Git Bash Here 点击打开一个 Git的命令行窗口或者你可以使用其他的命令行工具。执行以下命令 启动 hexo 本地服务安装完成 hexo程序直接执行 hexo s 命令就可以打开 hexo 的本地服务。在命令行上会显示启动后的服务地址。 以上就正式搭建完成 hexo 的博客程序了。 修改博客的基本信息修改 博客的标题，副标题，描述，语言时区等信息 修改博客地址 创建 github 仓库打开  创建一个仓库用来存储我们的部署程序,创建后是这个样子的。 同步本地 Hexo 部署页面到 github 中初始化 git 项目 打开本地 **hexo **项目目录并执行下面的命令,用来安装 git 的部署组件 安装之后在项目目录中找到**_config.yml **修改 deploy 参数 执行 hexo g 然后执行 hexo d 将静态页面部署到 github 上，是这个样子的。 将项目部署到 vercel 上如果不需要部署到 vercel 上此步可以略过 在 **dashboard **上 选择 Create a New Project 在关联的 **github **账户中，找到刚才的博客仓库，选择 import 进入部署页面选择 deploy 生成之后点击 Continue to Dashboard 点击 Visit 就可以看到刚刚生成的博客程序了 将项目资源文件放入同一个仓库中在命令行创建一个新的分支并切换过去 提交代码 常用命令 "}]