<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[tao系x-mini-wua、x-sign、x-sgext、x-umt]]></title>
      <url>/2023/10/07/app%E9%80%86%E5%90%91/tao%E7%B3%BBx-mini-wua%E3%80%81x-sign%E3%80%81x-sgext%E3%80%81x-umt/</url>
      <content type="html"><![CDATA[<blockquote>
<p>目录</p>
<ol>
<li>解决抓不到包</li>
<li>定位加密位置<br>Hook加密<br>搭建RPC服务<br>主动调用<br>解决初始化<br>Flask接入Hook<br>测试接口</li>
</ol>
</blockquote>
<p>tao系的App基本都离不开x-mini-wua、x-sign、x-sgext、x-umt这个四个参数</p>
<h3 id="1-解决抓不到包"><a href="#1-解决抓不到包" class="headerlink" title="1. 解决抓不到包"></a>1. 解决抓不到包</h3><p>这个app的底层网络通信的协议并不是普通的http协议，而是自己实现的一套私有协议Spdy。使用Charles、Fiddle等抓包工具对app进行抓包时，你会发现是抓不到包的</p>
<p>我们只需要把协议Spdy hook掉，不让走Spdy协议，就可以抓到包了<br>反编译后通过关键词定位及分析，只要把这个函数hook为false即可</p>
<p><img src="/./../../img/img/a20244e0b682465692a93e05afe8c772.png" alt="在这里插入图片描述"></p>
<p>hook 代码</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Java</span><span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> <span class="token class-name">SwitchConfig</span> <span class="token operator">=</span> <span class="token class-name">Java</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>'<span class="token class-name"><span class="token namespace">mtopsdk<span class="token punctuation">.</span>mtop<span class="token punctuation">.</span>global<span class="token punctuation">.</span></span>SwitchConfig</span>'<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SwitchConfig</span><span class="token punctuation">.</span>isGlobalSpdySwitchOpen<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>implementation <span class="token operator">=</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token keyword">var</span> ret <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>isGlobalSpdySwitchOpen<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"isGlobalSpdySwitchOpenl "</span><span class="token operator">+</span>ret<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>定位加密位置<br>抓包发现这四个参数是必需的</li>
</ol>
<p><img src="/./../../img/img/c76a0f9dc2cc41a89c2155577bb2f590.png" alt="在这里插入图片描述"></p>
<p>搜索 x-mini-wua 关键词</p>
<p><img src="/./../../img/img/d66c681ef5f3485caba19bc08c267e80.png" alt="在这里插入图片描述"></p>
<p>String X_MINI_WUA &#x3D; “x-mini-wua”;</p>
<p>接着搜索 X_MINI_WUA</p>
<p><img src="/./../../img/img/4cd94be4e16d434da84882eb667155d2.png" alt="在这里插入图片描述"></p>
<p>可以看到四个参数是来源于：gUnifiedSecurityComp.getSecurityFactors()</p>
<p><img src="/./../../img/img/df45a2fe6cd44477b70115a1e23215bd.png" alt="在这里插入图片描述"></p>
<p>跟进去 getSecurityFactors() 发现是接口</p>
<p><img src="/./../../img/img/af105929140548c9a17b4b12b36ab606.png" alt="在这里插入图片描述"></p>
<p>接着继续搜索看看还有哪里调用了getSecurityFactors()，能不能从中发现一些蛛丝马迹。</p>
<p>经过分析，发现getUnifiedSign() 是调用 mUnifiedSign.getSecurityFactors() 并返回对应的结果</p>
<p><img src="/./../../img/img/77f9b18d1f874e70ba1279d84e938536.png" alt="在这里插入图片描述"></p>
<p>Hook加密</p>
<p><img src="/./../../img/img/6b0073a6746a47a8a6930d077fe8edd1.png" alt="在这里插入图片描述">但是我们需要的参数是不是就是由这个函数加密得到的你，hook对比一下</p>
<p>hook和抓包对比发现正是这个地方加密得到的<br>hook 代码：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Java</span><span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> <span class="token class-name">InnerSignImpl</span> <span class="token operator">=</span> <span class="token class-name">Java</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"mtopsdk.security.InnerSignImpl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">InnerSignImpl</span><span class="token punctuation">[</span><span class="token string">"getUnifiedSign"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>implementation <span class="token operator">=</span> function <span class="token punctuation">(</span>params<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> appKey<span class="token punctuation">,</span> authCode<span class="token punctuation">,</span> useWua<span class="token punctuation">,</span> requestId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>'getUnifiedSign is called<span class="token char">' + '</span><span class="token punctuation">,</span> <span class="token char">' + '</span>params<span class="token operator">:</span> ' <span class="token operator">+</span> params <span class="token operator">+</span> <span class="token char">', '</span> <span class="token operator">+</span> <span class="token char">'ext: '</span> <span class="token operator">+</span> ext <span class="token operator">+</span> <span class="token char">', '</span> <span class="token operator">+</span> 'appKey<span class="token operator">:</span> ' <span class="token operator">+</span> appKey <span class="token operator">+</span> <span class="token char">', '</span> <span class="token operator">+</span> 'authCode<span class="token operator">:</span> ' <span class="token operator">+</span> authCode <span class="token operator">+</span> <span class="token char">', '</span> <span class="token operator">+</span> 'useWua<span class="token operator">:</span> ' <span class="token operator">+</span> useWua <span class="token operator">+</span> <span class="token char">', '</span> <span class="token operator">+</span> 'requestId<span class="token operator">:</span> ' <span class="token operator">+</span> requestId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> ret <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUnifiedSign</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> ext<span class="token punctuation">,</span> appKey<span class="token punctuation">,</span> authCode<span class="token punctuation">,</span> useWua<span class="token punctuation">,</span> requestId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>'getUnifiedSign ret value is ' <span class="token operator">+</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>hook位置确定了，剩下的就是写成接口主动调用了</p>
<h3 id="搭建RPC服务"><a href="#搭建RPC服务" class="headerlink" title="搭建RPC服务"></a>搭建RPC服务</h3><p>这次打算用AsyncHttpServer + Frida 来实现RPC<br>（先下班了，有时间接着写）</p>
<p>这几天经过测试发现，Frida + AndroidAsync搭建RPC服务会存在比较多问题，如1.有时候会断开，2.性能不高，有时候请求会卡住。有兴趣的可以参考：<a href="https://github.com/h1code2/frida_androidAsync_service">https://github.com/h1code2/frida_androidAsync_service</a></p>
<p>最终还是用Flask搭建</p>
<h5 id="主动调用"><a href="#主动调用" class="headerlink" title="主动调用"></a>主动调用</h5><p>主动调用的hook代码</p>
<p><img src="/./../../img/img/bcb492805f5b48fb82de1efdb6c5965a.png" alt="在这里插入图片描述"></p>
<p>但是发现结果是null的，</p>
<h5 id="解决初始化"><a href="#解决初始化" class="headerlink" title="解决初始化"></a>解决初始化</h5><p><img src="/./../../img/img/34745774dff542bab99885bf1c5f8e70.png" alt="在这里插入图片描述"></p>
<p>究竟是什么问题呢，我们hook一下日志函数（这个挺有用的，平时可以用来看是什么错误导致）</p>
<p><img src="/./../../img/img/7d9b7e7e6c274816843fc73679da0cb8.png" alt="在这里插入图片描述"></p>
<p>可以看出是没有做初始化，看回源码，这里确实是做了一个初始化的</p>
<p><img src="/./../../img/img/3e5d003fe67f4a2fad300ba52aa9e507.png" alt="在这里插入图片描述"></p>
<p>初始化及hook代码：</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> MtopConfig <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"mtopsdk.mtop.global.MtopConfig"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>$<span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">"INNER"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> InnerSignImpl <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"mtopsdk.security.InnerSignImpl"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>$<span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
InnerSignImpl<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>MtopConfig<span class="token punctuation">)</span> <span class="token comment">// 初始化</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> InnerSignImpl<span class="token punctuation">.</span><span class="token function">getUnifiedSign</span><span class="token punctuation">(</span>params_hash<span class="token punctuation">,</span>ext_hash<span class="token punctuation">,</span>appKey<span class="token punctuation">,</span> authCode<span class="token punctuation">,</span> useWua<span class="token punctuation">,</span> requestId<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>


<p>传入参数主动调用</p>
<p><img src="/./../../img/img/e1c6b5ac628d4275bc3ff2246acc2b1c.png" alt="在这里插入图片描述"></p>
<p>Flask接入Hook</p>
<p><img src="/./../../img/img/a9a674c9a7934e8888491b5e75411f28.png" alt="在这里插入图片描述"></p>
<p>测试接口</p>
<p><img src="/./../../img/img/253a2400a81e40f89b2ca36af3cbfbb3.png" alt="在这里插入图片描述"></p>
<p>校验参数，有时候参数加密出来，但不一定可以跑通接口，很多时候是环境、编码、时间戳等参数导致校验没通过</p>
<p><img src="/./../../img/img/a9bd6f4e5d974a71a10e567e19d72b93.png" alt="在这里插入图片描述"></p>
<p>加密参数没问题的</p>
]]></content>
      
        <categories>
            
            <category> tao系 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安卓逆向 - 某麦网 x-mini-wua x-sgext x-sign x-umt x-utdid]]></title>
      <url>/2023/10/07/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91-%E6%9F%90%E9%BA%A6%E7%BD%91-x-mini-wua-x-sgext-x-sign-x-umt-x-utdid/</url>
      <content type="html"><![CDATA[<p>目标app: 5aSn6bqm572ROC41LjQ&#x3D;</p>
<p>目标接口：aHR0cHM6Ly9hY3MubS50YW9iYW8uY29tL2d3L210b3AuZGFtYWkud2lyZWxlc3MuZGlzY292ZXJ5LmRldGFpbC5nZXQvMS40Lw&#x3D;&#x3D;</p>
<p>一、引言</p>
<p>接上一篇 安卓逆向 - Frida Hook（抓包实践）_小馒头yy的博客-CSDN博客</p>
<p>我们抓到了某麦网帖子详情的包，发现其中存在  x-mini-wua x-sgext x-sign x-umt x-utdid等加密参数，今天来分析其签名生成（al系app通用签名套路），并搭建RPC实现主动调用。</p>
<p><img src="/./../../img/img/014e7f875a264991b58910ad2ad8ff19.png" alt="img"></p>
<p>二、搜索大法，定位关键代码</p>
<p>1、打开 jadx，点击文本搜索 - 选择代码 -  输入x-sign字段，发现如下多个关键位置。我们依次点开分析。并使用Frida hook主要方法，判断是否有走这一段代码。</p>
<p><img src="/./../../img/img/2117102595984c05989c1635e30b4a68.png" alt="img"></p>
<p>定位到如下关键代码：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str9 <span class="token operator">=</span> unifiedSign<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"x-sign"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>


<p>关注这段代码的上下文，我们发现 x-mini-wua x-sgext x-sign x-umt x-utdid等参数都是由 iSign.getUnifiedSig() 生成。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> unifiedSign <span class="token operator">=</span> iSign<span class="token punctuation">.</span><span class="token function">getUnifiedSign</span><span class="token punctuation">(</span>hashMap3<span class="token punctuation">,</span> hashMap4<span class="token punctuation">,</span> str5<span class="token punctuation">,</span> str6<span class="token punctuation">,</span> z2<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="/./../../img/img/eaefd3c0a4b94881a8c25a8b908fccb0.png" alt="img"></p>
<p>三、动态调试</p>
<p>我们跟进去，发现这是一个接口，继续找该接口的实现类。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getUnifiedSign</span><span class="token punctuation">(</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> hashMap<span class="token punctuation">,</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> hashMap2<span class="token punctuation">,</span> <span class="token class-name">String</span> str<span class="token punctuation">,</span> <span class="token class-name">String</span> str2<span class="token punctuation">,</span> <span class="token keyword">boolean</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>选中接口 ISign，右键查找用例，寻找该接口的实现类。</p>
<p><img src="/./../../img/img/aea254f5f3094942abd02516a82a14cf.png" alt="img"></p>
<p><img src="/./../../img/img/90c10af395ce464d947bfb90220e2617.png" alt="img"></p>
<p> 最终我们定位到 mtopsdk.security.InnerSignImpl类的 getUnifiedSign() </p>
<p><img src="/./../../img/img/72d6029ea2a14263ac762dfc25437e04.png" alt="img"></p>
<p> hook 之：</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// mtopsdk.security.InnerSignImpl</span>
<span class="token keyword">function</span> <span class="token function">hook5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"hook5 start.."</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> Build <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'mtopsdk.security.InnerSignImpl'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> JSONObject <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"com.alibaba.fastjson.JSONObject"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Build<span class="token punctuation">.</span>getUnifiedSign<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">'java.util.HashMap'</span><span class="token punctuation">,</span> <span class="token string">'java.util.HashMap'</span><span class="token punctuation">,</span> <span class="token string">'java.lang.String'</span><span class="token punctuation">,</span> <span class="token string">'java.lang.String'</span><span class="token punctuation">,</span> <span class="token string">'boolean'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'参数 a: '</span> <span class="token operator">+</span> a<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'参数 b: '</span> <span class="token operator">+</span> b<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'参数 c: '</span> <span class="token operator">+</span> c<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'参数 d: '</span> <span class="token operator">+</span> d<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'参数 e: '</span> <span class="token operator">+</span> e<span class="token punctuation">)</span>
        <span class="token comment">//     showStacks()</span>
        <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUnifiedSign</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"res: "</span> <span class="token operator">+</span> res<span class="token punctuation">)</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p> console.log(“res: “ + res) 语句输出的内容和我们抓包得到的数据一致。观察其入参都是明文，我们可以以此搭建RPC环境， 实现主动调用。</p>
<p><img src="/./../../img/img/8a3edd7ec8dc457791e44cc557a8076d.png" alt="img"></p>
<p>四、搭建 RPC，实现主动调用</p>
<p>1、获取内存中的 InnerSignImpl类对象</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">getMemoryObj</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> result <span class="token operator">===</span> <span class="token string">''</span> <span class="token operator">||</span> result <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"begin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                Java<span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span><span class="token string">"mtopsdk.security.InnerSignImpl"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
                    <span class="token function-variable function">onMatch</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"choose"</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        result <span class="token operator">=</span> x<span class="token punctuation">;</span>
                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                    <span class="token function-variable function">onComplete</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">&#125;</span>
                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>2、封装参数：主要是 hashMap， hashMap2这两个参数，其他三个写死即可。特别注意data参数传的是一个json字符串，需要转义</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> HashMap1 <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'java.util.HashMap'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>$<span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"deviceId"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"appKey"</span><span class="token punctuation">,</span> <span class="token string">"23781390"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"utdid"</span><span class="token punctuation">,</span> <span class="token string">"ZL4dqtfxPh0DALSURGw7eDIY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"x-features"</span><span class="token punctuation">,</span> <span class="token string">"27"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"ttid"</span><span class="token punctuation">,</span> <span class="token string">"10005884@damai_android_8.5.4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"v"</span><span class="token punctuation">,</span> <span class="token string">"1.4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"sid"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"t"</span><span class="token punctuation">,</span> <span class="token string">"1691142277"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"api"</span><span class="token punctuation">,</span> <span class="token string">"mtop.damai.wireless.discovery.detail.get"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">,</span> <span class="token string">"&#123;\"contentId\":\"10726085\",\"appType\":\"1\",\"source\":\"10101\",\"osType\":\"2\",\"pageSize\":\"30\",\"pageIndex\":\"1\",\"version\":\"6000168\",\"channel_from\":\"damai_market\"&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"uid"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token keyword">var</span> HashMap2 <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'java.util.HashMap'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>$<span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pageName"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
HashMap2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pageId"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>3、调用</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">res <span class="token operator">=</span> rpc<span class="token punctuation">.</span><span class="token keyword">exports</span><span class="token punctuation">.</span>remoteObj<span class="token punctuation">.</span><span class="token function">getUnifiedSign</span><span class="token punctuation">(</span><span class="token class-name">HashMap1</span><span class="token punctuation">,</span> <span class="token class-name">HashMap2</span><span class="token punctuation">,</span> <span class="token string">"23781390"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>


<p>4、搭建Python服务，加载 dm_rpc.js 代码</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> script
    <span class="token comment"># 加载 js</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            process <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_device_manager<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_device<span class="token punctuation">(</span>ip <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> port<span class="token punctuation">)</span><span class="token punctuation">.</span>attach<span class="token punctuation">(</span>package<span class="token punctuation">)</span>
            <span class="token keyword">break</span>
        <span class="token keyword">except</span> BaseException <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'获取。。。'</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"dm_rpc.js"</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> js<span class="token punctuation">:</span>
        jscode <span class="token operator">=</span> js<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    script <span class="token operator">=</span> process<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>jscode<span class="token punctuation">)</span>
    script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 启动服务</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8006</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    ip <span class="token operator">=</span> <span class="token string">'127.0.0.1'</span>
    port <span class="token operator">=</span> <span class="token string">'21563'</span>
    package <span class="token operator">=</span> <span class="token string">'cn.damai'</span>
    begin<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>5、开放接口给外部访问：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/sign'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'get'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">sign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    par <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">)</span>
    params <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>par<span class="token punctuation">)</span>
    res <span class="token operator">=</span> script<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>signature<span class="token punctuation">(</span>params<span class="token punctuation">)</span>
    <span class="token keyword">return</span> res<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>完结！</p>
]]></content>
      
        <categories>
            
            <category> 安卓逆向教程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安卓逆向 - Frida Hook（抓包实践）]]></title>
      <url>/2023/10/07/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91-Frida-Hook%EF%BC%88%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5%EF%BC%89/</url>
      <content type="html"><![CDATA[<h1 id="安卓逆向-Frida-Hook（抓包实践）"><a href="#安卓逆向-Frida-Hook（抓包实践）" class="headerlink" title="安卓逆向 - Frida Hook（抓包实践）"></a>安卓逆向 - Frida Hook（抓包实践）</h1><p>一、引言</p>
<p>上篇文章：安卓逆向 - 基础入门教程_小馒头yy的博客-CSDN博客  介绍了Frida的安装、基本使用，今天我们来看看Frida常用Hook和基于Frida抓包实践。</p>
<p>二、Frida常用 Hook脚本</p>
<p>1、hook java.net.URL</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hook1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> <span class="token constant">URL</span> <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'java.net.URL'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">URL</span><span class="token punctuation">.</span>$init<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">'java.lang.String'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'加密前：'</span> <span class="token operator">+</span> a<span class="token punctuation">)</span>
        <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$init</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>2、hook okhttp3 HttpUrl</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hookOkhttp3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> Builder <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'okhttp3.Request$Builder'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Builder<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">'okhttp3.HttpUrl'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'a: '</span> <span class="token operator">+</span> a<span class="token punctuation">)</span>
        <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"res: "</span> <span class="token operator">+</span> res<span class="token punctuation">)</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>3、hook okhttp3 addHeader</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> Builder <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"okhttp3.Request$Builder"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Builder<span class="token punctuation">[</span><span class="token string">"addHeader"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> str2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"key: "</span> <span class="token operator">+</span> str<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"val: "</span> <span class="token operator">+</span> str2<span class="token punctuation">)</span>
        <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token string">"addHeader"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> str2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"result: "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>4、打印堆栈</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"android.util.Log"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStackTraceString</span><span class="token punctuation">(</span>Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"java.lang.Exception"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>$<span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>5、hook Base64 </p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hookBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// Base64</span>
    <span class="token keyword">var</span> Base64Class <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"android.util.Base64"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Base64Class<span class="token punctuation">.</span>encodeToString<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">"[B"</span><span class="token punctuation">,</span> <span class="token string">"int"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> rc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">">>> Base64 "</span> <span class="token operator">+</span> rc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> rc<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>6、hook HashMap</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hookMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> Build <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"java.util.HashMap"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Build<span class="token punctuation">[</span><span class="token string">"put"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"key : "</span> <span class="token operator">+</span> key<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"val : "</span> <span class="token operator">+</span> val<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>三、某麦网抓包实践</p>
<p>本篇以某麦网帖子详情接口，演示如何基于Frida hook抓包</p>
<p>1、安装某麦网8.<em>.</em>.apk</p>
<p>2、搭建Frida hook 环境，注入 hook java.net.URL脚本</p>
<p>3、点进帖子详情打印出如下堆栈，我们可以根据打印出的信息，跟栈分析该接口的请求头。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>acs<span class="token punctuation">.</span>m<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>com<span class="token operator">/</span>gw<span class="token operator">/</span>mtop<span class="token punctuation">.</span>damai<span class="token punctuation">.</span>wireless<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>get<span class="token operator">/</span><span class="token number">1.4</span><span class="token operator">/</span><span class="token operator">?</span>source<span class="token operator">=</span><span class="token number">10101</span><span class="token operator">&amp;</span>version<span class="token operator">=</span><span class="token number">6000168</span><span class="token operator">&amp;</span>type<span class="token operator">=</span>originaljson<span class="token operator">&amp;</span>data<span class="token operator">=</span><span class="token operator">%</span><span class="token number">7</span>B<span class="token operator">%</span><span class="token number">22</span>contentId<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">2211088650</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">2</span>C<span class="token operator">%</span><span class="token number">22</span>appType<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">221</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">2</span>C<span class="token operator">%</span><span class="token number">22</span>source<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">2210101</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">2</span>C<span class="token operator">%</span><span class="token number">22</span>osType<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">222</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">2</span>C<span class="token operator">%</span><span class="token number">22</span>pageSize<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">2230</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">2</span>C<span class="token operator">%</span><span class="token number">22</span>pageIndex<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">221</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">2</span>C<span class="token operator">%</span><span class="token number">22</span>version<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">226000168</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">2</span>C<span class="token operator">%</span><span class="token number">22</span>channel_from<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">22d</span>amai_market<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">7D</span><span class="token operator">&amp;</span>appType<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>osType<span class="token operator">=</span><span class="token number">2</span><span class="token operator">&amp;</span>channel_from<span class="token operator">=</span>damai_market
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Exception</span>
        at java<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>
        at tb<span class="token punctuation">.</span>yy0<span class="token punctuation">.</span><span class="token function">m</span><span class="token punctuation">(</span><span class="token class-name">Taobao</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>
        at anet<span class="token punctuation">.</span>channel<span class="token punctuation">.</span>request<span class="token punctuation">.</span>a<span class="token punctuation">.</span><span class="token function">p</span><span class="token punctuation">(</span><span class="token class-name">Taobao</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">anet<span class="token punctuation">.</span>channel<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span>TnetSpdySession</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token class-name">Taobao</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">anetwork<span class="token punctuation">.</span>channel<span class="token punctuation">.</span>unified<span class="token punctuation">.</span></span>NetworkTask</span><span class="token punctuation">.</span><span class="token function">sendRequest</span><span class="token punctuation">(</span><span class="token class-name">Taobao</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">anetwork<span class="token punctuation">.</span>channel<span class="token punctuation">.</span>unified<span class="token punctuation">.</span></span>NetworkTask</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Taobao</span><span class="token operator">:</span><span class="token number">44</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">anetwork<span class="token punctuation">.</span>channel<span class="token punctuation">.</span>unified<span class="token punctuation">.</span></span>UnifiedRequestTask</span>$a<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">Taobao</span><span class="token operator">:</span><span class="token number">15</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>orange<span class="token punctuation">.</span>sync<span class="token punctuation">.</span></span>NetworkInterceptor</span><span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">Taobao</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">anetwork<span class="token punctuation">.</span>channel<span class="token punctuation">.</span>unified<span class="token punctuation">.</span></span>UnifiedRequestTask</span>$a<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">Taobao</span><span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">anetwork<span class="token punctuation">.</span>channel<span class="token punctuation">.</span>unified<span class="token punctuation">.</span></span>UnifiedRequestTask</span>$<span class="token number">3.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Taobao</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>Executors</span>$<span class="token class-name">RunnableAdapter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Executors</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">428</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>FutureTask</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">FutureTask</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">237</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1133</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">607</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">761</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>4、使用Jadx打开某麦网apk</p>
<p>从at tb.yy0.m(Taobao:1)跟栈分析</p>
<p><img src="/./../../img/img/832d7f03feaa4fd29fd6d8b18824de60.png" alt="img"></p>
<p> 根据调用栈往上走，定位到如下位置，注意这行代码：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ALog</span><span class="token punctuation">.</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token string">"awcn.TnetSpdySession"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> aVar<span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"request headers"</span><span class="token punctuation">,</span> aVar<span class="token punctuation">.</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="/./../../img/img/d8ad4708036e460583544d440b64fbf9.png" alt="img"></p>
<p> 代码注释很清楚了 request headers，我们跟进 hook aVar.g() 这个方法</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableMap</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>


<p>hook之，对象输出可以使用 JSONObject转一下</p>
 <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> JSONObject <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"com.alibaba.fastjson.JSONObject"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hook6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> JSONObject <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"com.alibaba.fastjson.JSONObject"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"anet.channel.request.a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    a<span class="token punctuation">[</span><span class="token string">"g"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token string">"g"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"result : "</span> <span class="token operator">+</span> JSONObject<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>打印出如下内容：</p>
<p><img src="/./../../img/img/7b42bb9099f4428eb2231c311094fcf2.png" alt="img"></p>
<p> 请求 URL、 请求方法这边都写得很清楚啦。</p>
<p><img src="/./../../img/img/c89ecb2c40d2401a90dace268423ba4e.png" alt="img"></p>
<p> 收工！</p>
]]></content>
      
        <categories>
            
            <category> 安卓逆向教程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安卓逆向 - 基础入门教程]]></title>
      <url>/2023/10/07/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="安卓逆向-基础入门教程"><a href="#安卓逆向-基础入门教程" class="headerlink" title="安卓逆向 - 基础入门教程"></a>安卓逆向 - 基础入门教程</h1><p>一、引言</p>
<p>1、我们在采集app数据时，有些字段是加密的，如某麦网x-mini-wua x-sgext x-sign x-umt x-utdid等参数，这时候我们需要去分析加密字段的生成。本篇将以采集的角度讲解入门安卓逆向需要掌握的技能、工具。</p>
<p>2、安卓（Android）是一种基于Linux内核操作系统，架构图（了解即可）</p>
<p><img src="/./../../img/img/3b5f984a813e4e9a95364b7c3503cb1e.png" alt="img"></p>
<p>3、安卓应用程序使用JAVA语言编写（重要），作为一名安卓逆向人员我们必须掌握Java语言基础（基本语法、类、接口、面向对象、网络类库、加密解密等等）</p>
<p>4、安卓逆向是对已经打包好的APP进行反编译，分析源码了解应用逻辑的一门技术，这一部分我们需要学习静态分析，动态分析。各种反编译工具（推荐 jadx），Frida Hook。</p>
<p>二、静态分析，学习jadx反编译</p>
<p>1、安装jadx，github地址： Releases · skylot&#x2F;jadx · GitHub，下载 jadx-1.4.7.zip 解压即可。</p>
<p><img src="/./../../img/img/076a7b73161545e79b96c150fd74d362.png" alt="img"></p>
<p>2、调整jadx最大内存，打开bin目录下的 jadx-gui.bat文件，搜索DEFAULT_JVM_OPTS。</p>
<p>将 -XX:MaxRAMPercentage&#x3D;70.0 修改成 -Xmx16g </p>
<p><img src="/./../../img/img/7c4bdfaa60c54ec2b2b1b1fd986267dc.png" alt="img"></p>
<p> 3、jadx使用，打开apk，jadx会自动反编译apk</p>
<p><img src="/./../../img/img/910a4be9c1fe40d7a2a6163076f11af4.png" alt="img"></p>
<p> 全局搜索：点击左上角的导航 - 文本搜索，输入关键字，并且下方可以筛选检索的位置</p>
<p><img src="/./../../img/img/61a934035b41415183d7cce43ea80c04.png" alt="img"></p>
<p>根据关键字定位到关键代码后，我们就可以进行分析加密参数的生成啦。</p>
<p>三、动态分析，Frida 初使用</p>
<p>1、安装 adb （Android Debug Bridge），通过命令行使用adb，对安卓设备进行操作</p>
<p>2、下载模拟器，我使用的逍遥模拟器 （有Root好的真机更棒）</p>
<p>模拟器启动后，在命令行依次执行命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb forward tcp:27043 tcp:27043
adb forward tcp:27042 tcp:27042
adb connect <span class="token number">127.0</span>.0.1:21503
adb devices<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>


<p>再执行 adb shell，即可进入模拟器， #字符代表已 Root </p>
<p><img src="/./../../img/img/1fef08a571d24364b49afecbdc914ccb.png" alt="img"></p>
<p> 3、安装Frida</p>
<p>本地直接使用 pip install frida 命令安装 （需有Python环境）</p>
<p>模拟器（手机）端下载对应的Frida-server: Releases · frida&#x2F;frida · GitHub</p>
<p>低版本安卓推荐下载：12.8.13，高版本安卓直接下载最新版</p>
<p>模拟器是 x86架构，真机是 arm架构，请下载对应的 frida-server</p>
<p>4、开启Hook，动态分析应用运行时数据</p>
<p>1、将frida-server传到手机 &#x2F;data&#x2F;local&#x2F;tmp 目录，转到本地frida-server存放的目录，依次执行以下命令</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb push frida-server-12.8.13-android-x86 /data/local/tmp
adb shell
<span class="token builtin class-name">cd</span> /data/local/tmp
<span class="token function">chmod</span> <span class="token number">777</span> frida-server-12.8.13-android-x86
./frida-server-12.8.13-android-x86<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>2、编写 hook脚本，使用js方式启动，本例为 hook URL的构造方法：</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hook1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> <span class="token constant">URL</span> <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'java.net.URL'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">URL</span><span class="token punctuation">.</span>$init<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">'java.lang.String'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span><span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'加密前：'</span><span class="token operator">+</span>a<span class="token punctuation">)</span>               
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'                    '</span><span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$init</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token function">hook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>


<span class="token function">setImmediate</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>




<p>3、开始 hook，注意高版本 frida不需要带 –no-pause </p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">frida <span class="token parameter variable">-U</span> <span class="token parameter variable">-l</span> dm_hook.js <span class="token parameter variable">-f</span> cn.damai --no-pause<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>其中 dm_hook.js是 hook脚本的文件名，cn.damai是apk的包名。</p>
<p>滑动应用，正常打印出 url信息。</p>
]]></content>
      
        <categories>
            
            <category> 安卓逆向教程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[dootask文件批量导出]]></title>
      <url>/2023/10/07/%E5%85%B3%E4%BA%8Edootask%E6%96%87%E4%BB%B6%E6%89%B9%E9%87%8F%E5%AF%BC%E5%87%BA/dootask%E6%96%87%E4%BB%B6%E6%89%B9%E9%87%8F%E5%AF%BC%E5%87%BA/</url>
      <content type="html"><![CDATA[<h4 id="一、背景："><a href="#一、背景：" class="headerlink" title="一、背景："></a>一、背景：</h4><blockquote>
<p>今年3月份的时候做的一个工具项目，当时的背景是部门内每天会产出很多很多的垃圾文件，每天都是表格、ppt还有内容的产出，整合文件又需要一堆的表，沟通成本和文件产出成本居高不下。（职责所系，希望改变）</p>
<p>所以就想有一个工具可以将部门的沟通成本做下来，让产出垃圾的文件的时间变少，这样大家就有时间可以做价值产出的工作了，正好当时有一个dootask的开源项目，就想给部门做一个文件管理系统，在内网使用的，制作好上传的相关规则就可以了。（后来发现想太多了，想起来最近看的一个视频，苏联的科学家希望通过中央计算机来代替人，减除冗余机构和人数，除去无效劳作，最后导致机构冗余越来越大，纸张浪费也越来越大，工作效率反而更低下。还有个故事是说新来的人，在体制内做表，希望通过革新，用数据库做，表面看是效率是提升了，但是做了造成的问题反而更大，工作项更多，人更累，错误更多，反而得不偿失）</p>
<p>最后想说：除非有革命到底的念头，否则，能跑就别动。自古改革最难，比打烂了重新建更难。</p>
<p>得出的经验和教训：千万不要想着推翻重建，除非你是一把手，精英只能在顺应大多数人的基础上才能发挥作用，否则就是自讨没趣。</p>
</blockquote>
<h4 id="二、使用工具："><a href="#二、使用工具：" class="headerlink" title="二、使用工具："></a>二、使用工具：</h4><p>​	<strong>dootask</strong>：<em>查看git安装步骤,用docker安装</em></p>
<p>​	<strong>mariadb数据库：</strong><em>数据库</em></p>
<h4 id="三、项目需求："><a href="#三、项目需求：" class="headerlink" title="三、项目需求："></a>三、项目需求：</h4><ol>
<li>插入硬盘就能识别</li>
<li>运行代码，将dootask存储的文件修改好名字，然后移动到指定的文件夹下</li>
<li>可以按照dootask文件存储的样式原封不动的移动过来，文件路径不能改变</li>
<li>最好是一套代码，可以远程直接操作</li>
</ol>
<h4 id="四、项目思考："><a href="#四、项目思考：" class="headerlink" title="四、项目思考："></a>四、项目思考：</h4><ol>
<li><p>第一套方案：最初设想的是通过VBA 进行相关的操作，之前有过一个xlsm的文件管理系统，有导出，有修改名字。可以通过VBA进行实现，VBA远程连接mariadb数据库 &#x3D;&#x3D;&gt; 通过sql语句导出相关内容 &#x3D;&#x3D;&gt; 进行数据整合 &#x3D;&#x3D;&gt; 获取移动硬盘的名称 &#x3D;&#x3D;&gt; 然后再通过VBA进行文件迁移 &#x3D;&#x3D;&gt; 最后修改文件名称。反正就是希望通过VBA来实现，只要在电脑上插上硬盘，然后打开VBA，按一次到两次按键就能操作完成。</p>
<p>(ps:后来放弃，可能是当时的技术水平有限，也可能是实现的时候发现有些什么问题处理不了，反正最后放弃了。好像是因为服务端用的是Ubuntu系统，office套件用的是libre office, 运行VBA可能更麻烦，放弃了。）</p>
</li>
<li><p>第二套方案：这套方案有点像缝合怪的意思，走一步看一步。通过python 和shell 进行实现。首先，远程通过运行python脚本本地连接mariadb数据库，然后将数据进行整合存入excel中， 接着，通过远程将这个excel表拉过来，将数据拆分进两个txt文本文件中，然后，将这两个txt文档通过远程放入ubuntu服务器中，紧接着插入硬盘，最后远程运行shell文件。</p>
<p>（ps:听着就很繁琐，而且跟之前想的大相径庭，现在做的话应该会简化一些，不确定）</p>
</li>
</ol>
<h4 id="五、遇到的卡点："><a href="#五、遇到的卡点：" class="headerlink" title="五、遇到的卡点："></a>五、遇到的卡点：</h4><ol>
<li>安装dootask，只能在Linux中安装，还有安装docker,在windows 中安装linux 系统，在自己的电脑上安装还行，就是hyper-v 的安装和启动，docker-compose安装。折腾了1个星期</li>
<li>然后在公司电脑上安装Linux老是报错，重新装了2次系统，最后实在是无奈，直接安装了ubuntu 系统，算是解决。折腾了半个月</li>
<li>如何获取dootask 中mariadb 数据库的root名称和密码，并进行远程连接。基本上折腾了大半个月</li>
<li>如何安装网卡的问题，Ubuntu系统连接不上无线网，通过网卡不行，需要从git上安装驱动（放弃了，直接上网线）</li>
</ol>
<h4 id="六、具体实现"><a href="#六、具体实现" class="headerlink" title="六、具体实现"></a>六、具体实现</h4><ol>
<li>编写python 脚本</li>
</ol>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> mariadb
<span class="token keyword">import</span> xlsxwriter <span class="token keyword">as</span> xw
<span class="token keyword">import</span> json
<span class="token keyword">import</span> re

table <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'pre_files'</span><span class="token punctuation">,</span><span class="token string">'pre_file_contents'</span><span class="token punctuation">]</span>
mariadbData <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token string">'database'</span> <span class="token punctuation">:</span> <span class="token string">'dootask'</span><span class="token punctuation">,</span>
    <span class="token string">'user'</span><span class="token punctuation">:</span> <span class="token string">'root'</span><span class="token punctuation">,</span>
    <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'a0100beaf553319a'</span><span class="token punctuation">,</span>
    <span class="token string">'host'</span><span class="token punctuation">:</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>
    <span class="token string">'port'</span><span class="token punctuation">:</span> <span class="token string">'33062'</span>
<span class="token punctuation">&#125;</span>
<span class="token comment"># print(mariadbData['database'])</span>
<span class="token comment"># 判断存在的文件里最后的id值，返回一个true和数字</span>
<span class="token comment"># 连接数据库</span>
<span class="token keyword">def</span> <span class="token function">connectSql</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">:</span>
    conn <span class="token operator">=</span> mariadb<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>user<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">"a0100beaf553319a"</span><span class="token punctuation">,</span> 
                           host<span class="token operator">=</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">33062</span><span class="token punctuation">,</span>
                            database<span class="token operator">=</span><span class="token string">"dootask"</span><span class="token punctuation">)</span>
    cur <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sql1 <span class="token operator">=</span> sql
    cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql1<span class="token punctuation">)</span>
    result <span class="token operator">=</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># print(result)</span>
    cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result

<span class="token comment"># 数据拼接</span>
new_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">def</span> <span class="token function">montagDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    sql <span class="token operator">=</span> <span class="token string">"SELECT content from pre_file_contents where deleted_at is NULL"</span>
    result <span class="token operator">=</span> connectSql<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
    old_url <span class="token operator">=</span> <span class="token punctuation">[</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span> <span class="token keyword">for</span> url <span class="token keyword">in</span> <span class="token punctuation">[</span>old<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> old <span class="token keyword">in</span> result<span class="token punctuation">]</span><span class="token punctuation">]</span>
    sql2 <span class="token operator">=</span> <span class="token string">"SELECT pids,name,ext FROM pre_files WHERE pre_files.id IN (SELECT fid FROM pre_file_contents WHERE deleted_at IS NULL)"</span>
    result2 <span class="token operator">=</span> connectSql<span class="token punctuation">(</span>sql2<span class="token punctuation">)</span>
    deal_db<span class="token punctuation">(</span>result2<span class="token punctuation">)</span>
    <span class="token comment"># 获取文件名，获取上传人，获取上传日期</span>
    sql4 <span class="token operator">=</span> <span class="token string">"SELECT name,size,created_at,created_id FROM pre_files WHERE pre_files.id IN (SELECT fid FROM pre_file_contents WHERE deleted_at IS NULL)"</span>
    result4 <span class="token operator">=</span> connectSql<span class="token punctuation">(</span>sql4<span class="token punctuation">)</span>
    name<span class="token punctuation">,</span> size<span class="token punctuation">,</span> created_at<span class="token punctuation">,</span> created_id <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token operator">*</span>result4<span class="token punctuation">)</span>
    <span class="token comment"># sql5 = "SELECT nickname FROM pre_users WHERE pre_users.userid IN ( SELECT created_id FROM pre_files WHERE pre_files.id IN (SELECT fid FROM pre_file_contents WHERE deleted_at IS NULL))"</span>
    <span class="token comment"># result4 = connectSql(sql5)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> size<span class="token punctuation">,</span> created_at<span class="token punctuation">,</span> created_id<span class="token punctuation">)</span>
    xw_toExcel<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>size<span class="token punctuation">,</span>created_at<span class="token punctuation">,</span>created_id<span class="token punctuation">,</span>old_url<span class="token punctuation">,</span>new_urls<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  

<span class="token comment"># 数据处理</span>
<span class="token keyword">def</span> <span class="token function">deal_db</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>arg<span class="token punctuation">,</span> <span class="token builtin">tuple</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> arg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>
            new_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>emplay<span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            new_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>NotEmplay<span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> fid <span class="token keyword">in</span> arg<span class="token punctuation">:</span>
            deal_db<span class="token punctuation">(</span>fid<span class="token punctuation">)</span>
    <span class="token comment"># print(new_urls)</span>

<span class="token comment"># 空</span>
<span class="token keyword">def</span> <span class="token function">emplay</span><span class="token punctuation">(</span>fid<span class="token punctuation">)</span><span class="token punctuation">:</span> 
    <span class="token comment"># if not isinstance(arg, list):</span>
    arg <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>fid<span class="token punctuation">)</span>
    new_path <span class="token operator">=</span> <span class="token string">'/'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>fid<span class="token punctuation">)</span>
    new_path <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r'/([^/]+)$'</span><span class="token punctuation">,</span> <span class="token string">r'.\1'</span><span class="token punctuation">,</span> new_path<span class="token punctuation">)</span>
    <span class="token keyword">return</span> new_path

<span class="token comment"># 非空</span>
<span class="token keyword">def</span> <span class="token function">NotEmplay</span><span class="token punctuation">(</span>fid<span class="token punctuation">)</span><span class="token punctuation">:</span>
    fid <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>fid<span class="token punctuation">)</span>
    ids <span class="token operator">=</span> fid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>
    i <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> <span class="token builtin">id</span> <span class="token keyword">in</span> ids<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">id</span><span class="token punctuation">:</span>
            sql3 <span class="token operator">=</span> <span class="token string">"SELECT NAME FROM pre_files WHERE id ="</span> <span class="token operator">+</span> <span class="token builtin">id</span>
            file_name <span class="token operator">=</span> connectSql<span class="token punctuation">(</span>sql3<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            ids<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> file_name
        i<span class="token operator">+=</span><span class="token number">1</span>
    fid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> emplay<span class="token punctuation">(</span>ids<span class="token punctuation">)</span>
    new_path <span class="token operator">=</span> fid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> fid<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.'</span> <span class="token operator">+</span> fid<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> new_path
        
title <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'文件名'</span><span class="token punctuation">,</span><span class="token string">'大小'</span><span class="token punctuation">,</span><span class="token string">'创建时间'</span><span class="token punctuation">,</span><span class="token string">'上传人'</span><span class="token punctuation">,</span><span class="token string">'邮箱'</span><span class="token punctuation">,</span><span class="token string">'旧地址'</span><span class="token punctuation">,</span><span class="token string">'新地址'</span><span class="token punctuation">]</span>
<span class="token comment"># 写入数据表</span>
<span class="token keyword">def</span> <span class="token function">xw_toExcel</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">:</span>
    workbook <span class="token operator">=</span> xw<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token string">'test.xlsx'</span><span class="token punctuation">)</span>
    workbookSheet1 <span class="token operator">=</span> workbook<span class="token punctuation">.</span>add_worksheet<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            workbookSheet1<span class="token punctuation">.</span>write<span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
    workbook<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    montagDB<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>编写shell脚本</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 操作明细（source_file.txt 放源文件地址，dist_file.txt 放目标文件地址）</span>
<span class="token comment"># 获取移动硬盘地址是自动获取的，如果需要修改联系管理员</span>
<span class="token comment"># 将文件放入制定文件夹下</span>
<span class="token comment"># 设置源文件夹地址和目标文件夹地址</span>
<span class="token comment"># 获取插入的移动硬盘盘符</span>
<span class="token function-name function">disk_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token comment"># 检测是否找到块设备</span>
	<span class="token assign-left variable">mount_point</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">'media'</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $6&#125;'</span><span class="token variable">)</span></span>
	<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-z</span> <span class="token variable">$mount_point</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
		<span class="token builtin class-name">echo</span> <span class="token string">"移动设备盘符为 <span class="token variable">$mount_point</span>"</span>
		<span class="token assign-left variable">root_src</span><span class="token operator">=</span><span class="token string">"/home/liuli/公共的/dootask/public"</span>
		dest_folder <span class="token string">"<span class="token variable">$mount_point</span>"</span> <span class="token string">"<span class="token variable">$root_src</span>"</span>
	<span class="token keyword">else</span>
		<span class="token builtin class-name">echo</span> <span class="token string">"未找到"</span>
	<span class="token keyword">fi</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">#dos2unix 是将 Windows 格式文件转换为 Unix、Linux 格式的实用命令。Windows 格式文件的换行符为\r\n ,而Unix&amp;Linux 文件的换行符为\n.dos2unix 命令其实就是将文件中的\r\n 转换为\n。</span>

<span class="token function-name function">dest_folder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token assign-left variable">dev</span><span class="token operator">=</span><span class="token variable">$1</span>
	<span class="token assign-left variable">root_dev</span><span class="token operator">=</span><span class="token variable">$2</span>
	dos2unix /home/liuli/公共的/source_file.txt
	dos2unix /home/liuli/公共的/dest_file.txt
	<span class="token assign-left variable">source_folder</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /home/liuli/公共的/source_file.txt<span class="token variable">)</span></span>
	<span class="token assign-left variable">source_list</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable">$&#123;source_folder<span class="token punctuation">[</span>@<span class="token punctuation">]</span>&#125;</span><span class="token punctuation">)</span>
		<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$&#123;source_list<span class="token punctuation">[</span>2<span class="token punctuation">]</span>&#125;</span>"</span>
	<span class="token assign-left variable">i</span><span class="token operator">=</span><span class="token number">0</span>
	<span class="token keyword">while</span> <span class="token builtin class-name">read</span> line<span class="token punctuation">;</span> <span class="token keyword">do</span>
		<span class="token assign-left variable">source_folders</span><span class="token operator">=</span><span class="token variable">$&#123;source_list<span class="token punctuation">[</span>$i<span class="token punctuation">]</span>&#125;</span>
		<span class="token assign-left variable">file_path</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">dirname</span> -- <span class="token string">"<span class="token variable">$line</span>"</span><span class="token variable">)</span></span>
		<span class="token assign-left variable">file_name</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">basename</span> -- <span class="token string">"<span class="token variable">$line</span>"</span><span class="token variable">)</span></span>
		<span class="token comment">#echo "$file_name"</span>
		<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$1</span>/<span class="token variable">$file_path</span>/<span class="token variable">$file_name</span>"</span>
		<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token variable">$1</span>/<span class="token variable">$line</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
			<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$file_name</span> 文件已存在"</span>
		<span class="token keyword">else</span>
			<span class="token builtin class-name">echo</span> <span class="token string">"正在创建"</span>
			<span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token string">"<span class="token variable">$1</span>/<span class="token variable">$file_path</span>"</span>
			<span class="token function">sudo</span> <span class="token function">cp</span> <span class="token parameter variable">-r</span> <span class="token string">"<span class="token variable">$2</span>/<span class="token variable">$source_folders</span>"</span> <span class="token string">"<span class="token variable">$1</span>/<span class="token variable">$file_path</span>/<span class="token variable">$file_name</span>"</span>
			<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$file_name</span>"</span> <span class="token string">"已经复制完毕"</span>
			<span class="token variable"><span class="token variable">$(</span><span class="token assign-left variable">i</span><span class="token operator">+=</span><span class="token number">1</span><span class="token variable">)</span></span>
		<span class="token keyword">fi</span>	
	<span class="token keyword">done</span> <span class="token operator">&lt;</span> /home/liuli/公共的/dest_file.txt
<span class="token punctuation">&#125;</span>

disk_name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>远程连接</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 要通过SSH将文件传输到Ubuntu电脑中，您可以使用scp命令。以下是一些基本的scp命令语法，可帮助您完成文件传输过程：</span>

<span class="token comment">#将文件从Windows传输到Ubuntu：</span>

 <span class="token function">scp</span> /path/to/local/file user@ubuntu:/path/to/destination/directory

<span class="token comment"># 将文件从Ubuntu传输到Windows：</span>

<span class="token function">scp</span> user@ubuntu:/path/to/remote/file /path/to/destination/directory

<span class="token comment"># 其中，/path/to/local/file是本地Windows环境中的文件路径，user是Ubuntu电脑的用户名，ubuntu是Ubuntu电脑的IP地址或主机名，/path/to/destination/directory是Ubuntu电脑中存放文件的目录路径，/path/to/remote/file是Ubuntu电脑中要传输的文件路径，/path/to/destination/directory是本地Windows环境中存放文件的目录路径。</span>

<span class="token comment"># 在使用scp命令之前，确保您的Windows电脑和Ubuntu电脑已经通过SSH连接成功。</span>
<span class="token function">ssh</span> <span class="token number">192.168</span>.84.143@liuli

<span class="token function">scp</span> liuli@192.168.84.143:/home/liuli/公共的/pymariadb/test.xlsx /D:/ceshi/sshtcp

<span class="token function">scp</span> D:/ceshi/sshtcp/*.txt liuli@192.168.84.143:/home/liuli/公共的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="七、文章参考："><a href="#七、文章参考：" class="headerlink" title="七、文章参考："></a>七、文章参考：</h4><p><a href="https://blog.csdn.net/sinat_37666840/article/details/124316099">Ubuntu安装步骤</a></p>
<p><a href="https://blog.csdn.net/qq_39838607/article/details/127121690?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-127121690-blog-121555899.235%5Ev28%5Epc_relevant_t0_download&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-127121690-blog-121555899.235%5Ev28%5Epc_relevant_t0_download&utm_relevant_index=2">windows 安装Docker步骤以及在每一个步骤遇到问题合集</a></p>
<p>八、实现中的细节点</p>
<ol>
<li>dootask 中数据库的位置及查看方法</li>
</ol>
<p><img src="/./../../img/img/image-20231007140915922.png" alt="image-20231007140915922"></p>
<p><img src="/./../../img/img/image-20231007141056046.png" alt="image-20231007141056046"></p>
<p><img src="/./../../img/img/image-20231007141244516.png" alt="image-20231007141244516"></p>
]]></content>
      
        <categories>
            
            <category> mariadb </category>
            
        </categories>
        
        
        <tags>
            
            <tag> dootask </tag>
            
            <tag> mariadb </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[某麦网数据参数逆向分析]]></title>
      <url>/2023/09/30/%E6%9F%90%E9%BA%A6%E7%BD%91%E6%95%B0%E6%8D%AE%E5%8F%82%E6%95%B0%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[某麦演出app分析(三)---无视重试返回上一页]]></title>
      <url>/2023/09/28/app%E9%80%86%E5%90%91/%E6%9F%90%E9%BA%A6%E6%BC%94%E5%87%BAapp%E5%88%86%E6%9E%90-%E4%B8%89-%E6%97%A0%E8%A7%86%E9%87%8D%E8%AF%95%E8%BF%94%E5%9B%9E%E4%B8%8A%E4%B8%80%E9%A1%B5/</url>
      <content type="html"><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>在上一篇文章写到可以提前选好票档,等待到开售时间直接提交进入订单确认页面.<br>然而这仅仅是”快人一步”,在非常热门的演出情况下,一次提交购票成功的几率还是很低的.<br>在订单确认页面第一次提交往往会弹出”前方拥挤”的提示,这情况下点击确认有可能会被返回上一页.<br>现在就想办法在可以重复提交的情况下,停留在订单确认页面,直接提交.</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><img src="/./../../img/img/3440819355.gif" alt="GIF 2023-7-31 15-54-51.gif"><br>这个动作非常影响捡漏速度,有无办法可以去掉呢?<br>从整个行为过程分析:<br>调用接口—-&gt;返回数据—-&gt;弹出窗口—-&gt;点击按钮—-&gt;关闭页面&#x2F;返回上一页<br>所以如果我们可以找到弹出窗口,然后hook按钮点击事件,应该就可以不返回上一页</p>
<h2 id="动手"><a href="#动手" class="headerlink" title="动手"></a>动手</h2><p>根据上面的过程分析,首先需要找到”提交订单”调用接口的地方(<code>UltronPresenter</code>):<br><img src="/./../../img/img/2926356272.png" alt="image-20230801114325694.png"><br>其中的<code>onSuccess</code>和<code>onError</code>就是调用接口成功和失败的回调函数.<br><code>DmUltronRequestErrorUtils.getInstance()</code>猜测应该是错误弹出窗口的单例.进去看看~<br>枚举的名字:<br><img src="/./../../img/img/473934656.png" alt="image-20230801114853607.png"><br>多个<code>点击事件</code>的设置:<br><img src="/./../../img/img/3373563603.png" alt="image-20230801115018261.png"><br>都证明这里应该就是错误弹窗点击按钮设置回调的地方.到这个就可以开始暴力hook了</p>
<h2 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h2><p><code>DmUltronRequestErrorUtils</code>中有三个<code>OnClickListener</code>:</p>
<ol>
<li><code>DialogInterface$OnClickListenerC4733a</code></li>
<li><code>DialogInterface$OnClickListenerC4734b</code></li>
<li><code>DialogInterface$OnClickListenerC4735c</code></li>
</ol>
<p>暴力hook的方法就是把这三个<code>OnClickListener</code>的<code>onClick</code>事件替换:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">let</span> DialogInterface<span class="token variable">$OnClickListenerC4733a</span> <span class="token operator">=</span> Java.use<span class="token punctuation">(</span>
  <span class="token string">"cn.damai.ultron.utils.DmUltronRequestErrorUtils<span class="token variable">$a</span>"</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
DialogInterface<span class="token variable">$OnClickListenerC4733a</span><span class="token punctuation">[</span><span class="token string">"onClick"</span><span class="token punctuation">]</span>.implementation <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>
  dialogInterface,
  i
<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  console.log<span class="token punctuation">(</span>
    <span class="token variable"><span class="token variable">`</span>DialogInterface$OnClickListenerC4733a.onClick is called: <span class="token assign-left variable">dialogInterface</span><span class="token operator">=</span>$<span class="token punctuation">&#123;</span>dialogInterface<span class="token punctuation">&#125;</span>, <span class="token assign-left variable">i</span><span class="token operator">=</span>$<span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span><span class="token variable">`</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  // this<span class="token punctuation">[</span><span class="token string">"onClick"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>dialogInterface, i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token builtin class-name">let</span> DialogInterface<span class="token variable">$OnClickListenerC4734b</span> <span class="token operator">=</span> Java.use<span class="token punctuation">(</span>
  <span class="token string">"cn.damai.ultron.utils.DmUltronRequestErrorUtils<span class="token variable">$b</span>"</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
DialogInterface<span class="token variable">$OnClickListenerC4734b</span><span class="token punctuation">[</span><span class="token string">"onClick"</span><span class="token punctuation">]</span>.implementation <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>
  dialogInterface,
  i
<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  console.log<span class="token punctuation">(</span>
    <span class="token variable"><span class="token variable">`</span>DialogInterface$OnClickListenerC4734b.onClick is called: <span class="token assign-left variable">dialogInterface</span><span class="token operator">=</span>$<span class="token punctuation">&#123;</span>dialogInterface<span class="token punctuation">&#125;</span>, <span class="token assign-left variable">i</span><span class="token operator">=</span>$<span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span><span class="token variable">`</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  // this<span class="token punctuation">[</span><span class="token string">"onClick"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>dialogInterface, i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token builtin class-name">let</span> DialogInterface<span class="token variable">$OnClickListenerC4735c</span> <span class="token operator">=</span> Java.use<span class="token punctuation">(</span>
  <span class="token string">"cn.damai.ultron.utils.DmUltronRequestErrorUtils<span class="token variable">$c</span>"</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
DialogInterface<span class="token variable">$OnClickListenerC4735c</span><span class="token punctuation">[</span><span class="token string">"onClick"</span><span class="token punctuation">]</span>.implementation <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>
  dialogInterface,
  i
<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  console.log<span class="token punctuation">(</span>
    <span class="token variable"><span class="token variable">`</span>DialogInterface$OnClickListenerC4735c.onClick is called: <span class="token assign-left variable">dialogInterface</span><span class="token operator">=</span>$<span class="token punctuation">&#123;</span>dialogInterface<span class="token punctuation">&#125;</span>, <span class="token assign-left variable">i</span><span class="token operator">=</span>$<span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span><span class="token variable">`</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  // this<span class="token punctuation">[</span><span class="token string">"onClick"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>dialogInterface, i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>这样就能做到无视重试返回上一页:<br><img src="/./../../img/img/3896308243.gif" alt="GIF 2023-8-1 12-06-00.gif"></p>
<h2 id="继续进阶"><a href="#继续进阶" class="headerlink" title="继续进阶"></a>继续进阶</h2><p>在阅读源码过程中发现了错误处理的工厂函数:<br><img src="/./../../img/img/271582881.png" alt="image-20230801164524772.png"><br>发现其中有<code>TOAST</code>的<code>errorType</code>,<code>TOAST</code>在android中是一个自动消失的提示消失,所以在想如果hook这个函数,是否可以做到连<code>dialog</code>都不用弹窗了,就可以疯狂按提交了,于是hook:</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> DmUltronRequestErrorUtils <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token string">"cn.damai.ultron.utils.DmUltronRequestErrorUtils"</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
DmUltronRequestErrorUtils<span class="token punctuation">[</span><span class="token string">"b"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span>
  <span class="token string">"cn.damai.ultron.view.activity.DmOrderActivity"</span><span class="token punctuation">,</span>
  <span class="token string">"cn.damai.ultron.utils.DmUltronRequestErrorUtils$ErrorType"</span><span class="token punctuation">,</span>
  <span class="token string">"java.lang.String"</span><span class="token punctuation">,</span>
  <span class="token string">"java.lang.String"</span><span class="token punctuation">,</span>
  <span class="token string">"java.lang.String"</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">dmOrderActivity<span class="token punctuation">,</span> errorType<span class="token punctuation">,</span> str<span class="token punctuation">,</span> str2<span class="token punctuation">,</span> str3</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">DmUltronRequestErrorUtils.MMdmOrderActivityApiErrorHandle is called: dmOrderActivity=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>dmOrderActivity<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, errorType=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>errorType<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, str=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>str<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, str2=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>str2<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, str3=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>str3<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> ErrorType <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
    <span class="token string">"cn.damai.ultron.utils.DmUltronRequestErrorUtils$ErrorType"</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token constant">TOAST</span> <span class="token operator">=</span> ErrorType<span class="token punctuation">.</span><span class="token constant">TOAST</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_a<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token string">"b"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>dmOrderActivity<span class="token punctuation">,</span> <span class="token constant">TOAST</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span> str<span class="token punctuation">,</span> str2<span class="token punctuation">,</span> str3<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_a<span class="token punctuation">.</span>value <span class="token operator">!=</span> <span class="token string">"CREATE"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">//    console.log("build/adjust api , finish");</span>
    dmOrderActivity<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"CREATE api , toast"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token comment">// dmOrderActivity.finish();</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>这里做到的操作效果是,如果是<code>create</code>接口的话,就用<code>toast</code>的形式提示,如果不是的话,就直接返回上一页.当然这里还可以做更多的细化判断.但是我这里就没有继续研究了.</p>
]]></content>
      
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[某麦演出app分析(二)---显示购买按钮]]></title>
      <url>/2023/09/28/app%E9%80%86%E5%90%91/%E6%9F%90%E9%BA%A6%E6%BC%94%E5%87%BAapp%E5%88%86%E6%9E%90-%E4%BA%8C-%E6%98%BE%E7%A4%BA%E8%B4%AD%E4%B9%B0%E6%8C%89%E9%92%AE/</url>
      <content type="html"><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>在成功修改了倒计时之后,进入选择票档页面还是”提交开售提醒”<br><img src="/./../../img/img/2808182322.png" alt="image-20230719113029610.png"><br>这里继续看下有无办法Hook一下,把”立即购买”显示出来<br><img src="/./../../img/img/3097366578.png" alt="image-20230719112839745.png"></p>
<h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p>从<code>openSkuActivity()</code>可以知道选择票档页面是<code>NcovSkuActivity</code>,沿着这方向一直定位到<code>NcovSkuFragment.updateAllview</code></p>
<pre class="line-numbers language-rust" data-language="rust"><code class="language-rust"><span class="token class-name">NcovSkuActivity</span><span class="token punctuation">-></span><span class="token class-name">NcovSkuFragment</span><span class="token punctuation">-></span>initData<span class="token punctuation">-></span>updateAllview<span class="token punctuation">-></span>this<span class="token punctuation">.</span>mModel<span class="token punctuation">.</span><span class="token function">getSkuBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>observe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>每次<code>skuBean</code>有更新都会<code>updateAllview</code>一次.<br>而其中有一个<code>this.skuBottomInfo</code>,结合界面动作,只有点击了票档才会出现底部的操作栏,所以猜测这里是底部确认按钮显示的关键:<br><img src="/./../../img/img/1659778196.png" alt="image-20230719161020249.png"><br>继续往下看有一个叫做<code>this.mSelectedPerform = this.mSkuBean.perform;</code>的变量,应该就是选择了的票档.查找一下<code>mSelectedPerform</code>的引用:<br><img src="/./../../img/img/4114905755.png" alt="image-20230719161334921.png"><br>发现了<code>mSkuBottomView</code>,感觉距离终点越来越近了(<code>MMSkuBottomView</code>是我起的别名)<br><img src="/./../../img/img/3761761168.png" alt="image-20230719162525996.png"><br>接下来分析<code>mSkuBottomView</code>的基类:<br><img src="/./../../img/img/2702808054.png" alt="image-20230719163742376.png"><br>这个类就看得比较困难了,都是混淆后的名字,不过还好有中文哈哈哈,<br>其中一个函数叫<code>h()</code>找到想要的答案(我重命名为<code>buyBottomUI</code>):<br><img src="/./../../img/img/3815166255.png" alt="image-20230719163916467.png"><br>其中用作判断的<code>this.f40114o</code>就是<code>NcovSkuBottomInfo</code>.<br>经过完整的分析,最后确定只要修改<code>skubean</code>的api返回值,就能令到确认购买按钮显示.<br>以下是hook代码:</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token constant">C42703</span><span class="token punctuation">[</span><span class="token string">"onSuccess"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span>
  <span class="token string">"cn.damai.commonbusiness.seatbiz.sku.qilin.bean.SkuBean"</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">skubean</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"C42703.onSuccess is called:"</span> <span class="token operator">+</span> skubean<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"class:"</span> <span class="token operator">+</span> skubean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// console.log('class:' + skubean.itemBuyBtn.btnStatus);</span>

  <span class="token function">showJavaObjectString</span><span class="token punctuation">(</span>skubean<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">updateSkuBean</span><span class="token punctuation">(</span>skubean<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token string">"onSuccess"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">updateSkuBean</span><span class="token punctuation">(</span><span class="token parameter">skubean</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> json <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"com.alibaba.fastjson.JSON"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>json<span class="token punctuation">[</span><span class="token string">"toJSONString"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>skubean<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"skubean data:"</span> <span class="token operator">+</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"skubean.itemBuyBtn.btnStatus:"</span> <span class="token operator">+</span> a<span class="token punctuation">.</span>itemBuyBtn<span class="token punctuation">.</span>btnStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
  a<span class="token punctuation">.</span>itemBuyBtn<span class="token punctuation">.</span>btnStatus <span class="token operator">=</span> <span class="token number">204</span><span class="token punctuation">;</span>
  a<span class="token punctuation">.</span>perform<span class="token punctuation">.</span>performSalable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  a<span class="token punctuation">.</span>perform<span class="token punctuation">.</span>positive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  a<span class="token punctuation">.</span>actionControl<span class="token punctuation">.</span>renderingControl<span class="token punctuation">.</span>renderingType <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  a<span class="token punctuation">.</span>perform<span class="token punctuation">.</span>skuList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    element<span class="token punctuation">.</span>frontEndStatus <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    element<span class="token punctuation">.</span>clickable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    element<span class="token punctuation">.</span>mq <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"skubean.itemBuyBtn.btnStatus:"</span> <span class="token operator">+</span> a<span class="token punctuation">.</span>itemBuyBtn<span class="token punctuation">.</span>btnStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string">"parseObject"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> skubean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"toJavaObject result:"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">let</span> <span class="token constant">C20621</span> <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token string">"cn.damai.commonbusiness.seatbiz.sku.qilin.model.SkuModel$1"</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">C20621</span><span class="token punctuation">[</span><span class="token string">"onSuccess"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span>
  <span class="token string">"cn.damai.commonbusiness.seatbiz.sku.qilin.bean.SkuBean"</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">skubean</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// console.log(`SkuModel..onSuccess is called`);</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"SkuModel..onSuccess called:"</span> <span class="token operator">+</span> skubean<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"class:"</span> <span class="token operator">+</span> skubean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// console.log('class:' + skubean.itemBuyBtn.btnStatus);</span>
  <span class="token function">showJavaObjectString</span><span class="token punctuation">(</span>skubean<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">updateSkuBean</span><span class="token punctuation">(</span>skubean<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token string">"onSuccess"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>其中hook的函数是<code>skuRequest.request</code>的<code>callback</code>中的<code>onSuccess</code>函数,而不是直接修改api的返回值.<br>而这样的<code>onSuccess</code>一共有两处:<code>C20621</code>和<code>C42703</code><br>这样的话就能在演出未开始正式开售之前,提前进入到选择页面:<br><img src="/./../../img/img/1204967342.png" alt="image-20230720175245750.png"><br>虽然如此,也是需要等正式开售了之后才能点击正常进入到订单确认页面,如果提前点击会报错.感觉提前进入的hook到这里已经是极限了,因为订单确认页面是需要调用<code>buildOrder</code>成功之后的数据生成的,所以这里开始就要靠运气了</p>
<h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>有抢票经验的朋友应该会留意到一个细节,就捡漏了,当第一次尝试购票失败,就会被踢回上一页,从新选票档再提交</p>
]]></content>
      
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[某麦演出app分析(一)---倒计时去除]]></title>
      <url>/2023/09/28/app%E9%80%86%E5%90%91/%E6%9F%90%E9%BA%A6%E6%BC%94%E5%87%BAapp%E5%88%86%E6%9E%90-%E4%B8%80-%E5%80%92%E8%AE%A1%E6%97%B6%E5%8E%BB%E9%99%A4/</url>
      <content type="html"><![CDATA[<p>第一次发帖,多多包涵</p>
<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>疫情开放第一年的演出市场彻底疯掉，五月天北京鸟巢完全抢不到，黄牛猖狂加价，恶心羞辱真五迷，气愤无奈情绪无从发泄。<br>一气之下决定研究一下某麦app接口。</p>
<h2 id="逆向信息"><a href="#逆向信息" class="headerlink" title="逆向信息"></a>逆向信息</h2><p>平台：Android<br>app版本：8.4.5<br>工具:jadx,frida</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>其实想法很简单，一共两个方向</p>
<ol>
<li>在app中，等待开票提前进入选择界面或者付款界面，这样可以一定程度上比普通用户快一掉掉</li>
<li>实现程序call api生成订单，这是最终目的</li>
</ol>
<span id="more"></span>

<h2 id="APP源码分析"><a href="#APP源码分析" class="headerlink" title="APP源码分析"></a>APP源码分析</h2><h3 id="倒计时去除"><a href="#倒计时去除" class="headerlink" title="倒计时去除"></a>倒计时去除</h3><p>从界面上看，待开售的页面和立即购买页面是的却别是开售倒计时，从开发估计一定是会通过api获取开售时间，在前端进行倒计时。<br><img src="/./../../img/img/3834209357.png" alt="GIF 2023-7-27 11-38-13.gif"></p>
<p>通过抓包得知获取详情的api是：</p>
<pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>acs<span class="token punctuation">.</span>m<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>com<span class="token operator">/</span>gw<span class="token operator">/</span>mtop<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>damai<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>getdetail<span class="token regex-literal"><span class="token regex">/1.2/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>返回结构：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>
    <span class="token property">"api"</span><span class="token operator">:</span> <span class="token string">"mtop.alibaba.damai.detail.getdetail"</span><span class="token punctuation">,</span>
    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        <span class="token property">"result"</span><span class="token operator">:</span> <span class="token string">"......"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token property">"ret"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">"SUCCESS::调用成功"</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"v"</span><span class="token operator">:</span> <span class="token string">"1.2"</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>其中<code>data.result</code>就是演出的detail数据:<br><img src="/./../../img/img/3834209357.png" alt="image-20230718150401539.png"></p>
<p>猜测<code>sellStartTime</code>就是开始时间,用<code>countDown</code>作倒计时.尝试在APP源码中查找</p>
<p><img src="/./../../img/img/4036187215.png" alt="image-20230718150535376.png"></p>
<p>找到一个叫做<code>ProjectItemDataBean</code>的类,看一下这个<code>DataBean</code>用来做什么<br><img src="/./../../img/img/761677531.png" alt="image-20230718150750719.png"></p>
<p>继续查找<code>countDown</code>的用例<img src="/./../../img/img/2803475015.png" alt="image-20230718153559468.png"></p>
<p>发现了<code>ProjectDetailItemMainFragment</code>,应该是View层了,查看是怎么使用<img src="/./../../img/img/2129693879.png" alt="image-20230718153703758.png"></p>
<p>从api 返回知道<code>countdown</code>返回的值是<code>591614</code>, 估计是秒数,所以hook一下测试:</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> ProjectItemDataBean <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token string">"cn.damai.trade.newtradeorder.ui.projectdetail.projectdetailitem.bean.ProjectItemDataBean"</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

ProjectItemDataBean<span class="token punctuation">[</span><span class="token string">"setCountDown"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">j</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ProjectItemDataBean.setCountDown is called: j=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>j<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token string">"setCountDown"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token string">"setCountDown"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>直接把<code>countDown</code>设成5秒以内,效果是成功的<br><img src="/./../../img/img/73720788.gif" alt="GIF 2023-7-20 17-49-16.gif"></p>
<p>但是即便是倒计时小时了显示立即购买,点击立即购买按钮依然是没办法进入选择价钱页面,为什么呢?</p>
<p>于是我尝试查找倒计时结束之后的逻辑,在View层有一个<code>TimeCountDownListener</code></p>
<p><img src="/./../../img/img/3641927101.png" alt="image-20230718160619416.png"></p>
<p>这里是更新了<code>BuyBtnText</code>,还更新了<code>this.mProjectItemStatusHelper.m45526u(this.mProjectItemDataBean);</code>,所以估计在点击<code>立即购买</code>按钮还有其他数据的判断.<br><img src="/./../../img/img/2026437160.png" alt="image-20230718160657553.png"></p>
<p>这是通过阅读代码发现有一个类叫做<code>ProjectItemStatusHelper.OnBottomViewClickListener</code>,里面的函数:</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OnBottomViewClickListener</span> <span class="token punctuation">&#123;</span>
       <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">onBuyRightNow</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">onNeedPrivilege</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">onRegister</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">onSelectSeat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">onSoldOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">onTimingCountDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在<code>ProjectDetailitemMainFragment</code>中的实现是:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">C4295e0</span> <span class="token keyword">implements</span> <span class="token class-name">ProjectItemStatusHelper<span class="token punctuation">.</span>OnBottomViewClickListener</span> <span class="token punctuation">&#123;</span>
       <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">transient</span> <span class="token comment">/* synthetic */</span> <span class="token class-name">IpChange</span> $ipChange<span class="token punctuation">;</span>

       <span class="token class-name">C4295e0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
           <span class="token class-name">ProjectDetailItemMainFragment</span><span class="token punctuation">.</span><span class="token keyword">this</span> <span class="token operator">=</span> r1<span class="token punctuation">;</span>
       <span class="token punctuation">&#125;</span>
       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
       home<span class="token punctuation">.</span>php<span class="token operator">?</span>mod<span class="token operator">=</span>space<span class="token operator">&amp;</span>uid<span class="token operator">=</span><span class="token number">1892347</span> <span class="token comment">// </span>
       <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTimingCountDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
           <span class="token class-name">IpChange</span> ipChange <span class="token operator">=</span> $ipChange<span class="token punctuation">;</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">AndroidInstantRuntime</span><span class="token punctuation">.</span><span class="token function">support</span><span class="token punctuation">(</span>ipChange<span class="token punctuation">,</span> <span class="token string">"-926618722"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
               ipChange<span class="token punctuation">.</span>ipc$<span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">"-926618722"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
               <span class="token class-name">ProjectDetailItemMainFragment</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">processTimeCountDownClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">&#125;</span>
       <span class="token punctuation">&#125;</span>
   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>通过分析<code>processTimeCountDownClick</code>可知道:</p>
<pre class="line-numbers language-rust" data-language="rust"><code class="language-rust"><span class="token function">processTimeCountDownClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">-></span><span class="token function">processClickNotRefreshAfterCountDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">-></span><span class="token function">getSubProjectDectailCheckData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>最终调用<code>skuRequest</code>再次call api获取数据:<br><img src="/./../../img/img/3999693623.png" alt="image-20230718164524955.png"></p>
<p>在<code>ProjectDetailItemMainFragment.onReturnSkuBeanDataSuccess()</code>中可以看到,原来点击按钮之后会再次获取<code>skuBean</code>,然后判断里面的<code>itemBuyBtnBean.btnStatus</code>是否等于106和倒计时是否等于0,最终运行<code>popupSkuByPerformInfo()</code></p>
<pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">public</span> void <span class="token function">onReturnSkuBeanDataSuccess</span><span class="token punctuation">(</span>SkuBean skuBean<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        long j<span class="token punctuation">;</span>
        <span class="token operator">..</span><span class="token punctuation">.</span>
        <span class="token operator">..</span><span class="token punctuation">.</span>
        int i <span class="token operator">=</span> itemBuyBtnBean<span class="token punctuation">.</span>btnStatus<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> <span class="token number">230</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">!=</span> <span class="token number">231</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>mSkuBean <span class="token operator">=</span> skuBean<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>mSkuBean <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token operator">..</span><span class="token punctuation">.</span>
        <span class="token operator">..</span><span class="token punctuation">.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>itemBuyBtnBean<span class="token punctuation">.</span>btnStatus <span class="token operator">==</span> <span class="token number">106</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token operator">..</span><span class="token punctuation">.</span>
            <span class="token operator">..</span><span class="token punctuation">.</span>
        <span class="token punctuation">&#125;</span>
        <span class="token function">updateCountDownVisibility</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">updateMemberPromptCountDownVisibility</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ProjectItemStatusHelper projectItemStatusHelper2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mProjectItemStatusHelper<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>projectItemStatusHelper2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            projectItemStatusHelper2<span class="token punctuation">.</span><span class="token function">m45526u</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mProjectItemDataBean<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">updatePageUT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>mProjectItemStatusHelper<span class="token punctuation">.</span><span class="token function">m45535l</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token function">cancelCountDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">displayProjectNotExistPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>mPurchaseType <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token function">popupSkuByPerformInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>通过其他正常可购买的api返回得知,”立即购买”的<code>status</code>是<code>204</code>,所以,我们可以通过抓包或者hook修改<code>skubean</code>中<code>itemBuyBtnBean.btnStatus</code>为<code>204</code>.</p>
<p>我是通过Hook修改:</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token constant">C42703</span><span class="token punctuation">[</span><span class="token string">"onSuccess"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span>
  <span class="token string">"cn.damai.commonbusiness.seatbiz.sku.qilin.bean.SkuBean"</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">skubean</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">updateSkuBean</span><span class="token punctuation">(</span>skubean<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token string">"onSuccess"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">updateSkuBean</span><span class="token punctuation">(</span><span class="token parameter">skubean</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> json <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"com.alibaba.fastjson.JSON"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>json<span class="token punctuation">[</span><span class="token string">"toJSONString"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>skubean<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  a<span class="token punctuation">.</span>itemBuyBtn<span class="token punctuation">.</span>btnStatus <span class="token operator">=</span> <span class="token number">204</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string">"parseObject"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> skubean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>如果一切正常最后会运行<code>openSkuActivity()</code>进入到下一个选购界面<br><img src="/./../../img/img/3219827417.gif" alt="GIF 2023-7-27 11-51-59.gif"><br>然而进入了选择场次票档界面,底部的按钮依然是”提交开售提醒”,不是立即购买.</p>
<h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>这里继续看下有无办法Hook一下,去显示购买按钮</p>
<!--MyCopyright-->
]]></content>
      
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[大麦网抢票软件工具开发系列（一）]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%A4%A7%E9%BA%A6%E7%BD%91%E6%8A%A2%E7%A5%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>  《大麦网》都知道吧，就是那个被网友声称“大麦网你卖啥了?”票务平台。近期有听到朋友说《大麦网》的票很难抢，基本上都是说：“哎哟喂,被挤爆啦,请稍后重试!”，也不知道《大麦网》到底有没有票！！！</p>
<p>  言归正传，准备做个《大麦网》抢票的软件，就是想证明下《大麦网》到底有没有票（推广公众号）！！，做之前也从百度、Github里面搜索过， Github里面有几个好用的Python抢票脚本，有兴趣的可以去里面搜索。此次做的抢票小工具是基于《大麦网》移动端接口的，直达《大麦网》服务器，没有网页元素，速度肯定棒。</p>
<p>  这个系列的文章主要是偏教程方面，学习一些Hook、抓包、反编译的知识。再者《大麦网》已经被阿里给收了，所以这是个阿里系的App，看完这个系统的文章对某宝、某猪、某猫App的逆向很有帮助。说了这么多，先列出逆向时用到的工具软件，以及主要用途：</p>
<ul>
<li><p>Frida</p>
</li>
<li><p>Xposed</p>
</li>
<li><p>Apktool</p>
</li>
<li><p>Selenium</p>
</li>
<li><p>Root后的手机一台</p>
</li>
</ul>
<p>还有一些逆向过程中的难点：</p>
<ul>
<li>Charles抓包</li>
<li>生成Api签名</li>
<li>自动过人机校验</li>
</ul>
<h4 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h4><p>为了思路更加清晰，为大家列出这个系列后面的一些文章相关内容：</p>
<ol>
<li>基本工具使用、介绍</li>
<li>阿里网络库逆向分析、Charles抓包</li>
<li>MTOP签名参数分析、绕路</li>
<li>人机检验分析、绕路</li>
</ol>
<h3 id="Frida基本使用"><a href="#Frida基本使用" class="headerlink" title="Frida基本使用"></a>Frida基本使用</h3><p>使用Frida的目地是为了hook应用关键方法，找到App的突破口如：日志开关、ssl开关等关键方法或变量。Frida的安装方式也非常简单，只需要将<code>frida-server</code>上传到手机里面使用<code>shell</code>运行起来，然后就可以执行一些hook操作，篇幅有限就不一一讲解了，只简单介绍一下本系列文章中使用的一些命令，有兴趣到查看具体使用文档。</p>
<p>将<code>frida-server</code>上传到手机目录：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ adb root <span class="token comment"># might be required</span>
$ adb push frida-server /data/local/tmp/ 
$ adb shell <span class="token string">"chmod 755 /data/local/tmp/frida-server"</span>
$ adb shell <span class="token string">"/data/local/tmp/frida-server &amp;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>查看系统运行进程：</p>
<pre class="line-numbers language-none"><code class="language-none">$ frida -U  -l src&#x2F;index.js  -f cn.damai<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>  这几条命令下来，差不多就够了，hook相关的点都在<code>src/index.js</code>里面，后面再来讲解需要hook的关键点。</p>
<h3 id="Xposed基本使用"><a href="#Xposed基本使用" class="headerlink" title="Xposed基本使用"></a>Xposed基本使用</h3><p>  使用Xposed的目的是为是数据签名的，接过阿里系Api的都知道会有签名这个步骤的。签名算法就不去倒腾了，技术有限…, 但是可以绕过的麻，退而求其次。Xposed只需要会创建Module了了解几个核心Api就可以啦。</p>
<p>引入Xposed依赖：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">dependencies <span class="token punctuation">&#123;</span>
	compile <span class="token function">fileTree</span><span class="token punctuation">(</span>dir<span class="token operator">:</span> <span class="token char">'libs'</span><span class="token punctuation">,</span> include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token char">'*.jar'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    provided 'de<span class="token punctuation">.</span>robv<span class="token punctuation">.</span>android<span class="token punctuation">.</span>xposed<span class="token operator">:</span>api<span class="token operator">:</span><span class="token number">82</span>'
    provided 'de<span class="token punctuation">.</span>robv<span class="token punctuation">.</span>android<span class="token punctuation">.</span>xposed<span class="token operator">:</span>api<span class="token operator">:</span><span class="token number">82</span><span class="token operator">:</span>sources'
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>声明你的模块信息：</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>
	<span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xposedmodule<span class="token punctuation">"</span></span>        
	<span class="token attr-name"><span class="token namespace">android:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>   
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>        
	<span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xposeddescription<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>大麦网签名<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>        
<span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xposedminversion<span class="token punctuation">"</span></span>        
<span class="token attr-name"><span class="token namespace">android:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>53<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>       <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>实现模块入口：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xposed</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">de<span class="token punctuation">.</span>robv<span class="token punctuation">.</span>android<span class="token punctuation">.</span>xposed<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">de<span class="token punctuation">.</span>robv<span class="token punctuation">.</span>android<span class="token punctuation">.</span>xposed<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HookToast</span> <span class="token keyword">implements</span> <span class="token class-name">IXposedHookLoadPackage</span>
<span class="token punctuation">&#123;</span>   
	<span class="token annotation punctuation">@Override</span>   
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleLoadPackage</span><span class="token punctuation">(</span><span class="token class-name">XC_LoadPackage<span class="token punctuation">.</span>LoadPackageParam</span> loadPackageParam<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span>
	<span class="token punctuation">&#123;</span>      
		<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h3 id="Selenium基本使用"><a href="#Selenium基本使用" class="headerlink" title="Selenium基本使用"></a>Selenium基本使用</h3><p>  使用Selenium主要是过人机校验，Api调太多后端程序会检测出是机器在访问Api，所以为了限制保护系统《大麦网》会弹出一个带滑块的网页来辨别用户身份，如果不处理就会限制访问Api基本调用不了Api除非限制时间过了，才能正常访问，引入Selenium就是模拟人为行为滑动完成人机校验，告诉后端不是机器人在抢票。</p>
<p>添加Selenium依赖：</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.seleniumhq.selenium<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>selenium-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span> 
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.141.59<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>设置WebDriver:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ChromeOptions</span> chromeOptions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChromeOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
chromeOptions<span class="token punctuation">.</span><span class="token function">setExperimentalOption</span><span class="token punctuation">(</span><span class="token string">"excludeSwitches"</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"enable-automation"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
chromeOptions<span class="token punctuation">.</span><span class="token function">addArguments</span><span class="token punctuation">(</span><span class="token string">"--user-agent="</span> <span class="token operator">+</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Mozilla/5.0 App"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
chromeOptions<span class="token punctuation">.</span><span class="token function">addArguments</span><span class="token punctuation">(</span><span class="token string">"--no-sandbox"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
chromeOptions<span class="token punctuation">.</span><span class="token function">addArguments</span><span class="token punctuation">(</span><span class="token string">"--lang=zh-CN"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            chromeOptions.setHeadless(true);</span>
webDriver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChromeDriver</span><span class="token punctuation">(</span>chromeOptions<span class="token punctuation">)</span>  <span class="token punctuation">;</span><span class="token comment">//new ChromeDriver(chromeOptions);</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>打开滑动网页：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">webDriver<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>httpUrl<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">WebDriverWait</span><span class="token punctuation">(</span>webDriver<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">until</span><span class="token punctuation">(</span><span class="token class-name">ExpectedConditions</span><span class="token punctuation">.</span><span class="token function">textToBe</span><span class="token punctuation">(</span>
    <span class="token class-name">By</span><span class="token punctuation">.</span><span class="token function">className</span><span class="token punctuation">(</span><span class="token string">"nc-lang-cnt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
    <span class="token string">"请按住滑块，拖动到最右边"</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>解锁地址是动态的，后续再来说明地址的使用和操作。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>  基本上使用Frida、Selenium、Xposed就能解决抓包、人机校验、生成签名这几个关键问题了，后续再来讲解具体的操作流程，以及逆向分析关键代码。</p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 抢票软件开发参考 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[阿里系App抓包分析（一）]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E9%98%BF%E9%87%8C%E7%B3%BBApp%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>阿里移动端产品网络层大多使用Mtop、ANetwork框架，Mtop是阿里云的移动端网关SDk，ANetwork是比较底层的网络实现库，分析这两个框架就能找出App抓不到包的原因。本文将逆向分析<code>smali</code>文件，找出阿里系App网络的开关，最终能使用<code>Charles</code>实现抓包的功能。</p>
<p>以《大麦网》App为例子，从应用宝将APK下载下来将文件后缀改为zip然后解压，然后使用<code>baksmail</code>将dex文件转成smali文件：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">java <span class="token operator">-</span>jar baksmali<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.4</span><span class="token punctuation">.</span>jar  d classes<span class="token punctuation">.</span>dex <span class="token operator">-</span>o damai
java <span class="token operator">-</span>jar baksmali<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.4</span><span class="token punctuation">.</span>jar  d classes2<span class="token punctuation">.</span>dex <span class="token operator">-</span>o damai
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>注意classes.dex会有多个，每个文件都执行一次上面的命令，确保所有的dex文件都被反编译再来分析。</p>
<p>《大麦网》的网络是使用Service的形式，所以首先打开<code>anetwork/channel/aidl/NetworkService.smali</code>这个文件，分析里面的<code>onBind</code>方法：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span>method <span class="token keyword">public</span> <span class="token function">onBind</span><span class="token punctuation">(</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Intent</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Landroid</span><span class="token operator">/</span>os<span class="token operator">/</span><span class="token class-name">IBinder</span><span class="token punctuation">;</span>
 
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    
    <span class="token keyword">new</span><span class="token operator">-</span>instance v1<span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>degrade<span class="token operator">/</span><span class="token class-name">DegradableNetworkDelegate</span><span class="token punctuation">;</span>

    iget<span class="token operator">-</span>object v2<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span><span class="token operator">-></span>context<span class="token operator">:</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span>

    invoke<span class="token operator">-</span>direct <span class="token punctuation">&#123;</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>degrade<span class="token operator">/</span><span class="token class-name">DegradableNetworkDelegate</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>

    iput<span class="token operator">-</span>object v1<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span><span class="token operator">-></span>degradeableNetwork<span class="token operator">:</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">RemoteNetwork</span>$<span class="token class-name">Stub</span><span class="token punctuation">;</span>
 
    <span class="token keyword">new</span><span class="token operator">-</span>instance v1<span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>http<span class="token operator">/</span><span class="token class-name">HttpNetworkDelegate</span><span class="token punctuation">;</span>

    iget<span class="token operator">-</span>object v2<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span><span class="token operator">-></span>context<span class="token operator">:</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span>

    invoke<span class="token operator">-</span>direct <span class="token punctuation">&#123;</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>http<span class="token operator">/</span><span class="token class-name">HttpNetworkDelegate</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>

    iput<span class="token operator">-</span>object v1<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span><span class="token operator">-></span>httpNetwork<span class="token operator">:</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">RemoteNetwork</span>$<span class="token class-name">Stub</span><span class="token punctuation">;</span>
 
    <span class="token keyword">const</span><span class="token operator">-</span><span class="token keyword">class</span> v1<span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">IRemoteNetworkGetter</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
 
<span class="token punctuation">.</span>end method<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>去掉一些无用的代码，可以看到几个关键的类：</p>
<ul>
<li>IRemoteNetworkGetter</li>
<li>DegradableNetworkDelegate</li>
<li>HttpNetworkDelegate</li>
</ul>
<p><code>IRemoteNetworkGetter</code>看名字大概就能猜测是获取某个东西的类，它是一个AIDL生成的类，它就只有一个方法：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span>method <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">RemoteNetwork</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>接收一个Int型参数，用于获取<code>RemoteNetwork</code>实例。它的实现类在<code>anetwork/channel/aidl/NetworkService$1.smali</code>文件中：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span>method <span class="token keyword">public</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">RemoteNetwork</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span>registers <span class="token number">3</span>
    <span class="token punctuation">.</span>param p1<span class="token punctuation">,</span> <span class="token string">"type"</span>    # <span class="token class-name">I</span>
    <span class="token punctuation">.</span>annotation system <span class="token class-name">Ldalvik</span><span class="token operator">/</span>annotation<span class="token operator">/</span><span class="token class-name">Throws</span><span class="token punctuation">;</span>
        value <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">Landroid</span><span class="token operator">/</span>os<span class="token operator">/</span><span class="token class-name">RemoteException</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">.</span>end annotation

    <span class="token punctuation">.</span>prologue
    <span class="token punctuation">.</span>line <span class="token number">36</span>
    <span class="token keyword">const</span><span class="token operator">/</span><span class="token number">4</span> v0<span class="token punctuation">,</span> <span class="token number">0x1</span>

    <span class="token keyword">if</span><span class="token operator">-</span>ne p1<span class="token punctuation">,</span> v0<span class="token punctuation">,</span> <span class="token operator">:</span>cond_a

    iget<span class="token operator">-</span>object v0<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span>$<span class="token number">1</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token keyword">this</span>$<span class="token number">0</span><span class="token operator">:</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span>

    # getter <span class="token keyword">for</span><span class="token operator">:</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span><span class="token operator">-></span>degradeableNetwork<span class="token operator">:</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">RemoteNetwork</span>$<span class="token class-name">Stub</span><span class="token punctuation">;</span>
    invoke<span class="token operator">-</span><span class="token keyword">static</span> <span class="token punctuation">&#123;</span>v0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span><span class="token operator">-></span>access$<span class="token function">000</span><span class="token punctuation">(</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">RemoteNetwork</span>$<span class="token class-name">Stub</span><span class="token punctuation">;</span>

    move<span class="token operator">-</span>result<span class="token operator">-</span>object v0

    <span class="token operator">:</span>goto_9
    <span class="token keyword">return</span><span class="token operator">-</span>object v0

    <span class="token operator">:</span>cond_a
    iget<span class="token operator">-</span>object v0<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span>$<span class="token number">1</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token keyword">this</span>$<span class="token number">0</span><span class="token operator">:</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span>

    # getter <span class="token keyword">for</span><span class="token operator">:</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span><span class="token operator">-></span>httpNetwork<span class="token operator">:</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">RemoteNetwork</span>$<span class="token class-name">Stub</span><span class="token punctuation">;</span>
    invoke<span class="token operator">-</span><span class="token keyword">static</span> <span class="token punctuation">&#123;</span>v0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span><span class="token operator">-></span>access$<span class="token function">100</span><span class="token punctuation">(</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">NetworkService</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span><span class="token class-name">RemoteNetwork</span>$<span class="token class-name">Stub</span><span class="token punctuation">;</span>

    move<span class="token operator">-</span>result<span class="token operator">-</span>object v0

    <span class="token keyword">goto</span> <span class="token operator">:</span>goto_9
<span class="token punctuation">.</span>end method<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>大概意思就是判断<code>type</code>是0就返回<code>httpNetwork</code>其他的就返回<code>degradeableNetwork</code>，这两个实例都是<code>NetworkServie</code>中的<code>onBind</code>方法中创建的。</p>
<p>经过上面的分析就能确定《大麦网》中有两种网络实现一种是比较熟悉的<code>httpNetwork</code>和目前不知道有啥区别的<code>degradeableNetwork</code>，由于咱们的主要目的是实现抓包，具体的网络实现啥的就不去探索了，有兴趣的可以去研究哈。</p>
<p>现在都知道《大麦网》的网络请求是使用AIDL的方式发送的，大家都知道AIDL会自动生成<code>Proxy</code>和<code>Stub</code>， <code>Stub</code>就不去分析了，他的实现类就是<code>DegradableNetworkDelegate</code>和<code>HttpNetworkDelegate</code>，下面得找出绑定<code>NetworkService</code>服务的代码，要使用网络那也要绑定服务才行，打开<code>AndroidManifest.xml</code>文件，找到服务的声明如下：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span>service android<span class="token operator">:</span>exported<span class="token operator">=</span><span class="token string">"false"</span> android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"anetwork.channel.aidl.NetworkService"</span><span class="token operator">></span>
           <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>
               <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"anetwork.channel.aidl.IRemoteNetworkGetter"</span><span class="token operator">/</span><span class="token operator">></span>
           <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>service<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>现在要去找到绑定<code>NetworkService</code>服务的代码，全局搜索<code>anetwork.channel.aidl.IRemoteNetworkGetter</code>这action没有发现有相关的代码，后来发现这个action其实就是<code>IRemoteNetworkGetter</code>这个类的类名，所以通过全局搜索找到了一个<code>RemoteGetterHelper</code>的类，这个类主要用来绑定服务，获取<code>IRemoteNetworkGetter</code>实例，然后获取网络实现类：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"> invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>v3<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Class</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>

move<span class="token operator">-</span>result<span class="token operator">-</span>object v3

invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>v2<span class="token punctuation">,</span> v3<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Intent</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">setAction</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Intent</span><span class="token punctuation">;</span>
 
<span class="token keyword">const</span><span class="token operator">-</span>string<span class="token operator">/</span>jumbo v3<span class="token punctuation">,</span> <span class="token string">"android.intent.category.DEFAULT"</span>

invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>v2<span class="token punctuation">,</span> v3<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Intent</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">addCategory</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Intent</span><span class="token punctuation">;</span>
 
sget<span class="token operator">-</span>object v3<span class="token punctuation">,</span> <span class="token class-name">Lanetwork</span><span class="token operator">/</span>channel<span class="token operator">/</span>aidl<span class="token operator">/</span>adapter<span class="token operator">/</span><span class="token class-name">RemoteGetterHelper</span><span class="token punctuation">;</span><span class="token operator">-></span>conn<span class="token operator">:</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">ServiceConnection</span><span class="token punctuation">;</span>

invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p0<span class="token punctuation">,</span> v2<span class="token punctuation">,</span> v3<span class="token punctuation">,</span> v0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">bindService</span><span class="token punctuation">(</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Intent</span><span class="token punctuation">;</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">ServiceConnection</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">Z</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>自此可以确定获取网络实例会经过以下步骤：</p>
<ol>
<li>使用RemoteGetterHelper绑定服务</li>
<li>获取到IRemoteNetworkGetter</li>
<li>调用IRemoteNetworkGetter.get(int)方法获取实例</li>
</ol>
<p>网络就分析到这里啦，要想实现抓包还得分析Mtop，第二部分再来分析Mtop然后实现抓包，最后简单画个图，理一理：</p>
<p><img src="/./../../img/img/16d90d2a43e1bc38tplv-t2oaga2asx-jj-mark3024000q75.webp" alt="img"></p>
<p>最后欢迎大家关注我的公众号，获取最新的进展。</p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 阿里系App抓包分析3节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[阿里系App抓包分析（三）]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E9%98%BF%E9%87%8C%E7%B3%BBApp%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>上一篇文章《阿里系App抓包分析（二）》简单介绍了Mtop的初始化，发现<code>IMtopInitTask</code>是主要用来处理Mtop的初始化的类，经过查看它有三个实现类：</p>
<ul>
<li>InnerMtopInitTask</li>
<li>OpenMtopInitTask</li>
<li>ProductMtopInitTask</li>
</ul>
<p>三个实现分别对应的<code>instanceId</code>为：<code>OPEN</code>、<code>INNER</code>、<code>PRODUCT</code>，咱们主要看<code>InnerMtopInitTask</code>这个实现，分析里面重要的初始化步骤，最后再使用<code>Charles</code>完成抓包。</p>
<p><code>IMtopInitTask</code>接口只有二个方法：</p>
<pre class="line-numbers language-none"><code class="language-none">.method public abstract executeCoreTask(Lmtopsdk&#x2F;mtop&#x2F;global&#x2F;MtopConfig;)V
.end method

.method public abstract executeExtraTask(Lmtopsdk&#x2F;mtop&#x2F;global&#x2F;MtopConfig;)V
.end method<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>分别执行不同的初始化任务，分析<code>executeCoreTask</code>它主要做了四件事：</p>
<ul>
<li>设置<code>ISign</code>的实现类</li>
<li>设置<code>FilterManager</code></li>
<li>设置<code>AntiAttackHandler</code></li>
<li>设置<code>callFactory</code></li>
</ul>
<p>对应的设置与实现类如下（基于大麦网：7.5.4）：</p>
<table>
<thead>
<tr>
<th>设置项</th>
<th>抽象类</th>
<th>实现类</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>MtopConfig.sign</td>
<td>mtopsdk.security.ISign</td>
<td>mtopsdk.security.b</td>
<td>参数签名</td>
</tr>
<tr>
<td>MtopConfig.filterManager</td>
<td>mtopsdk.framework.manager.FilterManager</td>
<td>tb.anj</td>
<td>网络请求过滤器</td>
</tr>
<tr>
<td>MtopConfig.antiAttackHandler</td>
<td>mtopsdk.mtop.antiattack.AntiAttackHandler</td>
<td>mtopsdk.mtop.antiattack.AntiAttackHandlerImpl</td>
<td>滑动解锁处理类</td>
</tr>
<tr>
<td>MtopConfig.callFactory</td>
<td>mtopsdk.network.Call$Factory</td>
<td>mtopsdk.network.impl.a</td>
<td>网络请求Call工厂类</td>
</tr>
</tbody></table>
<p>再看<code>executeExtraTask</code>里面主要是调用了<code>SwitchConfig.initConfig()</code>方法，一看<code>SwitchConfig</code>里面全是设置方法，细看下发现两个关键的hook点：</p>
<ul>
<li>setGlobalSpdySslSwitchOpen</li>
<li>setGlobalSpdySwitchOpen</li>
</ul>
<p>先使用<code>Frida</code>调一下试试：</p>
<pre class="line-numbers language-none"><code class="language-none">function hookNetwork()&#123;
    var enableSpdy &#x3D; false;
    var SwitchConfig &#x3D; Java.use(&#39;mtopsdk.mtop.global.SwitchConfig&#39;)
    var instance &#x3D; SwitchConfig.getInstance();
    
    instance.setGlobalSpdySslSwitchOpen(enableSpdy);
    instance.setGlobalSpdySwitchOpen(enableSpdy);
&#125;

Java.perform(function () &#123;
    hookNetwork();
&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>用上面的脚本，启动App试试：</p>
<pre class="line-numbers language-none"><code class="language-none">frida -U  -l src&#x2F;index.js  -f cn.damai<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>设置好手机代理，再启动<code>Charles</code>查看是否有请求数据，如果有那说明爬包成功了：</p>
<p><img src="/./../../img/img/16d99cf156c487bctplv-t2oaga2asx-jj-mark3024000q75.webp" alt="img"></p>
<p>抓到包看到数据基本上是完成一小步了，为什么是一小步呢？因为Mtop有签名机制和防机器人机制，这些要解决才能爬到数据的，不然调不了API或者人机校验过不了的。</p>
<p>欢迎大家关注公众号，一起交流Java、Android、逆向知识。</p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 阿里系App抓包分析3节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[阿里系App抓包分析（二）]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E9%98%BF%E9%87%8C%E7%B3%BBApp%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>经过上一篇文章分析ANetwork框架的基础运行方式后，本篇文章准备分析一下MtopSDK的初始化流程，如果大家还不知道Mtop在移动端App里面干啥的建议先读一下<a href="https://link.juejin.cn/?target=https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/10/4/16d943874737b715~tplv-t2oaga2asx-image.image">《移动API网关 》</a>这篇文章简单了解MtopSDK。</p>
<p>话不多说，直接开始分析先将文件定位到<code>Lmtopsdk/mtop/intf/Mtop;</code>这个类上：</p>
<pre class="line-numbers language-none"><code class="language-none">.field protected static final instanceMap:Ljava&#x2F;util&#x2F;Map;
.field final initTask:Lmtopsdk&#x2F;mtop&#x2F;global&#x2F;init&#x2F;IMtopInitTask;  
.field volatile instanceId:Ljava&#x2F;lang&#x2F;String;
.field final mtopConfig:Lmtopsdk&#x2F;mtop&#x2F;global&#x2F;MtopConfig;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>里面有几个重要的实例属性:</p>
<ul>
<li>instanceMap（存放Mtop实例的）</li>
<li>initTask（初始化任务）</li>
<li>instanceId（实例ID可能为: OPEN、INNER、PRODUCT）</li>
<li>mtopConfig（MTOP配置信息）</li>
</ul>
<p>那Mtop这个类是如何构造的呢？细看之下会发现Mtop只有一个私有的构造方法：</p>
<pre class="line-numbers language-none"><code class="language-none">.method private constructor &lt;init&gt;(Ljava&#x2F;lang&#x2F;String;Lmtopsdk&#x2F;mtop&#x2F;global&#x2F;MtopConfig;)V<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>翻译成Java代码大概就是这样:</p>
<pre class="line-numbers language-none"><code class="language-none">private Mtop(String instancceId, MtopConfig config)&#123;
    ...
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>MtopConfig稍后再来分析，再继续往下分析Mtop类还有个私有init方法和几个静态instance的方法：</p>
<pre class="line-numbers language-none"><code class="language-none">.method private declared-synchronized init(Landroid&#x2F;content&#x2F;Context;Ljava&#x2F;lang&#x2F;String;)V
.method public static instance(Landroid&#x2F;content&#x2F;Context;)Lmtopsdk&#x2F;mtop&#x2F;intf&#x2F;Mtop;
.method public static instance(Landroid&#x2F;content&#x2F;Context;Ljava&#x2F;lang&#x2F;String;)Lmtopsdk&#x2F;mtop&#x2F;intf&#x2F;Mtop;
.method public static instance(Ljava&#x2F;lang&#x2F;String;Landroid&#x2F;content&#x2F;Context;)Lmtopsdk&#x2F;mtop&#x2F;intf&#x2F;Mtop;
.method public static instance(Ljava&#x2F;lang&#x2F;String;Landroid&#x2F;content&#x2F;Context;Ljava&#x2F;lang&#x2F;String;)Lmtopsdk&#x2F;mtop&#x2F;intf&#x2F;Mtop;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>因为init方法是个私有的，不太可能从外部调用，所以直接先看下几个instance方法。虽然instance有好几个重载形式，但最终都还是调用的<code>instance(Ljava/lang/String;Landroid/content/Context;Ljava/lang/String;)</code>，简单的翻译成Java代码如下：</p>
<pre class="line-numbers language-none"><code class="language-none">
public static instance(Context ctx)&#123;
    instanec(ctx, null, null);
&#125;

public static instance(Context ctx,String ttid)&#123;
    instanec(null, ctx, ttid);
&#125;

public static instance(String instanceId, Context ctx)&#123;
    instanec(instanceId, ctx, null);
&#125;

public static instance(String instanceId, Context ctx,String ttid)&#123;
   
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>知道最终的走向后，咱们就直接分析第四个instance方法就行啦，smali代码就不贴了直接转成Java方便阅读：</p>
<pre class="line-numbers language-none"><code class="language-none">public static instance(String instanceId, Context ctx,String ttid)&#123;
    if(instanceId &#x3D;&#x3D; null)&#123;
        instanceId &#x3D; &quot;INNER&quot;;
    &#125;
    
    Mtop mtop &#x3D; instanceMap.get(instanceId); &#x2F;&#x2F;获取mtop实例
    if(mtop &#x3D;&#x3D; null)&#123;
       synchronized (Mtop.class)&#123;
            mtop &#x3D; instanceMap.get(instanceId); &#x2F;&#x2F;获取mtop实例
            if(mtop &#x3D;&#x3D; null)&#123;
                Map&lt;String, MtopConfig&gt; mtopConfigs &#x3D; MtopSetting.mtopConfigMap;
                MtopConfig config  &#x3D; mtopConfigs.get(instanceId);
                if(config &#x3D;&#x3D; null)&#123;
                    config &#x3D; new MtopConfig(instanceId);
                &#125;
                mtop &#x3D; new MTop(instanceId, config);
                config.mtopInstance &#x3D; mtop;
                
                &#x2F;&#x2F;MtopSetting.mtopConfigMap.put(instanceId, config);
                instanceMap.put(instanceId, mtop);
            &#125;
       &#125;
    &#125;

    if(mtop.isInit)&#123;
        return mtop;
    &#125;
    
    mtop.init(ctx,ttid);
    return mtop;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>上面的instance方法差不多就是创建Mtop实例、调用init方法，所以再来看一个Mtop的构造方法：</p>
<pre class="line-numbers language-none"><code class="language-none">.method private constructor &lt;init&gt;(Ljava&#x2F;lang&#x2F;String;Lmtopsdk&#x2F;mtop&#x2F;global&#x2F;MtopConfig;)V
    ...
    iput-object p2, p0, Lmtopsdk&#x2F;mtop&#x2F;intf&#x2F;Mtop;-&gt;mtopConfig:Lmtopsdk&#x2F;mtop&#x2F;global&#x2F;MtopConfig;

    
    invoke-static &#123;p1&#125;, Lmtopsdk&#x2F;mtop&#x2F;global&#x2F;init&#x2F;MtopInitTaskFactory;-&gt;getMtopInitTask(Ljava&#x2F;lang&#x2F;String;)Lmtopsdk&#x2F;mtop&#x2F;global&#x2F;init&#x2F;IMtopInitTask;

    move-result-object v0

    iput-object v0, p0, Lmtopsdk&#x2F;mtop&#x2F;intf&#x2F;Mtop;-&gt;initTask:Lmtopsdk&#x2F;mtop&#x2F;global&#x2F;init&#x2F;IMtopInitTask; 
 
    ....
.end method<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Mtop构造方法做了一些实例属性的初始化工作，需要注意的是<code>initTask</code>这个实例属性的获取是从<code>MtopInitTaskFactory</code>里面获取的，跟过去看一下，是如何获取<code>IMtopInitTask</code>的实例的：</p>
<pre class="line-numbers language-none"><code class="language-none">public static IMtopInitTask getMtopInitTask(String instanceId)&#123;
    
    switch&#123;
        case &quot;INNER&quot;:
        default:
            return InnerMtopInitTask();
        case &quot;OPEN&quot;:
            returnn OpenMtopInitTask();
        case &quot;PRODUCT&quot;:
            return ProductMtopInitTask();
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>大概意思就是通过不同的<code>instancceId</code>获取对应的初始化任务。</p>
<p>有了<code>IMtopInitTask</code>实例后在哪里执行呢？继续分析Mtop的init方法会发现有一段运行<code>IMtopInitTask</code>的代码：</p>
<pre class="line-numbers language-none"><code class="language-none">new-instance v0, Lmtopsdk&#x2F;mtop&#x2F;intf&#x2F;Mtop$1;
 invoke-direct &#123;v0, p0&#125;, Lmtopsdk&#x2F;mtop&#x2F;intf&#x2F;Mtop$1;-&gt;&lt;init&gt;(Lmtopsdk&#x2F;mtop&#x2F;intf&#x2F;Mtop;)V
 invoke-static &#123;v0&#125;, Lmtopsdk&#x2F;mtop&#x2F;util&#x2F;MtopSDKThreadPoolExecutorFactory;-&gt;submit(Ljava&#x2F;lang&#x2F;Runnable;)Ljava&#x2F;util&#x2F;concurrent&#x2F;Future;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>在分析<code>IMtopInitTask</code>的几个实现类之前，先去分析一下比较重要的类：<code>MtopSetting</code>，看名字知道专门用来配置Mtop和MtopConfig的，它有个静态属性和几个方法来设置一些配置：</p>
<pre class="line-numbers language-none"><code class="language-none">protected static final Map&lt;String, MtopConfig&gt; mtopConfigMap;
 public static MapConfig getMtopConfigByID(String instanceId)&#123; &#125;
 ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><code>getMtopConfigByID</code>这个方法会通过instanceId获取MtopConfig的实例，如果没有的话会创建一个新的并且将它放入到<code>mtopConfigMap</code>中，方便下次获取。其他的方法都是通过<code>getMtopConfigByID</code>获取Mtop或MtopConfig实例后调用相应的设置项。</p>
<p>经过上面的一翻分析，猜测以下类的主要作用：</p>
<ul>
<li>MtopSettings （设置工具类）</li>
<li>MtopConfig (存在Mtop配置类)</li>
<li>Mtop （Mtop核心功能类）</li>
<li>IMtopInitTask (Mtop初始化任务)</li>
</ul>
<p>现在有人<code>instanceId</code>就能知道对应的<code>IMtopInitTask</code>实例来初始化Mtop，下一篇文章再来分析<code>IMtopInitTask</code>实例，最终完成爬包功能！！</p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 阿里系App抓包分析3节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吾爱破解安卓逆向入门教程《安卓逆向这档事》十]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(10)/</url>
      <content type="html"><![CDATA[<p>由吾爱破解论坛移动安全区版主 正己录制的吾爱破解安卓逆向 <strong>0基础 小白入门教程</strong>《安卓逆向这档事》正式上线啦，如果你想学习安卓逆向，这是一个不错的机会呦！</p>
<p>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139179&idx=1&sn=26e374dfb5776d41a7d3501770915a77&chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&scene=21#wechat_redirect">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p>
<p><img src="/./../../img/img/640.png" alt="图片"></p>
<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>1.初识ELF文件格式、常见节区<br>2.了解NDK开发，写一个简单的so<br>3.学习IDA Pro工具的使用来分析so文件<br>4.通过学习ARM基础知识，能进行简单的修改<br>5.通过Chatgpt&amp;IDA快速分析二进制文件**</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.教程Demo(更新)<br>2.MT管理器&#x2F;NP管理器<br>3.IDA Pro<br>4.雷电模拟器<br>5.Android Studio</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<h2 id="1-初识ELF文件格式"><a href="#1-初识ELF文件格式" class="headerlink" title="1. 初识ELF文件格式"></a>1. 初识ELF文件格式</h2><p>ELF（Executable and Linkable Format）是一种可执行和可链接的文件格式，是linux底下二进制文件，可以理解为windows下的<code>PE文件</code>，在Android中可以比作<code>dll</code>，方便函数的移植，在常用于保护Android软件，增加逆向难度。</p>
<p>ELF文件的主要组成部分包括：</p>
<ul>
<li>ELF Header：文件头，描述文件的基本信息</li>
<li>Program Header Table：程序头表，描述进程映像的布局</li>
<li>Section Header Table：节区头表，描述文件的各个节区</li>
</ul>
<table>
<thead>
<tr>
<th align="left">节区名</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">.text</td>
<td align="left">代码段，存放程序的指令</td>
</tr>
<tr>
<td align="left">.data</td>
<td align="left">数据段，存放已初始化的全局变量和静态变量</td>
</tr>
<tr>
<td align="left">.rodata</td>
<td align="left">只读数据段，存放只读数据</td>
</tr>
<tr>
<td align="left">.bss</td>
<td align="left">未初始化数据段，存放未初始化的全局变量和静态变量</td>
</tr>
<tr>
<td align="left">.symtab</td>
<td align="left">符号表，存放符号信息</td>
</tr>
<tr>
<td align="left">.strtab</td>
<td align="left">字符串表，存放字符串数据</td>
</tr>
<tr>
<td align="left">.dynsym</td>
<td align="left">动态符号表，存放动态链接需要的符号信息</td>
</tr>
<tr>
<td align="left">.dynamic</td>
<td align="left">动态链接信息，存放动态链接器需要的信息</td>
</tr>
</tbody></table>
<h2 id="2-NDK开发"><a href="#2-NDK开发" class="headerlink" title="2.NDK开发"></a>2.NDK开发</h2><p>NDK（Native Development Kit）是一套用于开发Android应用程序的工具集，它允许您在C&#x2F;C++中编写性能关键的部分代码，并将这些代码与Java代码进行连接。</p>
<p>步骤：<br>1.下载NDK和CMake<br><img src="/./../../img/img/640-1695700248553-3.png" alt="图片"><br><img src="/./../../img/img/640-1695700248553-4.png" alt="图片"><br>2.新建一个项目,往下拉,找到”c++”这个选项<br>3.查看CMakeLists.txt和编写native-lib.cpp<br>下面是cmakelist.txt和native-lib.cpp文件的作用以及简要说明：</p>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">CMakeLists.txt</td>
<td align="left">构建配置文件</td>
<td align="left">CMakeLists.txt是用于配置NDK项目的构建系统的文件。它指定了构建所需的源文件、依赖项、编译选项等。在构建过程中，CMake会根据该文件的指示生成对应的构建脚本，用于编译本地代码并生成本地库。</td>
</tr>
<tr>
<td align="left">native-lib.cpp</td>
<td align="left">本地代码实现文件</td>
<td align="left">native-lib.cpp是包含本地代码实现的文件。它定义了通过Java和本地代码之间进行通信的本地方法。该文件中的函数实现将被编译为本地库，供Java代码调用。</td>
</tr>
</tbody></table>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>

    <span class="token comment">// Used to load the 'ndkdemo' library on application startup.</span>
    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"ndkdemo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 加载名为"ndkdemo"的库</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">private</span> <span class="token class-name">ActivityMainBinding</span> binding<span class="token punctuation">;</span> <span class="token comment">// 声明一个ActivityMainBinding变量</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>

        binding <span class="token operator">=</span> <span class="token class-name">ActivityMainBinding</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token function">getLayoutInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用ViewBinding将布局文件解析为一个ActivityMainBinding对象</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将Activity的布局设置为根布局</span>

        <span class="token comment">// Example of a call to a native method</span>
        <span class="token class-name">TextView</span> tv <span class="token operator">=</span> binding<span class="token punctuation">.</span>sampleText<span class="token punctuation">;</span> <span class="token comment">// 获取布局文件中的TextView控件</span>
        tv<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">stringFromJNI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 调用本地方法stringFromJNI()并将其返回的字符串设置为TextView的文本内容</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">/**
     * A native method that is implemented by the 'ndkdemo' native library,
     * which is packaged with this application.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token class-name">String</span> <span class="token function">stringFromJNI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 声明一个native方法stringFromJNI()</span>
<span class="token punctuation">&#125;</span>
 复制代码 隐藏代码
# <span class="token class-name">For</span> more information about using <span class="token class-name">CMake</span> <span class="token keyword">with</span> <span class="token class-name">Android</span> <span class="token class-name">Studio</span><span class="token punctuation">,</span> read the
# documentation<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>d<span class="token punctuation">.</span>android<span class="token punctuation">.</span>com<span class="token operator">/</span>studio<span class="token operator">/</span>projects<span class="token operator">/</span>add<span class="token operator">-</span><span class="token keyword">native</span><span class="token operator">-</span>code<span class="token punctuation">.</span>html

# 设置构建本地库所需的<span class="token class-name">CMake</span>的最小版本要求
<span class="token function">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token constant">VERSION</span> <span class="token number">3.22</span><span class="token number">.1</span><span class="token punctuation">)</span>

# 声明和命名项目
<span class="token function">project</span><span class="token punctuation">(</span><span class="token string">"ndkdemo"</span><span class="token punctuation">)</span>

# 创建并命名一个库，设置其类型为<span class="token constant">STATIC</span>或<span class="token constant">SHARED</span>，并指定源代码的相对路径
# 可以定义多个库，<span class="token class-name">CMake</span>会为您构建它们
# <span class="token class-name">Gradle</span>会自动将共享库打包到<span class="token constant">APK</span>中
<span class="token function">add_library</span><span class="token punctuation">(</span>
        # 设置库的名称
        ndkdemo

        # 设置库类型为共享库
        <span class="token constant">SHARED</span>

        # 提供源文件的相对路径
        <span class="token keyword">native</span><span class="token operator">-</span>lib<span class="token punctuation">.</span>cpp<span class="token punctuation">)</span>

# 搜索指定的预构建库并将路径存储为变量。
# 由于<span class="token class-name">CMake</span>默认在搜索路径中包含系统库，因此您只需指定要添加的公共<span class="token constant">NDK</span>库的名称。
# <span class="token class-name">CMake</span>会在完成构建之前验证该库是否存在。
<span class="token function">find_library</span><span class="token punctuation">(</span>
        # 设置路径变量的名称
        log<span class="token operator">-</span>lib

        # 指定要让<span class="token class-name">CMake</span>定位的<span class="token constant">NDK</span>库的名称
        log<span class="token punctuation">)</span>

# 指定<span class="token class-name">CMake</span>应链接到目标库的库。
# 您可以链接多个库，例如在此构建脚本中定义的库、预构建的第三方库或系统库。
<span class="token function">target_link_libraries</span><span class="token punctuation">(</span>
        # 指定目标库
        ndkdemo

        # 将目标库链接到<span class="token constant">NDK</span>中包含的log库
        $<span class="token punctuation">&#123;</span>log<span class="token operator">-</span>lib<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
 复制代码 隐藏代码
#include <span class="token generics"><span class="token punctuation">&lt;</span>jni<span class="token punctuation">.</span>h<span class="token punctuation">></span></span> <span class="token comment">// JNI头文件，提供了JNI函数和数据类型的定义</span>
#include <span class="token generics"><span class="token punctuation">&lt;</span>string<span class="token punctuation">></span></span> <span class="token comment">// C++标准库的string类</span>

<span class="token comment">// 声明一个jni函数，该函数将会被Java代码调用</span>
<span class="token comment">// JNIEXPORT表示这个函数是可导出的，并且可以被其他代码使用</span>
<span class="token comment">// jstring表示这个函数返回的是一个Java字符串对象</span>
<span class="token comment">// JNICALL是JNI函数的调用约定</span>
<span class="token comment">// Java_com_example_ndkdemo_MainActivity_stringFromJNI是JNI函数的命名规则，与Java中对应的方法名对应</span>
<span class="token comment">// Java打头，1包名,2类名,3方法名字;"_"号隔开</span>
extern <span class="token string">"C"</span> <span class="token constant">JNIEXPORT</span> jstring <span class="token constant">JNICALL</span>
<span class="token class-name">Java_com_example_ndkdemo_MainActivity_stringFromJNI</span><span class="token punctuation">(</span>
        <span class="token class-name">JNIEnv</span><span class="token operator">*</span> env<span class="token punctuation">,</span> <span class="token comment">// JNIEnv是指向JNI环境的指针，可以用来访问JNI提供的功能</span>
        jobject <span class="token comment">/* this */</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// jobject是指向Java对象的指针，在本例中并没有使用</span>

    std<span class="token operator">::</span><span class="token function">string</span> hello <span class="token operator">=</span> <span class="token string">"Hello from C++"</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个C++字符串对象</span>
    <span class="token keyword">return</span> env<span class="token operator">-></span><span class="token class-name">NewStringUTF</span><span class="token punctuation">(</span>hello<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将C++字符串对象转换为Java字符串对象并返回</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="1-JNI的前世今生"><a href="#1-JNI的前世今生" class="headerlink" title="1.JNI的前世今生"></a>1.JNI的前世今生</h3><p>NDK是开发套件，JNI才是调用的框架。所以与其说是NDK开发，不如说是JNI的开发。不过NDK是Android提供的开发套件。JNI可不是，JNI全称Java Native Interface,即Java本地接口，JNI是Java调用Native 语言的一种特性。通过JNI可以使得Java与C&#x2F;C++机型交互。即可以在Java代码中调用C&#x2F;C++等语言的代码或者在C&#x2F;C++代码中调用Java代码。</p>
<h3 id="2-JNI的两种注册方式"><a href="#2-JNI的两种注册方式" class="headerlink" title="2.JNI的两种注册方式"></a>2.JNI的两种注册方式</h3><h4 id="jni静态注册方式"><a href="#jni静态注册方式" class="headerlink" title="jni静态注册方式"></a>jni静态注册方式</h4><ul>
<li><p>优点: 理解和使用方式简单, 属于傻瓜式操作, 使用相关工具按流程操作就行, 出错率低</p>
</li>
<li><p>缺点: 当需要更改类名,包名或者方法时, 需要按照之前方法重新生成头文件, 灵活性不高</p>
<h4 id="jni动态注册方式"><a href="#jni动态注册方式" class="headerlink" title="jni动态注册方式"></a>jni动态注册方式</h4></li>
</ul>
<pre class="line-numbers language-none"><code class="language-none"> 复制代码 隐藏代码
#include &lt;jni.h&gt;
#include &lt;string&gt;

extern &quot;C&quot; &#123;

JNIEXPORT jstring JNICALL Java_com_example_ndkdemo_MainActivity_nativeGetStringFromJNI(JNIEnv* env, jobject obj) &#123;
    std::string hello &#x3D; &quot;Hello wuaipojie&quot;;
    return env-&gt;NewStringUTF(hello.c_str());
&#125;

&#x2F;&#x2F; 定义本地方法注册函数
JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM* vm, void* reserved) &#123;
    JNIEnv* env;
    if (vm-&gt;GetEnv(reinterpret_cast&lt;void**&gt;(&amp;env), JNI_VERSION_1_6) !&#x3D; JNI_OK) &#123;
        return -1;
    &#125;

    &#x2F;&#x2F; 定义要注册的本地方法
    JNINativeMethod methods[] &#x3D; &#123;
        &#123;&quot;nativeGetStringFromJNI&quot;, &quot;()Ljava&#x2F;lang&#x2F;String;&quot;, reinterpret_cast&lt;void*&gt;(Java_com_example_ndkdemo_MainActivity_nativeGetStringFromJNI)&#125;
    &#125;;

    &#x2F;&#x2F; 获取类引用
    jclass clazz &#x3D; env-&gt;FindClass(&quot;com&#x2F;example&#x2F;ndkdemo&#x2F;MainActivity&quot;);
    if (clazz &#x3D;&#x3D; nullptr) &#123;
        return -1;
    &#125;

    &#x2F;&#x2F; 注册本地方法
    if (env-&gt;RegisterNatives(clazz, methods, sizeof(methods) &#x2F; sizeof(methods[0])) &lt; 0) &#123;
        return -1;
    &#125;

    return JNI_VERSION_1_6;
&#125;

&#125; &#x2F;&#x2F; extern &quot;C&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>下面是一些常见的C++数据类型和它们在Java中的对应关系，以及它们在JNI动态注册中的数据类型签名（signature）：</p>
<table>
<thead>
<tr>
<th align="left">C++ 数据类型</th>
<th align="left">Java 数据类型</th>
<th align="left">JNI 数据类型签名</th>
</tr>
</thead>
<tbody><tr>
<td align="left">jint</td>
<td align="left">int</td>
<td align="left">“I”</td>
</tr>
<tr>
<td align="left">jboolean</td>
<td align="left">boolean</td>
<td align="left">“Z”</td>
</tr>
<tr>
<td align="left">jbyte</td>
<td align="left">byte</td>
<td align="left">“B”</td>
</tr>
<tr>
<td align="left">jchar</td>
<td align="left">char</td>
<td align="left">“C”</td>
</tr>
<tr>
<td align="left">jshort</td>
<td align="left">short</td>
<td align="left">“S”</td>
</tr>
<tr>
<td align="left">jlong</td>
<td align="left">long</td>
<td align="left">“J”</td>
</tr>
<tr>
<td align="left">jfloat</td>
<td align="left">float</td>
<td align="left">“F”</td>
</tr>
<tr>
<td align="left">jdouble</td>
<td align="left">double</td>
<td align="left">“D”</td>
</tr>
<tr>
<td align="left">jobject</td>
<td align="left">Object</td>
<td align="left">“Ljava&#x2F;lang&#x2F;Object;”</td>
</tr>
<tr>
<td align="left">jstring</td>
<td align="left">String</td>
<td align="left">“Ljava&#x2F;lang&#x2F;String;”</td>
</tr>
<tr>
<td align="left">jarray</td>
<td align="left">Array</td>
<td align="left">“[elementType”</td>
</tr>
<tr>
<td align="left">jobjectArray</td>
<td align="left">Object[]</td>
<td align="left">“[Ljava&#x2F;lang&#x2F;Object;”</td>
</tr>
<tr>
<td align="left">jbooleanArray</td>
<td align="left">boolean[]</td>
<td align="left">“[Z”</td>
</tr>
<tr>
<td align="left">jbyteArray</td>
<td align="left">byte[]</td>
<td align="left">“[B”</td>
</tr>
<tr>
<td align="left">jcharArray</td>
<td align="left">char[]</td>
<td align="left">“[C”</td>
</tr>
<tr>
<td align="left">jshortArray</td>
<td align="left">short[]</td>
<td align="left">“[S”</td>
</tr>
<tr>
<td align="left">jintArray</td>
<td align="left">int[]</td>
<td align="left">“[I”</td>
</tr>
<tr>
<td align="left">jlongArray</td>
<td align="left">long[]</td>
<td align="left">“[J”</td>
</tr>
<tr>
<td align="left">jfloatArray</td>
<td align="left">float[]</td>
<td align="left">“[F”</td>
</tr>
<tr>
<td align="left">jdoubleArray</td>
<td align="left">double[]</td>
<td align="left">“[D”</td>
</tr>
</tbody></table>
<p>在JNI动态注册中，需要使用正确的数据类型签名来声明本地方法。例如，如果你要注册一个返回<code>int</code>类型的本地方法，其数据类型签名应为<code>I</code>。</p>
<h2 id="3-IDA-Pro使用技巧与Patch"><a href="#3-IDA-Pro使用技巧与Patch" class="headerlink" title="3.IDA Pro使用技巧与Patch"></a>3.IDA Pro使用技巧与Patch</h2><p>简介：<br>IDA Pro（Interactive Disassembler Professional）是一款功能强大的交互式反汇编和调试工具，广泛应用于软件逆向工程、漏洞分析和二进制代码分析。它支持多种处理器架构和可执行文件格式，包括但不限于x86、ARM、MIPS、PowerPC等。通过使用IDA Pro，可以对程序进行静态分析、动态调试和代码修改等操作。</p>
<p>快捷键：</p>
<table>
<thead>
<tr>
<th align="left">快捷键</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Esc</td>
<td align="left">回到上一个位置</td>
</tr>
<tr>
<td align="left">Enter</td>
<td align="left">跳转到当前光标处的地址</td>
</tr>
<tr>
<td align="left">-</td>
<td align="left">折叠代码</td>
</tr>
<tr>
<td align="left">+</td>
<td align="left">展开代码</td>
</tr>
<tr>
<td align="left">*</td>
<td align="left">创建一个结构</td>
</tr>
<tr>
<td align="left">Alt + A</td>
<td align="left">手动定义一个数组</td>
</tr>
<tr>
<td align="left">Alt + F</td>
<td align="left">寻找直接引用的函数</td>
</tr>
<tr>
<td align="left">Alt + G</td>
<td align="left">跳转到特定的地址</td>
</tr>
<tr>
<td align="left">Alt + T</td>
<td align="left">显示调用树</td>
</tr>
<tr>
<td align="left">Alt + X</td>
<td align="left">重命名</td>
</tr>
<tr>
<td align="left">Ctrl + G</td>
<td align="left">快速跳转到指定地址</td>
</tr>
<tr>
<td align="left">Ctrl + J</td>
<td align="left">显示引用列表</td>
</tr>
<tr>
<td align="left">Ctrl + K</td>
<td align="left">显示 XREF 到选中的函数&#x2F;数据</td>
</tr>
<tr>
<td align="left">Ctrl + N</td>
<td align="left">创建一个函数</td>
</tr>
<tr>
<td align="left">Ctrl + Q</td>
<td align="left">快速重命名</td>
</tr>
<tr>
<td align="left">Ctrl + X</td>
<td align="left">显示从选中的函数&#x2F;数据的 XREF</td>
</tr>
<tr>
<td align="left">Ctrl + E</td>
<td align="left">显示结构类型</td>
</tr>
<tr>
<td align="left">Ctrl + R</td>
<td align="left">手动定义一个数据结构</td>
</tr>
<tr>
<td align="left">Ctrl + W</td>
<td align="left">打开函数列表</td>
</tr>
<tr>
<td align="left">Ctrl + D</td>
<td align="left">以十进制显示当前值</td>
</tr>
<tr>
<td align="left">Ctrl + B</td>
<td align="left">以二进制显示当前值</td>
</tr>
<tr>
<td align="left">Ctrl + H</td>
<td align="left">以十六进制显示当前值</td>
</tr>
<tr>
<td align="left">Space</td>
<td align="left">在图形&#x2F;文本视图中切换</td>
</tr>
<tr>
<td align="left">shift + f12</td>
<td align="left">打开字符串窗口</td>
</tr>
<tr>
<td align="left">F5</td>
<td align="left">转伪C代码</td>
</tr>
</tbody></table>
<h3 id="Patch方式"><a href="#Patch方式" class="headerlink" title="Patch方式"></a>Patch方式</h3><p>1.keypatch插件快速修补<br>快捷键：Ctrl+Alt+k<br>2.ARM TO Hex<br><a href="https://armconverter.com/">https://armconverter.com/</a></p>
<h2 id="4-ARM基础知识"><a href="#4-ARM基础知识" class="headerlink" title="4.ARM基础知识"></a>4.ARM基础知识</h2><h3 id="常见寻址方式"><a href="#常见寻址方式" class="headerlink" title="常见寻址方式"></a>常见寻址方式</h3><table>
<thead>
<tr>
<th align="left">寻址方式</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">立即数寻址</td>
<td align="left">直接使用立即数值作为操作数，例如：<code>MOV R0, #5</code></td>
</tr>
<tr>
<td align="left">寄存器直接寻址</td>
<td align="left">使用寄存器中的值作为操作数，例如：<code>MOV R0, R1</code></td>
</tr>
<tr>
<td align="left">寄存器间接寻址</td>
<td align="left">使用寄存器中的值作为内存地址，访问该地址中的数据，例如：<code>LDR R0, [R1]</code></td>
</tr>
<tr>
<td align="left">寄存器相对寻址</td>
<td align="left">使用寄存器中的值加上一个立即偏移量作为内存地址，例如：<code>LDR R0, [R1, #4]</code></td>
</tr>
<tr>
<td align="left">寄存器变址寻址</td>
<td align="left">使用两个寄存器中的值相加作为内存地址，例如：<code>LDR R0, [R1, R2]</code></td>
</tr>
<tr>
<td align="left">带有变址寄存器的寄存器相对寻址</td>
<td align="left">使用寄存器中的值加上另一个寄存器的值乘以一个比例因子作为内存地址，例如：<code>LDR R0, [R1, R2, LSL #2]</code></td>
</tr>
<tr>
<td align="left">堆栈寻址</td>
<td align="left">使用堆栈指针寄存器（如SP）进行操作，例如：<code>PUSH &#123;R0, R1&#125;</code> 或 <code>POP &#123;R0, R1&#125;</code></td>
</tr>
</tbody></table>
<h3 id="压栈和出栈指令"><a href="#压栈和出栈指令" class="headerlink" title="压栈和出栈指令"></a>压栈和出栈指令</h3><table>
<thead>
<tr>
<th align="left">指令类型</th>
<th align="left">指令示例</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">压栈</td>
<td align="left"><code>PUSH &#123;R0, R1&#125;</code></td>
<td align="left">将寄存器R0和R1的内容压入堆栈中</td>
</tr>
<tr>
<td align="left">压栈</td>
<td align="left"><code>PUSH &#123;R0-R5&#125;</code></td>
<td align="left">将寄存器R0到R5的内容压入堆栈中</td>
</tr>
<tr>
<td align="left">压栈</td>
<td align="left"><code>STMDB SP!, &#123;R0-R5&#125;</code></td>
<td align="left">将寄存器R0到R5的内容压入堆栈中（与PUSH等效）</td>
</tr>
<tr>
<td align="left">出栈</td>
<td align="left"><code>POP &#123;R0, R1&#125;</code></td>
<td align="left">从堆栈中弹出数据，恢复到寄存器R0和R1中</td>
</tr>
<tr>
<td align="left">出栈</td>
<td align="left"><code>POP &#123;R0-R5&#125;</code></td>
<td align="left">从堆栈中弹出数据，恢复到寄存器R0到R5中</td>
</tr>
</tbody></table>
<h3 id="跳转指令"><a href="#跳转指令" class="headerlink" title="跳转指令"></a>跳转指令</h3><table>
<thead>
<tr>
<th align="left">指令类型</th>
<th align="left">指令示例</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">无条件跳转</td>
<td align="left"><code>B label</code></td>
<td align="left">无条件跳转到标签<code>label</code>指向的位置</td>
</tr>
<tr>
<td align="left">子程序调用</td>
<td align="left"><code>BL label</code></td>
<td align="left">调用子程序，将当前指令的下一条指令地址存入链接寄存器（LR），然后跳转到标签<code>label</code>指向的位置</td>
</tr>
<tr>
<td align="left">子程序返回</td>
<td align="left"><code>BX LR</code></td>
<td align="left">返回子程序调用前的位置，跳转到链接寄存器（LR）中存储的地址</td>
</tr>
<tr>
<td align="left">寄存器跳转</td>
<td align="left"><code>BX Rn</code></td>
<td align="left">跳转到寄存器Rn中存储的地址</td>
</tr>
</tbody></table>
<h3 id="算术运算指令"><a href="#算术运算指令" class="headerlink" title="算术运算指令"></a>算术运算指令</h3><p>汇编中也可以进行算术运算， 比如加减乘除，常用的运算指令用法如表 所示：</p>
<table>
<thead>
<tr>
<th align="left">指令</th>
<th align="left">计算公式</th>
<th align="left">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="left">ADD Rd, Rn, Rm</td>
<td align="left">Rd &#x3D; Rn + Rm</td>
<td align="left">加法运算，指令为 ADD</td>
</tr>
<tr>
<td align="left">ADD Rd, Rn, #immed</td>
<td align="left">Rd &#x3D; Rn + #immed</td>
<td align="left">加法运算，指令为 ADD</td>
</tr>
<tr>
<td align="left">ADC Rd, Rn, Rm</td>
<td align="left">Rd &#x3D; Rn + Rm + 进位</td>
<td align="left">带进位的加法运算，指令为 ADC</td>
</tr>
<tr>
<td align="left">ADC Rd, Rn, #immed</td>
<td align="left">Rd &#x3D; Rn + #immed + 进位</td>
<td align="left">带进位的加法运算，指令为 ADC</td>
</tr>
<tr>
<td align="left">SUB Rd, Rn, Rm</td>
<td align="left">Rd &#x3D; Rn - Rm</td>
<td align="left">减法</td>
</tr>
<tr>
<td align="left">SUB Rd, #immed</td>
<td align="left">Rd &#x3D; Rd - #immed</td>
<td align="left">减法</td>
</tr>
<tr>
<td align="left">SUB Rd, Rn, #immed</td>
<td align="left">Rd &#x3D; Rn - #immed</td>
<td align="left">减法</td>
</tr>
<tr>
<td align="left">SBC Rd, Rn, #immed</td>
<td align="left">Rd &#x3D; Rn - #immed - 借位</td>
<td align="left">带借位的减法</td>
</tr>
<tr>
<td align="left">SBC Rd, Rn ,Rm</td>
<td align="left">Rd &#x3D; Rn - Rm - 借位</td>
<td align="left">带借位的减法</td>
</tr>
<tr>
<td align="left">MUL Rd, Rn, Rm</td>
<td align="left">Rd &#x3D; Rn * Rm</td>
<td align="left">乘法 (32 位)</td>
</tr>
<tr>
<td align="left">UDIV Rd, Rn, Rm</td>
<td align="left">Rd &#x3D; Rn &#x2F; Rm</td>
<td align="left">无符号除法</td>
</tr>
<tr>
<td align="left">SDIV Rd, Rn, Rm</td>
<td align="left">Rd &#x3D; Rn &#x2F; Rm</td>
<td align="left">有符号除法</td>
</tr>
</tbody></table>
<h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><p>汇编语言的时候也可以使用逻辑运算指令，常用的运算指令用法如表 所示：<br><img src="/./../../img/img/640-1695700248553-5.png" alt="图片"></p>
<h3 id="偷懒小插件"><a href="#偷懒小插件" class="headerlink" title="偷懒小插件"></a>偷懒小插件</h3><p>WPeChatGPT</p>
<p><img src="/./../../img/img/640-1695700248553-6.png" alt="图片"><br>api报错问题，可以参考仓库里的解决方法：</p>
<pre class="line-numbers language-none"><code class="language-none"> 复制代码 隐藏代码
pip uninstall urllib3
pip install urllib3&#x3D;&#x3D;1.25.11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>如果 urllib3 版本没错或重装 1.25 版本还是存在 API 访问问题的话，那么请下载最新版本，对插件指定代{过}{滤}理：</p>
<ul>
<li><p>将下面三行代码取消注释，然后把代{过}{滤}理地址及端口信息填入 <em><strong>proxies</strong></em> 变量即可：</p>
</li>
<li><pre><code> 复制代码 隐藏代码
print(&quot;WPeChatGPT has appointed the proxy.&quot;)
proxies = &#123;&#39;http&#39;: &quot;http://127.0.0.1:7890&quot;, &#39;https&#39;: &quot;http://127.0.0.1:7890&quot;&#125;
openai.proxy = proxies
</code></pre>
</li>
</ul>
<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<p>1.修改教程demo第五关里的native校验</p>
<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><hr>
<p>待更新</p>
<p>Obsidian主题：<br>Blue-topaz-example <a href="https://github.com/PKM-er/Blue-topaz-example">https://github.com/PKM-er/Blue-topaz-example</a></p>
<p>推荐书籍:<br>王爽老师的《汇编语言(第三版)》<br>《IDA Pro权威指南(第二版)》</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1X24y1m7cj">https://www.bilibili.com/video/BV1X24y1m7cj</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">《安卓逆向这档事》三、初识smail，vip终结者</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138554&idx=1&sn=be2fe7ffb0520ef17405a754ff0725c8&chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&scene=21#wechat_redirect">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138674&idx=1&sn=17a3271b1771bdacf3392fb64dcc5dc3&chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&scene=21#wechat_redirect">《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138693&idx=1&sn=a09896ce9c1aa5e7194600ff7ca011e9&chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&scene=21#wechat_redirect">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138779&idx=1&sn=7201ed7aca4cdd6954787022c7f26b81&chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&scene=21#wechat_redirect">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138987&idx=1&sn=c36c67b952a02f676fcdd5fb5c42abbc&chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&scene=21#wechat_redirect">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139179&idx=1&sn=26e374dfb5776d41a7d3501770915a77&chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&scene=21#wechat_redirect">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p>
<h1 id="八、参考文档"><a href="#八、参考文档" class="headerlink" title="八、参考文档"></a>八、参考文档</h1><hr>
<p>官方NDK入门案例<br>ARM汇编入门指南<br>ARM汇编基础详解<br>Android so(ELF)文件解析<br>小米学安卓逆向一 - NDK开发(1)<br>WPeChatGPT<br>工具使用-IDA从入门到理解<br>什么是NDK开发（一）</p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1787667-1-1.html">https://www.52pojie.cn/thread-1787667-1-1.html</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吾爱破解安卓逆向入门教程《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(2)%E3%80%81%E5%88%9D%E8%AF%86APK%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E3%80%81%E5%8F%8C%E5%BC%80%E3%80%81%E6%B1%89%E5%8C%96%E3%80%81%E5%9F%BA%E7%A1%80%E4%BF%AE%E6%94%B9/</url>
      <content type="html"><![CDATA[<p>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">吾爱破解安卓逆向入门教程《安卓逆向这档事》一、模拟器环境搭建</a></p>
<p><img src="/./../../img/img/640-1695708583750-110.png" alt="图片"></p>
<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>1.了解APK文件结构<br>2.双开APK，简单了解原理<br>3.汉化APK<br>4.简单修改APK名字、图标</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.教程Demo<br>2.MT管理器&#x2F;NP管理器<br>3.开发者助手<br>4.雷电模拟器</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<h2 id="1-Apk结构"><a href="#1-Apk结构" class="headerlink" title="1.Apk结构"></a>1.Apk结构</h2><p>apk 全称 Android Package，它相当于一个压缩文件，只要在电脑上将apk后缀改为zip即可解压。</p>
<table>
<thead>
<tr>
<th align="left">文件</th>
<th align="left">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">assets目录</td>
<td align="left">存放APK的静态资源文件，比如视频，音频，图片等</td>
</tr>
<tr>
<td align="left">lib 目录</td>
<td align="left">armeabi-v7a基本通用所有android设备，arm64-v8a只适用于64位的android设备，x86常见用于android模拟器，其目录下的.so文件是c或c++编译的动态链接库文件</td>
</tr>
<tr>
<td align="left">META-INF目录</td>
<td align="left">保存应用的签名信息，签名信息可以验证APK文件的完整性，相当于APK的身份证(验证文件是否又被修改)</td>
</tr>
<tr>
<td align="left">res目录</td>
<td align="left">res目录存放资源文件，包括图片，字符串等等，APK的脸蛋由他的layout文件设计</td>
</tr>
<tr>
<td align="left">AndroidMainfest.xml文件</td>
<td align="left">APK的应用清单信息，它描述了应用的名字，版本，权限，引用的库文件等等信息</td>
</tr>
<tr>
<td align="left">classes.dex文件</td>
<td align="left">classes.dex是java源码编译后生成的java字节码文件，APK运行的主要逻辑</td>
</tr>
<tr>
<td align="left">resources.arsc文件</td>
<td align="left">resources.arsc是编译后的二进制资源文件，它是一个映射表，映射着资源和id，通过R文件中的id就可以找到对应的资源</td>
</tr>
</tbody></table>
<h2 id="2-双开及原理"><a href="#2-双开及原理" class="headerlink" title="2.双开及原理"></a>2.双开及原理</h2><p>双开：简单来说，就是手机同时运行两个或多个相同的应用，例如同时运行两个微信</p>
<table>
<thead>
<tr>
<th align="left">原理</th>
<th align="left">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">修改包名</td>
<td align="left">让手机系统认为这是2个APP，这样的话就能生成2个数据存储路径，此时的多开就等于你打开了两个互不干扰的APP</td>
</tr>
<tr>
<td align="left">修改Framework</td>
<td align="left">对于有系统修改权限的厂商，可以修改Framework来实现双开的目的，例如：小米自带多开</td>
</tr>
<tr>
<td align="left">通过虚拟化技术实现</td>
<td align="left">虚拟Framework层、虚拟文件系统、模拟Android对组件的管理、虚拟应用进程管理 等一整套虚拟技术，将APK复制一份到虚拟空间中运行，例如：平行空间</td>
</tr>
<tr>
<td align="left">以插件机制运行</td>
<td align="left">利用反射替换，动态代{过}{滤}理，hook了系统的大部分与system—server进程通讯的函数，以此作为“欺上瞒下”的目的，欺骗系统“以为”只有一个apk在运行，瞒过插件让其“认为”自己已经安装。例如：VirtualApp</td>
</tr>
</tbody></table>
<h2 id="3-汉化APK"><a href="#3-汉化APK" class="headerlink" title="3.汉化APK"></a>3.汉化APK</h2><p>汉化：使用专门的工具对外文版的软件资源进行读取、翻译、修改、回写等一系列处理，使软件的菜单、对话框、提示等用户界面显示为中文，而程序的内核和功能保持不变，这个过程即为软件汉化</p>
<p><strong>基本上字符串都是在arsc里，建议一键汉化，然后再润色。<br>少量没汉化到的字符串参考视频中的方法定位去逐个汉化。</strong></p>
<h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p><font color=#ED7001>这里还需要注意的是，如果要直装应用，那就应该先签名安装，看看是否有签名校验导致的闪退</font><br><img src="/./../../img/img/640-1695708583751-111.png" alt="图片"></p>
<h2 id="4-初识AndroidManifest-xml"><a href="#4-初识AndroidManifest-xml" class="headerlink" title="4.初识AndroidManifest.xml"></a>4.初识AndroidManifest.xml</h2><p>AndroidManifest.xml文件是整个应用程序的信息描述文件，定义了应用程序中包含的Activity,Service,Content provider和BroadcastReceiver组件信息。每个应用程序在根目录下必须包含一个AndroidManifest.xml文件，且文件名不能修改。它描述了package中暴露的组件，他们各自的实现类，各种能被处理的数据和启动位置。</p>
<table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">定义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">versionCode</td>
<td align="left">版本号，主要用来更新，例如:12</td>
</tr>
<tr>
<td align="left">versionName</td>
<td align="left">版本名，给用户看的，例如:1.2</td>
</tr>
<tr>
<td align="left">package</td>
<td align="left">包名，例如：com.zj.52pj.demo</td>
</tr>
<tr>
<td align="left">uses-permission android:name&#x3D;””</td>
<td align="left">应用权限，例如：android.permission.INTERNET 代表网络权限</td>
</tr>
<tr>
<td align="left">android:label&#x3D;”@string&#x2F;app_name”</td>
<td align="left">应用名称</td>
</tr>
<tr>
<td align="left">android:icon&#x3D;”@mipmap&#x2F;ic_launcher”</td>
<td align="left">应用图标路径</td>
</tr>
<tr>
<td align="left">android:debuggable&#x3D;”true”</td>
<td align="left">应用是否开启debug权限</td>
</tr>
</tbody></table>
<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<p>1.试着自己找个应用双开、修改名字、找个英文应用汉化<br>2.替换第一关挑战中的图片</p>
<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><hr>
<p>待更新</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1wT411N7sV">https://www.bilibili.com/video/BV1wT411N7sV</a></p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a></p>
<h1 id="八、参考文档"><a href="#八、参考文档" class="headerlink" title="八、参考文档"></a>八、参考文档</h1><hr>
<p>【VirtualAPP 双开系列08】如何实现多开 - UID</p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1695141-1-1.html">https://www.52pojie.cn/thread-1695141-1-1.html</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安卓逆向这档事（三）-初识smali，vip终结者]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(3)%E3%80%81%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/</url>
      <content type="html"><![CDATA[<p><img src="/./../../img/img/640-1695708361134-104.png" alt="图片"></p>
<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>1.了解JVM、Dalvik、ART<br>2.初识smali语法<br>3.实战修改smali</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.教程Demo(更新)<br>2.MT管理器&#x2F;NP管理器<br>3.雷电模拟器<br>4.jadx-gui<br>5.核心破解</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<h2 id="1-什么是JVM、Dalvik、ART"><a href="#1-什么是JVM、Dalvik、ART" class="headerlink" title="1.什么是JVM、Dalvik、ART"></a>1.什么是JVM、Dalvik、ART</h2><p>JVM是JAVA虚拟机，运行JAVA字节码程序<br>Dalvik是Google专门为Android设计的一个虚拟机，Dalvik有专属的文件执行格式dex(Dalvik executable)<br>Art(Android Runtime)相当于Dalvik的升级版，本质与Dalvik无异</p>
<h2 id="2-smali及其语法"><a href="#2-smali及其语法" class="headerlink" title="2.smali及其语法"></a>2.smali及其语法</h2><p>smali是Dalvik的寄存器语言，smali代码是dex反编译而来的。</p>
<p>关键字</p>
<table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">.class</td>
<td align="left">类名</td>
</tr>
<tr>
<td align="left">.super</td>
<td align="left">父类名，继承的上级类名名称</td>
</tr>
<tr>
<td align="left">.source</td>
<td align="left">源名</td>
</tr>
<tr>
<td align="left">.field</td>
<td align="left">变量</td>
</tr>
<tr>
<td align="left">.method</td>
<td align="left">方法名</td>
</tr>
<tr>
<td align="left">.register</td>
<td align="left">寄存器</td>
</tr>
<tr>
<td align="left">.end method</td>
<td align="left">方法名的结束</td>
</tr>
<tr>
<td align="left">public</td>
<td align="left">公有</td>
</tr>
<tr>
<td align="left">protected</td>
<td align="left">半公开，只有同一家人才能用</td>
</tr>
<tr>
<td align="left">private</td>
<td align="left">私有，只能自己使用</td>
</tr>
<tr>
<td align="left">.parameter</td>
<td align="left">方法参数</td>
</tr>
<tr>
<td align="left">.prologue</td>
<td align="left">方法开始</td>
</tr>
<tr>
<td align="left">.line xxx</td>
<td align="left">位于第xxx行</td>
</tr>
</tbody></table>
<p>数据类型对应</p>
<table>
<thead>
<tr>
<th align="left">smali类型</th>
<th align="left">java类型</th>
<th align="left">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">V</td>
<td align="left">void</td>
<td align="left">无返回值</td>
</tr>
<tr>
<td align="left">Z</td>
<td align="left">boolean</td>
<td align="left">布尔值类型，返回0或1</td>
</tr>
<tr>
<td align="left">B</td>
<td align="left">byte</td>
<td align="left">字节类型，返回字节</td>
</tr>
<tr>
<td align="left">S</td>
<td align="left">short</td>
<td align="left">短整数类型，返回数字</td>
</tr>
<tr>
<td align="left">C</td>
<td align="left">char</td>
<td align="left">字符类型，返回字符</td>
</tr>
<tr>
<td align="left">I</td>
<td align="left">int</td>
<td align="left">整数类型，返回数字</td>
</tr>
<tr>
<td align="left">J</td>
<td align="left">long （64位 需要2个寄存器存储）</td>
<td align="left">长整数类型，返回数字</td>
</tr>
<tr>
<td align="left">F</td>
<td align="left">float</td>
<td align="left">单浮点类型，返回数字</td>
</tr>
<tr>
<td align="left">D</td>
<td align="left">double （64位 需要2个寄存器存储）</td>
<td align="left">双浮点类型，返回数字</td>
</tr>
<tr>
<td align="left">string</td>
<td align="left">String</td>
<td align="left">文本类型，返回字符串</td>
</tr>
<tr>
<td align="left">Lxxx&#x2F;xxx&#x2F;xxx</td>
<td align="left">object</td>
<td align="left">对象类型，返回对象</td>
</tr>
</tbody></table>
<p>常用指令</p>
<table>
<thead>
<tr>
<th align="left">关键字</th>
<th align="left">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">const</td>
<td align="left">重写整数属性，真假属性内容，只能是数字类型</td>
</tr>
<tr>
<td align="left">const-string</td>
<td align="left">重写字符串内容</td>
</tr>
<tr>
<td align="left">const-wide</td>
<td align="left">重写长整数类型，多用于修改到期时间。</td>
</tr>
<tr>
<td align="left">return</td>
<td align="left">返回指令</td>
</tr>
<tr>
<td align="left">if-eq</td>
<td align="left">全称equal(a&#x3D;b)，比较寄存器ab内容，相同则跳</td>
</tr>
<tr>
<td align="left">if-ne</td>
<td align="left">全称not equal(a!&#x3D;b)，ab内容不相同则跳</td>
</tr>
<tr>
<td align="left">if-eqz</td>
<td align="left">全称equal zero(a&#x3D;0)，z即是0的标记，a等于0则跳</td>
</tr>
<tr>
<td align="left">if-nez</td>
<td align="left">全称not equal zero(a!&#x3D;0)，a不等于0则跳</td>
</tr>
<tr>
<td align="left">if-ge</td>
<td align="left">全称garden equal(a&gt;&#x3D;b)，a大于或等于则跳</td>
</tr>
<tr>
<td align="left">if-le</td>
<td align="left">全称little equal(a&lt;&#x3D;b)，a小于或等于则跳</td>
</tr>
<tr>
<td align="left">goto</td>
<td align="left">强制跳到指定位置</td>
</tr>
<tr>
<td align="left">switch</td>
<td align="left">分支跳转，一般会有多个分支线，并根据指令跳转到适当位置</td>
</tr>
<tr>
<td align="left">iget</td>
<td align="left">获取寄存器数据</td>
</tr>
</tbody></table>
<p>其余指令可用语法工具查询</p>
<p>定位方法：搜索弹窗关键字、抓取按钮id</p>
<p>例子：</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart"><span class="token comment">//一个私有、静态、不可变的方法   方法名</span>
<span class="token punctuation">.</span>method private <span class="token keyword">static</span> <span class="token keyword">final</span> onCreate$lambda<span class="token operator">-</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">Lkotlin</span><span class="token operator">/</span>jvm<span class="token operator">/</span>internal<span class="token operator">/</span><span class="token class-name">Ref</span>$<span class="token class-name">IntRef</span><span class="token punctuation">;</span><span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>ui<span class="token operator">/</span><span class="token class-name">ChallengeSecond</span><span class="token punctuation">;</span><span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">ImageView</span><span class="token punctuation">;</span><span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">ImageView</span><span class="token punctuation">;</span><span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">ImageView</span><span class="token punctuation">;</span><span class="token class-name">Landroid</span><span class="token operator">/</span>view<span class="token operator">/</span><span class="token class-name">View</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Z</span> <span class="token comment">//(这里面是方法的参数)这里是方法返回值类型，表示布尔值类型，返回假或真</span>
    <span class="token punctuation">.</span>registers <span class="token number">7</span>  <span class="token comment">//寄存器数量</span>

    <span class="token punctuation">.</span>line <span class="token number">33</span>  <span class="token comment">//代码所在的行数</span>
    iget p0<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> <span class="token class-name">Lkotlin</span><span class="token operator">/</span>jvm<span class="token operator">/</span>internal<span class="token operator">/</span><span class="token class-name">Ref</span>$<span class="token class-name">IntRef</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">></span>element<span class="token punctuation">:</span><span class="token class-name">I</span>  <span class="token comment">//读取p0(第一个参数，参考寄存器知识)中element的值赋值给p0</span>

    <span class="token keyword">const</span><span class="token operator">/</span><span class="token number">4</span> p5<span class="token punctuation">,</span> <span class="token number">0x1</span>  <span class="token comment">//p5赋值1</span>

    <span class="token keyword">const</span><span class="token operator">/</span><span class="token number">16</span> v0<span class="token punctuation">,</span> <span class="token number">0xa</span> <span class="token comment">//v0赋值10，在16进制里a表示10</span>

    <span class="token keyword">if</span><span class="token operator">-</span>ge p0<span class="token punctuation">,</span> v0<span class="token punctuation">,</span> <span class="token punctuation">:</span>cond_15  <span class="token comment">//判断p0的值是否大于或等于v0的值(即p0的值是否大于或等于10)，如果大于或等于则跳转到:cond_15</span>

    <span class="token punctuation">.</span>line <span class="token number">34</span>  <span class="token comment">//以下是常见的Toast弹窗代码</span>
    check<span class="token operator">-</span>cast p1<span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span> <span class="token comment">//检查Context对象引用</span>

    <span class="token keyword">const</span><span class="token operator">-</span>string p0<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"请先获取10个硬币哦"</span></span> <span class="token comment">//弹窗文本信息，把""里的字符串数据赋值给p0</span>

    check<span class="token operator">-</span>cast p0<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span> <span class="token comment">//检查CharSequence对象引用</span>

    invoke<span class="token operator">-</span><span class="token keyword">static</span> <span class="token punctuation">&#123;</span>p1<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> p5<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">Toast</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">Toast</span><span class="token punctuation">;</span> 
    <span class="token comment">//将弹窗文本、显示时间等信息传给p1</span>

    move<span class="token operator">-</span>result<span class="token operator">-</span>object p0  <span class="token comment">//结果传递给p0</span>

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">Toast</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">></span><span class="token keyword">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>  <span class="token comment">//当看到这个Toast;->show你就应该反应过来这里是弹窗代码</span>

    goto <span class="token punctuation">:</span>goto_31  <span class="token comment">//跳转到:goto_31</span>

    <span class="token punctuation">:</span>cond_15 <span class="token comment">//跳转的一个地址</span>

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p1<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>ui<span class="token operator">/</span><span class="token class-name">ChallengeSecond</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">isvip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Z</span>  <span class="token comment">//判断isvip方法的返回值是否为真(即结果是否为1)</span>

    move<span class="token operator">-</span>result p0  <span class="token comment">//结果赋值给p0</span>

    <span class="token keyword">if</span><span class="token operator">-</span>eqz p0<span class="token punctuation">,</span> <span class="token punctuation">:</span>cond_43 <span class="token comment">//如果结果为0则跳转cond_43地址</span>

    <span class="token keyword">const</span> p0<span class="token punctuation">,</span> <span class="token number">0x7f0d0018</span>  <span class="token comment">//在arsc中的id索引，这个值可以进行查询</span>

    <span class="token punctuation">.</span>line <span class="token number">37</span>
    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p2<span class="token punctuation">,</span> p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">ImageView</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setImageResource</span><span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span> <span class="token comment">//设置图片资源</span>

    <span class="token keyword">const</span> p0<span class="token punctuation">,</span> <span class="token number">0x7f0d0008</span>

    <span class="token punctuation">.</span>line <span class="token number">38</span>
    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p3<span class="token punctuation">,</span> p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">ImageView</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setImageResource</span><span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>

    <span class="token keyword">const</span> p0<span class="token punctuation">,</span> <span class="token number">0x7f0d000a</span>

    <span class="token punctuation">.</span>line <span class="token number">39</span>
    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p4<span class="token punctuation">,</span> p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">ImageView</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setImageResource</span><span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>

    <span class="token punctuation">.</span>line <span class="token number">40</span>
    sget<span class="token operator">-</span>object p0<span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">SPUtils</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">></span>INSTANCE<span class="token punctuation">:</span><span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">SPUtils</span><span class="token punctuation">;</span> 

    check<span class="token operator">-</span>cast p1<span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span><span class="token operator">/</span><span class="token number">4</span> p2<span class="token punctuation">,</span> <span class="token number">0x2</span> <span class="token comment">//p2赋值2</span>

    <span class="token keyword">const</span><span class="token operator">-</span>string p3<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"level"</span></span> <span class="token comment">//sp的索引</span>

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p0<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p3<span class="token punctuation">,</span> p2<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">SPUtils</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">saveInt</span><span class="token punctuation">(</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span> <span class="token comment">//写入数据</span>

    goto <span class="token punctuation">:</span>goto_50 <span class="token comment">//跳转地址</span>

    <span class="token punctuation">:</span>cond_43

    check<span class="token operator">-</span>cast p1<span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span><span class="token operator">-</span>string p0<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"\u8bf7\u5148\u5145\u503c\u5927\u4f1a\u5458\u54e6\uff01"</span></span> <span class="token comment">//请先充值大会员哦！</span>

    check<span class="token operator">-</span>cast p0<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span>

    invoke<span class="token operator">-</span><span class="token keyword">static</span> <span class="token punctuation">&#123;</span>p1<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> p5<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">Toast</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">Toast</span><span class="token punctuation">;</span>

    move<span class="token operator">-</span>result<span class="token operator">-</span>object p0

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">Toast</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">></span><span class="token keyword">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>

    <span class="token punctuation">:</span>goto_50
    <span class="token keyword">return</span> p5  <span class="token comment">//返回p5的值</span>
<span class="token punctuation">.</span>end method <span class="token comment">//方法结束</span>

<span class="token comment">//判断是否是大会员的方法</span>
<span class="token punctuation">.</span>method public <span class="token keyword">final</span> <span class="token function">isvip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Z</span>
    <span class="token punctuation">.</span>registers <span class="token number">2</span>

    <span class="token keyword">const</span><span class="token operator">/</span><span class="token number">4</span> v0<span class="token punctuation">,</span> <span class="token number">0x0</span> <span class="token comment">//v0赋值0</span>

    <span class="token keyword">return</span> v0 <span class="token comment">//返回v0的值</span>

<span class="token punctuation">.</span>end method<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>修改方法：修改判断、强制跳转、修改寄存器的值</p>
<p><img src="/./../../img/img/640-1695708361135-105.png" alt="图片"></p>
<h2 id="3-寄存器"><a href="#3-寄存器" class="headerlink" title="3.寄存器"></a>3.寄存器</h2><p>在smali里的所有操作都必须经过寄存器来进行:本地寄存器用v开头数字结尾的符号来表示，如v0、 v1、v2。参数寄存器则使用p开头数字结尾的符号来表示，如p0、p1、p2。特别注意的是，p0不一定是函数中的第一个参数，在非static函数中，p0代指“this”，p1表示函数的第一个 参数，p2代表函数中的第二个参数。而在static函数中p0才对应第一个参数(因为Java的static方法中没有this方法）</p>
<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<p>1.关掉视频自己复现三种方法<br>2.完成这个作业demo(因为最近实在是太太太忙了，绝对不是因为我懒，咕咕咕。搞懂这个demo那也基本上能理解本节课的内容)<br>丑小鸭师傅的demo<br>链接：<a href="https://pan.baidu.com/s/1cUInoi">https://pan.baidu.com/s/1cUInoi</a> 密码：07p9<br>原文链接：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651132903&idx=1&sn=8e4b13e303a804a16b25758e187aa5d4&chksm=bd5083b38a270aa53fc2f299f8294cdb78602c7643620980268018100e33f8e7879244cfe852&scene=21#wechat_redirect">教我兄弟学Android逆向02 破解第一个Android程序</a></p>
<h1 id="五、反思-amp-答疑"><a href="#五、反思-amp-答疑" class="headerlink" title="五、反思&amp;答疑"></a>五、反思&amp;答疑</h1><hr>
<p>由于准备不是很充足，我感觉我讲的不是太好，多看看我列举参考文档有利于理解smali语法。</p>
<p>对于开发者而言，在打包应用时，最好对代码进行混淆，否则逆向人员轻而易举得进行Crack，或者说在写代码的时候就不要用isvip、getvip等易辨识的单词作为方法名</p>
<p>待更新</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：阿里云在维护，暂时看不到第三课内容</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1wT411N7sV">https://www.bilibili.com/video/BV1wT411N7sV</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a></p>
<h1 id="八、参考文档"><a href="#八、参考文档" class="headerlink" title="八、参考文档"></a>八、参考文档</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=209195511&idx=2&sn=53c434fc2b459728270e4ffa0255ee97&chksm=2f2d81a3185a08b578e23409c9c2a406702a3ce375d9715df5cb876c5e105123ab19b79b8a56&scene=21#wechat_redirect">吾爱破解安卓逆向入门教程（三）—深入Smali文件</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=209195511&idx=3&sn=1f1d620ecac6cbaab4014eaa6aaa34f2&chksm=2f2d81a3185a08b50ee570b37a2faed95f592cc93fd93e34f7f16e76c135562ad96a0a23e7d3&scene=21#wechat_redirect">吾爱破解安卓逆向入门教程（四）—Smali函数分析</a><br>【原木文章】Android改造者之路-02.初探smali功法</p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1701353-1-1.html">https://www.52pojie.cn/thread-1701353-1-1.html</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《安卓逆向这档事》四、恭喜你获得广告&弹窗静默卡]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(4)%E3%80%81%E6%81%AD%E5%96%9C%E4%BD%A0%E8%8E%B7%E5%BE%97%E5%B9%BF%E5%91%8A&amp;%E5%BC%B9%E7%AA%97%E9%9D%99%E9%BB%98%E5%8D%A1/</url>
      <content type="html"><![CDATA[<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>1.了解安卓四大组件、Activity生命周期<br>2.弹窗定位、去更新<br>3.广告分析与布局优化</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.教程Demo(更新)<br>2.MT管理器&#x2F;NP管理器<br>3.算法助手<br>4.雷电模拟器<br>5.jadx-gui<br>6.开发助手</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<h2 id="1-广告类型"><a href="#1-广告类型" class="headerlink" title="1.广告类型"></a>1.广告类型</h2><p>启动广告   弹窗&amp;更新广告  横幅广告<br><img src="/./../../img/img/640-1695708223658-96.png" alt="图片"></p>
<h2 id="2-安卓四大组件"><a href="#2-安卓四大组件" class="headerlink" title="2.安卓四大组件"></a>2.安卓四大组件</h2><table>
<thead>
<tr>
<th align="left">组件</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Activity(活动)</td>
<td align="left">在应用中的一个Activity可以用来表示一个界面，意思可以理解为“活动”，即一个活动开始，代表 Activity组件启动，活动结束，代表一个Activity的生命周期结束。一个Android应用必须通过Activity来运行和启动，Activity的生命周期交给系统统一管理。</td>
</tr>
<tr>
<td align="left">Service(服务)</td>
<td align="left">Service它可以在后台执行长时间运行操作而没有用户界面的应用组件，不依赖任何用户界面，例如后台播放音乐，后台下载文件等。</td>
</tr>
<tr>
<td align="left">Broadcast Receiver(广播接收器)</td>
<td align="left">一个用于接收广播信息，并做出对应处理的组件。比如我们常见的系统广播：通知时区改变、电量低、用户改变了语言选项等。</td>
</tr>
<tr>
<td align="left">Content Provider(内容提供者)</td>
<td align="left">作为应用程序之间唯一的共享数据的途径，Content Provider主要的功能就是存储并检索数据以及向其他应用程序提供访问数据的接口。Android内置的许多数据都是使用Content Provider形式，供开发者调用的（如视频，音频，图片，通讯录等）</td>
</tr>
</tbody></table>
<h3 id="1-activity的切换"><a href="#1-activity的切换" class="headerlink" title="1.activity的切换"></a>1.activity的切换</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token operator">&lt;!---</span>声明实现应用部分可视化界面的 <span class="token class-name">Activity</span>，必须使用 <span class="token class-name">AndroidManifest</span> 中的 <span class="token operator">&lt;</span>activity<span class="token operator">></span> 元素表示所有 <span class="token class-name">Activity</span>。系统不会识别和运行任何未进行声明的<span class="token class-name">Activity</span>。<span class="token operator">-----></span>
 <span class="token operator">&lt;</span>activity  
     android<span class="token punctuation">:</span>label<span class="token operator">=</span><span class="token string-literal"><span class="token string">"@string/app_name"</span></span>  
     android<span class="token punctuation">:</span>name<span class="token operator">=</span><span class="token string-literal"><span class="token string">"com.zj.wuaipojie.ui.MainActivity"</span></span>  
     android<span class="token punctuation">:</span>exported<span class="token operator">=</span><span class="token string-literal"><span class="token string">"true"</span></span><span class="token operator">></span>  <span class="token operator">&lt;!--</span>当前<span class="token class-name">Activity</span>是否可以被另一个<span class="token class-name">Application</span>的组件启动：<span class="token boolean">true</span>允许被启动；<span class="token boolean">false</span>不允许被启动<span class="token operator">--></span>
     <span class="token operator">&lt;!---</span>指明这个activity可以以什么样的意图<span class="token punctuation">(</span>intent<span class="token punctuation">)</span>启动<span class="token operator">---></span>
     <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>  
         <span class="token operator">&lt;!--</span>表示activity作为一个什么动作启动，android<span class="token punctuation">.</span>intent<span class="token punctuation">.</span>action<span class="token punctuation">.</span><span class="token constant">MAIN</span>表示作为主activity启动<span class="token operator">---></span>
         <span class="token operator">&lt;</span>action  
             android<span class="token punctuation">:</span>name<span class="token operator">=</span><span class="token string-literal"><span class="token string">"android.intent.action.MAIN"</span></span> <span class="token operator">/></span>  
         <span class="token operator">&lt;!--</span>这是action元素的额外类别信息，android<span class="token punctuation">.</span>intent<span class="token punctuation">.</span>category<span class="token punctuation">.</span><span class="token constant">LAUNCHER</span>表示这个activity为当前应用程序优先级最高的<span class="token class-name">Activity</span><span class="token operator">--></span>
         <span class="token operator">&lt;</span>category  
             android<span class="token punctuation">:</span>name<span class="token operator">=</span><span class="token string-literal"><span class="token string">"android.intent.category.LAUNCHER"</span></span> <span class="token operator">/></span>  
     <span class="token operator">&lt;/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>  
 <span class="token operator">&lt;/</span>activity<span class="token operator">></span>  
 <span class="token operator">&lt;</span>activity  
     android<span class="token punctuation">:</span>name<span class="token operator">=</span><span class="token string-literal"><span class="token string">"com.zj.wuaipojie.ui.ChallengeFirst"</span></span> <span class="token operator">/></span>
 <span class="token operator">&lt;</span>activity  
     android<span class="token punctuation">:</span>name<span class="token operator">=</span><span class="token string-literal"><span class="token string">"com.zj.wuaipojie.ui.ChallengeFifth"</span></span>  
     android<span class="token punctuation">:</span>exported<span class="token operator">=</span><span class="token string-literal"><span class="token string">"true"</span></span> <span class="token operator">/></span>  
 <span class="token operator">&lt;</span>activity  
     android<span class="token punctuation">:</span>name<span class="token operator">=</span><span class="token string-literal"><span class="token string">"com.zj.wuaipojie.ui.ChallengeFourth"</span></span>  
     android<span class="token punctuation">:</span>exported<span class="token operator">=</span><span class="token string-literal"><span class="token string">"true"</span></span> <span class="token operator">/></span>  
 <span class="token operator">&lt;</span>activity  
     android<span class="token punctuation">:</span>name<span class="token operator">=</span><span class="token string-literal"><span class="token string">"com.zj.wuaipojie.ui.ChallengeThird"</span></span>  
     android<span class="token punctuation">:</span>exported<span class="token operator">=</span><span class="token string-literal"><span class="token string">"false"</span></span> <span class="token operator">/></span>  
 <span class="token operator">&lt;</span>activity  
     android<span class="token punctuation">:</span>name<span class="token operator">=</span><span class="token string-literal"><span class="token string">"com.zj.wuaipojie.ui.ChallengeSecond"</span></span>  
     android<span class="token punctuation">:</span>exported<span class="token operator">=</span><span class="token string-literal"><span class="token string">"false"</span></span> <span class="token operator">/></span>  
 <span class="token operator">&lt;</span>activity  
     android<span class="token punctuation">:</span>name<span class="token operator">=</span><span class="token string-literal"><span class="token string">"com.zj.wuaipojie.ui.AdActivity"</span></span> <span class="token operator">/></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>启动广告流程：<br>启动Activity-&gt;广告Activity-&gt;主页Activity</p>
<p>修改方法：<br>1.修改加载时间<br>2.Acitivity切换定位，修改Intent的Activity类名</p>
<pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">switch</span> <span class="token punctuation">(</span>position<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span>  
        <span class="token class-name">Intent</span> intent <span class="token operator">=</span> new <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        intent<span class="token punctuation">.</span><span class="token function">setClass</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ChallengeFirst</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        it<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span><span class="token punctuation">;</span>  
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>  
        <span class="token class-name">Intent</span> intent2 <span class="token operator">=</span> new <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        intent2<span class="token punctuation">.</span><span class="token function">setClass</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ChallengeSecond</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        it<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent2<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span><span class="token punctuation">;</span>  
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>  
        <span class="token class-name">Intent</span> intent3 <span class="token operator">=</span> new <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//new一个Intent，</span>
        intent3<span class="token punctuation">.</span><span class="token function">setClass</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">AdActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//传入要切换的Acitivity的类名</span>
        it<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//启动对应的Activity</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>  
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>  
        <span class="token class-name">Intent</span> intent4 <span class="token operator">=</span> new <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        intent4<span class="token punctuation">.</span><span class="token function">setClass</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ChallengeFourth</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        it<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent4<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span><span class="token punctuation">;</span> 
    <span class="token keyword">default</span><span class="token punctuation">:</span>  
        <span class="token keyword">return</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="3-Activity生命周期"><a href="#3-Activity生命周期" class="headerlink" title="3.Activity生命周期"></a>3.Activity生命周期</h2><table>
<thead>
<tr>
<th align="left">函数名称</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">onCreat()</td>
<td align="left">一个Activity启动后第一个被调用的函数，常用来在此方法中进行Activity的一些初始化操作。例如创建View，绑定数据，注册监听，加载参数等。</td>
</tr>
<tr>
<td align="left">onStart()</td>
<td align="left">当Activity显示在屏幕上时，此方法被调用但此时还无法进行与用户的交互操作。</td>
</tr>
<tr>
<td align="left">onResume()</td>
<td align="left">这个方法在onStart()之后调用，也就是在Activity准备好与用户进行交互的时候调用，此时的Activity一定位于Activity栈顶，处于运行状态。</td>
</tr>
<tr>
<td align="left">onPause()</td>
<td align="left">这个方法是在系统准备去启动或者恢复另外一个Activity的时候调用，通常在这个方法中执行一些释放资源的方法，以及保存一些关键数据。</td>
</tr>
<tr>
<td align="left">onStop()</td>
<td align="left">这个方法是在Activity完全不可见的时候调用的。</td>
</tr>
<tr>
<td align="left">onDestroy()</td>
<td align="left">这个方法在Activity销毁之前调用，之后Activity的状态为销毁状态。</td>
</tr>
<tr>
<td align="left">onRestart()</td>
<td align="left">当Activity从停止stop状态恢进入start状态时调用状态。</td>
</tr>
</tbody></table>
<p><img src="/./../../img/img/640-1695708223658-97.png" alt="图片"></p>
<h2 id="4-弹窗定位-amp-堆栈分析"><a href="#4-弹窗定位-amp-堆栈分析" class="headerlink" title="4.弹窗定位&amp;堆栈分析"></a>4.弹窗定位&amp;堆栈分析</h2><p>修改方法：<br>1.修改xml中的versiocode<br>2.Hook弹窗(推荐算法助手开启弹窗定位)<br>3.修改dex弹窗代码<br>4.抓包修改响应体(也可以路由器拦截)</p>
<h2 id="5-布局优化"><a href="#5-布局优化" class="headerlink" title="5.布局优化"></a>5.布局优化</h2><p>1.开发者助手抓布局<br>2.MT管理器xml搜索定位<br>3.修改xml代码</p>
<pre class="line-numbers language-none"><code class="language-none">android:visibility&#x3D;&quot;gone&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<p>定位并去除作业demo首页中的弹窗<br><a href="https://wwl.lanzoub.com/iVKJk0f0pi7g">https://wwl.lanzoub.com/iVKJk0f0pi7g</a></p>
<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><hr>
<p>待更新</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV14v4y1D7yA/">https://www.bilibili.com/video/BV14v4y1D7yA/</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">《安卓逆向这档事》三、初识smail，vip终结者</a></p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1706691-1-1.html">https://www.52pojie.cn/thread-1706691-1-1.html</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《安卓逆向这档事》五、1000-7=？&动态调试&Log插桩]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(5)%E3%80%811000-7=%EF%BC%9F&amp;%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95&Log%E6%8F%92%E6%A1%A9/</url>
      <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><img src="/./../../img/img/640-1695708003880-89.png" alt="图片"></h1><h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>1.配置java环境<br>2.了解并掌握动态调试<br>3.了解并掌握Log插桩</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.教程Demo<br>2.MT管理器&#x2F;NP管理器<br>3.jeb<br>4.雷电模拟器<br>5.XappDebug</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<h2 id="1-配置java环境"><a href="#1-配置java环境" class="headerlink" title="1.配置java环境"></a>1.配置java环境</h2><p>1.下载jdk文件并安装(课件里有)<br>2.配置java环境<br>ps：在视频里面环境配置只配置了一个JAVA_HOME<br>还有一个Path和CLASSPATH，请参考这篇文档，写得很详细，配置完后记得cmd窗口输入java验证一下<br>java 环境配置(详细教程)</p>
<h2 id="2-什么是动态调试"><a href="#2-什么是动态调试" class="headerlink" title="2.什么是动态调试"></a>2.什么是动态调试</h2><p>动态调试是指自带的调试器跟踪自己软件的运行，可以在调试的过程中知道参数或者局部变量的值以及履清代码运行的先后顺序。多用于爆破注册码(CTF必备技能)</p>
<h2 id="3-动态调试步骤"><a href="#3-动态调试步骤" class="headerlink" title="3.动态调试步骤"></a>3.动态调试步骤</h2><h3 id="1-修改debug权限"><a href="#1-修改debug权限" class="headerlink" title="1.修改debug权限"></a>1.修改debug权限</h3><p>方法一:在AndroidManifest.xml里添加可调试权限</p>
<pre class="line-numbers language-none"><code class="language-none">android:debuggable&#x3D;&quot;true&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>方法二：XappDebug模块hook对应的app</p>
<p>项目地址</p>
<p>XappDebug</p>
<p>方法三：Magisk命令(重启失效)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb shell <span class="token comment">#adb进入命令行模式</span>

<span class="token function">su</span> <span class="token comment">#切换至超级用户</span>

magisk resetprop ro.debuggable <span class="token number">1</span>

stop<span class="token punctuation">;</span>start<span class="token punctuation">;</span> <span class="token comment">#一定要通过该方式重启</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>方法四:刷入MagiskHide Props Config模块(永久有效，但我这两台手机都不行，哭死，呜呜呜)</p>
<p>一般来说，在4选项中如果有ro.debuggable那就直接修改<br>没有的话就选5<br><img src="/./../../img/img/640-1695708003881-90.png" alt="图片"><br>修改ro.debuggable的值为1</p>
<h3 id="2-端口转发以及开启adb权限"><a href="#2-端口转发以及开启adb权限" class="headerlink" title="2.端口转发以及开启adb权限"></a>2.端口转发以及开启adb权限</h3><p>版本号点击七次开启开发者模式并开启adb调试权限</p>
<p>夜神模拟器：adb connect 127.0.0.1:62001</p>
<h3 id="3-下段点"><a href="#3-下段点" class="headerlink" title="3.下段点"></a>3.下段点</h3><p>ctrl+b下断点</p>
<h3 id="4-debug模式启动"><a href="#4-debug模式启动" class="headerlink" title="4.debug模式启动"></a>4.debug模式启动</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb shell am start <span class="token parameter variable">-D</span> <span class="token parameter variable">-n</span> com.zj.wuaipojie/.ui.MainActivity<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>adb shell am start -D -n<br>adb shell am start -D -n 包名&#x2F;类名<br>am start -n 表示启动一个activity<br>am start -D 表示将应用设置为可调试模式</p>
<h3 id="5-Jeb附加调试进程"><a href="#5-Jeb附加调试进程" class="headerlink" title="5.Jeb附加调试进程"></a>5.Jeb附加调试进程</h3><p>激活jeb</p>
<p>在线python运行<br><a href="https://tool.lu/coderunner/">https://tool.lu/coderunner/</a></p>
<p>算号代码：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#https://bbs.pediy.com/</span>
<span class="token comment">#!/usr/bin/env python</span>
<span class="token keyword">import</span> os<span class="token punctuation">,</span> sys<span class="token punctuation">,</span> struct<span class="token punctuation">,</span> time<span class="token punctuation">,</span> binascii<span class="token punctuation">,</span> hashlib

RC4_Key2<span class="token operator">=</span> <span class="token string">'Eg\xa2\x99_\x83\xf1\x10'</span>

<span class="token keyword">def</span> <span class="token function">rc4</span><span class="token punctuation">(</span>Key<span class="token punctuation">,</span> inData<span class="token punctuation">)</span><span class="token punctuation">:</span>
    Buf <span class="token operator">=</span> <span class="token string">""</span>
    S <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span>
    K <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span><span class="token builtin">ord</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> Key<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">256</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>Key<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">256</span><span class="token punctuation">]</span>
    j <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        j <span class="token operator">=</span> <span class="token punctuation">(</span>S<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> K<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> j<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>
        S<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> S<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> S<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> S<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    i<span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>
    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>inData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>
        j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> S<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>
        S<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> S<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> S<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> S<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        Buf <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>S<span class="token punctuation">[</span><span class="token punctuation">(</span>S<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> S<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>inData<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> Buf

<span class="token keyword">def</span> <span class="token function">Long2Int</span><span class="token punctuation">(</span>longdata<span class="token punctuation">)</span><span class="token punctuation">:</span>
    lo <span class="token operator">=</span> longdata <span class="token operator">&amp;</span> <span class="token number">0xFFFFFFFF</span>
    hi <span class="token operator">=</span> <span class="token punctuation">(</span>longdata <span class="token operator">>></span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x7FFFFFFF</span>
    <span class="token keyword">return</span> hi<span class="token punctuation">,</span> lo

<span class="token keyword">def</span> <span class="token function">KeygenSN</span><span class="token punctuation">(</span>LicenseSerial<span class="token punctuation">,</span> MachineID<span class="token punctuation">)</span><span class="token punctuation">:</span>
    mhi<span class="token punctuation">,</span> mlo <span class="token operator">=</span> Long2Int<span class="token punctuation">(</span>MachineID<span class="token punctuation">)</span>
    lhi<span class="token punctuation">,</span> llo <span class="token operator">=</span> Long2Int<span class="token punctuation">(</span>LicenseSerial<span class="token punctuation">)</span>
    hi_Key <span class="token operator">=</span> <span class="token punctuation">(</span>mhi <span class="token operator">-</span> lhi <span class="token operator">+</span> <span class="token number">0x55667788</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x7FFFFFFF</span>
    lo_Key <span class="token operator">=</span> <span class="token punctuation">(</span>mlo <span class="token operator">+</span> llo <span class="token operator">+</span> <span class="token number">0x11223344</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFFFFFFFF</span>
    Z0<span class="token punctuation">,</span> <span class="token operator">=</span> struct<span class="token punctuation">.</span>unpack<span class="token punctuation">(</span><span class="token string">'&lt;Q'</span><span class="token punctuation">,</span> struct<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token string">'&lt;LL'</span><span class="token punctuation">,</span> lo_Key<span class="token punctuation">,</span> hi_Key<span class="token punctuation">)</span><span class="token punctuation">)</span>
    Z1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0x56739ACD</span>
    s <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"%x"</span> <span class="token operator">%</span> Z1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span>
    <span class="token keyword">return</span> <span class="token string">"%dZ%d%d"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>Z0<span class="token punctuation">,</span> Z1<span class="token punctuation">,</span> s<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">ParsePost</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">:</span>
    Info <span class="token operator">=</span> struct<span class="token punctuation">.</span>unpack<span class="token punctuation">(</span><span class="token string">'&lt;3L2Q4LQ3L'</span><span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">0x40</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    flag<span class="token punctuation">,</span> CRC<span class="token punctuation">,</span> UserSerial<span class="token punctuation">,</span> LicenseSerial<span class="token punctuation">,</span> MachineID<span class="token punctuation">,</span> build_type<span class="token punctuation">,</span> \
          Ver_Major<span class="token punctuation">,</span> Ver_Minor<span class="token punctuation">,</span> Ver_Buildid<span class="token punctuation">,</span> Ver_Timestamp<span class="token punctuation">,</span> \
          TimeOffset<span class="token punctuation">,</span> Kclass<span class="token punctuation">,</span> Random2 <span class="token operator">=</span> Info
    SysInfoData <span class="token operator">=</span> buf<span class="token punctuation">[</span><span class="token number">0x40</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    <span class="token keyword">assert</span> CRC <span class="token operator">==</span> binascii<span class="token punctuation">.</span>crc32<span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFFFFFFFF</span>
    <span class="token keyword">return</span> Info<span class="token punctuation">,</span> SysInfoData

<span class="token keyword">def</span> <span class="token function">DecodeRc4Str</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">:</span>
    buf <span class="token operator">=</span> buf<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span>
    i<span class="token punctuation">,</span> s <span class="token operator">=</span> ParsePost<span class="token punctuation">(</span>rc4<span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> RC4_Key2<span class="token punctuation">,</span> buf<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> i<span class="token punctuation">,</span> s

<span class="token keyword">def</span> <span class="token function">GetJebLicenseKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    licdata <span class="token operator">=</span> <span class="token string">""</span>
    <span class="token keyword">if</span> licdata<span class="token punctuation">:</span>
        i<span class="token punctuation">,</span> MachineID <span class="token operator">=</span> DecodeRc4Str<span class="token punctuation">(</span>licdata<span class="token punctuation">)</span>
        SN <span class="token operator">=</span> KeygenSN<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span> <span class="token string">"JEB License Key:"</span><span class="token punctuation">,</span> SN
        <span class="token keyword">return</span> SN

GetJebLicenseKey<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token builtin">raw_input</span><span class="token punctuation">(</span><span class="token string">"Enter to Exit..."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>快捷键：<br>^F6进入方法<br>F6跳过方法<br>F7从方法中跳出来<br>R运行到光标处</p>
<h2 id="3-Log插桩"><a href="#3-Log插桩" class="headerlink" title="3.Log插桩"></a>3.Log插桩</h2><p>定义：Log插桩指的是反编译APK文件时，在对应的smali文件里，添加相应的smali代码，将程序中的关键信息，以log日志的形式进行输出。</p>
<p>调用命令</p>
<pre class="line-numbers language-none"><code class="language-none">invoke-static &#123;对应寄存器&#125;, Lcom&#x2F;mtools&#x2F;LogUtils;-&gt;v(Ljava&#x2F;lang&#x2F;Object;)V<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<p>动态调试获取注册码<br><a href="https://wwl.lanzoub.com/iZ0tt0fzsbpa">https://wwl.lanzoub.com/iZ0tt0fzsbpa</a><br>作业提交地址：<br>《安卓逆向这档事》第五节课后小作业贴<br><a href="https://www.52pojie.cn/thread-1714883-1-1.html">https://www.52pojie.cn/thread-1714883-1-1.html</a></p>
<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><hr>
<p>待更新</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1hg411q7dj/">https://www.bilibili.com/video/BV1hg411q7dj/</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">《安卓逆向这档事》第三课、初识smail，vip终结者</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138554&idx=1&sn=be2fe7ffb0520ef17405a754ff0725c8&chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&scene=21#wechat_redirect">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a></p>
<h1 id="八、参考文档"><a href="#八、参考文档" class="headerlink" title="八、参考文档"></a>八、参考文档</h1><hr>
<p>Android修改ro.debuggable 的四种方法<br>Log简易打印工具，超简单的调用方法<br>JEB动态调试Smali-真机&#x2F;模拟器（详细，新手必看）</p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1714727-1-1.html">https://www.52pojie.cn/thread-1714727-1-1.html</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吾爱破解安卓逆向入门教程《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM理、IO重定向]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(6)%E3%80%81%E6%A0%A1%E9%AA%8C%E7%9A%84N%E6%AC%A1%E6%96%B9-%E7%AD%BE%E5%90%8D%E6%A0%A1%E9%AA%8C%E5%AF%B9%E6%8A%97%E3%80%81PM%E7%90%86%E3%80%81IO%E9%87%8D%E5%AE%9A%E5%90%91/</url>
      <content type="html"><![CDATA[<p><img src="/./../../img/img/640-1695707504004-65.gif" alt="图片"></p>
<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>1.了解APK文件签名<br>2.了解APK常见校验及校验对抗方法<br>3.了解PM代理和IO重定向<br>4.smali语法之赋值</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.教程Demo(更新)<br>2.MT管理器&#x2F;NP管理器<br>3.雷电模拟器<br>4.Jadx-gui(第三课课件里有)<br>5.算法助手(第四课课件里有)</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<h2 id="1-什么是校验"><a href="#1-什么是校验" class="headerlink" title="1.什么是校验"></a>1.什么是校验</h2><p>是开发者在数据传送时采用的一种校正数据的一种方式<br>常见的校验有:签名校验(最常见)、dexcrc校验、apk完整性校验、路径文件校验等</p>
<h2 id="2-什么是APK签名"><a href="#2-什么是APK签名" class="headerlink" title="2.什么是APK签名"></a>2.什么是APK签名</h2><p>通过对 Apk 进行签名，开发者可以证明对 Apk 的所有权和控制权，可用于安装和更新其应用。而在 Android 设备上的安装 Apk ，如果是一个没有被签名的 Apk，则会被拒绝安装。在安装 Apk 的时候，软件包管理器也会验证 Apk 是否已经被正确签名，并且通过签名证书和数据摘要验证是否合法没有被篡改。只有确认安全无篡改的情况下，才允许安装在设备上。</p>
<p>简单来说，APK 的签名主要作用有两个：</p>
<ol>
<li>证明 APK 的所有者。</li>
<li>允许 Android 市场和设备校验 APK 的正确性。</li>
</ol>
<p>Android 目前支持以下四种应用签名方案：<br>v1 方案：基于 JAR 签名。<br>v2 方案：APK 签名方案 v2（在 Android 7.0 中引入）<br>v3 方案：APK 签名方案 v3（在 Android 9 中引入）<br>v4 方案：APK 签名方案 v4（在 Android 11 中引入）</p>
<p>V1 签名的机制主要就在 META-INF 目录下的三个文件，MANIFEST.MF，ANDROID.SF，ANDROID.RSA，他们都是 V1 签名的产物。<br>（1）MANIFEST.MF：这是摘要文件。程序遍历Apk包中的所有文件(entry)，对非文件夹非签名文件的文件，逐个用SHA1(安全哈希算法)生成摘要信息，再用Base64进行编码。如果你改变了apk包中的文件，那么在apk安装校验时，改变后的文件摘要信息与MANIFEST.MF的检验信息不同，于是程序就不能成功安装。<br><img src="/./../../img/img/640-1695707504005-66.png" alt="图片"></p>
<p>（2）c.SF：这是对摘要的签名文件。对前一步生成的MANIFEST.MF，使用SHA1-RSA算法，用开发者的私钥进行签名。在安装时只能使用公钥才能解密它。解密之后，将它与未加密的摘要信息（即，MANIFEST.MF文件）进行对比，如果相符，则表明内容没有被异常修改。<br><img src="/./../../img/img/640-1695707504005-67.png" alt="图片"><br>（3）ANDROID.RSA文件中保存了公钥、所采用的加密算法等信息。<br><img src="/./../../img/img/640-1695707504005-68.png" alt="图片"><br>在某些情况下，直接对apk进行v1签名可以绕过apk的签名校验</p>
<p>v2方案会将 APK 文件视为 blob，并对整个文件进行签名检查。对 APK 进行的任何修改（包括对 ZIP 元数据进行的修改）都会使 APK 签名作废。这种形式的 APK 验证不仅速度要快得多，而且能够发现更多种未经授权的修改。</p>
<h2 id="3-什么是签名校验"><a href="#3-什么是签名校验" class="headerlink" title="3.什么是签名校验"></a>3.什么是签名校验</h2><p>如何判断是否有签名校验？<br>不做任何修改，直接签名安装，应用闪退则说明大概率有签名校验</p>
<p>一般来说，普通的签名校验会导致软件的闪退，黑屏，卡启动页等<br>当然，以上都算是比较好的，有一些比较狠的作者，则会直接rm -rf &#x2F;，把基带都格掉的一键变砖。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kill/killProcess-----kill/KillProcess<span class="token punctuation">(</span><span class="token punctuation">)</span>可以杀死当前应用活动的进程，这一操作将会把所有该进程内的资源（包括线程全部清理掉）.当然，由于ActivityManager时刻监听着进程，一旦发现进程被非正常Kill，它将会试图去重启这个进程。这就是为什么，有时候当我们试图这样去结束掉应用时，发现它又自动重新启动的原因.

system.exit-----杀死了整个进程，这时候活动所占的资源也会被释放。

finish----------仅仅针对Activity，当调用finish<span class="token punctuation">(</span><span class="token punctuation">)</span>时，只是将活动推向后台，并没有立即释放内存，活动的资源并没有被清理<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在我个人见过最恶心的签名校验中，当属三角校验(低调大佬教的)最烦人。<br>所谓三角校验，就是so检测dex，动态加载的dex(在软件运行时会解压释放一段dex文件，检测完后就删除)检测so，dex检测动态加载的dex</p>
<p><img src="/./../../img/img/640-1695707504005-69.png" alt="图片"></p>
<p>普通获取签名校验代码：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token class-name">SignCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">String</span> trueSignMD5 <span class="token operator">=</span> <span class="token string">"d0add9987c7c84aeb7198c3ff26ca152"</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> nowSignMD5 <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">// 得到签名的MD5</span>
        <span class="token class-name">PackageInfo</span> packageInfo <span class="token operator">=</span> <span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPackageInfo</span><span class="token punctuation">(</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">GET_SIGNATURES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Signature</span><span class="token punctuation">[</span><span class="token punctuation">]</span> signs <span class="token operator">=</span> packageInfo<span class="token punctuation">.</span>signatures<span class="token punctuation">;</span>
        <span class="token class-name">String</span> signBase64 <span class="token operator">=</span> <span class="token class-name">Base64Util</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>signs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        nowSignMD5 <span class="token operator">=</span> <span class="token class-name">MD5Utils</span><span class="token punctuation">.</span><span class="token function">MD5</span><span class="token punctuation">(</span>signBase64<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PackageManager<span class="token punctuation">.</span>NameNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> trueSignMD5<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nowSignMD5<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>系统将应用的签名信息封装在 PackageInfo 中，调用 PackageManager 的 getPackageInfo(String packageName, int flags) 即可获取指定包名的签名信息</p>
<h2 id="4-签名校验对抗"><a href="#4-签名校验对抗" class="headerlink" title="4.签名校验对抗"></a>4.签名校验对抗</h2><p>方法一:核心破解插件，不签名安装应用<br>方法二:一键过签名工具，例如MT、NP、ARMPro、CNFIX、Modex的去除签名校验功能<br>方法三:具体分析签名校验逻辑(手撕签名校验)<br>方法四:io重定向–VA&amp;SVC：ptrace+seccomp<br>SVC的TraceHook沙箱的实现&amp;无痕Hook实现思路<br>方法五:去作者家严刑拷打拿到.jks文件和密码</p>
<h2 id="5-手动实现PM代理"><a href="#5-手动实现PM代理" class="headerlink" title="5.手动实现PM代理"></a>5.手动实现PM代理</h2><h3 id="1-什么是PMS"><a href="#1-什么是PMS" class="headerlink" title="1.什么是PMS"></a>1.什么是PMS</h3><p>思路源自：Android中Hook 应用签名方法</p>
<p>PackageManagerService（简称PMS），是Android系统核心服务之一，处理包管理相关的工作，常见的比如安装、卸载应用等。</p>
<h3 id="2-实现方法以及原理解析"><a href="#2-实现方法以及原理解析" class="headerlink" title="2.实现方法以及原理解析"></a>2.实现方法以及原理解析</h3><p>HOOK PMS代码:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>hookpms</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Proxy</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>pm<span class="token punctuation">.</span></span><span class="token class-name">PackageManager</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServiceManagerWraper</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">ZJ</span> <span class="token operator">=</span> <span class="token string">"ZJ595"</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">hookPMS</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> signed<span class="token punctuation">,</span> <span class="token class-name">String</span> appPkgName<span class="token punctuation">,</span> <span class="token keyword">int</span> hashCode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">// 获取全局的ActivityThread对象</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> activityThreadClass <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"android.app.ActivityThread"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Method</span> currentActivityThreadMethod <span class="token operator">=</span>
                    activityThreadClass<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"currentActivityThread"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span> currentActivityThread <span class="token operator">=</span> currentActivityThreadMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 获取ActivityThread里面原始的sPackageManager</span>
            <span class="token class-name">Field</span> sPackageManagerField <span class="token operator">=</span> activityThreadClass<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"sPackageManager"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sPackageManagerField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span> sPackageManager <span class="token operator">=</span> sPackageManagerField<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>currentActivityThread<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 准备好代理对象, 用来替换原始的对象</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> iPackageManagerInterface <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"android.content.pm.IPackageManager"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span> proxy <span class="token operator">=</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>
                    iPackageManagerInterface<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>iPackageManagerInterface<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token class-name">PmsHookBinderInvocationHandler</span><span class="token punctuation">(</span>sPackageManager<span class="token punctuation">,</span> signed<span class="token punctuation">,</span> appPkgName<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 1. 替换掉ActivityThread里面的 sPackageManager 字段</span>
            sPackageManagerField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>currentActivityThread<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 2. 替换 ApplicationPackageManager里面的 mPM对象</span>
            <span class="token class-name">PackageManager</span> pm <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Field</span> mPmField <span class="token operator">=</span> pm<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"mPM"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mPmField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mPmField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>pm<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">ZJ</span><span class="token punctuation">,</span> <span class="token string">"hook pms error:"</span> <span class="token operator">+</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">getStackTraceString</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">hookPMS</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">String</span> <span class="token class-name">Sign</span> <span class="token operator">=</span> <span class="token string">"原包的签名信息"</span><span class="token punctuation">;</span>
        <span class="token function">hookPMS</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token class-name">Sign</span><span class="token punctuation">,</span> <span class="token string">"com.zj.hookpms"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>ActivityThread的静态变量sPackageManager<br>ApplicationPackageManager对象里面的mPM变量</p>
<h2 id="6-IO重定向"><a href="#6-IO重定向" class="headerlink" title="6.IO重定向"></a>6.IO重定向</h2><p>什么是IO重定向？</p>
<p>例：在读A文件的时候指向B文件</p>
<p>平头哥的核心代码<br>Virtual Engine for Android(Support 12.0 in business version)</p>
<p>IO重定向可以干嘛？</p>
<p>1，可以让文件只读，不可写</p>
<p>2，禁止访问文件</p>
<p>3，路径替换</p>
<p>具体实现：<br>过签名检测(读取原包)<br>风控对抗(例:一个文件记录App启动的次数)<br>过Root检测，Xposed检测(文件不可取)</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">using namespace std<span class="token punctuation">;</span>  
string packname<span class="token punctuation">;</span>  
string origpath<span class="token punctuation">;</span>  
string fakepath<span class="token punctuation">;</span>  

<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>orig_open<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>pathname<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>orig_openat<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>pathname<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token constant">FILE</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span>orig_fopen<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>filename<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>mode<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token punctuation">(</span><span class="token operator">*</span>orig_syscall<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">long</span> number<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>orig__NR_openat<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>pathname<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token keyword">void</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">*</span>orig_dlopen_CI<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>filename<span class="token punctuation">,</span> <span class="token keyword">int</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">void</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">*</span>orig_dlopen_CIV<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>filename<span class="token punctuation">,</span> <span class="token keyword">int</span> flag<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>extinfo<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">void</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">*</span>orig_dlopen_CIVV<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>extinfo<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>caller_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token keyword">static</span> inline bool <span class="token function">needs_mode</span><span class="token punctuation">(</span><span class="token keyword">int</span> flags<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>flags <span class="token operator">&amp;</span> <span class="token constant">O_CREAT</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">O_CREAT</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>flags <span class="token operator">&amp;</span> <span class="token constant">O_TMPFILE</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">O_TMPFILE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span>  
bool <span class="token function">startsWith</span><span class="token punctuation">(</span>string str<span class="token punctuation">,</span> string sub<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>sub<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span>  

bool <span class="token function">endsWith</span><span class="token punctuation">(</span>string s<span class="token punctuation">,</span>string sub<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
    <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">rfind</span><span class="token punctuation">(</span>sub<span class="token punctuation">)</span><span class="token operator">==</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>sub<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span>  
bool <span class="token function">isOrigAPK</span><span class="token punctuation">(</span>string  path<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  

    <span class="token keyword">if</span><span class="token punctuation">(</span>path<span class="token operator">==</span>origpath<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span>  
<span class="token comment">//该函数的功能是在打开一个文件时进行拦截，并在满足特定条件时将文件路径替换为另一个路径  </span>

<span class="token comment">//fake_open 函数有三个参数：  </span>
<span class="token comment">//pathname：一个字符串，表示要打开的文件的路径。  </span>
<span class="token comment">//flags：一个整数，表示打开文件的方式，例如只读、只写、读写等。  </span>
<span class="token comment">//mode（可选参数）：一个整数，表示打开文件时应用的权限模式。  </span>
<span class="token keyword">int</span> <span class="token function">fake_open</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>pathname<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    mode_t mode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">needs_mode</span><span class="token punctuation">(</span>flags<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        va_list args<span class="token punctuation">;</span>  
        <span class="token function">va_start</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        mode <span class="token operator">=</span> static_cast<span class="token generics"><span class="token punctuation">&lt;</span>mode_t<span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token function">va_arg</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token function">va_end</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token comment">//LOGI("open,  path: %s, flags: %d, mode: %d",pathname, flags ,mode);  </span>
    string cpp_path<span class="token operator">=</span> pathname<span class="token punctuation">;</span>  
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isOrigAPK</span><span class="token punctuation">(</span>cpp_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
        <span class="token function">LOGI</span><span class="token punctuation">(</span><span class="token string">"libc_open, redirect: %s, --->: %s"</span><span class="token punctuation">,</span>pathname<span class="token punctuation">,</span> fakepath<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> <span class="token function">orig_open</span><span class="token punctuation">(</span><span class="token string">"/data/user/0/com.zj.wuaipojie/files/base.apk"</span><span class="token punctuation">,</span> flags<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token keyword">return</span>  <span class="token function">orig_open</span><span class="token punctuation">(</span>pathname<span class="token punctuation">,</span> flags<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token punctuation">&#125;</span>  

<span class="token comment">//该函数的功能是在打开一个文件时进行拦截，并在满足特定条件时将文件路径替换为另一个路径  </span>

<span class="token comment">//fake_openat 函数有四个参数：  </span>
<span class="token comment">//fd：一个整数，表示要打开的文件的文件描述符。  </span>
<span class="token comment">//pathname：一个字符串，表示要打开的文件的路径。  </span>
<span class="token comment">//flags：一个整数，表示打开文件的方式，例如只读、只写、读写等。  </span>
<span class="token comment">//mode（可选参数）：一个整数，表示打开文件时应用的权限模式。  </span>
<span class="token comment">//openat 函数的作用类似于 open 函数，但是它使用文件描述符来指定文件路径，而不是使用文件路径本身。这样，就可以在打开文件时使用相对路径，而不必提供完整的文件路径。  </span>
<span class="token comment">//例如，如果要打开相对于当前目录的文件，可以使用 openat 函数，而不是 open 函数，因为 open 函数只能使用绝对路径。  </span>
<span class="token comment">//  </span>
<span class="token keyword">int</span> <span class="token function">fake_openat</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>pathname<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    mode_t mode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">needs_mode</span><span class="token punctuation">(</span>flags<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        va_list args<span class="token punctuation">;</span>  
        <span class="token function">va_start</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        mode <span class="token operator">=</span> static_cast<span class="token generics"><span class="token punctuation">&lt;</span>mode_t<span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token function">va_arg</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token function">va_end</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token function">LOGI</span><span class="token punctuation">(</span><span class="token string">"openat, fd: %d, path: %s, flags: %d, mode: %d"</span><span class="token punctuation">,</span>fd <span class="token punctuation">,</span>pathname<span class="token punctuation">,</span> flags <span class="token punctuation">,</span>mode<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    string cpp_path<span class="token operator">=</span> pathname<span class="token punctuation">;</span>  
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isOrigAPK</span><span class="token punctuation">(</span>cpp_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
        <span class="token function">LOGI</span><span class="token punctuation">(</span><span class="token string">"libc_openat, redirect: %s, --->: %s"</span><span class="token punctuation">,</span>pathname<span class="token punctuation">,</span> fakepath<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span>  <span class="token function">orig_openat</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span>fakepath<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> flags<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token keyword">return</span> <span class="token function">orig_openat</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span>pathname<span class="token punctuation">,</span> flags<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token punctuation">&#125;</span>  
<span class="token constant">FILE</span> <span class="token operator">*</span><span class="token function">fake_fopen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>filename<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>mode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  

    string cpp_path<span class="token operator">=</span> filename<span class="token punctuation">;</span>  
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isOrigAPK</span><span class="token punctuation">(</span>cpp_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
        <span class="token keyword">return</span>  <span class="token function">orig_fopen</span><span class="token punctuation">(</span>fakepath<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token keyword">return</span> <span class="token function">orig_fopen</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span>  
<span class="token comment">//该函数的功能是在执行系统调用时进行拦截，并在满足特定条件时修改系统调用的参数。  </span>
<span class="token comment">//syscall 函数是一个系统调用，是程序访问内核功能的方法之一。使用 syscall 函数可以调用大量的系统调用，它们用于实现操作系统的各种功能，例如打开文件、创建进程、分配内存等。  </span>
<span class="token comment">//  </span>
<span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">fake_syscall</span><span class="token punctuation">(</span><span class="token keyword">long</span> number<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
    va_list list<span class="token punctuation">;</span>  

    <span class="token function">va_start</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        arg<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">va_arg</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token function">va_end</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">==</span> __NR_openat<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
        <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>cpp_path <span class="token operator">=</span> static_cast<span class="token operator">&lt;</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token function">LOGI</span><span class="token punctuation">(</span><span class="token string">"syscall __NR_openat, fd: %d, path: %s, flags: %d, mode: %d"</span><span class="token punctuation">,</span>arg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">,</span>arg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arg<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arg<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isOrigAPK</span><span class="token punctuation">(</span>cpp_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
            <span class="token function">LOGI</span><span class="token punctuation">(</span><span class="token string">"syscall __NR_openat, redirect: %s, --->: %s"</span><span class="token punctuation">,</span>arg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fakepath<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">return</span> <span class="token function">orig_syscall</span><span class="token punctuation">(</span>number<span class="token punctuation">,</span>arg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fakepath<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">,</span>arg<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>arg<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token keyword">return</span> <span class="token function">orig_syscall</span><span class="token punctuation">(</span>number<span class="token punctuation">,</span> arg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arg<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arg<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arg<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arg<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arg<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token punctuation">&#125;</span>  

<span class="token comment">//函数的功能是获取当前应用的包名、APK 文件路径以及库文件路径，并将这些信息保存在全局变量中  </span>
<span class="token comment">//函数调用 GetObjectClass 和 GetMethodID 函数来获取 context 对象的类型以及 getPackageName 方法的 ID。然后，函数调用 CallObjectMethod 函数来调用 getPackageName 方法，获取当前应用的包名。最后，函数使用 GetStringUTFChars 函数将包名转换为 C 字符串，并将包名保存在 packname 全局变量中  </span>
<span class="token comment">//接着，函数使用 fakepath 全局变量保存了 /data/user/0/&lt;packname>/files/base.apk 这样的路径，其中 &lt;packname> 是当前应用的包名。  </span>
<span class="token comment">//然后，函数再次调用 GetObjectClass 和 GetMethodID 函数来获取 context 对象的类型以及 getApplicationInfo 方法的 ID。然后，函数调用 CallObjectMethod 函数来调用 getApplicationInfo 方法，获取当前应用的 ApplicationInfo 对象。  </span>
<span class="token comment">//它先调用 GetObjectClass 函数获取 ApplicationInfo 对象的类型，然后调用 GetFieldID 函数获取 sourceDir 字段的 ID。接着，函数使用 GetObjectField 函数获取 sourceDir 字段的值，并使用 GetStringUTFChars 函数将其转换为 C 字符串。最后，函数将 C 字符串保存在 origpath 全局变量中，表示当前应用的 APK 文件路径。  </span>
<span class="token comment">//最后，函数使用 GetFieldID 和 GetObjectField 函数获取 nativeLibraryDir 字段的值，并使用 GetStringUTFChars 函数将其转换为 C 字符串。函数最后调用 LOGI 函数打印库文件路径，但是并没有将其保存在全局变量中。  </span>

extern <span class="token string">"C"</span> <span class="token constant">JNIEXPORT</span> <span class="token keyword">void</span> <span class="token constant">JNICALL</span>  
<span class="token class-name">Java_com_zj_wuaipojie_util_SecurityUtil_hook</span><span class="token punctuation">(</span><span class="token class-name">JNIEnv</span> <span class="token operator">*</span>env<span class="token punctuation">,</span> jclass clazz<span class="token punctuation">,</span> jobject context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    jclass conext_class <span class="token operator">=</span> env<span class="token operator">-></span><span class="token class-name">GetObjectClass</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    jmethodID methodId_pack <span class="token operator">=</span> env<span class="token operator">-></span><span class="token class-name">GetMethodID</span><span class="token punctuation">(</span>conext_class<span class="token punctuation">,</span> <span class="token string">"getPackageName"</span><span class="token punctuation">,</span>  
                                               <span class="token string">"()Ljava/lang/String;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    auto packname_js <span class="token operator">=</span> reinterpret_cast<span class="token generics"><span class="token punctuation">&lt;</span>jstring<span class="token punctuation">></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token class-name">CallObjectMethod</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> methodId_pack<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>pn <span class="token operator">=</span> env<span class="token operator">-></span><span class="token class-name">GetStringUTFChars</span><span class="token punctuation">(</span>packname_js<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    packname <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span>pn<span class="token punctuation">)</span><span class="token punctuation">;</span>  

    env<span class="token operator">-></span><span class="token class-name">ReleaseStringUTFChars</span><span class="token punctuation">(</span>packname_js<span class="token punctuation">,</span> pn<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">//LOGI("packname: %s", packname.data());  </span>
    fakepath<span class="token operator">=</span> <span class="token string">"/data/user/0/"</span><span class="token operator">+</span> packname <span class="token operator">+</span><span class="token string">"/files/base.apk"</span><span class="token punctuation">;</span>  

    jclass conext_class2 <span class="token operator">=</span> env<span class="token operator">-></span><span class="token class-name">GetObjectClass</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    jmethodID methodId_pack2 <span class="token operator">=</span> env<span class="token operator">-></span><span class="token class-name">GetMethodID</span><span class="token punctuation">(</span>conext_class2<span class="token punctuation">,</span><span class="token string">"getApplicationInfo"</span><span class="token punctuation">,</span><span class="token string">"()Landroid/content/pm/ApplicationInfo;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    jobject application_info <span class="token operator">=</span> env<span class="token operator">-></span><span class="token class-name">CallObjectMethod</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>methodId_pack2<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    jclass pm_clazz <span class="token operator">=</span> env<span class="token operator">-></span><span class="token class-name">GetObjectClass</span><span class="token punctuation">(</span>application_info<span class="token punctuation">)</span><span class="token punctuation">;</span>  

    jfieldID package_info_id <span class="token operator">=</span> env<span class="token operator">-></span><span class="token class-name">GetFieldID</span><span class="token punctuation">(</span>pm_clazz<span class="token punctuation">,</span><span class="token string">"sourceDir"</span><span class="token punctuation">,</span><span class="token string">"Ljava/lang/String;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    auto sourceDir_js <span class="token operator">=</span> reinterpret_cast<span class="token generics"><span class="token punctuation">&lt;</span>jstring<span class="token punctuation">></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token class-name">GetObjectField</span><span class="token punctuation">(</span>application_info<span class="token punctuation">,</span>package_info_id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>sourceDir <span class="token operator">=</span> env<span class="token operator">-></span><span class="token class-name">GetStringUTFChars</span><span class="token punctuation">(</span>sourceDir_js<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    origpath <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span>sourceDir<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token function">LOGI</span><span class="token punctuation">(</span><span class="token string">"sourceDir: %s"</span><span class="token punctuation">,</span> sourceDir<span class="token punctuation">)</span><span class="token punctuation">;</span>  

    jfieldID package_info_id2 <span class="token operator">=</span> env<span class="token operator">-></span><span class="token class-name">GetFieldID</span><span class="token punctuation">(</span>pm_clazz<span class="token punctuation">,</span><span class="token string">"nativeLibraryDir"</span><span class="token punctuation">,</span><span class="token string">"Ljava/lang/String;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    auto nativeLibraryDir_js <span class="token operator">=</span> reinterpret_cast<span class="token generics"><span class="token punctuation">&lt;</span>jstring<span class="token punctuation">></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token class-name">GetObjectField</span><span class="token punctuation">(</span>application_info<span class="token punctuation">,</span>package_info_id2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>nativeLibraryDir <span class="token operator">=</span> env<span class="token operator">-></span><span class="token class-name">GetStringUTFChars</span><span class="token punctuation">(</span>nativeLibraryDir_js<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token function">LOGI</span><span class="token punctuation">(</span><span class="token string">"nativeLibraryDir: %s"</span><span class="token punctuation">,</span> nativeLibraryDir<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">//LOGI("%s", "Start Hook");  </span>

    <span class="token comment">//启动hook  </span>
    <span class="token keyword">void</span> <span class="token operator">*</span>handle <span class="token operator">=</span> <span class="token function">dlopen</span><span class="token punctuation">(</span><span class="token string">"libc.so"</span><span class="token punctuation">,</span><span class="token constant">RTLD_NOW</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    auto pagesize <span class="token operator">=</span> <span class="token function">sysconf</span><span class="token punctuation">(</span>_SC_PAGE_SIZE<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    auto addr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>uintptr_t<span class="token punctuation">)</span><span class="token function">dlsym</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span><span class="token string">"open"</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">-</span>pagesize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    auto addr2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>uintptr_t<span class="token punctuation">)</span><span class="token function">dlsym</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span><span class="token string">"openat"</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">-</span>pagesize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    auto addr3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>uintptr_t<span class="token punctuation">)</span>fopen<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">-</span>pagesize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    auto addr4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>uintptr_t<span class="token punctuation">)</span>syscall<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">-</span>pagesize<span class="token punctuation">)</span><span class="token punctuation">;</span>  

    <span class="token comment">//解除部分机型open被保护  </span>
    <span class="token function">mprotect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>addr<span class="token punctuation">,</span> pagesize<span class="token punctuation">,</span> <span class="token constant">PROT_READ</span> <span class="token operator">|</span> <span class="token constant">PROT_WRITE</span> <span class="token operator">|</span> <span class="token constant">PROT_EXEC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token function">mprotect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>addr2<span class="token punctuation">,</span> pagesize<span class="token punctuation">,</span> <span class="token constant">PROT_READ</span> <span class="token operator">|</span> <span class="token constant">PROT_WRITE</span> <span class="token operator">|</span> <span class="token constant">PROT_EXEC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token function">mprotect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>addr3<span class="token punctuation">,</span> pagesize<span class="token punctuation">,</span> <span class="token constant">PROT_READ</span> <span class="token operator">|</span> <span class="token constant">PROT_WRITE</span> <span class="token operator">|</span> <span class="token constant">PROT_EXEC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token function">mprotect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>addr4<span class="token punctuation">,</span> pagesize<span class="token punctuation">,</span> <span class="token constant">PROT_READ</span> <span class="token operator">|</span> <span class="token constant">PROT_WRITE</span> <span class="token operator">|</span> <span class="token constant">PROT_EXEC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

    <span class="token class-name">DobbyHook</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">dlsym</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span><span class="token string">"open"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>fake_open<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>orig_open<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">DobbyHook</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">dlsym</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span><span class="token string">"openat"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>fake_openat<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>orig_openat<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">DobbyHook</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>fopen<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>fake_fopen<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>orig_fopen<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">DobbyHook</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>syscall<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>fake_syscall<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>orig_syscall<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span>
 复制代码 隐藏代码
        sget<span class="token operator">-</span>object p10<span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">ContextUtils</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token constant">INSTANCE</span><span class="token operator">:</span><span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">ContextUtils</span><span class="token punctuation">;</span>  

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p10<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">ContextUtils</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span>  

    move<span class="token operator">-</span>result<span class="token operator">-</span>object p10  

    invoke<span class="token operator">-</span><span class="token keyword">static</span> <span class="token punctuation">&#123;</span>p10<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">SecurityUtil</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">hook</span><span class="token punctuation">(</span><span class="token class-name">Landroid</span><span class="token operator">/</span>content<span class="token operator">/</span><span class="token class-name">Context</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="7-其他常见校验"><a href="#7-其他常见校验" class="headerlink" title="7.其他常见校验"></a>7.其他常见校验</h2><h3 id="root检测："><a href="#root检测：" class="headerlink" title="root检测："></a>root检测：</h3><p>反制手段<br>1.算法助手、对话框取消等插件一键hook<br>2.分析具体的检测代码<br>3.利用IO重定向使文件不可读<br>4.修改Andoird源码，去除常见指纹</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">fun <span class="token function">isDeviceRooted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token function">checkRootMethod1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">checkRootMethod2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">checkRootMethod3</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

fun <span class="token function">checkRootMethod1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>
    val buildTags <span class="token operator">=</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Build<span class="token punctuation">.</span><span class="token constant">TAGS</span>
    <span class="token keyword">return</span> buildTags <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> buildTags<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"test-keys"</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

fun <span class="token function">checkRootMethod2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>
    val paths <span class="token operator">=</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span><span class="token string">"/system/app/Superuser.apk"</span><span class="token punctuation">,</span> <span class="token string">"/sbin/su"</span><span class="token punctuation">,</span> <span class="token string">"/system/bin/su"</span><span class="token punctuation">,</span> <span class="token string">"/system/xbin/su"</span><span class="token punctuation">,</span> <span class="token string">"/data/local/xbin/su"</span><span class="token punctuation">,</span> <span class="token string">"/data/local/bin/su"</span><span class="token punctuation">,</span> <span class="token string">"/system/sd/xbin/su"</span><span class="token punctuation">,</span>
            <span class="token string">"/system/bin/failsafe/su"</span><span class="token punctuation">,</span> <span class="token string">"/data/local/su"</span><span class="token punctuation">,</span> <span class="token string">"/su/bin/su"</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>path <span class="token keyword">in</span> paths<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">&#125;</span>

fun <span class="token function">checkRootMethod3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> <span class="token literal-property property">process</span><span class="token operator">:</span> Process<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">return</span> <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
        process <span class="token operator">=</span> Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token function">arrayOf</span><span class="token punctuation">(</span><span class="token string">"/system/xbin/which"</span><span class="token punctuation">,</span> <span class="token string">"su"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        val bufferedReader <span class="token operator">=</span> <span class="token function">BufferedReader</span><span class="token punctuation">(</span><span class="token function">InputStreamReader</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">)</span>
        bufferedReader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>t<span class="token operator">:</span> Throwable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token boolean">false</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>
        process<span class="token operator">?.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>定义了一个 <code>isDeviceRooted()</code> 函数，该函数调用了三个检测 root 的方法：<code>checkRootMethod1()</code>、<code>checkRootMethod2()</code> 和 <code>checkRootMethod3()</code>。</p>
<p><code>checkRootMethod1()</code> 方法检查设备的 <code>build tags</code> 是否包含 <code>test-keys</code>。这通常是用于测试的设备，因此如果检测到这个标记，则可以认为设备已被 root。</p>
<p><code>checkRootMethod2()</code> 方法检查设备是否存在一些特定的文件，这些文件通常被用于执行 root 操作。如果检测到这些文件，则可以认为设备已被 root。</p>
<p><code>checkRootMethod3()</code> 方法使用 <code>Runtime.exec()</code> 方法来执行 <code>which su</code> 命令，然后检查命令的输出是否不为空。如果输出不为空，则可以认为设备已被 root。</p>
<h3 id="模拟器检测"><a href="#模拟器检测" class="headerlink" title="模拟器检测"></a>模拟器检测</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"> 复制代码 隐藏代码
fun <span class="token function">isEmulator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span> 
        <span class="token keyword">return</span> Build<span class="token punctuation">.</span><span class="token constant">FINGERPRINT</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"generic"</span><span class="token punctuation">)</span> <span class="token operator">||</span> Build<span class="token punctuation">.</span><span class="token constant">FINGERPRINT</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"unknown"</span><span class="token punctuation">)</span> <span class="token operator">||</span> Build<span class="token punctuation">.</span><span class="token constant">MODEL</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"google_sdk"</span><span class="token punctuation">)</span> Build<span class="token punctuation">.</span><span class="token constant">MODEL</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"Emulator"</span><span class="token punctuation">)</span> <span class="token operator">||</span> Build<span class="token punctuation">.</span><span class="token constant">MODEL</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"Android SDK built for x86"</span><span class="token punctuation">)</span> <span class="token operator">||</span> Build<span class="token punctuation">.</span><span class="token constant">MANUFACTURER</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"Genymotion"</span><span class="token punctuation">)</span> <span class="token operator">||</span> Build<span class="token punctuation">.</span><span class="token constant">HOST</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"Build"</span><span class="token punctuation">)</span> <span class="token operator">||</span> Build<span class="token punctuation">.</span><span class="token constant">PRODUCT</span> <span class="token operator">==</span> <span class="token string">"google_sdk"</span> 
        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>通过检测系统的 <code>Build</code> 对象来判断当前设备是否为模拟器。具体方法是检测 <code>Build.FINGERPRINT</code> 属性是否包含字符串 <code>&quot;generic&quot;</code>。</p>
<p>模拟器检测对抗</p>
<h3 id="反调试检测"><a href="#反调试检测" class="headerlink" title="反调试检测"></a>反调试检测</h3><p>安卓系统自带调试检测函数</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">fun <span class="token function">checkForDebugger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Debug<span class="token punctuation">.</span><span class="token function">isDebuggerConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token comment">// 如果调试器已连接，则终止应用程序  </span>
        System<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>  
    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>debuggable属性</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">getAppCanDebug</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span><span class="token comment">//上下文对象为xxActivity.this</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">boolean</span> isDebug <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getApplicationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getApplicationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>flags <span class="token operator">&amp;</span> <span class="token class-name">ApplicationInfo</span><span class="token punctuation">.</span><span class="token constant">FLAG_DEBUGGABLE</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> isDebug<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>ptrace检测</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> <span class="token function">ptrace_protect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//ptrace附加自身线程 会导致此进程TracerPid 变为父进程的TracerPid 即zygote</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token function">ptrace</span><span class="token punctuation">(</span><span class="token constant">PTRACE_TRACEME</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token comment">//返回-1即为已经被调试</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>每个进程同时刻只能被1个调试进程ptrace ，主动ptrace本进程可以使得其他调试器无法调试</p>
<p>调试进程名检测</p>
<pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">SearchObjProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    FILE<span class="token operator">*</span> pfile<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">0x1000</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

    pfile<span class="token operator">=</span><span class="token function">popen</span><span class="token punctuation">(</span><span class="token string">"ps"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token operator">==</span>pfile<span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token comment">//LOGA("SearchObjProcess popen打开命令失败!\n");</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">// 获取结果</span>
    <span class="token comment">//LOGA("popen方案:\n");</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">fgets</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">,</span>pfile<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>

        <span class="token keyword">char</span><span class="token operator">*</span> strA<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token operator">*</span> strB<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token operator">*</span> strC<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token operator">*</span> strD<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span>
        strA<span class="token operator">=</span><span class="token function">strstr</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token string">"android_server"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过查找匹配子串判断</span>
        strB<span class="token operator">=</span><span class="token function">strstr</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token string">"gdbserver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        strC<span class="token operator">=</span><span class="token function">strstr</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token string">"gdb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        strD<span class="token operator">=</span><span class="token function">strstr</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token string">"fuwu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>strA <span class="token operator">||</span> strB <span class="token operator">||</span>strC <span class="token operator">||</span> strD<span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token comment">// 执行到这里，判定为调试状态</span>

        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">pclose</span><span class="token punctuation">(</span>pfile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>[原创]对安卓反调试和校验检测的一些实践与结论</p>
<h3 id="frida检测"><a href="#frida检测" class="headerlink" title="frida检测"></a>frida检测</h3><p>一些Frida检测手段</p>
<h2 id="8-smali语法小课堂之赋值"><a href="#8-smali语法小课堂之赋值" class="headerlink" title="8.smali语法小课堂之赋值"></a>8.smali语法小课堂之赋值</h2><h3 id="1-Int型赋值"><a href="#1-Int型赋值" class="headerlink" title="1.Int型赋值"></a>1.Int型赋值</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span>method <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> onCreate$lambda<span class="token operator">-</span><span class="token function">0</span><span class="token punctuation">(</span><span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>ui<span class="token operator">/</span><span class="token class-name">SmaliLearn</span><span class="token punctuation">;</span><span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token class-name">Landroid</span><span class="token operator">/</span>view<span class="token operator">/</span><span class="token class-name">View</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>  
    <span class="token punctuation">.</span>registers <span class="token number">9</span>  

    <span class="token punctuation">.</span>line <span class="token number">21</span>  
    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>ui<span class="token operator">/</span><span class="token class-name">SmaliLearn</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">isVip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">I</span>  

    move<span class="token operator">-</span>result p4  
        <span class="token comment">//判断vip的值分别对应不用的会员的等级</span>
    <span class="token keyword">if</span><span class="token operator">-</span>eqz p4<span class="token punctuation">,</span> <span class="token operator">:</span>cond_35  

    <span class="token keyword">const</span><span class="token operator">/</span><span class="token number">4</span> v0<span class="token punctuation">,</span> <span class="token number">0x1</span>  

    <span class="token keyword">if</span><span class="token operator">-</span>eq p4<span class="token punctuation">,</span> v0<span class="token punctuation">,</span> <span class="token operator">:</span>cond_2d  

    <span class="token keyword">const</span><span class="token operator">/</span><span class="token number">4</span> v0<span class="token punctuation">,</span> <span class="token number">0x4</span>  

    <span class="token keyword">if</span><span class="token operator">-</span>eq p4<span class="token punctuation">,</span> v0<span class="token punctuation">,</span> <span class="token operator">:</span>cond_25  

    <span class="token keyword">const</span><span class="token operator">/</span><span class="token number">16</span> v0<span class="token punctuation">,</span> <span class="token number">0x10</span>  

    <span class="token keyword">if</span><span class="token operator">-</span>eq p4<span class="token punctuation">,</span> v0<span class="token punctuation">,</span> <span class="token operator">:</span>cond_1d  

    <span class="token keyword">const</span><span class="token operator">/</span><span class="token number">16</span> v0<span class="token punctuation">,</span> <span class="token number">0x63</span>  

    <span class="token keyword">if</span><span class="token operator">-</span>eq p4<span class="token punctuation">,</span> v0<span class="token punctuation">,</span> <span class="token operator">:</span>cond_15  

    <span class="token keyword">goto</span> <span class="token operator">:</span>goto_3c  

    <span class="token operator">:</span>cond_15  
    <span class="token keyword">const</span><span class="token operator">-</span>string p4<span class="token punctuation">,</span> <span class="token string">"至尊会员"</span>  

    <span class="token punctuation">.</span>line <span class="token number">26</span>  
    check<span class="token operator">-</span>cast p4<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span>  

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p1<span class="token punctuation">,</span> p4<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>  

    <span class="token keyword">goto</span> <span class="token operator">:</span>goto_3c  

    <span class="token operator">:</span>cond_1d  
    <span class="token keyword">const</span><span class="token operator">-</span>string p4<span class="token punctuation">,</span> <span class="token string">"超级会员"</span>  

    <span class="token punctuation">.</span>line <span class="token number">25</span>  
    check<span class="token operator">-</span>cast p4<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span>  

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p1<span class="token punctuation">,</span> p4<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>  

    <span class="token keyword">goto</span> <span class="token operator">:</span>goto_3c  

    <span class="token operator">:</span>cond_25  
    <span class="token keyword">const</span><span class="token operator">-</span>string p4<span class="token punctuation">,</span> <span class="token string">"大会员"</span>  

    <span class="token punctuation">.</span>line <span class="token number">24</span>  
    check<span class="token operator">-</span>cast p4<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span>  

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p1<span class="token punctuation">,</span> p4<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>  

    <span class="token keyword">goto</span> <span class="token operator">:</span>goto_3c  

    <span class="token operator">:</span>cond_2d  
    <span class="token keyword">const</span><span class="token operator">-</span>string p4<span class="token punctuation">,</span> <span class="token string">"会员"</span>  

    <span class="token punctuation">.</span>line <span class="token number">23</span>  
    check<span class="token operator">-</span>cast p4<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span>  

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p1<span class="token punctuation">,</span> p4<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>  

    <span class="token keyword">goto</span> <span class="token operator">:</span>goto_3c  

    <span class="token operator">:</span>cond_35  
    <span class="token keyword">const</span><span class="token operator">-</span>string p4<span class="token punctuation">,</span> <span class="token string">"非会员"</span>  

    <span class="token punctuation">.</span>line <span class="token number">22</span>  
    check<span class="token operator">-</span>cast p4<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span>  

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p1<span class="token punctuation">,</span> p4<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>

        <span class="token punctuation">.</span>line <span class="token number">28</span>  
        <span class="token comment">//判断vipEndTime的时间戳是否小于系统时间</span>
    <span class="token operator">:</span>goto_3c  
    <span class="token keyword">new</span><span class="token operator">-</span>instance p1<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">Date</span><span class="token punctuation">;</span>  

    invoke<span class="token operator">-</span>direct <span class="token punctuation">&#123;</span>p1<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>  

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p1<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">J</span>  

    move<span class="token operator">-</span>result<span class="token operator">-</span>wide v0  

    <span class="token punctuation">.</span>line <span class="token number">29</span>  
    <span class="token keyword">new</span><span class="token operator">-</span>instance p1<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>text<span class="token operator">/</span><span class="token class-name">SimpleDateFormat</span><span class="token punctuation">;</span>  

    <span class="token keyword">const</span><span class="token operator">-</span>string p4<span class="token punctuation">,</span> <span class="token string">"yyyy-MM-dd"</span>  

    invoke<span class="token operator">-</span>direct <span class="token punctuation">&#123;</span>p1<span class="token punctuation">,</span> p4<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>text<span class="token operator">/</span><span class="token class-name">SimpleDateFormat</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>  

    <span class="token punctuation">.</span>line <span class="token number">30</span>  
    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>ui<span class="token operator">/</span><span class="token class-name">SmaliLearn</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">vipEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">J</span>  

    move<span class="token operator">-</span>result<span class="token operator">-</span>wide v2  

    cmp<span class="token operator">-</span><span class="token keyword">long</span> p4<span class="token punctuation">,</span> v2<span class="token punctuation">,</span> v0  

    <span class="token keyword">if</span><span class="token operator">-</span>gez p4<span class="token punctuation">,</span> <span class="token operator">:</span>cond_5c  

    <span class="token keyword">const</span><span class="token operator">-</span>string p1<span class="token punctuation">,</span> <span class="token string">"已过期"</span>  

    <span class="token punctuation">.</span>line <span class="token number">31</span>  
    check<span class="token operator">-</span>cast p1<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span>  

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p2<span class="token punctuation">,</span> p1<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>  

    <span class="token keyword">goto</span> <span class="token operator">:</span>goto_6d  

    <span class="token punctuation">.</span>line <span class="token number">33</span>  
    <span class="token operator">:</span>cond_5c  
    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>ui<span class="token operator">/</span><span class="token class-name">SmaliLearn</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">vipEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">J</span>  

    move<span class="token operator">-</span>result<span class="token operator">-</span>wide v0  

    invoke<span class="token operator">-</span><span class="token keyword">static</span> <span class="token punctuation">&#123;</span>v0<span class="token punctuation">,</span> v1<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Long</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">J</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Long</span><span class="token punctuation">;</span>  

    move<span class="token operator">-</span>result<span class="token operator">-</span>object p4  

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p1<span class="token punctuation">,</span> p4<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>text<span class="token operator">/</span><span class="token class-name">SimpleDateFormat</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>  

    move<span class="token operator">-</span>result<span class="token operator">-</span>object p1  

    check<span class="token operator">-</span>cast p1<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span>  

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p2<span class="token punctuation">,</span> p1<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>  

    <span class="token punctuation">.</span>line <span class="token number">35</span>  
    <span class="token operator">:</span>goto_6d  
    iget p0<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>ui<span class="token operator">/</span><span class="token class-name">SmaliLearn</span><span class="token punctuation">;</span><span class="token operator">-></span>vip_coin<span class="token operator">:</span><span class="token class-name">I</span>  

    <span class="token keyword">if</span><span class="token operator">-</span>eqz p0<span class="token punctuation">,</span> <span class="token operator">:</span>cond_74  

    <span class="token punctuation">.</span>line <span class="token number">36</span>  
    invoke<span class="token operator">-</span><span class="token keyword">static</span> <span class="token punctuation">&#123;</span>p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>

    move<span class="token operator">-</span>result<span class="token operator">-</span>object p0

    check<span class="token operator">-</span>cast p0<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span>

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p3<span class="token punctuation">,</span> p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>

    <span class="token operator">:</span>cond_74  
    <span class="token keyword">return</span><span class="token operator">-</span><span class="token keyword">void</span>  
<span class="token punctuation">.</span>end method<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>const&#x2F;4和const&#x2F;16的区别？<br><strong>4代表4字节</strong><br><strong>16代表16字节</strong></p>
<h3 id="2-Long型赋值"><a href="#2-Long型赋值" class="headerlink" title="2.Long型赋值"></a>2.Long型赋值</h3><p><strong>const-wide vx, lit32</strong> 表示将一个 32 位的常量存储到 vx 与 vx+1 两个寄存器中 —— 即一个 long 类型的数据</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span>method <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token function">vipEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">J</span>  
    <span class="token punctuation">.</span>registers <span class="token number">3</span>  

    <span class="token keyword">const</span><span class="token operator">-</span>wide v0<span class="token punctuation">,</span> <span class="token number">0</span>x1854460ef29L  

    <span class="token keyword">return</span><span class="token operator">-</span>wide v0  
<span class="token punctuation">.</span>end method<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>会员到期时间就是2022年12月24日。那么1854460ef29L 怎么来的呢？也就是（2022年12月24日-1970年1月1日）×365天×24小时×60分钟×60秒×1000毫秒，转换成16进制就大概是那个数了</p>
<p>在线时间戳转换</p>
<h3 id="3-变量赋值-正则"><a href="#3-变量赋值-正则" class="headerlink" title="3.变量赋值(正则)"></a>3.变量赋值(正则)</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">    iget p0<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>zj<span class="token operator">/</span>wuaipojie<span class="token operator">/</span>ui<span class="token operator">/</span><span class="token class-name">SmaliLearn</span><span class="token punctuation">;</span><span class="token operator">-></span>vip_coin<span class="token operator">:</span><span class="token class-name">I</span>  

<span class="token keyword">if</span><span class="token operator">-</span>eqz p0<span class="token punctuation">,</span> <span class="token operator">:</span>cond_74  

<span class="token punctuation">.</span>line <span class="token number">36</span>  
invoke<span class="token operator">-</span><span class="token keyword">static</span> <span class="token punctuation">&#123;</span>p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>

move<span class="token operator">-</span>result<span class="token operator">-</span>object p0

check<span class="token operator">-</span>cast p0<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span>

invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>p3<span class="token punctuation">,</span> p0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Landroid</span><span class="token operator">/</span>widget<span class="token operator">/</span><span class="token class-name">TextView</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">CharSequence</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/./../../img/img/640-1695707504006-70.png" alt="图片"></p>
<pre class="line-numbers language-none"><code class="language-none">(.*) .*
const&#x2F;4 $1 0x1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="9-反思"><a href="#9-反思" class="headerlink" title="9.反思"></a>9.反思</h2><p>签名的博弈日新月异，善用工具，拥抱开源！！！</p>
<p>通过系统自带的api去获取签名很容易被伪造，不妨试试通过SVC的方式去获取(参考MT开源的方法)<br>隐式签名校验<br>有一些则比较隐晦，在发现apk被修改后，会偷偷修改apk的部分功能，例如在某些多开定位软件中，会暗改ip的经纬网等，跟实际产生一定的偏差。<br>PS:推荐学习芽衣大神的手撕签名校验教程<br><img src="/./../../img/img/640-1695707504006-71.png" alt="图片"></p>
<p>点击学习</p>
<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<p>1.手动实现PM代理<br>2.移植我的重定向代码(要学会偷代码！)<br><img src="/./../../img/img/640-1695707504006-72.png" alt="图片"></p>
<p>3.完成作业demo<br><a href="https://wwqi.lanzoub.com/iKt5G0jkvhtc">https://wwqi.lanzoub.com/iKt5G0jkvhtc</a></p>
<p>作业反馈贴（前50名交作业有奖励）</p>
<p><a href="https://www.52pojie.cn/thread-1731203-1-1.html">https://www.52pojie.cn/thread-1731203-1-1.html</a></p>
<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><hr>
<p>待更新</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1X24y1m7cj">https://www.bilibili.com/video/BV1X24y1m7cj</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK安卓逆向这文件结构、双开、汉化、基础修改</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">《安卓逆向这档事》第三课、初识smail，vip终结者</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138554&idx=1&sn=be2fe7ffb0520ef17405a754ff0725c8&chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&scene=21#wechat_redirect">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138674&idx=1&sn=17a3271b1771bdacf3392fb64dcc5dc3&chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&scene=21#wechat_redirect">《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩</a></p>
<h1 id="八、参考文档"><a href="#八、参考文档" class="headerlink" title="八、参考文档"></a>八、参考文档</h1><hr>
<p>APK 签名：v1 v2 v3 v4<br>如何把签名校验做到极致<br>Android PMS HOOK<br>[实战破解]白描-动态代理Hook签名校验<br>[原创]对安卓反调试和校验检测的一些实践与结论<br>新版MT去签及对抗<br>【小白教程】正则匹配的写法 多行匹配 批量赋值 smali逆向 简单实用</p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1731181-1-1.html">https://www.52pojie.cn/thread-1731181-1-1.html</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吾爱破解安卓逆向入门教程《安卓逆向这档事》七、会Hook真的可以为所欲为-xposed快速上手(上)模块编写]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(7)%E3%80%81Sorry%EF%BC%8C%E4%BC%9AHook%E7%9C%9F%E7%9A%84%E5%8F%AF%E4%BB%A5%E4%B8%BA%E6%89%80%E6%AC%B2%E4%B8%BA-xposed%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B(%E4%B8%8A)%E6%A8%A1%E5%9D%97%E7%BC%96%E5%86%99/</url>
      <content type="html"><![CDATA[<p><img src="/./../../img/img/640-1695707270024-47.png" alt="图片"></p>
<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>1.了解Xposed原理及发展<br>2.从0到1编写xposed模块<br>3.配置ubuntu的逆向环境<br>4.了解xposed的常用Api</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.教程Demo(更新)<br>2.jadx-gui<br>3.雷电模拟器<br>4.vmware<br>5.Android Studio</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<h2 id="1-什么是Xposed？"><a href="#1-什么是Xposed？" class="headerlink" title="1.什么是Xposed？"></a>1.什么是Xposed？</h2><p>Xposed是一款可以在不修改APK的情况下影响程序运行的框架，基于它可以制作出许多功能强大的模块，且在功能不冲突的情况下同时运作。在这个框架下，我们可以编写并加载自己编写的插件APP，实现对目标apk的注入拦截等。</p>
<h2 id="2-Xposed原理"><a href="#2-Xposed原理" class="headerlink" title="2.Xposed原理"></a>2.Xposed原理</h2><p>用自己实现的<strong>app_process</strong>替换掉了系统原本提供的<strong>app_process</strong>，加载一个额外的jar包，入口从原来的： **com.android.internal.osZygoteInit.main()被替换成了： de.robv.android.xposed.XposedBridge.main()**，<br>创建的Zygote进程就变成Hook的Zygote进程了，从而完成对zygote进程及其创建的Dalvik&#x2F;ART虚拟机的劫持(zytoge注入)<br><img src="/./../../img/img/640-1695707270025-48.png" alt="图片"></p>
<h2 id="3-Xposed的发展及免root框架"><a href="#3-Xposed的发展及免root框架" class="headerlink" title="3.Xposed的发展及免root框架"></a>3.Xposed的发展及免root框架</h2><table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">地址</th>
<th align="left">支持版本</th>
<th align="left">是否免root</th>
</tr>
</thead>
<tbody><tr>
<td align="left">xposed</td>
<td align="left"><a href="https://github.com/rovo89/Xposed">https://github.com/rovo89/Xposed</a></td>
<td align="left">2.3-8.1</td>
<td align="left">否</td>
</tr>
<tr>
<td align="left">EDXposed</td>
<td align="left"><a href="https://github.com/ElderDrivers/EdXposed">https://github.com/ElderDrivers/EdXposed</a></td>
<td align="left">8.0-10</td>
<td align="left">否</td>
</tr>
<tr>
<td align="left">LSPosed</td>
<td align="left"><a href="https://github.com/LSPosed/LSPosed">https://github.com/LSPosed/LSPosed</a></td>
<td align="left">8.1-13</td>
<td align="left">否</td>
</tr>
<tr>
<td align="left">VirtualXposed</td>
<td align="left"><a href="https://github.com/android-hacker/VirtualXposed">https://github.com/android-hacker/VirtualXposed</a></td>
<td align="left">5.0-10.0</td>
<td align="left">是</td>
</tr>
<tr>
<td align="left">太极</td>
<td align="left"><a href="https://www.coolapk.com/apk/me.weishu.exp">https://www.coolapk.com/apk/me.weishu.exp</a></td>
<td align="left">5.0-10.0</td>
<td align="left">是</td>
</tr>
<tr>
<td align="left">两仪</td>
<td align="left"><a href="https://www.coolapk.com/apk/io.twoyi">https://www.coolapk.com/apk/io.twoyi</a></td>
<td align="left">8.1-12</td>
<td align="left">是</td>
</tr>
<tr>
<td align="left">天鉴</td>
<td align="left"><a href="https://github.com/Katana-Official/SPatch-Update">https://github.com/Katana-Official/SPatch-Update</a></td>
<td align="left">6-10</td>
<td align="left">是</td>
</tr>
</tbody></table>
<h2 id="4-Xposed可以做什么？"><a href="#4-Xposed可以做什么？" class="headerlink" title="4.Xposed可以做什么？"></a>4.Xposed可以做什么？</h2><p>1.修改app布局:上帝模式<br>2.劫持数据，修改参数值、返回值、主动调用等。例:微信防撤回、步数修改、一键新机<br>应用变量<br><img src="/./../../img/img/640-1695707270025-49.png" alt="图片"></p>
<p>3.自动化操作，例:微信抢红包<br><img src="/./../../img/img/640-1695707270025-50.png" alt="图片"></p>
<p>学习项目:<br><img src="/./../../img/img/640-1695707270025-51.png" alt="图片"></p>
<p>2022 最好的Xposed模块: GravityBox, Pixelify, XPrivacyLua<br>基于Xposed的抖音爬虫，抖音风控后自动一键新机，模拟一个全新的运行环境<br>基于xposed的frida持久化方案<br>A Xposed Module for Android Penetration Test, with NanoHttpd.<br>GravityBox<br>Xposed-Modules-Repo]<br>一个旨在使QQ变得更好用的开源Xposed模块<br>杜比大喇叭<br>知乎去广告Xposed模块<br>哔哩漫游<br>曲境<br>自动化创建Xposed模块及钩子，让Xposed模块编写时只需关注钩子实现</p>
<h2 id="5-Xposed环境配置"><a href="#5-Xposed环境配置" class="headerlink" title="5.Xposed环境配置"></a>5.Xposed环境配置</h2><h3 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h3><p>ubuntu虚拟机镜像，感谢沐阳哥提供的镜像！！！<br>内置:</p>
<ul>
<li><code>Frida</code>开发环境</li>
<li>动态分析及开发工具：android-studio</li>
<li>动态分析工具：ddms</li>
<li>静态分析工具：jadx1.4.4</li>
<li>动静态分析工具：jeb</li>
<li>动态分析工具：集成HyperPwn</li>
<li>静态分析工具：010 editor</li>
<li>抓包工具：Charles</li>
<li>抓包工具：WireShark</li>
<li>动态分析工具:unidbg</li>
</ul>
<p>vm虚拟机：<a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</a><br>(或下载我打包好的)<br>激活码：<br>‘’’<br>ZZ5RR-6AF8H-M8EKQ-TGMNG-X2UV6<br>JU090-6039P-08409-8J0QH-2YR7F<br>4A4RR-813DK-M81A9-4U35H-06KND<br>NZ4RR-FTK5H-H81C1-Q30QH-1V2LA<br>JU090-6039P-08409-8J0QH-2YR7F<br>4Y09U-AJK97-089Z0-A3054-83KLA<br>4C21U-2KK9Q-M8130-4V2QH-CF810<br>MC60H-DWHD5-H80U9-6V85M-8280D<br>‘’’<br>这几个密钥都试试看</p>
<p>第一步，安装虚拟机调整路径，输入激活码</p>
<p>第二步，导入镜像，文件-&gt;打开-&gt;选择解压好的镜像</p>
<p>第三步，点击运行，待初始化，输入密码:toor</p>
<p><img src="/./../../img/img/640-1695707270025-52.png" alt="图片"></p>
<hr>
<p>1.Android Studio创建新项目<br>2.将下载的xposedBridgeApi.jar包拖进libs文件夹<br>3.右击jar包，选择add as library<br>4.修改xml文件配置</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 是否是xposed模块，xposed根据这个来判断是否是模块 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>
    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xposedmodule<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token comment">&lt;!-- 模块描述，显示在xposed模块列表那里第二行 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>
    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xposeddescription<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这是一个Xposed模块<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token comment">&lt;!-- 最低xposed版本号(lib文件名可知) --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>
    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xposedminversion<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>89<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>5.修改build.gradle,将此处修改为compileOnly 默认的是implementation</p>
<pre class="line-numbers language-none"><code class="language-none">implementation 使用该方式依赖的库将会参与编译和打包
compileOnly 只在编译时有效，不会参与打包<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>6.新建–&gt;Folder–&gt;Assets Folder，创建xposed_init(不要后缀名):只有一行代码，就是说明入口类<br>7.新建Hook类，实现IXposedHookLoadPackage接口，然后在handleLoadPackage函数内编写Hook逻辑</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">de<span class="token punctuation">.</span>robv<span class="token punctuation">.</span>android<span class="token punctuation">.</span>xposed<span class="token punctuation">.</span></span><span class="token class-name">IXposedHookLoadPackage</span></span><span class="token punctuation">;</span> 
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">de<span class="token punctuation">.</span>robv<span class="token punctuation">.</span>android<span class="token punctuation">.</span>xposed<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span></span><span class="token class-name">XC_LoadPackage</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hook</span> <span class="token keyword">implements</span> <span class="token class-name">IXposedHookLoadPackage</span> <span class="token punctuation">&#123;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleLoadPackage</span><span class="token punctuation">(</span><span class="token class-name">XC_LoadPackage<span class="token punctuation">.</span>LoadPackageParam</span> loadPackageParam<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>继承了IXposedHookLoadPackag便拥有了hook的能力</p>
<h2 id="6-Xpoosed常用API"><a href="#6-Xpoosed常用API" class="headerlink" title="6.Xpoosed常用API"></a>6.Xpoosed常用API</h2><p>An efficient Hook API and Xposed Module solution built in Kotlin</p>
<h3 id="1-Hook普通方法"><a href="#1-Hook普通方法" class="headerlink" title="1.Hook普通方法"></a>1.Hook普通方法</h3><p>修改返回值</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookMethod</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">,</span> loadPackageParam<span class="token punctuation">.</span>classLoader<span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>
        param<span class="token punctuation">.</span><span class="token function">setResult</span><span class="token punctuation">(</span><span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>修改参数</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookMethod</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">,</span> loadPackageParam<span class="token punctuation">.</span>classLoader<span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> a <span class="token operator">=</span> <span class="token string">"pt"</span><span class="token punctuation">;</span>
        param<span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2-Hook复杂-amp-自定义参数"><a href="#2-Hook复杂-amp-自定义参数" class="headerlink" title="2.Hook复杂&amp;自定义参数"></a>2.Hook复杂&amp;自定义参数</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Class</span> a <span class="token operator">=</span> loadPackageParam<span class="token punctuation">.</span>classLoader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string">"类名"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">XposedBridge</span><span class="token punctuation">.</span><span class="token function">hookAllMethods</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">"方法名"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="3-Hook替换函数"><a href="#3-Hook替换函数" class="headerlink" title="3.Hook替换函数"></a>3.Hook替换函数</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Class</span> a <span class="token operator">=</span> classLoader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string">"类名"</span><span class="token punctuation">)</span>
<span class="token class-name">XposedBridge</span><span class="token punctuation">.</span><span class="token function">hookAllMethods</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token string">"方法名"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">XC_MethodReplacement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    home<span class="token punctuation">.</span>php<span class="token operator">?</span>mod<span class="token operator">=</span>space<span class="token operator">&amp;</span>uid<span class="token operator">=</span><span class="token number">1892347</span>  
    <span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">replaceHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> methodHookParam<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="4-Hook加固通杀"><a href="#4-Hook加固通杀" class="headerlink" title="4.Hook加固通杀"></a>4.Hook加固通杀</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookMethod</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"attach"</span><span class="token punctuation">,</span> <span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">Context</span> context <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">)</span> param<span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
        <span class="token class-name">ClassLoader</span> classLoader <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//hook逻辑在这里面写  </span>
    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<p>写一个xposed模块去修改上节课smali相关学习里的方法，并修改参数以及返回值</p>
<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><hr>
<p>待更新</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1X24y1m7cj">https://www.bilibili.com/video/BV1X24y1m7cj</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">《安卓逆向这档事》三、初识smail，vip终结者</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138554&idx=1&sn=be2fe7ffb0520ef17405a754ff0725c8&chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&scene=21#wechat_redirect">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138674&idx=1&sn=17a3271b1771bdacf3392fb64dcc5dc3&chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&scene=21#wechat_redirect">《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138693&idx=1&sn=a09896ce9c1aa5e7194600ff7ca011e9&chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&scene=21#wechat_redirect">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a></p>
<h1 id="八、参考文档"><a href="#八、参考文档" class="headerlink" title="八、参考文档"></a>八、参考文档</h1><hr>
<p>[原创]源码编译（2）——Xopsed源码编译详解<br>[原创]Xposed Hook技巧，代{过}{滤}理abstract<br>[原创]Xposed callMethod 如何传入接口参数</p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1740944-1-1.html">https://www.52pojie.cn/thread-1740944-1-1.html</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吾爱破解安卓逆向入门教程《安卓逆向这档事》八、会Hook真的可以为所欲为-xposed快速上手(下)快速hook]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(8)%E3%80%81Sorry%EF%BC%8C%E4%BC%9AHook%E7%9C%9F%E7%9A%84%E5%8F%AF%E4%BB%A5%E4%B8%BA%E6%89%80%E6%AC%B2%E4%B8%BA-xposed%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B(%E4%B8%8B)%E5%BF%AB%E9%80%9Fhook/</url>
      <content type="html"><![CDATA[<p><img src="/./../../img/img/640-1695707005629-32.gif" alt="图片"></p>
<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>1.了解Xposed常用API<br>2.借助lspatch实现免root注入<br>3.SimpleHook快速hook</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.教程Demo(更新)<br>2.MT管理器&#x2F;NP管理器<br>3.算法助手<br>4.jadx-gui<br>5.simplehook<br>6.Android Studio</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<p>虚拟机连接模拟器方法<br><a href="https://www.cnblogs.com/voyage1969/p/14876449.html">https://www.cnblogs.com/voyage1969/p/14876449.html</a></p>
<h2 id="Xposed常用API"><a href="#Xposed常用API" class="headerlink" title="Xposed常用API"></a>Xposed常用API</h2><h3 id="1-Hook变量"><a href="#1-Hook变量" class="headerlink" title="1.Hook变量"></a>1.Hook变量</h3><p>静态变量与实例变量：</p>
<ul>
<li>静态变量（static）：类被初始化，同步进行初始化</li>
<li>非静态变量：类被实例化（产生一个对象的时候），进行初始化</li>
</ul>
<p>静态变量</p>
<pre class="line-numbers language-none"><code class="language-none"> 复制代码 隐藏代码
final Class clazz &#x3D; XposedHelpers.findClass(&quot;类名&quot;, classLoader);  
XposedHelpers.setStaticIntField(clazz, &quot;变量名&quot;, 999);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>实例变量</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token keyword">final</span> <span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">"类名"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">XposedBridge</span><span class="token punctuation">.</span><span class="token function">hookAllConstructors</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
     <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//param.thisObject获取当前所属的对象</span>
        <span class="token class-name">Object</span> ob <span class="token operator">=</span> param<span class="token punctuation">.</span>thisObject<span class="token punctuation">;</span>  
        <span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">setIntField</span><span class="token punctuation">(</span>ob<span class="token punctuation">,</span><span class="token string">"变量名"</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2-Hook构造函数"><a href="#2-Hook构造函数" class="headerlink" title="2.Hook构造函数"></a>2.Hook构造函数</h3><p>无参构造函数</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookConstructor</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>有参构造函数</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookConstructor</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="3-Hook-multiDex方法"><a href="#3-Hook-multiDex方法" class="headerlink" title="3.Hook multiDex方法"></a>3.Hook multiDex方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookMethod</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"attach"</span><span class="token punctuation">,</span> <span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">ClassLoader</span> cl<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">)</span>param<span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> hookclass<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>  
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>  
            hookclass<span class="token operator">=</span>cl<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string">"类名"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">"zj2595"</span><span class="token punctuation">,</span><span class="token string">"未找到类"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">return</span><span class="token punctuation">;</span>        
        <span class="token punctuation">&#125;</span>  
        <span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookMethod</span><span class="token punctuation">(</span>hookclass<span class="token punctuation">,</span> <span class="token string">"方法名"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
            <span class="token annotation punctuation">@Override</span>  
            <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
            <span class="token punctuation">&#125;</span>        
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="4-主动调用"><a href="#4-主动调用" class="headerlink" title="4.主动调用"></a>4.主动调用</h3><p>静态方法:</p>
<pre class="line-numbers language-none"><code class="language-none"> 复制代码 隐藏代码
Class clazz &#x3D; XposedHelpers.findClass(&quot;类名&quot;,lpparam.classLoader);
XposedHelpers.callStaticMethod(clazz,&quot;方法名&quot;,参数(非必须));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>实例方法:</p>
<pre class="line-numbers language-none"><code class="language-none"> 复制代码 隐藏代码
Class clazz &#x3D; XposedHelpers.findClass(&quot;类名&quot;,lpparam.classLoader);
XposedHelpers.callMethod(clazz.newInstance(),&quot;方法名&quot;,参数(非必须));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="5-Hook内部类"><a href="#5-Hook内部类" class="headerlink" title="5.Hook内部类"></a>5.Hook内部类</h3><p>内部类:类里还有一个类class</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookMethod</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo$InnerClass"</span><span class="token punctuation">,</span> lpparam<span class="token punctuation">.</span>classLoader<span class="token punctuation">,</span> <span class="token string">"innerFunc"</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>  <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  

    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="6-反射大法"><a href="#6-反射大法" class="headerlink" title="6.反射大法"></a>6.反射大法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">,</span> lpparam<span class="token punctuation">.</span>classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookMethod</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo$InnerClass"</span><span class="token punctuation">,</span> lpparam<span class="token punctuation">.</span>classLoader<span class="token punctuation">,</span> <span class="token string">"innerFunc"</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>  <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//第一步找到类</span>
        <span class="token comment">//找到方法，如果是私有方法就要setAccessible设置访问权限</span>
        <span class="token comment">//invoke主动调用或者set修改值(变量)</span>
        <span class="token class-name">Class</span> democlass <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span>lpparam<span class="token punctuation">.</span>classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Method</span> demomethod <span class="token operator">=</span> democlass<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"refl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        demomethod<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        demomethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="7-遍历所有类下的所有方法"><a href="#7-遍历所有类下的所有方法" class="headerlink" title="7.遍历所有类下的所有方法"></a>7.遍历所有类下的所有方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookMethod</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"loadClass"</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">String</span> clazzName <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//排除非包名的类  </span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>clazzName<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
            <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> mds <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>mds<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
                <span class="token keyword">final</span> <span class="token class-name">Method</span> md <span class="token operator">=</span> mds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  
                <span class="token keyword">int</span> mod <span class="token operator">=</span> mds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token comment">//去除抽象、native、接口方法  </span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token function">isAbstract</span><span class="token punctuation">(</span>mod<span class="token punctuation">)</span>  
                    <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token function">isNative</span><span class="token punctuation">(</span>mod<span class="token punctuation">)</span>  
                    <span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token function">isAbstract</span><span class="token punctuation">(</span>mod<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
                    <span class="token class-name">XposedBridge</span><span class="token punctuation">.</span><span class="token function">hookMethod</span><span class="token punctuation">(</span>mds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
                        <span class="token annotation punctuation">@Override</span>  
                        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
                            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  
                            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"zj2595"</span><span class="token punctuation">,</span>md<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                        <span class="token punctuation">&#125;</span>  
                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token punctuation">&#125;</span>  

           <span class="token punctuation">&#125;</span>  
        <span class="token punctuation">&#125;</span>  

    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="8-Xposed妙用"><a href="#8-Xposed妙用" class="headerlink" title="8.Xposed妙用"></a>8.Xposed妙用</h3><p>字符串赋值定位:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookMethod</span><span class="token punctuation">(</span><span class="token string">"android.widget.TextView"</span><span class="token punctuation">,</span> lpparam<span class="token punctuation">.</span>classLoader<span class="token punctuation">,</span> <span class="token string">"setText"</span><span class="token punctuation">,</span> <span class="token class-name">CharSequence</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">beforeHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"zj2595"</span><span class="token punctuation">,</span>param<span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token keyword">if</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"已过期"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
                    <span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token class-name">Throwable</span> ex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Throwable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">StackTraceElement</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stackElements <span class="token operator">=</span> ex<span class="token punctuation">.</span><span class="token function">getStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> stackElements<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">StackTraceElement</span> element <span class="token operator">=</span> stackElements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"zj2595"</span><span class="token punctuation">,</span><span class="token string">"at "</span> <span class="token operator">+</span> element<span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">+</span> element<span class="token punctuation">.</span><span class="token function">getMethodName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"("</span> <span class="token operator">+</span> element<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> element<span class="token punctuation">.</span><span class="token function">getLineNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>点击事件监听:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">"android.view.View"</span><span class="token punctuation">,</span> lpparam<span class="token punctuation">.</span>classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">XposedBridge</span><span class="token punctuation">.</span><span class="token function">hookAllMethods</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">"performClick"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Object</span> listenerInfoObject <span class="token operator">=</span> <span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">getObjectField</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span>thisObject<span class="token punctuation">,</span> <span class="token string">"mListenerInfo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Object</span> mOnClickListenerObject <span class="token operator">=</span> <span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">getObjectField</span><span class="token punctuation">(</span>listenerInfoObject<span class="token punctuation">,</span> <span class="token string">"mOnClickListener"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">String</span> callbackType <span class="token operator">=</span> mOnClickListenerObject<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"zj2595"</span><span class="token punctuation">,</span>callbackType<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>改写布局:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"> 复制代码 隐藏代码
<span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">findAndHookMethod</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.ui.ChallengeSixth"</span><span class="token punctuation">,</span> lpparam<span class="token punctuation">.</span>classLoader<span class="token punctuation">,</span>  
        <span class="token string">"onCreate"</span><span class="token punctuation">,</span> <span class="token class-name">Bundle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XC_MethodHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterHookedMethod</span><span class="token punctuation">(</span><span class="token class-name">MethodHookParam</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterHookedMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">View</span> img <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">)</span><span class="token class-name">XposedHelpers</span><span class="token punctuation">.</span><span class="token function">callMethod</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span>thisObject<span class="token punctuation">,</span>  
                <span class="token string">"findViewById"</span><span class="token punctuation">,</span> <span class="token number">0x7f0800de</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        img<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token constant">GONE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

    <span class="token punctuation">&#125;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="Xposed模块patch"><a href="#Xposed模块patch" class="headerlink" title="Xposed模块patch"></a>Xposed模块patch</h2><p>LSPatch：<a href="https://github.com/img/img/640-1695707005630-33.png)">https://github.com/LSPosed/LSPatch![图片](./../../img/img/640-1695707005630-33.png)</a></p>
<p>PS:最低支持安卓9</p>
<h2 id="Xposed快速Hook"><a href="#Xposed快速Hook" class="headerlink" title="Xposed快速Hook"></a>Xposed快速Hook</h2><p>SimpleHook：<a href="https://github.com/img/img/640-1695707005630-34.png)">https://github.com/littleWhiteDuck/SimpleHook![图片](./../../img/img/640-1695707005630-34.png)</a></p>
<p>jshook：<a href="https://github.com/Xposed-Modules-Repo/me.jsonet.jshook">https://github.com/Xposed-Modules-Repo/me.jsonet.jshook</a></p>
<h2 id="Xpsoed源码"><a href="#Xpsoed源码" class="headerlink" title="Xpsoed源码"></a>Xpsoed源码</h2><p>XPOSED魔改一：获取特征<br>Lsposed 技术原理探讨 &amp;&amp; 基本安装使用<br>[原创]源码编译（2）——Xopsed源码编译详解</p>
<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<p>让我想想</p>
<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><hr>
<p>提一嘴，我感觉肯定会有人问我的as怎么跟他的不一样，那是因为我用了一些插件。插件入口：左上角File-&gt;Settings-&gt;Plugins，在这里可以搜索并安装你想安装的插件，以下是我用的插件<br><img src="/./../../img/img/640-1695707005630-35.png" alt="图片"></p>
<p><img src="/./../../img/img/640-1695707005630-36.png" alt="图片"></p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1X24y1m7cj">https://www.bilibili.com/video/BV1X24y1m7cj</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">《安卓逆向这档事》三、初识smail，vip终结者</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138554&idx=1&sn=be2fe7ffb0520ef17405a754ff0725c8&chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&scene=21#wechat_redirect">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138674&idx=1&sn=17a3271b1771bdacf3392fb64dcc5dc3&chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&scene=21#wechat_redirect">《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138693&idx=1&sn=a09896ce9c1aa5e7194600ff7ca011e9&chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&scene=21#wechat_redirect">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138779&idx=1&sn=7201ed7aca4cdd6954787022c7f26b81&chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&scene=21#wechat_redirect">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1748081-1-1.html">https://www.52pojie.cn/thread-1748081-1-1.html</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吾爱破解安卓逆向入门教程《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(9)%E3%80%81%E5%AF%86%E7%A0%81%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%81%E7%AE%97%E6%B3%95%E8%87%AA%E5%90%90%E3%80%81%E9%9D%9E%E6%A0%87%E5%87%86%E5%8A%A0%E5%AF%86%E5%AF%B9%E6%8A%97/</url>
      <content type="html"><![CDATA[<p><img src="/./../../img/img/640-1695706654510-17.png" alt="图片"></p>
<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>1.密码学基础<br>2.常见编码与算法<br>3.非标准加密对抗</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.教程Demo(更新)<br>2.MT管理器&#x2F;NP管理器<br>3.算法助手<br>4.雷电模拟器<br>5.Android Studio<br>6.jadx-gui</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="1-为什么要学这个？"><a href="#1-为什么要学这个？" class="headerlink" title="1.为什么要学这个？"></a>1.为什么要学这个？</h2><ul>
<li>CTF</li>
<li>爬虫:算法还原、协议分析</li>
<li>网络安全:渗透测试、安全防护<br><img src="/./../../img/img/640-1695706654512-18.png" alt="图片"></li>
</ul>
<h2 id="2-密码学基础"><a href="#2-密码学基础" class="headerlink" title="2.密码学基础"></a>2.密码学基础</h2><h3 id="1-什么是密码学"><a href="#1-什么是密码学" class="headerlink" title="1.什么是密码学?"></a>1.什么是密码学?</h3><p>密码学(cryptography)是一种将信息表述为不可读的方式，并使用一种秘密的方法将信息恢复出来的科学。密码学提供的最基本的服务是数据机密性服务，就是使通信双方可以互相发送消息，并且避免他人窃取消息的内容。加密算法是密码学的核心。</p>
<ul>
<li>明文：原始消息</li>
<li>密文：加密后的消息</li>
<li>加密：从明文到密文的变换过程</li>
<li>解密：从密文到明文的变换过程</li>
<li>密钥：相用来完成加解密等过程的秘密信息<br><img src="/./../../img/img/640-1695706654513-19.png" alt="图片"></li>
</ul>
<h2 id="3-常见编码"><a href="#3-常见编码" class="headerlink" title="3.常见编码"></a>3.常见编码</h2><h3 id="1-Base64编码"><a href="#1-Base64编码" class="headerlink" title="1.Base64编码"></a>1.Base64编码</h3><p>CyberChef<br>定义:<br>Base64是一种用64个字符表示任意二进制数据的方法，是一种编码，并非加密字符编码，由 A-Z a-z 0-9 + &#x2F; 和补充字符 “&#x3D;” 组成，Base64编码后的字符数是4的倍数（不足会补”&#x3D;”）</p>
<p>明文:</p>
<h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><pre class="line-numbers language-none"><code class="language-none">吾爱破解论坛<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>密文:</p>
<pre class="line-numbers language-none"><code class="language-none">5ZC+54ix56C06Kej6K665Z2b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>逻辑实现:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Base64Example</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token string">"吾爱破解论坛"</span><span class="token punctuation">;</span>

        <span class="token comment">// 编码</span>
        <span class="token class-name">String</span> encodedString <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Encoded string: "</span> <span class="token operator">+</span> encodedString<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 解码</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decodedBytes <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>encodedString<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> decodedString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>decodedBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Decoded string: "</span> <span class="token operator">+</span> decodedString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>自实现base64：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Base64Example</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//base64码表</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> base64Chars <span class="token operator">=</span> <span class="token string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">String</span> originalInput <span class="token operator">=</span> <span class="token string">"吾爱破解论坛"</span><span class="token punctuation">;</span>

        <span class="token comment">// 编码</span>
        <span class="token class-name">String</span> encodedString <span class="token operator">=</span> <span class="token function">encodeBase64</span><span class="token punctuation">(</span>originalInput<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Encoded string: "</span> <span class="token operator">+</span> encodedString<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 解码</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decodedBytes <span class="token operator">=</span> <span class="token function">decodeBase64</span><span class="token punctuation">(</span>encodedString<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> decodedString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>decodedBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Decoded string: "</span> <span class="token operator">+</span> decodedString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">encodeBase64</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> inputBytes<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> paddingCount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">-</span> inputBytes<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> inputBytes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>inputBytes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> inputBytes<span class="token punctuation">.</span>length <span class="token operator">?</span> inputBytes<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">&lt;</span> inputBytes<span class="token punctuation">.</span>length <span class="token operator">?</span> inputBytes<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>base64Chars<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">>></span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x3F</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>base64Chars<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">>></span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x3F</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>base64Chars<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">>></span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x3F</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>base64Chars<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>b <span class="token operator">&amp;</span> <span class="token number">0x3F</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> paddingCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            sb<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token char">'='</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">decodeBase64</span><span class="token punctuation">(</span><span class="token class-name">String</span> inputString<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">ByteArrayOutputStream</span> bos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> paddingCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> inputString<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token punctuation">(</span>base64Chars<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>inputString<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>base64Chars<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>inputString<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">&lt;</span> inputString<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> inputString<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">'='</span> <span class="token operator">?</span> base64Chars<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>inputString<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">&lt;</span> inputString<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> inputString<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">'='</span> <span class="token operator">?</span> base64Chars<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>inputString<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">>></span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>b <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>inputString<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'='</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                paddingCount<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>inputString<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'='</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                paddingCount<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> bos<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>paddingCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> trimmedResult <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>result<span class="token punctuation">.</span>length <span class="token operator">-</span> paddingCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> trimmedResult<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> trimmedResult<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> trimmedResult<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> result<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2-Hex编码"><a href="#2-Hex编码" class="headerlink" title="2.Hex编码"></a>2.Hex编码</h3><p>定义:<br>hex编码，又称十六进制编码(也称base16)，一般用于方便人们查看二进制文件内容，它将字节数据中的每4个bit使用数字(0-9)、字母(A-F)共16个字符等效表示，由于一个字节有8个bit，所以一个字节会被编码为2个hex字符<br>PS:在 ASCII 编码中，只有0到127之间的数字是表示英文字母、数字和符号的，超出这个范围的字符需要使用其他编码方式,例如汉字就需要使用 UTF-8 或 UTF-16</p>
<p>明文:</p>
<pre class="line-numbers language-none"><code class="language-none">
吾爱破解论坛<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>密文:</p>
<pre class="line-numbers language-none"><code class="language-none">
E590BEE788B1E7A0B4E8A7A3E8AEBAE59D9B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>逻辑实现:<br><code>%02X</code> 是一个格式化字符串，其中 <code>%</code> 是转义符，<code>02</code> 是最小宽度，表示输出的字符串至少包含两个字符，不足两个字符时用 <code>0</code> 填充，<code>X</code> 表示输出的字符集为大写的十六进制数。(算是一个特征)</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">
<span class="token comment">// 将普通字符串转换为Hex字符串</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">stringToHex</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token class-name">StringBuilder</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">byte</span> b <span class="token operator">:</span> bytes<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        output<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%02X"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token keyword">return</span> output<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span>  
<span class="token comment">// 将Hex字符串转换为普通字符串  </span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">hexToString</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>input<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> input<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        bytes<span class="token punctuation">[</span>i <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="3-Unicode编码"><a href="#3-Unicode编码" class="headerlink" title="3.Unicode编码"></a>3.Unicode编码</h3><p>定义:<br>Unicode（统一码、万国码、单一码）是一种在计算机上使用的字符编码。</p>
<p>明文:</p>
<pre class="line-numbers language-none"><code class="language-none">
吾爱破解论坛<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>密文:</p>
<pre class="line-numbers language-none"><code class="language-none">
\u543E\u7231\u7834\u89E3\u8BBA\u575B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>逻辑实现:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">
<span class="token comment">// 将字符串转换为Unicode格式</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">stringToUnicode</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token class-name">StringBuilder</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> input<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        output<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"\\u%04X"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> input<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token keyword">return</span> output<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span>
<span class="token comment">// 将Unicode格式的字符串转换为原始字符串  </span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">unicodeToString</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token class-name">StringBuilder</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> input<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">String</span> str <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        output<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token keyword">return</span> output<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="4-Byte数组"><a href="#4-Byte数组" class="headerlink" title="4.Byte数组"></a>4.Byte数组</h3><p>PS：常用于字符串加密<br>明文：</p>
<pre class="line-numbers language-none"><code class="language-none">
吾爱破解论坛<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>密文：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token operator">-</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">101</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token comment">//stringtobyte数组</span>
    <span class="token class-name">String</span> originalInput <span class="token operator">=</span> <span class="token string">"吾爱破解论坛"</span><span class="token punctuation">;</span>  
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> originalInput<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

    <span class="token comment">//byte数组tostring</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token operator">-</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">96</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">101</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  
    <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="4-加密算法"><a href="#4-加密算法" class="headerlink" title="4.加密算法"></a>4.加密算法</h2><h3 id="1-消息摘要算法-amp-单向散列函数-amp-哈希算法"><a href="#1-消息摘要算法-amp-单向散列函数-amp-哈希算法" class="headerlink" title="1.消息摘要算法&amp;单向散列函数&amp;哈希算法"></a>1.消息摘要算法&amp;单向散列函数&amp;哈希算法</h3><p>定义:<br>单向散列函数算法也称Hash（哈希）算法(消息摘要算法)，是一种将任意长度的消息压缩到某一固定长度（消息摘要）的函数（该过程不可逆）。Hash函数可用于数字签名、 消息的完整性检测、消息起源的认证检测等。<br>常见的算法:MD5、HMAC、SHA-X(SHA-1,SHA-2)</p>
<h4 id="MD5摘要"><a href="#MD5摘要" class="headerlink" title="MD5摘要"></a>MD5摘要</h4><p>特性:</p>
<ul>
<li>压缩性:无论数据长度是多少,计算出来的MD5值长度相同(16位、32位)</li>
<li>抗修改性:即便修改一个字节，计算出来的MD5值也会巨大差异</li>
<li>抗碰撞性:知道数据和MD5值，很小概率找到相同MD5值相同的原数据</li>
<li>易计算性:由原数据容易计算出MD5值(逆推)</li>
</ul>
<p>明文:</p>
<pre class="line-numbers language-none"><code class="language-none">
吾爱破解论坛<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>密文:</p>
<pre class="line-numbers language-none"><code class="language-none">
0bc50e2bf301b3f7c4309a9f4c9b19b2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>逻辑实现:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">MessageDigest</span> md <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    md<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"吾爱破解论坛"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> md<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">byteToHexString</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">byteToHexString</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> by<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">StringBuilder</span> <span class="token constant">SB</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">:</span> by<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> k<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            j <span class="token operator">=</span> k <span class="token operator">+</span> <span class="token number">256</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token constant">SB</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token constant">SB</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token constant">SB</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2-对称加密算法"><a href="#2-对称加密算法" class="headerlink" title="2.对称加密算法"></a>2.对称加密算法</h3><p>定义:<br>加密和解密使用相同密钥的密码算法叫对称加解密算法，简称对称算法。对称算法速度快，通常在需要加密大量数据时使用。所谓对称，就是采用这种密码方法的双方使用同样的密钥进行加密和解密。<br><img src="/./../../img/img/640-1695706654513-20.png" alt="图片"><br>对称加密算法可以分为以下几种类型：</p>
<ul>
<li>DES（数据加密标准）：DES是一种对称加密算法，使用56位密钥，将数据分成64位块，然后进行加密。由于DES的密钥长度比较短，易受到暴力破解攻击。</li>
<li>3DES（三重DES）：3DES是基于DES算法的改进版本，使用三个56位的密钥，对数据进行三次加密，从而增加了加密强度。3DES比DES更加安全，但是加密速度较慢。</li>
<li>AES（高级加密标准）：AES是一种高级的对称加密算法，使用128、192或256位密钥，可以对不同长度的数据块进行加密。AES比DES和3DES更加安全，且加密速度更快。</li>
<li>RC4：RC4是一种流加密算法，使用相同的密钥对数据进行加密和解密。RC4的密钥长度可以是40位、64位、128位等不同长度。RC4在实际应用中已经被证明存在漏洞，不再被推荐使用。</li>
</ul>
<h4 id="1-AES加解密"><a href="#1-AES加解密" class="headerlink" title="(1)AES加解密"></a>(1)AES加解密</h4><p>明文:</p>
<pre class="line-numbers language-none"><code class="language-none">
吾爱破解论坛<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>密文:</p>
<pre class="line-numbers language-none"><code class="language-none">
VPPMeI+jgyAtCYeM+VvamDapwXp+n4Q&#x2F;oUHULimyLA4&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>逻辑实现:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span><span class="token class-name">Cipher</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>spec<span class="token punctuation">.</span></span><span class="token class-name">SecretKeySpec</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Aes</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ALGORITHM</span> <span class="token operator">=</span> <span class="token string">"AES"</span><span class="token punctuation">;</span>  
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">TRANSFORMATION</span> <span class="token operator">=</span> <span class="token string">"AES/ECB/PKCS5Padding"</span><span class="token punctuation">;</span>  <span class="token comment">//加密模式</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SECRET_KEY</span> <span class="token operator">=</span> <span class="token string">"1234567wuaipojie"</span><span class="token punctuation">;</span>  <span class="token comment">//密钥</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">String</span> originalMessage <span class="token operator">=</span> <span class="token string">"吾爱破解论坛"</span><span class="token punctuation">;</span>  

        <span class="token comment">// Encrypt the message  </span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> encryptedMessage <span class="token operator">=</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>originalMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"加密结果: "</span> <span class="token operator">+</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>encryptedMessage<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

        <span class="token comment">// Decrypt the message  </span>
        <span class="token class-name">String</span> decryptedMessage <span class="token operator">=</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>encryptedMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"解密结果: "</span> <span class="token operator">+</span> decryptedMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">SecretKeySpec</span> key <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecretKeySpec</span><span class="token punctuation">(</span><span class="token constant">SECRET_KEY</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">ALGORITHM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">TRANSFORMATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token constant">ENCRYPT_MODE</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> cipher<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> encryptedMessage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">SecretKeySpec</span> key <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecretKeySpec</span><span class="token punctuation">(</span><span class="token constant">SECRET_KEY</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">ALGORITHM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">TRANSFORMATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token constant">DECRYPT_MODE</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>cipher<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>encryptedMessage<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="2-DES加解密"><a href="#2-DES加解密" class="headerlink" title="(2)DES加解密"></a>(2)DES加解密</h4><p>明文:</p>
<pre class="line-numbers language-none"><code class="language-none">
吾爱破解论坛<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>密文:</p>
<pre class="line-numbers language-none"><code class="language-none">
QJBizO9&#x2F;gNXe+fmKsWwHrkXExXultVO2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>逻辑实现:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span><span class="token class-name">Cipher</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>spec<span class="token punctuation">.</span></span><span class="token class-name">SecretKeySpec</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Des</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ALGORITHM</span> <span class="token operator">=</span> <span class="token string">"DES"</span><span class="token punctuation">;</span>  
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">TRANSFORMATION</span> <span class="token operator">=</span> <span class="token string">"DES/ECB/PKCS5Padding"</span><span class="token punctuation">;</span>  <span class="token comment">//加密模式</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SECRET_KEY</span> <span class="token operator">=</span> <span class="token string">"52pj2023"</span><span class="token punctuation">;</span>  <span class="token comment">//密钥</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">String</span> originalMessage <span class="token operator">=</span> <span class="token string">"吾爱破解论坛"</span><span class="token punctuation">;</span>  

        <span class="token comment">// Encrypt the message  </span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> encryptedMessage <span class="token operator">=</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>originalMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"加密结果: "</span> <span class="token operator">+</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>encryptedMessage<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

        <span class="token comment">// Decrypt the message  </span>
        <span class="token class-name">String</span> decryptedMessage <span class="token operator">=</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>encryptedMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"解密结果: "</span> <span class="token operator">+</span> decryptedMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">SecretKeySpec</span> key <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecretKeySpec</span><span class="token punctuation">(</span><span class="token constant">SECRET_KEY</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">ALGORITHM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">TRANSFORMATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token constant">ENCRYPT_MODE</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> cipher<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> encryptedMessage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">SecretKeySpec</span> key <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecretKeySpec</span><span class="token punctuation">(</span><span class="token constant">SECRET_KEY</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">ALGORITHM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">TRANSFORMATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token constant">DECRYPT_MODE</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>cipher<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>encryptedMessage<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="3-非对称加密算法"><a href="#3-非对称加密算法" class="headerlink" title="3.非对称加密算法"></a>3.非对称加密算法</h3><p>定义:<br>非对称加密，也称为公钥加密，使用两个不同的密钥进行加密和解密，这两个密钥是一对，一个被称为公钥，一个被称为私钥。公钥可以随意分发给任何需要通信的人，而私钥则只能由密钥持有者保留。在非对称加密中，公钥用于加密消息，而私钥用于解密消息，这使得非对称加密更加安全，因为即使公钥被泄露，也无法破解密文。<br>常见的非对称加密:RSA</p>
<h4 id="RSA加解密"><a href="#RSA加解密" class="headerlink" title="RSA加解密"></a>RSA加解密</h4><p>定义:<br>RSA是最具代表性的公钥密码体制。由于算法完善（既可用于数据加密又可用于数字签名）、安全性良好、易于实现和理解，RSA已成为一种应用极广的公钥密码体制，也是目前世界上唯一被广泛使用的公钥密码。在广泛的应用中，它不仅实现技术日趋成熟而且安全性逐渐得到证明。由此人们越发对RSA偏爱有加，并提出了许多基于RSA的加强或变形公钥密码体制。根据不同的应用需要，人们基于RSA算法开发了大量的加密方案与产品。<br><img src="/./../../img/img/640-1695706654514-21.png" alt="图片"></p>
<pre class="line-numbers language-none"><code class="language-none">PS:RSA公钥加密的每次结果都不一样<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>明文:</p>
<pre class="line-numbers language-none"><code class="language-none">
吾爱破解论坛<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>密文:</p>
<pre class="line-numbers language-none"><code class="language-none">
bLZtNVaHFLeKnQDG79KzOuvPa1HwGvcKX5fJfWR09g0HsAzM7NX7pcOzDp46UL4vOP&#x2F;n1&#x2F;DKxYpxxA8CjfxDdR8mNb4I3eNDq7oRZzQmDYKK+98uMuDc0+3utMuhojSdTe3cC6bWy66xcyV9LgX0Cau0sIDzBk9c7by6VCwj7xs&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>逻辑实现:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RSA</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">KEY_ALGORITHM</span> <span class="token operator">=</span> <span class="token string">"RSA"</span><span class="token punctuation">;</span>  

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">PUBLIC_KEY</span> <span class="token operator">=</span> <span class="token string">"RSAPublicKey"</span><span class="token punctuation">;</span>  

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">PRIVATE_KEY</span> <span class="token operator">=</span> <span class="token string">"RSAPrivateKey"</span><span class="token punctuation">;</span>  

    <span class="token comment">// 1024 bits 的 RSA 密钥对，最大加密明文大小  </span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MAX_ENCRYPT_BLOCK</span> <span class="token operator">=</span> <span class="token number">117</span><span class="token punctuation">;</span>  

    <span class="token comment">// 1024 bits 的 RSA 密钥对，最大解密密文大小  </span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MAX_DECRYPT_BLOCK</span> <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>  

    <span class="token comment">// 生成密钥对  </span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> <span class="token function">initKey</span><span class="token punctuation">(</span><span class="token keyword">int</span> keysize<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">KeyPairGenerator</span> keyPairGen <span class="token operator">=</span> <span class="token class-name">KeyPairGenerator</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">KEY_ALGORITHM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">// 设置密钥对的 bit 数，越大越安全  </span>
        keyPairGen<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span>keysize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">KeyPair</span> keyPair <span class="token operator">=</span> keyPairGen<span class="token punctuation">.</span><span class="token function">generateKeyPair</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

        <span class="token comment">// 获取公钥  </span>
        <span class="token class-name">RSAPublicKey</span> publicKey <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RSAPublicKey</span><span class="token punctuation">)</span> keyPair<span class="token punctuation">.</span><span class="token function">getPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">// 获取私钥  </span>
        <span class="token class-name">RSAPrivateKey</span> privateKey <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RSAPrivateKey</span><span class="token punctuation">)</span> keyPair<span class="token punctuation">.</span><span class="token function">getPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> keyMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        keyMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">PUBLIC_KEY</span><span class="token punctuation">,</span> publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        keyMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">PRIVATE_KEY</span><span class="token punctuation">,</span> privateKey<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> keyMap<span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token comment">// 获取公钥字符串  </span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getPublicKeyStr</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> keyMap<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token comment">// 获得 map 中的公钥对象，转为 key 对象  </span>
        <span class="token class-name">Key</span> key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Key</span><span class="token punctuation">)</span> keyMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">PUBLIC_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">// 编码返回字符串  </span>
        <span class="token keyword">return</span> <span class="token function">encryptBASE64</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">getEncoded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token comment">// 获取私钥字符串  </span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getPrivateKeyStr</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> keyMap<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token comment">// 获得 map 中的私钥对象，转为 key 对象  </span>
        <span class="token class-name">Key</span> key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Key</span><span class="token punctuation">)</span> keyMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">PRIVATE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">// 编码返回字符串  </span>
        <span class="token keyword">return</span> <span class="token function">encryptBASE64</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">getEncoded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token comment">// 获取公钥  </span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">PublicKey</span> <span class="token function">getPublicKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> publicKeyString<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchAlgorithmException</span><span class="token punctuation">,</span> <span class="token class-name">InvalidKeySpecException</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> publicKeyByte <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>publicKeyString<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">X509EncodedKeySpec</span> keySpec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">X509EncodedKeySpec</span><span class="token punctuation">(</span>publicKeyByte<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">KeyFactory</span> keyFactory <span class="token operator">=</span> <span class="token class-name">KeyFactory</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">KEY_ALGORITHM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> keyFactory<span class="token punctuation">.</span><span class="token function">generatePublic</span><span class="token punctuation">(</span>keySpec<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token comment">// 获取私钥  </span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">PrivateKey</span> <span class="token function">getPrivateKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> privateKeyString<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> privateKeyByte <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>privateKeyString<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">PKCS8EncodedKeySpec</span> keySpec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PKCS8EncodedKeySpec</span><span class="token punctuation">(</span>privateKeyByte<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">KeyFactory</span> keyFactory <span class="token operator">=</span> <span class="token class-name">KeyFactory</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">KEY_ALGORITHM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> keyFactory<span class="token punctuation">.</span><span class="token function">generatePrivate</span><span class="token punctuation">(</span>keySpec<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token comment">/**  
     * BASE64 编码返回加密字符串  
     *  
     * home.php?mod=space&amp;uid=952169 key 需要编码的字节数组  
     * home.php?mod=space&amp;uid=155549 编码后的字符串  
     */</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">encryptBASE64</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token comment">/**  
     * BASE64 解码，返回字节数组  
     *  
     * @param key 待解码的字符串  
     * @return 解码后的字节数组  
     */</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">decryptBASE64</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">return</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token comment">/**  
     * 公钥加密  
     *  
     * @param text         待加密的明文字符串  
     * @param publicKeyStr 公钥  
     * @return 加密后的密文  
     */</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">encrypt1</span><span class="token punctuation">(</span><span class="token class-name">String</span> text<span class="token punctuation">,</span> <span class="token class-name">String</span> publicKeyStr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>  

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"明文字符串为:"</span><span class="token operator">+</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">KEY_ALGORITHM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token constant">ENCRYPT_MODE</span><span class="token punctuation">,</span> <span class="token function">getPublicKey</span><span class="token punctuation">(</span>publicKeyStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tempBytes <span class="token operator">=</span> cipher<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">return</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>tempBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"加密字符串["</span> <span class="token operator">+</span> text <span class="token operator">+</span> <span class="token string">"]时遇到异常"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token comment">/**  
     * 私钥解密  
     *  
     * @param secretText    待解密的密文字符串  
     * @param privateKeyStr 私钥  
     * @return 解密后的明文  
     */</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">decrypt1</span><span class="token punctuation">(</span><span class="token class-name">String</span> secretText<span class="token punctuation">,</span> <span class="token class-name">String</span> privateKeyStr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>  
            <span class="token comment">// 生成私钥  </span>
            <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token constant">KEY_ALGORITHM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token constant">DECRYPT_MODE</span><span class="token punctuation">,</span> <span class="token function">getPrivateKey</span><span class="token punctuation">(</span>privateKeyStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token comment">// 密文解码  </span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> secretTextDecoded <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>secretText<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tempBytes <span class="token operator">=</span> cipher<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>secretTextDecoded<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>tempBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"解密字符串["</span> <span class="token operator">+</span> secretText <span class="token operator">+</span> <span class="token string">"]时遇到异常"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span>  
    <span class="token punctuation">&#125;</span>  

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>  
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> keyMap<span class="token punctuation">;</span>  
        <span class="token class-name">String</span> cipherText<span class="token punctuation">;</span>  
        <span class="token comment">// 原始明文  </span>
        <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token string">"吾爱破解论坛"</span><span class="token punctuation">;</span>  

        <span class="token comment">// 生成密钥对  </span>
        keyMap <span class="token operator">=</span> <span class="token function">initKey</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">String</span> publicKey <span class="token operator">=</span> <span class="token function">getPublicKeyStr</span><span class="token punctuation">(</span>keyMap<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"公钥:"</span><span class="token operator">+</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">String</span> privateKey <span class="token operator">=</span> <span class="token function">getPrivateKeyStr</span><span class="token punctuation">(</span>keyMap<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"私钥:"</span><span class="token operator">+</span>privateKey<span class="token punctuation">)</span><span class="token punctuation">;</span>  

        <span class="token comment">// 加密  </span>
        cipherText <span class="token operator">=</span> <span class="token function">encrypt1</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"加密后的密文:"</span><span class="token operator">+</span>cipherText<span class="token punctuation">)</span><span class="token punctuation">;</span>  

        <span class="token comment">// 解密  </span>
        <span class="token class-name">String</span> plainText <span class="token operator">=</span> <span class="token function">decrypt1</span><span class="token punctuation">(</span>cipherText<span class="token punctuation">,</span> privateKey<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"解密后明文:"</span><span class="token operator">+</span>plainText<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span>  

<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>总的来说，非对称加密比对称加密更加安全，但同时也更加计算密集和复杂，因此在实际应用中需要根据具体情况来选择合适的加密方式。常见的做法是使用对称加密算法加密数据，然后使用非对称加密算法加密对称加密算法使用的密钥，这样既保证了数据的安全性，又避免了非对称加密算法的资源消耗。</p>
<h3 id="4-非标准加密算法"><a href="#4-非标准加密算法" class="headerlink" title="4.非标准加密算法"></a>4.非标准加密算法</h3><p>遇到不是常规的加密怎么办？<br>方法一:主动调用<br>方法二:扣算法<br>方法三:问问神奇的ChatGPT</p>
<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<p>修改教程demo中的值</p>
<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><hr>
<p>推荐书目:<br>加密与解密（第4版）<br>Java加密与解密的艺术(第2版)<br>密码学原理与Java实现</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1X24y1m7cj">https://www.bilibili.com/video/BV1X24y1m7cj</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">《安卓逆向这档事》三、初识smail，vip终结者</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138554&idx=1&sn=be2fe7ffb0520ef17405a754ff0725c8&chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&scene=21#wechat_redirect">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138674&idx=1&sn=17a3271b1771bdacf3392fb64dcc5dc3&chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&scene=21#wechat_redirect">《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138693&idx=1&sn=a09896ce9c1aa5e7194600ff7ca011e9&chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&scene=21#wechat_redirect">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138779&idx=1&sn=7201ed7aca4cdd6954787022c7f26b81&chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&scene=21#wechat_redirect">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138987&idx=1&sn=c36c67b952a02f676fcdd5fb5c42abbc&chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&scene=21#wechat_redirect">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p>
<h1 id="八、参考文档"><a href="#八、参考文档" class="headerlink" title="八、参考文档"></a>八、参考文档</h1><hr>
<p>安卓逆向中关于密码学、NDK开发（JNI调用）以及Java层逆向基础知识思维导图<br>密码学原理与Java实现<br>MD5加密概述，原理及实现<br>RSA 加解密（Java 实现）<br>密码学：RSA加密算法详解</p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1762225-1-1.html">https://www.52pojie.cn/thread-1762225-1-1.html</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吾爱破解安卓逆向入门教程《安卓逆向这档事》 一、模拟器环境搭建]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B%EF%BC%881%EF%BC%89%E3%80%81%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="一-什么是安卓逆向？"><a href="#一-什么是安卓逆向？" class="headerlink" title="一.什么是安卓逆向？"></a>一.什么是安卓逆向？</h1><hr>
<p>安卓逆向是对已经打包好的APP进行反编译、源码分析了解APP实现逻辑的一门技术</p>
<h1 id="二-安卓逆向可以干嘛？"><a href="#二-安卓逆向可以干嘛？" class="headerlink" title="二.安卓逆向可以干嘛？"></a>二.安卓逆向可以干嘛？</h1><hr>
<p>去更新<br>去广告<br>内购&#x2F;会员破解<br>协议自动签到<br>白嫖！！！<br>拜托，会逆向的人超酷的好嘛</p>
<h1 id="三-教程简介"><a href="#三-教程简介" class="headerlink" title="三.教程简介"></a>三.教程简介</h1><hr>
<p>参考之前发的<br>《关于我在吾爱破解论坛学安卓逆向这档事》预告<br>PS:我不是程序员，安卓逆向只是兴趣，可能讲的不好，还请各位大佬多多包涵。另外本教程只是个基础的，并没有什么含金量。所以，如果能帮到一些新朋友培养起对安卓逆向的兴趣，那已经是物尽其用了。</p>
<h1 id="四、Magisk介绍"><a href="#四、Magisk介绍" class="headerlink" title="四、Magisk介绍"></a>四、Magisk介绍</h1><hr>
<p><img src="/./../../img/img/640-1695708653308-116.png" alt="图片"><br>Magisk 是一套用于定制 Android 的开源软件，支持高于 Android 5.0 的设备。</p>
<p>以下是一些功能亮点：</p>
<ul>
<li><strong>MagiskSU</strong>：为应用程序提供 root 访问权限</li>
<li><strong>Magisk 模块</strong>：通过安装模块修改只读分区</li>
<li><strong>MagiskHide</strong>：从根检测 &#x2F; 系统完整性检查中隐藏 Magisk(Shamiko)</li>
<li><strong>MagiskBoot</strong> : 最完整的安卓启动镜像解包和重新打包工具</li>
</ul>
<h1 id="五、安装步骤"><a href="#五、安装步骤" class="headerlink" title="五、安装步骤"></a>五、安装步骤</h1><hr>
<p>1.到官网下载9.0模拟器，并安装<br><a href="https://www.ldmnq.com/">https://www.ldmnq.com/</a></p>
<p>[更新!]适用于几乎所有安卓模拟器(7+)安装magisk的教程-简单无脑向<br><a href="https://www.52pojie.cn/thread-1583586-1-1.html">https://www.52pojie.cn/thread-1583586-1-1.html</a><br>(出处: 吾爱破解论坛)</p>
<p>2.下载配置文件</p>
<p>3.安装面具</p>
<h1 id="六、可能存在的问题"><a href="#六、可能存在的问题" class="headerlink" title="六、可能存在的问题"></a>六、可能存在的问题</h1><hr>
<p>Magisk刷不上<br><img src="/./../../img/img/640-1695708653308-117.png" alt="图片"><br>这种情况可能是你下的是最新版雷电模拟器，需要在设置里把读写权限打开<br><img src="/./../../img/img/640-1695708653309-118.png" alt="图片"></p>
<h1 id="七、视频及课件地址"><a href="#七、视频及课件地址" class="headerlink" title="七、视频及课件地址"></a>七、视频及课件地址</h1><hr>
<p>百度云：<a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云：<a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：<a href="https://www.bilibili.com/video/BV1wT411N7sV">https://www.bilibili.com/video/BV1wT411N7sV</a></p>
<p>论坛原帖：<a href="https://www.52pojie.cn/thread-1695141-1-1.html">https://www.52pojie.cn/thread-1695141-1-1.html</a></p>
<h1 id="八、后续更新地址"><a href="#八、后续更新地址" class="headerlink" title="八、后续更新地址"></a>八、后续更新地址</h1><hr>
<p>《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吾爱破解安卓逆向入门教程《安卓逆向这档事》十二、大佬帮我分析一下]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(12)%E3%80%81%E5%A4%A7%E4%BD%AC%E5%B8%AE%E6%88%91%E5%88%86%E6%9E%90%E4%B8%80%E4%B8%8B/</url>
      <content type="html"><![CDATA[<p>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139564&idx=1&sn=ed1a626174cd39572544fa54e320e135&chksm=bd50bdb88a2734ae34b4d4bad5de061a368863cab0ac1e51c5969c926a6ebab29fbe5f729cbf&scene=21#wechat_redirect">吾爱破解安卓逆向入门教程《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a></p>
<p><img src="/./../../img/img/641-1695866481892-48.png" alt="图片"></p>
<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>1.了解汇编寄存器知识、so加载流程<br>2.了解常见so防护手段，以ollvm为例<br>3.学习动态调试技巧以及常见反调试</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.教程Demo(更新)<br>2.MT管理器&#x2F;NP管理器<br>3.IDA PRO<br>4.Android Studio<br>5.010 Editor</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<h2 id="1-so加载流程"><a href="#1-so加载流程" class="headerlink" title="1.so加载流程"></a>1.so加载流程</h2><p>作用：反调试、脱壳、注入等</p>
<p>流程图：<br><img src="/./../../img/img/640-1695866256398-1-1695866481892-49.png" alt="图片"></p>
<p>函数的基本介绍：</p>
<table>
<thead>
<tr>
<th align="left">函数名</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>android_dlopen_ext()</code> 、<code>dlopen()</code>、<code>do_dlopen()</code></td>
<td align="left">这三个函数主要用于加载库文件。<code>android_dlopen_ext</code> 是系统的一个函数，用于在运行时动态加载共享库。与标准的 <code>dlopen()</code> 函数相比，<code>android_dlopen_ext</code> 提供了更多的参数选项和扩展功能，例如支持命名空间、符号版本等特性。</td>
</tr>
<tr>
<td align="left"><code>find_library()</code></td>
<td align="left"><code>find_library()</code> 函数用于查找库，基本的用途是给定一个库的名字，然后查找并返回这个库的路径。</td>
</tr>
<tr>
<td align="left"><code>call_constructors()</code></td>
<td align="left"><code>call_constructors()</code> 是用于调用动态加载库中的构造函数的函数。</td>
</tr>
<tr>
<td align="left"><code>init</code></td>
<td align="left">库的构造函数，用于初始化库中的静态变量或执行其他需要在库被加载时完成的任务。如果没有定义<code>init</code>函数，系统将不会执行任何动作。需要注意的是，<code>init</code>函数不应该有任何参数，并且也没有返回值。</td>
</tr>
<tr>
<td align="left"><code>init_array</code></td>
<td align="left"><code>init_array</code>是ELF（Executable and Linkable Format，可执行和可链接格式）二进制格式中的一个特殊段（section），这个段包含了一些函数的指针，这些函数将在<code>main()</code>函数执行前被调用，用于初始化静态局部变量和全局变量。</td>
</tr>
<tr>
<td align="left"><code>jni_onload</code></td>
<td align="left">这是Android JNI(Java Native Interface)中的一个函数。当一个native库被系统加载时，该函数会被自动调用。<code>JNI_OnLoad</code>可以做一些初始化工作，例如注册你的native方法或者初始化一些数据结构。如果你的native库没有定义这个函数，那么JNI会使用默认的行为。<code>JNI_OnLoad</code>的返回值应该是需要的JNI版本，一般返回<code>JNI_VERSION_1_6</code>。</td>
</tr>
</tbody></table>
<p>下断点时机：<br>应用级别的：java_com_XXX；<br>外壳级别的：JNI_Onload，.init，.init_array(反调试);<br>系统级别的：fopen，fget，dvmdexfileopen(脱壳)；</p>
<p>安卓在线源码查看<br>AOSPXRef：<a href="http://aospxref.com/">http://aospxref.com</a></p>
<h2 id="2-IDA动态调试"><a href="#2-IDA动态调试" class="headerlink" title="2.IDA动态调试"></a>2.IDA动态调试</h2><h3 id="1-前置操作："><a href="#1-前置操作：" class="headerlink" title="1.前置操作："></a>1.前置操作：</h3><p>1.在IDA目录下的dbgsrv，选择跟手机架构一致的server<br>2.adb push as &#x2F;data&#x2F;local&#x2F;tmp&#x2F;<br>3.进入手机端命令：adb shell<br>4.切换获取手机的root权限：su<br>5.跳到对应路径：cd &#x2F;data&#x2F;local&#x2F;tmp&#x2F;<br>6.提权：chmod 777 as<br>7.XappDebug hook</p>
<h3 id="2-调试步骤"><a href="#2-调试步骤" class="headerlink" title="2.调试步骤"></a>2.调试步骤</h3><p>分为两种模式，一种是以debug模式启动，第二种则以普通模式启动，二者的区别在于使用场景，有时候要动态调试的参数在app一启动的时候就产生了，时机较早，所以需要以debug模式去挂起app</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb shell am start <span class="token parameter variable">-D</span> <span class="token parameter variable">-n</span> com.zj.wuaipojie/.ui.ChallengeEight （去掉-D 则表示不以debug模式启动app）
adb forward tcp:23946 tcp:23946 <span class="token punctuation">(</span>端口转发<span class="token punctuation">)</span>
adb forward tcp:8700 jdwp:PID <span class="token punctuation">(</span>pid监听<span class="token punctuation">)</span>
jdb <span class="token parameter variable">-connect</span> com.sun.jdi.SocketAttach:hostname<span class="token operator">=</span><span class="token number">127.0</span>.0.1,port<span class="token operator">=</span><span class="token number">8700</span> <span class="token punctuation">(</span>jdb挂起<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>PS：若不是以debug启动则不需要输入后两条命令<br>其他的步骤具体看视频</p>
<p>佚名大佬：[超级详细]实战分析一个Crackme的过程：</p>
<p><a href="https://www.52pojie.cn/thread-1315444-1-7.html">https://www.52pojie.cn/thread-1315444-1-7.html</a></p>
<h3 id="3-常见寄存器知识"><a href="#3-常见寄存器知识" class="headerlink" title="3.常见寄存器知识"></a>3.常见寄存器知识</h3><p>在进行动态调试，以下是一些常用的寄存器介绍：</p>
<table>
<thead>
<tr>
<th align="left">寄存器名称</th>
<th align="left">功能介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>R0-R12</code></td>
<td align="left">通用寄存器，用于存储临时数据。在函数调用时，<code>R0-R3</code>用于存储前四个参数，其余的参数通过堆栈传递。返回值也通过<code>R0</code>和<code>R1</code>传递。</td>
</tr>
<tr>
<td align="left"><code>R13 (SP)</code></td>
<td align="left">堆栈指针寄存器，指向当前堆栈的顶部。</td>
</tr>
<tr>
<td align="left"><code>R14 (LR)</code></td>
<td align="left">链接寄存器，存储子程序的返回地址。</td>
</tr>
<tr>
<td align="left"><code>R15 (PC)</code></td>
<td align="left">程序计数器，指向下一条要执行的指令。</td>
</tr>
<tr>
<td align="left"><code>CPSR</code></td>
<td align="left">当前程序状态寄存器，保存程序的状态信息，如算术运算的结果标志、中断禁止标志等。</td>
</tr>
<tr>
<td align="left"><code>FPSCR</code></td>
<td align="left">浮点状态和控制寄存器，如果你在调试的代码中涉及到浮点运算，那么这个寄存器会比较重要。</td>
</tr>
</tbody></table>
<h3 id="4-常用快捷键"><a href="#4-常用快捷键" class="headerlink" title="4.常用快捷键"></a>4.常用快捷键</h3><table>
<thead>
<tr>
<th align="left">快捷键</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>F2</code></td>
<td align="left">在所在行下断点</td>
</tr>
<tr>
<td align="left"><code>F5</code></td>
<td align="left">可以将ARM指令转化为可读的C代码，同时可以使用Y键，对JNIEnv指针做一个类型转换，从而对JNI里经常使用的JNIEnv方法能够识别</td>
</tr>
<tr>
<td align="left"><code>F7</code></td>
<td align="left">单步进入调试</td>
</tr>
<tr>
<td align="left"><code>F8</code></td>
<td align="left">按照顺序一行一行，单步调试</td>
</tr>
<tr>
<td align="left"><code>F9</code></td>
<td align="left">直接跳到下一个断点处</td>
</tr>
<tr>
<td align="left"><code>Shift + F12</code></td>
<td align="left">快速查看so文件中的字符串信息，分析过程中通过一些关键字符串能够迅速定位到关键函数</td>
</tr>
<tr>
<td align="left"><code>Ctrl + s</code></td>
<td align="left">有两个用途，在IDA View页面中可以查看文件so文件的所有段信息，在调试页面可以查看程序中所有so文件映射到内存的基地址。tips:在进行so调试过程中，很有用的一个小技巧就是IDA双开，一个用于进行静态分析；一个用于动态调试。比如说调试过程中要找到一个函数的加载到内存中的位置</td>
</tr>
<tr>
<td align="left"><code>Esc</code></td>
<td align="left">回退键，能够倒回上一部操作的视图（只有在反汇编窗口才是这个作用，如果是在其他窗口按下esc，会关闭该窗口）</td>
</tr>
<tr>
<td align="left"><code>g</code></td>
<td align="left">直接跳到某个地址</td>
</tr>
<tr>
<td align="left"><code>y</code></td>
<td align="left">更改变量的类型</td>
</tr>
<tr>
<td align="left"><code>x</code></td>
<td align="left">对着某个函数、变量按该快捷键，可以查看它的交叉引用</td>
</tr>
<tr>
<td align="left"><code>n</code></td>
<td align="left">更改变量的名称</td>
</tr>
<tr>
<td align="left"><code>p</code></td>
<td align="left">创建函数</td>
</tr>
</tbody></table>
<h3 id="5-可能遇到的问题"><a href="#5-可能遇到的问题" class="headerlink" title="5.可能遇到的问题"></a>5.可能遇到的问题</h3><pre class="line-numbers language-none"><code class="language-none">1.&#39;jdb&#39; 不是内部或外部命令，也不是可运行的程序或批处理文件。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><a href="http://t.csdn.cn/paKAt">http://t.csdn.cn/paKAt</a></p>
<pre class="line-numbers language-none"><code class="language-none">2.java.io.IOException: handshake failed - connection prematurally closed
        at com.sun.tools.jdi.SocketTransportService.handshake(SocketTransportService.java:136)
        at com.sun.tools.jdi.SocketTransportService.attach(SocketTransportService.java:232)
        at com.sun.tools.jdi.GenericAttachingConnector.attach(GenericAttachingConnector.java:116)
        at com.sun.tools.jdi.SocketAttachingConnector.attach(SocketAttachingConnector.java:90)
        at com.sun.tools.example.debug.tty.VMConnection.attachTarget(VMConnection.java:519)
        at com.sun.tools.example.debug.tty.VMConnection.open(VMConnection.java:328)
        at com.sun.tools.example.debug.tty.Env.init(Env.java:63)
        at com.sun.tools.example.debug.tty.TTY.main(TTY.java:1066)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>致命错误:<br>无法附加到目标 VM。<br>解决方法：有可能是手机问题，建议低版本真机，不要用模拟器！切命令顺序不要乱！另外也有可能软件有反调试！</p>
<pre class="line-numbers language-none"><code class="language-none">3.动态调试中找不到so文件
解决方法：可以尝试手动复制一份对应的so文件放到data&#x2F;app&#x2F;包名&#x2F;lib目录下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>


<pre class="line-numbers language-none"><code class="language-none">4.device offline
解决方法：重新插拔usb，再不行就重启机子<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<pre class="line-numbers language-none"><code class="language-none">5.0.0.0.0:23946: bind: Address already in use
解决方案：
adb shell &quot;su -c &#39;lsof | grep 23946&#39;&quot; &#x2F;&#x2F;获取pid
adb shell &quot;su -c &#39;kill -9 PID&#39;&quot; &#x2F;&#x2F;这里的pid要根据上一步获取的填写<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>




<h3 id="6-常见反调试"><a href="#6-常见反调试" class="headerlink" title="6.常见反调试"></a>6.常见反调试</h3><p>1.调试端口检测<br>检测常见的23946端口，所以在运行时可以加 -p 指定一个另外的端口来过掉这个检测<br>2.调试进程名检测<br>固定的进程名 android_server gdb_server等等，所以要改个名字，例如as64<br>3.ptrace检测<br>每个进程同时刻只能被1个调试进程ptrace ，主动ptrace本进程可以使得其他调试器无法调试<br>实现代码：</p>
<pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">ptrace_protect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//ptrace附加自身线程 会导致此进程TracerPid 变为父进程的TracerPid 即zygote</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token function">ptrace</span><span class="token punctuation">(</span>PTRACE_TRACEME<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token comment">//返回-1即为已经被调试</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="3-SO防护手段"><a href="#3-SO防护手段" class="headerlink" title="3.SO防护手段"></a>3.SO防护手段</h2><p>常见防护手段:</p>
<table>
<thead>
<tr>
<th align="left">主要功能</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">SO加壳</td>
<td align="left">对C&#x2F;C++源码编译出来的SO文件进行加壳，使SO文件无法正确反编译和反汇编。</td>
</tr>
<tr>
<td align="left">SO源码虚拟化保护</td>
<td align="left">将原始汇编指令翻译为自定义的虚拟机指令，跳转到自定义的虚拟机中执行，每次保护生成的虚拟机指令随机，且对虚拟机解释器再度混淆</td>
</tr>
<tr>
<td align="left">SO防调用</td>
<td align="left">对SO文件进行授权绑定，防止SO文件被非授权应用调用运行。</td>
</tr>
<tr>
<td align="left">SO Linker</td>
<td align="left">对整个SO文件进行加密压缩，包括代码段、符号表和字符串等，运行时再解密解压缩到内存，从而有效的防止SO数据的泄露。</td>
</tr>
<tr>
<td align="left">SO源码混淆</td>
<td align="left">常量字符串加密、分裂基本块、等价指令替换、虚假控制流、控制流平坦化。</td>
</tr>
<tr>
<td align="left">SO环境监测</td>
<td align="left">防frida\xposed\root、防动态调试、防模拟器、防多开等</td>
</tr>
</tbody></table>
<h3 id="1-ollvm简介"><a href="#1-ollvm简介" class="headerlink" title="1.ollvm简介"></a>1.ollvm简介</h3><p>LLVM(Obfuscator-LLVM)是瑞士西北应用科技大学安全实验室于2010年6月份发起的一个项目,该项目旨在提供一套开源的针对LLVM的代码混淆工具,以增加对逆向工程的难度，只不过仅更新到llvm的4.0，2017年开始就没在更新。<br>项目地址</p>
<pre class="line-numbers language-none"><code class="language-none">源代码（c&#x2F;c++）经过clang--&gt; 中间代码(经过一系列的优化，优化用的是Pass)--&gt; 机器码<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>感受一下被ollvm支配的恐惧<br><img src="/./../../img/img/640-1695866256399-2-1695866481893-50.png" alt="图片"><br><img src="/./../../img/img/640-1695866256399-3.png" alt="图片"><br><img src="/./../../img/img/640-1695866256399-4.png" alt="图片"><br><img src="/./../../img/img/640-1695866256399-5.png" alt="图片"><br><img src="/./../../img/img/640-1695866256399-6.png" alt="图片"><br><img src="/./../../img/img/640-1695866256400-7.png" alt="图片"><br><img src="/./../../img/img/640-1695866256400-8.png" alt="图片"><br><img src="/./../../img/img/640-1695866256400-9.png" alt="图片"></p>
<h3 id="2-ollvm的分类"><a href="#2-ollvm的分类" class="headerlink" title="2.ollvm的分类"></a>2.ollvm的分类</h3><table>
<thead>
<tr>
<th align="left">分类</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">指令替换（Instructions Substitution)(Sub)</td>
<td align="left">将一条运算指令替换为多条等价的运算指令，例如：y&#x3D;x+1变为y&#x3D;x+1+1-1</td>
</tr>
<tr>
<td align="left">虚假控制流（Bogus Control Flow)(bcf)</td>
<td align="left">通过加入包含不透明谓词的条件跳转和不可达的基本块，来干扰IDA的控制流分析和F5反汇编</td>
</tr>
<tr>
<td align="left">控制流平坦化(Control Flow Flattening)(Fla)</td>
<td align="left">主要通过一个主分发器来控制程序基本块的执行流程，将所有基本代码放到控制流最底部，然后删除原理基本块之间跳转关系，添加次分发器来控制分发逻辑，然后过新的复杂分发逻辑还原原来程序块之间的逻辑关系</td>
</tr>
<tr>
<td align="left">字符串加密</td>
<td align="left">编写一个pass将其中的字符串信息使用一些加密算法进行加密，然后特定的时间进行还原</td>
</tr>
</tbody></table>
<h4 id="1-2-1-指令替换（Sub）"><a href="#1-2-1-指令替换（Sub）" class="headerlink" title="1.2.1 指令替换（Sub）"></a>1.2.1 指令替换（Sub）</h4><p>指令替换，将一条运算指令，替换为多条等价的运算指令。例如：<code>y=x+1</code>变为<code>y=x+1+1-1</code><br><img src="/./../../img/img/640-1695866256400-10.png" alt="图片"></p>
<h4 id="1-2-2-虚假控制流（bcf）"><a href="#1-2-2-虚假控制流（bcf）" class="headerlink" title="1.2.2 虚假控制流（bcf）"></a>1.2.2 虚假控制流（bcf）</h4><p>虚假控制流混淆主要通过加入包含不透明谓词(相邻数字相乘恒为偶数)的条件跳转和不可达的基本块，来干扰IDA的控制流分析和F5反汇编<br>常见特征：不透明谓词–&gt;例如<code>y &gt; 10 || x * (x + 1) % 2 != 0</code><br><img src="/./../../img/img/640-1695866256401-11.png" alt="图片"></p>
<h4 id="1-2-3-控制流平坦化（Fla）"><a href="#1-2-3-控制流平坦化（Fla）" class="headerlink" title="1.2.3 控制流平坦化（Fla）"></a>1.2.3 控制流平坦化（Fla）</h4><p>控制流平坦化，主要通过一个主分发器来控制程序基本块的执行流程。该方法将所有基本代码放到控制流最底部，然后删除原理基本块之间跳转关系，添加次分发器来控制分发逻辑，然后过新的复杂分发逻辑还原原来程序块之间的逻辑关系。<br>常见的特征：一大堆分支函数<br><img src="/./../../img/img/640-1695866256401-12.png" alt="图片"><br><img src="/./../../img/img/640-1695866256401-13.png" alt="图片"></p>
<h4 id="1-2-4-字符串加密"><a href="#1-2-4-字符串加密" class="headerlink" title="1.2.4 字符串加密"></a>1.2.4 字符串加密</h4><p>字符串加密的原理很简单，编写一个pass将其中的字符串信息使用一些加密算法进行加密，然后特定的时间进行还原。一般含有字符串混淆、函数名混淆、不在init_array解密等<br>常见的特征：datadiv_decoded<br><img src="/./../../img/img/640-1695866256401-14.png" alt="图片"></p>
<h3 id="3-ollvm对抗"><a href="#3-ollvm对抗" class="headerlink" title="3.ollvm对抗"></a>3.ollvm对抗</h3><p>1.简单ollvm可以通过交叉引用分析<br>2.angr去除不透明谓词<br>3.Unicorn&#x2F;Unidbg&#x2F;AndroidNativeEmu模拟执行<br>4.IDA Trace<br>5.binary ninja<br>6.后端编译优化<br>7.frida辅助分析</p>
<h3 id="4-IDA-Trace-实战分析ollvm"><a href="#4-IDA-Trace-实战分析ollvm" class="headerlink" title="4.IDA Trace 实战分析ollvm"></a>4.IDA Trace 实战分析ollvm</h3><p>1.在要trace的函数前后下断，触发断点<br>2.配置trace的log输出路径，并选择trace模式</p>
<ul>
<li>Instruction tracing 调试器将为每条指令保存所有修改后的寄存器值。</li>
<li>Basic block tracing 调试器将保存到达临时基本块断点的所有地址。</li>
<li>Function tracing 调试器将保存发生函数调用或函数返回的所有地址。<br>3.run并触发trace</li>
</ul>
<p>感谢SharkFall大佬帮忙编译的样本</p>
<p>遇到ollvm平坦化怎么办？没事！chatGpt爸爸帮你解决<br>记一次基于unidbg模拟执行的去除ollvm混淆<br>Unicorn反ollvm控制流平坦化之bb<br>ARM64 OLLVM反混淆<br>OLLVM 与去平坦化 &amp; [RoarCTF2019] polyre 详细WP<br>移除ollvm中的控制流平坦化、不透明谓词<br>【reverse】虚假控制流入门：Ubuntu20.04安装ollvm4.0踩坑记+用IDApython去除BCF<br>基于IDA Python的OLLVM反混淆(一) 手动去混淆<br>你所需要的对抗ollvm的知识都在这里<br>ollvm反混淆学习<br>记使用Trace还原ollvm混淆的函数<br>frida辅助分析ollvm</p>
<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<p>待更新</p>
<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><hr>
<p>待更新</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1X24y1m7cj">https://www.bilibili.com/video/BV1X24y1m7cj</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">《安卓逆向这档事》三、初识smail，vip终结者</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138554&idx=1&sn=be2fe7ffb0520ef17405a754ff0725c8&chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&scene=21#wechat_redirect">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138674&idx=1&sn=17a3271b1771bdacf3392fb64dcc5dc3&chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&scene=21#wechat_redirect">《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138693&idx=1&sn=a09896ce9c1aa5e7194600ff7ca011e9&chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&scene=21#wechat_redirect">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138779&idx=1&sn=7201ed7aca4cdd6954787022c7f26b81&chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&scene=21#wechat_redirect">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138987&idx=1&sn=c36c67b952a02f676fcdd5fb5c42abbc&chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&scene=21#wechat_redirect">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139179&idx=1&sn=26e374dfb5776d41a7d3501770915a77&chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&scene=21#wechat_redirect">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139564&idx=1&sn=ed1a626174cd39572544fa54e320e135&chksm=bd50bdb88a2734ae34b4d4bad5de061a368863cab0ac1e51c5969c926a6ebab29fbe5f729cbf&scene=21#wechat_redirect">《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a><br>PS:没十一的原因在视频里讲了</p>
<h1 id="八、参考文档"><a href="#八、参考文档" class="headerlink" title="八、参考文档"></a>八、参考文档</h1><hr>
<p>IDA Pro 使用技巧、动态调式 so、monitor.bat<br>【第贰期 REVERSE 分享会】二十余种反调试源码讲解 &amp; IDA插件介绍<br>记一次基于unidbg模拟执行的去除ollvm混淆<br>Android APP漏洞之战（14）——Ollvm混淆与反混淆<br>[超级详细]实战分析一个Crackme的过程<br>《IDA Pro7.0使用技巧总结》<br>《使用IDA进行动态调试与过反调试（上）（三）》<br>对安卓反调试和校验检测的一些实践与结论</p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1809646-1-1.html">https://www.52pojie.cn/thread-1809646-1-1.html</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吾爱破解安卓逆向入门教程《安卓逆向这档事》十三、是时候学习一下Frida一把梭了(上)]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(13)%E3%80%81%E6%98%AF%E6%97%B6%E5%80%99%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%B8%8BFrida%E4%B8%80%E6%8A%8A%E6%A2%AD%E4%BA%86(%E4%B8%8A)/</url>
      <content type="html"><![CDATA[<p>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139664&idx=1&sn=8f76acd55355f1000afc0c85e35212b0&chksm=bd50be048a2737124982c5985c5a5b2393fafcf77a30f43adb9072719092167c35f738afccce&scene=21#wechat_redirect">吾爱破解安卓逆向入门教程《安卓逆向这档事》番外实战篇1-某电影视全家桶</a></p>
<p><img src="/./../../img/img/640-1695866592794-66.png" alt="图片"></p>
<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>1.配置frida环境，了解frida原理<br>2.从0到1编写frida脚本<br>3.了解frida的常用Api</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.教程Demo(更新)<br>2.jadx-gui<br>3.雷电模拟器<br>4.VS Code</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<h2 id="1-什么是Frida？"><a href="#1-什么是Frida？" class="headerlink" title="1.什么是Frida？"></a>1.什么是Frida？</h2><p>Frida 是一款开源的动态插桩工具，可以插入一些代码到原生App的内存空间去动态地监视和修改其行为，支持Windows、Mac、Linux、Android或者iOS，从安卓层面来讲，可以实现<code>Java</code>层和<code>Native</code>层<code>Hook</code>操作。<br>项目地址<br>官网及使用文档</p>
<h2 id="2-Frida原理及重要组件"><a href="#2-Frida原理及重要组件" class="headerlink" title="2.Frida原理及重要组件"></a>2.Frida原理及重要组件</h2><p>frida注入的原理就是找到目标进程,使用ptrace跟踪目标进程获取mmap，dlpoen，dlsym等函数库的偏移获取mmap在目标进程申请一段内存空间将在目标进程中找到存放frida-agent-32&#x2F;64.so的空间启动执行各种操作由agent去实现</p>
<table>
<thead>
<tr>
<th align="left">组件名称</th>
<th align="left">功能描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">frida-gum</td>
<td align="left">提供了inline-hook的核心实现，还包含了代码跟踪模块Stalker，用于内存访问监控的MemoryAccessMonitor，以及符号查找、栈回溯实现、内存扫描、动态代码生成和重定位等功能</td>
</tr>
<tr>
<td align="left">frida-core</td>
<td align="left">fridahook的核心，具有进程注入、进程间通信、会话管理、脚本生命周期管理等功能，屏蔽部分底层的实现细节并给最终用户提供开箱即用的操作接口。包含了frida-server、frida-gadget、frida-agent、frida-helper、frida-inject等关键模块和组件，以及之间的互相通信底座</td>
</tr>
<tr>
<td align="left">frida-gadget</td>
<td align="left">本身是一个动态库，可以通过重打包修改动态库的依赖或者修改smali代码去实现向三方应用注入gadget，从而实现Frida的持久化或免root</td>
</tr>
<tr>
<td align="left">frida-server</td>
<td align="left">本质上是一个二进制文件，类似于前面学习到的android_server，需要在目标设备上运行并转发端口，在Frida hook中起到关键作用</td>
</tr>
</tbody></table>
<h2 id="3-Frida与Xposed的对比"><a href="#3-Frida与Xposed的对比" class="headerlink" title="3.Frida与Xposed的对比"></a>3.Frida与Xposed的对比</h2><table>
<thead>
<tr>
<th align="left">工具</th>
<th align="left">优点</th>
<th align="left">缺点</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Xposed</td>
<td align="left">直接编写Java代码，Java层hook方便，可打包模块持久化hook</td>
<td align="left">环境配置繁琐，兼容性较差，难以Hook底层代码。</td>
</tr>
<tr>
<td align="left">Frida</td>
<td align="left">配置简单，免重启hook。支持Java层和Native层的hook操作</td>
<td align="left">持久化hook相对麻烦</td>
</tr>
</tbody></table>
<h2 id="4-Frida环境配置"><a href="#4-Frida环境配置" class="headerlink" title="4.Frida环境配置"></a>4.Frida环境配置</h2><h3 id="1-安装Python与VS-Code"><a href="#1-安装Python与VS-Code" class="headerlink" title="1.安装Python与VS Code"></a>1.安装Python与VS Code</h3><p>下载python<br><img src="/./../../img/img/640-1695866592794-67.png" alt="图片"><br>下载VS Code<br>汉化:在插件搜索Chinese，选择第一个插件安装重启即可</p>
<h3 id="2-虚拟环境的env的安装"><a href="#2-虚拟环境的env的安装" class="headerlink" title="2.虚拟环境的env的安装"></a>2.虚拟环境的env的安装</h3><ol>
<li><p>安装环境</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">pip install virtualenvwrapper<span class="token operator">-</span>win <span class="token operator">-</span>i https<span class="token punctuation">:</span><span class="token operator">//</span>pypi<span class="token punctuation">.</span>tuna<span class="token punctuation">.</span>tsinghua<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>设置WORKON_HOME环境变量</p>
<pre class="line-numbers language-none"><code class="language-none">mkvirtualenv 新建环境
rmvirtualenv 删除环境<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="3-Frida安装以及多版本处理"><a href="#3-Frida安装以及多版本处理" class="headerlink" title="3.Frida安装以及多版本处理"></a>3.Frida安装以及多版本处理</h3><pre class="line-numbers language-none"><code class="language-none">pip install frida-tools -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>配置代码提示</p>
<h3 id="4-push-Frida-server"><a href="#4-push-Frida-server" class="headerlink" title="4.push Frida-server"></a>4.push Frida-server</h3><p>点击下载<br>PS:版本一定要对应！！！<br><img src="/./../../img/img/640-1695866592794-68.png" alt="图片"></p>
<h2 id="5-Frida基础知识"><a href="#5-Frida基础知识" class="headerlink" title="5.Frida基础知识"></a>5.Frida基础知识</h2></li>
</ol>
<h3 id="1-基础指令"><a href="#1-基础指令" class="headerlink" title="1.基础指令"></a>1.基础指令</h3><p>1.frida-ps -U 查看当前手机运行的进程<br>2.frida-ps –help 查看help指令</p>
<pre class="line-numbers language-none"><code class="language-none">frida-ps --help
使用方式: frida-ps [选项]

选项:
  -h, --help            显示帮助信息并退出
  -D ID, --device ID    连接到具有给定ID的设备
  -U, --usb             连接到USB设备
  -R, --remote          连接到远程frida-server
  -H HOST, --host HOST  连接到HOST上的远程frida-server
  --certificate CERTIFICATE
                        与HOST进行TLS通信，期望的CERTIFICATE
  --origin ORIGIN       连接到设置了&quot;Origin&quot;头为ORIGIN的远程服务器
  --token TOKEN         使用TOKEN验证HOST
  --keepalive-interval INTERVAL
                        设置心跳包间隔(秒)，或设置为0以禁用(默认为-1，根据传输方式自动选择)
  --p2p                 与目标建立点对点连接
  --stun-server ADDRESS
                        设置与--p2p一起使用的STUN服务器地址
  --relay address,username,password,turn-&#123;udp,tcp,tls&#125;
                        添加与--p2p一起使用的中继
  -O FILE, --options-file FILE
                        包含额外命令行选项的文本文件
  --version             显示程序版本号并退出
  -a, --applications    只列出应用程序
  -i, --installed       包括所有已安装的应用程序
  -j, --json            以JSON格式输出结果<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2-操作模式"><a href="#2-操作模式" class="headerlink" title="2.操作模式:"></a>2.操作模式:</h3><table>
<thead>
<tr>
<th align="left">操作模式</th>
<th align="left">描述</th>
<th align="left">优点</th>
<th align="left">主要用途</th>
</tr>
</thead>
<tbody><tr>
<td align="left">CLI（命令行）模式</td>
<td align="left">通过命令行直接将JavaScript脚本注入进程中，对进程进行操作</td>
<td align="left">便于直接注入和操作</td>
<td align="left">在较小规模的操作或者需求比较简单的场景中使用</td>
</tr>
<tr>
<td align="left">RPC模式</td>
<td align="left">使用Python进行JavaScript脚本的注入工作，实际对进程进行操作的还是JavaScript脚本，可以通过RPC传输给Python脚本来进行复杂数据的处理</td>
<td align="left">在对复杂数据的处理上可以通过RPC传输给Python脚本来进行，有利于减少被注入进程的性能损耗</td>
<td align="left">在大规模调用中更加普遍，特别是对于复杂数据处理的需求</td>
</tr>
</tbody></table>
<h3 id="3-注入模式与启动命令"><a href="#3-注入模式与启动命令" class="headerlink" title="3.注入模式与启动命令:"></a>3.注入模式与启动命令:</h3><table>
<thead>
<tr>
<th align="left">注入模式</th>
<th align="left">描述</th>
<th align="left">命令或参数</th>
<th align="left">优点</th>
<th align="left">主要用途</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Spawn模式</td>
<td align="left">将启动App的权利交由Frida来控制，即使目标App已经启动，在使用Frida注入程序时还是会重新启动App</td>
<td align="left">在CLI模式中，Frida通过加上 -f 参数指定包名以spawn模式操作App</td>
<td align="left">适合于需要在App启动时即进行注入的场景，可以在App启动时即捕获其行为</td>
<td align="left">当需要监控App从启动开始的所有行为时使用</td>
</tr>
<tr>
<td align="left">Attach模式</td>
<td align="left">在目标App已经启动的情况下，Frida通过ptrace注入程序从而执行Hook的操作</td>
<td align="left">在CLI模式中，如果不添加 -f 参数，则默认会通过attach模式注入App</td>
<td align="left">适合于已经运行的App，不会重新启动App，对用户体验影响较小</td>
<td align="left">在App已经启动，或者我们只关心特定时刻或特定功能的行为时使用</td>
</tr>
</tbody></table>
<p>Spawn模式</p>
<pre class="line-numbers language-none"><code class="language-none">frida -U -f 进程名 -l hook.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>attach模式 ：</p>
<pre class="line-numbers language-none"><code class="language-none">frida -U 进程名 -l hook.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>frida_server自定义端口</p>
<pre class="line-numbers language-none"><code class="language-none">frida server 默认端口：27042

taimen:&#x2F; $ su
taimen:&#x2F; # cd data&#x2F;local&#x2F;tmp&#x2F;
taimen:&#x2F;data&#x2F;local&#x2F;tmp # .&#x2F;fs1280 -l 0.0.0.0:6666<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><code>logcat |grep &quot;D.zj2595&quot;</code>日志捕获<br><code>adb connect 127.0.0.1:62001</code>模拟器端口转发</p>
<h3 id="4-基础语法"><a href="#4-基础语法" class="headerlink" title="4.基础语法"></a>4.基础语法</h3><table>
<thead>
<tr>
<th align="left">API名称</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>Java.use(className)</code></td>
<td align="left">获取指定的Java类并使其在JavaScript代码中可用。</td>
</tr>
<tr>
<td align="left"><code>Java.perform(callback)</code></td>
<td align="left">确保回调函数在Java的主线程上执行。</td>
</tr>
<tr>
<td align="left"><code>Java.choose(className, callbacks)</code></td>
<td align="left">枚举指定类的所有实例。</td>
</tr>
<tr>
<td align="left"><code>Java.cast(obj, cls)</code></td>
<td align="left">将一个Java对象转换成另一个Java类的实例。</td>
</tr>
<tr>
<td align="left"><code>Java.enumerateLoadedClasses(callbacks)</code></td>
<td align="left">枚举进程中已经加载的所有Java类。</td>
</tr>
<tr>
<td align="left"><code>Java.enumerateClassLoaders(callbacks)</code></td>
<td align="left">枚举进程中存在的所有Java类加载器。</td>
</tr>
<tr>
<td align="left"><code>Java.enumerateMethods(targetClassMethod)</code></td>
<td align="left">枚举指定类的所有方法。</td>
</tr>
</tbody></table>
<h3 id="5-日志输出语法区别"><a href="#5-日志输出语法区别" class="headerlink" title="5.日志输出语法区别"></a>5.日志输出语法区别</h3><table>
<thead>
<tr>
<th align="left">日志方法</th>
<th align="left">描述</th>
<th align="left">区别</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>console.log()</code></td>
<td align="left">使用JavaScript直接进行日志打印</td>
<td align="left">多用于在CLI模式中，<code>console.log()</code>直接输出到命令行界面，使用户可以实时查看。在RPC模式中，<code>console.log()</code>同样输出在命令行，但可能被Python脚本的输出内容掩盖。</td>
</tr>
<tr>
<td align="left"><code>send()</code></td>
<td align="left">Frida的专有方法，用于发送数据或日志到外部Python脚本</td>
<td align="left">多用于RPC模式中，它允许JavaScript脚本发送数据到Python脚本，Python脚本可以进一步处理或记录这些数据。</td>
</tr>
</tbody></table>
<h3 id="6-Hook框架模板"><a href="#6-Hook框架模板" class="headerlink" title="6.Hook框架模板"></a>6.Hook框架模板</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token function">hookTest1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token function">setImmediate</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="6-Frida常用API"><a href="#6-Frida常用API" class="headerlink" title="6.Frida常用API"></a>6.Frida常用API</h2><h3 id="1-Hook普通方法、打印参数和修改返回值"><a href="#1-Hook普通方法、打印参数和修改返回值" class="headerlink" title="1.Hook普通方法、打印参数和修改返回值"></a>1.Hook普通方法、打印参数和修改返回值</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;定义一个名为hookTest1的函数
function hookTest1()&#123;
        &#x2F;&#x2F;获取一个名为&quot;类名&quot;的Java类，并将其实例赋值给JavaScript变量utils
    var utils &#x3D; Java.use(&quot;类名&quot;);
    &#x2F;&#x2F;修改&quot;类名&quot;的&quot;method&quot;方法的实现。这个新的实现会接收两个参数（a和b）
    utils.method.implementation &#x3D; function(a, b)&#123;
            &#x2F;&#x2F;将参数a和b的值改为123和456。
        a &#x3D; 123;
        b &#x3D; 456;
        &#x2F;&#x2F;调用修改过的&quot;method&quot;方法，并将返回值存储在&#96;retval&#96;变量中
        var retval &#x3D; this.method(a, b);
        &#x2F;&#x2F;在控制台上打印参数a，b的值以及&quot;method&quot;方法的返回值
        console.log(a, b, retval);
        &#x2F;&#x2F;返回&quot;method&quot;方法的返回值
        return retval;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2-Hook重载参数"><a href="#2-Hook重载参数" class="headerlink" title="2.Hook重载参数"></a>2.Hook重载参数</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; .overload()
&#x2F;&#x2F; .overload(&#39;自定义参数&#39;)
&#x2F;&#x2F; .overload(&#39;int&#39;)
function hookTest2()&#123;
    var utils &#x3D; Java.use(&quot;com.zj.wuaipojie.Demo&quot;);
    &#x2F;&#x2F;overload定义重载函数，根据函数的参数类型填
    utils.Inner.overload(&#39;com.zj.wuaipojie.Demo$Animal&#39;,&#39;java.lang.String&#39;).implementation &#x3D; function(a，b)&#123;
        b &#x3D; &quot;aaaaaaaaaa&quot;;
        this.Inner(a,b);
        console.log(b);
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="3-Hook构造函数"><a href="#3-Hook构造函数" class="headerlink" title="3.Hook构造函数"></a>3.Hook构造函数</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hookTest3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> utils <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//修改类的构造函数的实现，$init表示构造函数</span>
    utils<span class="token punctuation">.</span>$init<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">'java.lang.String'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        str <span class="token operator">=</span> <span class="token string">"52"</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$init</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="4-Hook字段"><a href="#4-Hook字段" class="headerlink" title="4.Hook字段"></a>4.Hook字段</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hookTest5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//静态字段的修改</span>
        <span class="token keyword">var</span> utils <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//修改类的静态字段"flag"的值</span>
        utils<span class="token punctuation">.</span>staticField<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">"我是被修改的静态变量"</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>utils<span class="token punctuation">.</span>staticField<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//非静态字段的修改</span>
        <span class="token comment">//使用`Java.choose()`枚举类的所有实例</span>
        Java<span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
            <span class="token function-variable function">onMatch</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    <span class="token comment">//修改实例的非静态字段"_privateInt"的值为"123456"，并修改非静态字段"privateInt"的值为9999。</span>
                obj<span class="token punctuation">.</span>_privateInt<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">;</span> <span class="token comment">//字段名与函数名相同 前面加个下划线</span>
                obj<span class="token punctuation">.</span>privateInt<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">9999</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
            <span class="token function-variable function">onComplete</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>

            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="5-Hook内部类"><a href="#5-Hook内部类" class="headerlink" title="5.Hook内部类"></a>5.Hook内部类</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hookTest6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//内部类</span>
        <span class="token keyword">var</span> innerClass <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo$innerClass"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>innerClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
        innerClass<span class="token punctuation">.</span>$init<span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"eeeeeeee"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="6-枚举所有的类与类的所有方法"><a href="#6-枚举所有的类与类的所有方法" class="headerlink" title="6.枚举所有的类与类的所有方法"></a>6.枚举所有的类与类的所有方法</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hookTest7</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//枚举所有的类与类的所有方法,异步枚举</span>
        Java<span class="token punctuation">.</span><span class="token function">enumerateLoadedClasses</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            <span class="token function-variable function">onMatch</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>handle</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    <span class="token comment">//过滤类名</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">)</span> <span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">var</span> clazz <span class="token operator">=</span>Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">var</span> methods <span class="token operator">=</span> clazz<span class="token punctuation">.</span>class<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>methods<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
            <span class="token function-variable function">onComplete</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="7-枚举所有方法"><a href="#7-枚举所有方法" class="headerlink" title="7.枚举所有方法"></a>7.枚举所有方法</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hookTest8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> Demo <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//getDeclaredMethods枚举所有方法</span>
        <span class="token keyword">var</span> methods <span class="token operator">=</span>Demo<span class="token punctuation">.</span>class<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> methods<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token keyword">var</span> methodName <span class="token operator">=</span> methods<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> k<span class="token operator">&lt;</span>Demo<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span><span class="token punctuation">.</span>overloads<span class="token punctuation">.</span>length<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                Demo<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span><span class="token punctuation">.</span>overloads<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">&#125;</span>
                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">[</span>methodName<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="8-主动调用"><a href="#8-主动调用" class="headerlink" title="8.主动调用"></a>8.主动调用</h3><p>静态方法</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> ClassName<span class="token operator">=</span>Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
ClassName<span class="token punctuation">.</span><span class="token function">privateFunc</span><span class="token punctuation">(</span><span class="token string">"传参"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>非静态方法</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> ret <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
 Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
     Java<span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span><span class="token string">"com.zj.wuaipojie.Demo"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>    <span class="token comment">//要hook的类</span>
         <span class="token function-variable function">onMatch</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
             ret<span class="token operator">=</span>instance<span class="token punctuation">.</span><span class="token function">privateFunc</span><span class="token punctuation">(</span><span class="token string">"aaaaaaa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//要hook的方法</span>
         <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
         <span class="token function-variable function">onComplete</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                 <span class="token comment">//console.log("result: " + ret);</span>
         <span class="token punctuation">&#125;</span>
     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
 <span class="token comment">//return ret;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><hr>
<p>待更新</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1X24y1m7cj">https://www.bilibili.com/video/BV1X24y1m7cj</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">《安卓逆向这档事》三、初识smail，vip终结者</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138554&idx=1&sn=be2fe7ffb0520ef17405a754ff0725c8&chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&scene=21#wechat_redirect">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138674&idx=1&sn=17a3271b1771bdacf3392fb64dcc5dc3&chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&scene=21#wechat_redirect">《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138693&idx=1&sn=a09896ce9c1aa5e7194600ff7ca011e9&chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&scene=21#wechat_redirect">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138779&idx=1&sn=7201ed7aca4cdd6954787022c7f26b81&chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&scene=21#wechat_redirect">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138987&idx=1&sn=c36c67b952a02f676fcdd5fb5c42abbc&chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&scene=21#wechat_redirect">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139179&idx=1&sn=26e374dfb5776d41a7d3501770915a77&chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&scene=21#wechat_redirect">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139564&idx=1&sn=ed1a626174cd39572544fa54e320e135&chksm=bd50bdb88a2734ae34b4d4bad5de061a368863cab0ac1e51c5969c926a6ebab29fbe5f729cbf&scene=21#wechat_redirect">《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139620&idx=1&sn=d65e23f4c8a5bc6cf94637af05025cea&chksm=bd50be708a273766f5f00b91d3df8921283fecb3b2b54432bdee2b2b3330b5ea76c68f857bc9&scene=21#wechat_redirect">《安卓逆向这档事》十二、大佬帮我分析一下</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139664&idx=1&sn=8f76acd55355f1000afc0c85e35212b0&chksm=bd50be048a2737124982c5985c5a5b2393fafcf77a30f43adb9072719092167c35f738afccce&scene=21#wechat_redirect">《安卓逆向这档事》番外实战篇1-某电影视全家桶</a></p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1823118-1-1.html">https://www.52pojie.cn/thread-1823118-1-1.html</a></p>
<h1 id="八、参考文档"><a href="#八、参考文档" class="headerlink" title="八、参考文档"></a>八、参考文档</h1><hr>
<p>一篇文章带你领悟Frida的精髓(基于安卓8.1)</p>
<p><a href="https://www.freebuf.com/articles/system/190565.html">https://www.freebuf.com/articles/system/190565.html</a></p>
<p>frida检测</p>
<p><a href="https://www.52pojie.cn/thread-1783400-1-1.html">https://www.52pojie.cn/thread-1783400-1-1.html</a></p>
<p>IDA&amp;Frida 学习</p>
<p><a href="https://www.52pojie.cn/thread-1759879-1-1.html">https://www.52pojie.cn/thread-1759879-1-1.html</a></p>
<p>Frida工作原理学习（1）</p>
<p><a href="https://bbs.kanxue.com/thread-273450.htm">https://bbs.kanxue.com/thread-273450.htm</a></p>
<p>frida源码阅读之frida-java</p>
<p><a href="https://bbs.kanxue.com/thread-229215.htm">https://bbs.kanxue.com/thread-229215.htm</a></p>
<p>Art 模式实现XposedNativeHook兼容Android10</p>
<p><a href="https://bbs.kanxue.com/thread-251171.htm">https://bbs.kanxue.com/thread-251171.htm</a></p>
<p>Frida 入门及介绍</p>
<p><a href="https://blog.csdn.net/qq_1290259791/article/details/100381831">https://blog.csdn.net/qq_1290259791/article/details/100381831</a></p>
<p>frida常用检测点及其原理–一把梭方案</p>
<p><a href="https://bbs.kanxue.com/thread-278145.htm">https://bbs.kanxue.com/thread-278145.htm</a></p>
<p>[原创]FRIDA 使用经验交流分享</p>
<p><a href="https://bbs.kanxue.com/thread-265160.htm">https://bbs.kanxue.com/thread-265160.htm</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吾爱破解安卓逆向入门教程《安卓逆向这档事》十四、是时候学习一下Frida一把梭了(中)]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B(14)%E3%80%81%E6%98%AF%E6%97%B6%E5%80%99%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%B8%8BFrida%E4%B8%80%E6%8A%8A%E6%A2%AD%E4%BA%86(%E4%B8%AD)/</url>
      <content type="html"><![CDATA[<p>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139714&idx=1&sn=28cc2ca160f7168a5ac43f658c5b57cd&chksm=bd50bed68a2737c0ed9ff5513b2cf6aa5bcc6176f28b14f47bf8d32485b1d557bbc5f14f65bc&scene=21#wechat_redirect">吾爱破解安卓逆向入门教程《安卓逆向这档事》十三、是时候学习一下Frida一把梭了(上)</a></p>
<p><img src="/./../../img/img/640-1695867474199-90.png" alt="图片"></p>
<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><p>1.配置objection环境<br>2.了解objection常用Api<br>3.了解frida_java_trace工具分析控制流混淆</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><p>1.教程Demo(更新)<br>2.jadx-gui<br>3.VS Code<br>4.IDLE</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><h2 id="1-objection"><a href="#1-objection" class="headerlink" title="1.objection"></a>1.objection</h2><h3 id="1-什么是objection"><a href="#1-什么是objection" class="headerlink" title="1.什么是objection"></a>1.什么是objection</h3><p>objection是基于frida的命令行hook集合工具, 可以让你不写代码, 敲几句命令就可以对java函数的高颗粒度hook, 还支持RPC调用。可以实现诸如内存搜索、类和模块搜索、方法hook打印参数返回值调用栈等常用功能，是一个非常方便的，逆向必备、内存漫游神器。<br>项目地址</p>
<h3 id="2-objection环境配置"><a href="#2-objection环境配置" class="headerlink" title="2.objection环境配置"></a>2.objection环境配置</h3><p>已不更新，要和frida的版本匹配</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">python使用的版本建议大于<span class="token number">3.8</span>，不然可能会报错，或者你调低frida以及objection的版本
pip install objection<span class="token operator">==</span><span class="token number">1.11</span><span class="token number">.0</span>
pip install frida<span class="token operator">-</span>tools<span class="token operator">==</span><span class="token number">9.2</span><span class="token number">.4</span>
frida <span class="token number">14.2</span><span class="token number">.18</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="3-objection快速上手"><a href="#3-objection快速上手" class="headerlink" title="3.objection快速上手"></a>3.objection快速上手</h3><p>1.help命令注释</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">objection --help<span class="token punctuation">(</span>help命令<span class="token punctuation">)</span>
Checking <span class="token keyword">for</span> a newer version of objection<span class="token punctuation">..</span>.
Usage: objection <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> COMMAND <span class="token punctuation">[</span>ARGS<span class="token punctuation">]</span><span class="token punctuation">..</span>.

       _   _         _   _
   ___<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span>_<span class="token operator">|</span>___ ___<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span>_<span class="token operator">|</span>___ ___
  <span class="token operator">|</span> <span class="token builtin class-name">.</span> <span class="token operator">|</span> <span class="token builtin class-name">.</span> <span class="token operator">|</span> <span class="token operator">|</span> -_<span class="token operator">|</span>  _<span class="token operator">|</span>  _<span class="token operator">|</span> <span class="token operator">|</span> <span class="token builtin class-name">.</span> <span class="token operator">|</span>   <span class="token operator">|</span>
  <span class="token operator">|</span>___<span class="token operator">|</span>___<span class="token operator">|</span> <span class="token operator">|</span>___<span class="token operator">|</span>___<span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span>___<span class="token operator">|</span>_<span class="token operator">|</span>_<span class="token operator">|</span>
        <span class="token operator">|</span>___<span class="token operator">|</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>inject<span class="token punctuation">(</span>ion<span class="token punctuation">)</span>

       Runtime Mobile Exploration
          by: @leonjza from @sensepost

  默认情况下，通信将通过USB进行，除非提供了<span class="token variable"><span class="token variable">`</span><span class="token parameter variable">--network</span><span class="token variable">`</span></span>选项。

选项:
  -N, <span class="token parameter variable">--network</span>            使用网络连接而不是USB连接。
  -h, <span class="token parameter variable">--host</span> TEXT          <span class="token punctuation">[</span>默认: <span class="token number">127.0</span>.0.1<span class="token punctuation">]</span>
  -p, <span class="token parameter variable">--port</span> INTEGER       <span class="token punctuation">[</span>默认: <span class="token number">27042</span><span class="token punctuation">]</span>
  -ah, --api-host TEXT     <span class="token punctuation">[</span>默认: <span class="token number">127.0</span>.0.1<span class="token punctuation">]</span>
  -ap, --api-port INTEGER  <span class="token punctuation">[</span>默认: <span class="token number">8888</span><span class="token punctuation">]</span>
  -g, <span class="token parameter variable">--gadget</span> TEXT        要连接的Frida Gadget/进程的名称。<span class="token punctuation">[</span>默认: Gadget<span class="token punctuation">]</span>
  -S, <span class="token parameter variable">--serial</span> TEXT        要连接的设备序列号。
  -d, <span class="token parameter variable">--debug</span>              启用带有详细输出的调试模式。<span class="token punctuation">(</span>在堆栈跟踪中包括代<span class="token punctuation">&#123;</span>过<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>滤<span class="token punctuation">&#125;</span>理源图<span class="token punctuation">)</span>
  <span class="token parameter variable">--help</span>                   显示此消息并退出。

命令:
  api          以无头模式启动objection API服务器。
  device-type  获取关于已连接设备的信息。
  explore      启动objection探索REPL。
  patchapk     使用frida-gadget.so补丁一个APK。
  patchipa     使用FridaGadget dylib补丁一个IPA。
  run          运行单个objection命令。
  signapk      使用objection密钥对APK进行Zipalign和签名。
  version      打印当前版本并退出。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>2.注入命令</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">objection <span class="token parameter variable">-g</span> 包名 explore

-   help：不知道当前命令的效果是什么，在当前命令前加help比如:help env，回车之后会出现当前命令的解释信息
-   按空格：不知道输入什么就按空格，会有提示出来
-   jobs：可以进行多项hook
-   日志：objection的日志文件生成在 C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Administrator<span class="token punctuation">\</span>.objection<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>启动前就hook</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">objection <span class="token parameter variable">-g</span> 进程名 explore --startup-command <span class="token string">"android hooking watch class 路径.类名"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="4-objection基础api"><a href="#4-objection基础api" class="headerlink" title="4.objection基础api"></a>4.objection基础api</h3><ol>
<li>memory list modules  -查看内存中加载的库</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">memory list modules
Save the output by adding <span class="token variable"><span class="token variable">`</span><span class="token parameter variable">--json</span> modules.json<span class="token variable">`</span></span> to this <span class="token builtin class-name">command</span>
Name                                                              Base          Size                 Path
----------------------------------------------------------------  ------------  -------------------  ------------------------------------------------------------------------------
app_process64                                                     0x57867c9000  <span class="token number">40960</span> <span class="token punctuation">(</span><span class="token number">40.0</span> KiB<span class="token punctuation">)</span>     /system/bin/app_process64
linker64                                                          0x72e326a000  <span class="token number">229376</span> <span class="token punctuation">(</span><span class="token number">224.0</span> KiB<span class="token punctuation">)</span>   /system/bin/linker64
libandroid_runtime.so                                             0x72e164e000  <span class="token number">2113536</span> <span class="token punctuation">(</span><span class="token number">2.0</span> MiB<span class="token punctuation">)</span>    /system/lib64/libandroid_runtime.so
libbase.so                                                        0x72dfa67000  <span class="token number">81920</span> <span class="token punctuation">(</span><span class="token number">80.0</span> KiB<span class="token punctuation">)</span>     /system/lib64/libbase.so
libbinder.so                                                      0x72dec1c000  <span class="token number">643072</span> <span class="token punctuation">(</span><span class="token number">628.0</span> KiB<span class="token punctuation">)</span>   /system/lib64/libbinder.so
libcutils.so                                                      0x72de269000  <span class="token number">86016</span> <span class="token punctuation">(</span><span class="token number">84.0</span> KiB<span class="token punctuation">)</span>     /system/lib64/libcutils.so
libhidlbase.so                                                    0x72df4cc000  <span class="token number">692224</span> <span class="token punctuation">(</span><span class="token number">676.0</span> KiB<span class="token punctuation">)</span>   /system/lib64/libhidlbase.so
liblog.so                                                         0x72e0be1000  <span class="token number">98304</span> <span class="token punctuation">(</span><span class="token number">96.0</span> KiB<span class="token punctuation">)</span>     /system/lib64/liblog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol>
<li>memory list exports so名称 - 查看库的导出函数</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">memory list exports liblog.so
Save the output by adding <span class="token variable"><span class="token variable">`</span><span class="token parameter variable">--json</span> exports.json<span class="token variable">`</span></span> to this <span class="token builtin class-name">command</span>
Type      Name                                  Address
--------  ------------------------------------  ------------
<span class="token keyword">function</span>  android_log_write_int32               0x72e0be77c8
<span class="token keyword">function</span>  android_log_write_list_begin          0x72e0be76f0
<span class="token keyword">function</span>  __android_log_bswrite                 0x72e0be9bd8
<span class="token keyword">function</span>  __android_log_security                0x72e0bf2144
<span class="token keyword">function</span>  __android_log_bwrite                  0x72e0be9a18
<span class="token keyword">function</span>  android_log_reset                     0x72e0be75ec
<span class="token keyword">function</span>  android_log_write_string8             0x72e0be7a38
<span class="token keyword">function</span>  android_logger_list_free              0x72e0be8c04
<span class="token keyword">function</span>  __android_log_print                   0x72e0be9728
<span class="token keyword">function</span>  __android_logger_property_get_bool    0x72e0bf2248
<span class="token keyword">function</span>  android_logger_get_id                 0x72e0be8270
<span class="token keyword">function</span>  android_logger_set_prune_list         0x72e0be8948<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol>
<li><p>android hooking list activities -查看内存中加载的activity  &#x2F;android hooking list services -查看内存中加载的services<br><img src="/./../../img/img/640-1695867474200-91.png" alt="图片"></p>
</li>
<li><p>android intent launch_activity 类名 -启动<code>activity</code>或<code>service</code>(可以用于一些没有验证的activity,在一些简单的ctf中有时候可以出奇效)</p>
</li>
<li><p>关闭ssl校验 android sslpinning disable</p>
</li>
<li><p>关闭root检测 android root disable</p>
<h3 id="5-objection内存漫游"><a href="#5-objection内存漫游" class="headerlink" title="5.objection内存漫游"></a>5.objection内存漫游</h3></li>
<li><p>内存搜刮类实例</p>
</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">android heap search instances 类名<span class="token punctuation">(</span>命令<span class="token punctuation">)</span>
<span class="token class-name">Class</span> instance enumeration complete <span class="token keyword">for</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span></span>Demo</span>  
 <span class="token class-name">Hashcode</span>  <span class="token class-name">Class</span>                  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>  <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>  <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
<span class="token number">215120583</span>  <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span></span>Demo</span>  <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span></span>Demo</span><span class="token annotation punctuation">@cd27ac7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol>
<li>调用实例的方法</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">android heap execute <span class="token generics"><span class="token punctuation">&lt;</span>handle<span class="token punctuation">></span></span> <span class="token function">getPublicInt</span><span class="token punctuation">(</span>实例的hashcode<span class="token operator">+</span>方法名<span class="token punctuation">)</span>
如果是带参数的方法，则需要进入编辑器环境  
android heap evaluate <span class="token generics"><span class="token punctuation">&lt;</span>handle<span class="token punctuation">></span></span>  
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token string">"吾爱破解"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
按住esc<span class="token operator">+</span>enter触发<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol>
<li>android hooking list classes -列出内存中所有的类(结果比静态分析的更准确)</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">android hooking list classes 

<span class="token class-name"><span class="token namespace">tw<span class="token punctuation">.</span>idv<span class="token punctuation">.</span>palatis<span class="token punctuation">.</span>xappdebug<span class="token punctuation">.</span></span>MainApplication</span>
<span class="token class-name"><span class="token namespace">tw<span class="token punctuation">.</span>idv<span class="token punctuation">.</span>palatis<span class="token punctuation">.</span>xappdebug<span class="token punctuation">.</span>xposed<span class="token punctuation">.</span></span>HookMain</span>
<span class="token class-name"><span class="token namespace">tw<span class="token punctuation">.</span>idv<span class="token punctuation">.</span>palatis<span class="token punctuation">.</span>xappdebug<span class="token punctuation">.</span>xposed<span class="token punctuation">.</span></span>HookMain</span>$a
<span class="token class-name"><span class="token namespace">tw<span class="token punctuation">.</span>idv<span class="token punctuation">.</span>palatis<span class="token punctuation">.</span>xappdebug<span class="token punctuation">.</span>xposed<span class="token punctuation">.</span></span>HookMain</span>$b
<span class="token class-name"><span class="token namespace">tw<span class="token punctuation">.</span>idv<span class="token punctuation">.</span>palatis<span class="token punctuation">.</span>xappdebug<span class="token punctuation">.</span>xposed<span class="token punctuation">.</span></span>HookMain</span>$c
<span class="token class-name"><span class="token namespace">tw<span class="token punctuation">.</span>idv<span class="token punctuation">.</span>palatis<span class="token punctuation">.</span>xappdebug<span class="token punctuation">.</span>xposed<span class="token punctuation">.</span></span>HookMain</span>$d
<span class="token class-name"><span class="token namespace">tw<span class="token punctuation">.</span>idv<span class="token punctuation">.</span>palatis<span class="token punctuation">.</span>xappdebug<span class="token punctuation">.</span>xposed<span class="token punctuation">.</span></span>HookSelf</span>
u
v
<span class="token keyword">void</span>
w
<span class="token class-name"><span class="token namespace">xposed<span class="token punctuation">.</span>dummy<span class="token punctuation">.</span></span>XResourcesSuperClass</span>
<span class="token class-name"><span class="token namespace">xposed<span class="token punctuation">.</span>dummy<span class="token punctuation">.</span></span>XTypedArraySuperClass</span>

<span class="token class-name">Found</span> <span class="token number">10798</span> classes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol>
<li>android hooking search classes 关键类名 -在内存中所有已加载的类中搜索包含特定关键词的类</li>
</ol>
<pre class="line-numbers language-ceylon" data-language="ceylon"><code class="language-ceylon">android hooking search classes wuaipojie
Note that Java classes are only loaded when they are used, so if the expected class has not been found, it might not have been loaded yet.
com.zj.wuaipojie.Demo
com.zj.wuaipojie.Demo$Animal
com.zj.wuaipojie.Demo$Companion
com.zj.wuaipojie.Demo$InnerClass
com.zj.wuaipojie.Demo$test$1
com.zj.wuaipojie.MainApplication
com.zj.wuaipojie.databinding.ActivityMainBinding
... 

Found 38 classes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol>
<li>android hooking search methods 关键方法名 -在内存中所有已加载的类的方法中搜索包含特定关键词的方法(一般不建议使用，特别耗时，还可能崩溃)</li>
<li>android hooking list class_methods 类名 -内存漫游类中的所有方法</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">android hooking list class_methods <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span>onCreate$lambda<span class="token operator">-</span><span class="token function">0</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span>View</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span>onCreate$lambda<span class="token operator">-</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span>View</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span>onCreate$lambda<span class="token operator">-</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span>View</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span>onCreate$lambda<span class="token operator">-</span><span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span>View</span><span class="token punctuation">)</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span>Bundle</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span><span class="token function">hexToString</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span><span class="token function">unicodeToString</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span><span class="token function">toastPrint</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span>$r8$lambda$<span class="token function">1lrkrgiCEFWXZDHzLRibYURG1h8</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span>View</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span>$r8$lambda$<span class="token class-name">IUqwMqbTKaOGiTaeOmvy_GjNBso</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span>View</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span>$r8$lambda$<span class="token class-name">Kc_cRYZjjhjsTl6GYNHbgD</span><span class="token operator">-</span><span class="token function">i6sE</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span>View</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">.</span>$r8$lambda$<span class="token class-name">PDKm2AfziZQo6Lv1HEFkJWkUsoE</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>zj<span class="token punctuation">.</span>wuaipojie<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span>ChallengeSixth</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span>View</span><span class="token punctuation">)</span>

<span class="token class-name">Found</span> <span class="token number">12</span> <span class="token function">method</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="6-objectionHook"><a href="#6-objectionHook" class="headerlink" title="6.objectionHook"></a>6.objectionHook</h3><ol>
<li><p>hook类的所有方法</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">android hooking watch <span class="token keyword">class</span> 类名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>hook方法的参数、返回值和调用栈</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">android hooking watch class_method 类名<span class="token punctuation">.</span>方法名 <span class="token operator">--</span>dump<span class="token operator">-</span>args <span class="token operator">--</span>dump<span class="token operator">-</span><span class="token keyword">return</span> <span class="token operator">--</span>dump<span class="token operator">-</span>backtrace<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>hook 类的构造方法</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">android hooking watch class_method 类名<span class="token punctuation">.</span>$init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>hook 方法的所有重载</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">android hooking watch class_method 类名<span class="token punctuation">.</span>方法名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h1 id="2-trace实战java控制流混淆"><a href="#2-trace实战java控制流混淆" class="headerlink" title="2.trace实战java控制流混淆"></a>2.trace实战java控制流混淆</h1><p>样本展示:<br><img src="/./../../img/img/640-1695867474200-92.png" alt="图片"><br><img src="/./../../img/img/640-1695867474200-93.png" alt="图片"><br>项目地址:<br>BlackObfuscator</p>
<h3 id="对抗方法"><a href="#对抗方法" class="headerlink" title="对抗方法"></a>对抗方法</h3><ol>
<li><p>ZenTracer<br>项目地址<br>缺点:无法打印调用栈，无法<code>hook</code>构造函数<br><img src="/./../../img/img/640-1695867474200-94.png" alt="图片"></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">因为以长久不更新，故新版frida不兼容，下面是我跑起来的版本
python<span class="token operator">==</span><span class="token number">3.8</span><span class="token number">.8</span>
firda<span class="token operator">==</span><span class="token number">14.2</span><span class="token number">.18</span>
frida<span class="token operator">-</span>tools<span class="token operator">==</span><span class="token number">9.2</span><span class="token number">.4</span>
还需要安装pyqt5的库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;使用说明
1.运行server端
2.点击action
3.点击Match Regex设置过滤标签
4.输入包名(或者方法名等可以过滤的标签)，点击add
5.点击action的start
6.点击应用触发相应的逻辑
7.可左上角fils-Export JSON来导出日志分析<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol>
<li>r0tracer<br>项目地址<br>兼容最新版本<br><img src="/./../../img/img/640-1695867474200-95.png" alt="图片"></li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">
&#x2F;&#x2F;A. 简易trace单个lei
&#x2F;&#x2F;traceClass(&quot;com.zj.wuaipojie2023_1.MainActivity&quot;)
&#x2F;&#x2F;B. 黑白名单trace多个函数，第一个参数是白名单(包含关键字)，第二个参数是黑名单(不包含的关键字)
hook(&quot;com.zj.wuaipojie2023_1&quot;, &quot;$&quot;);
&#x2F;&#x2F;hook(&quot;ViewController&quot;,&quot;UI&quot;)
&#x2F;&#x2F;C. 报某个类找不到时，将某个类名填写到第三个参数，比如找不到com.roysue.check类。（前两个参数依旧是黑白名单）
&#x2F;&#x2F; hook(&quot;com.roysue.check&quot;,&quot; &quot;,&quot;com.roysue.check&quot;);    
&#x2F;&#x2F;D. 新增hookALL() 打开这个模式的情况下，会hook属于app自己的所有业务类，小型app可用 ，中大型app几乎会崩溃，经不起
&#x2F;&#x2F; hookALL()

    &#x2F;&#x2F;日志输出
    frida -U -f 【2023春节】解题领红包之四 -l r0tracer.js -o Log.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><p>待更新</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1X24y1m7cj">https://www.bilibili.com/video/BV1X24y1m7cj</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">《安卓逆向这档事》三、初识smail，vip终结者</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138554&idx=1&sn=be2fe7ffb0520ef17405a754ff0725c8&chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&scene=21#wechat_redirect">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138674&idx=1&sn=17a3271b1771bdacf3392fb64dcc5dc3&chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&scene=21#wechat_redirect">《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138693&idx=1&sn=a09896ce9c1aa5e7194600ff7ca011e9&chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&scene=21#wechat_redirect">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138779&idx=1&sn=7201ed7aca4cdd6954787022c7f26b81&chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&scene=21#wechat_redirect">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138987&idx=1&sn=c36c67b952a02f676fcdd5fb5c42abbc&chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&scene=21#wechat_redirect">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139179&idx=1&sn=26e374dfb5776d41a7d3501770915a77&chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&scene=21#wechat_redirect">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139564&idx=1&sn=ed1a626174cd39572544fa54e320e135&chksm=bd50bdb88a2734ae34b4d4bad5de061a368863cab0ac1e51c5969c926a6ebab29fbe5f729cbf&scene=21#wechat_redirect">《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139620&idx=1&sn=d65e23f4c8a5bc6cf94637af05025cea&chksm=bd50be708a273766f5f00b91d3df8921283fecb3b2b54432bdee2b2b3330b5ea76c68f857bc9&scene=21#wechat_redirect">《安卓逆向这档事》十二、大佬帮我分析一下</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139664&idx=1&sn=8f76acd55355f1000afc0c85e35212b0&chksm=bd50be048a2737124982c5985c5a5b2393fafcf77a30f43adb9072719092167c35f738afccce&scene=21#wechat_redirect">《安卓逆向这档事》番外实战篇1-某电影视全家桶</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139714&idx=1&sn=28cc2ca160f7168a5ac43f658c5b57cd&chksm=bd50bed68a2737c0ed9ff5513b2cf6aa5bcc6176f28b14f47bf8d32485b1d557bbc5f14f65bc&scene=21#wechat_redirect">《安卓逆向这档事》十三、是时候学习一下Frida一把梭了(上)</a></p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1838539-1-1.htm">https://www.52pojie.cn/thread-1838539-1-1.htm</a></p>
<h1 id="八、参考文档"><a href="#八、参考文档" class="headerlink" title="八、参考文档"></a>八、参考文档</h1><p>实用FRIDA进阶：内存漫游、hook anywhere、抓包</p>
<p><a href="https://www.anquanke.com/post/id/197657">https://www.anquanke.com/post/id/197657</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吾爱破解安卓逆向入门教程《安卓逆向这档事》番外实战篇1-某电影视全家桶]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B%E7%95%AA%E5%A4%96%E5%AE%9E%E6%88%98%E7%AF%871-%E6%9F%90%E7%94%B5%E5%BD%B1%E8%A7%86%E5%85%A8%E5%AE%B6%E6%A1%B6/</url>
      <content type="html"><![CDATA[<p>前情提要：<a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139620&idx=1&sn=d65e23f4c8a5bc6cf94637af05025cea&chksm=bd50be708a273766f5f00b91d3df8921283fecb3b2b54432bdee2b2b3330b5ea76c68f857bc9&scene=21#wechat_redirect">吾爱破解安卓逆向入门教程《安卓逆向这档事》十二、大佬帮我分析一下</a></p>
<p><img src="/./../../img/img/640-1695866802644-78.png" alt="图片"></p>
<h1 id="一、课程目标"><a href="#一、课程目标" class="headerlink" title="一、课程目标"></a>一、课程目标</h1><hr>
<p>借助已学知识完成样本软件的去除签名校验、去广告与更新、布局优化</p>
<h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><hr>
<p>1.样本软件<br>2.jadx-gui<br>3.MT管理器&#x2F;NP管理器<br>4.算法助手<br>5.开发助手</p>
<h1 id="三、课程内容"><a href="#三、课程内容" class="headerlink" title="三、课程内容"></a>三、课程内容</h1><hr>
<p>全家桶：顾名思义，这些影视app都是一套源码开发的，多个渠道分发只是换了个包名和皮肤<br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139631&idx=1&sn=11dd67e3c38fe2e9692c9fd3a41259fc&chksm=bd50be7b8a27376d0816f2cd4757c7d0d7e8a68d38a1ce0a7213d6877a77ad271c728e629b3e&scene=21#wechat_redirect">《安卓逆向这档事》疑难解答-建议征集贴</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">【吾爱破解安卓逆向入门教程《安卓逆向这档事》三、初识smali，vip终结者】</a><br>【【Android逆向】16分钟动画讲解java以及对应的smali代码】<a href="https://www.bilibili.com/video/BV1Cp4y157bY">https://www.bilibili.com/video/BV1Cp4y157bY</a><br>PS:讲得特别好，建议对于smali还不熟悉的朋友可以多看几遍！！！</p>
<h2 id="1-去除广告"><a href="#1-去除广告" class="headerlink" title="1.去除广告"></a>1.去除广告</h2><p>关键字:initsdk、loadad、initad等</p>
<table>
<thead>
<tr>
<th align="left">广告关键词</th>
<th align="left">厂商</th>
<th align="left">文档</th>
</tr>
</thead>
<tbody><tr>
<td align="left">com.qq.e.ads</td>
<td align="left">腾讯优量汇广告</td>
<td align="left"><a href="https://developers.adnet.qq.com/doc/android/union/union_splash">https://developers.adnet.qq.com/doc/android/union/union_splash</a></td>
</tr>
<tr>
<td align="left">CSJAD、TTAdSdk、bytedance、pangolin</td>
<td align="left">穿山甲广告</td>
<td align="left"><a href="https://www.csjplatform.com/supportcenter/5395">https://www.csjplatform.com/supportcenter/5395</a></td>
</tr>
<tr>
<td align="left">ADMob、google.ads</td>
<td align="left">谷歌广告</td>
<td align="left"><a href="https://developers.google.com/admob/android/app-open?hl=zh-cn#extend">https://developers.google.com/admob/android/app-open?hl=zh-cn#extend</a></td>
</tr>
<tr>
<td align="left">TorchAd</td>
<td align="left">360广告</td>
<td align="left"><a href="https://easydoc.soft.360.cn/doc?project=186589faed863b0a24f15f9bcbafd5c7&doc=2cbbbe19c5cb90f5e7a41c7037b0029a&config=title_menu_toc">https://easydoc.soft.360.cn/doc?project=186589faed863b0a24f15f9bcbafd5c7&amp;doc=2cbbbe19c5cb90f5e7a41c7037b0029a&amp;config=title_menu_toc</a></td>
</tr>
<tr>
<td align="left">kwad</td>
<td align="left">快手广告</td>
<td align="left"><a href="https://u.kuaishou.com/home/help/detail/1334/1370/1310">https://u.kuaishou.com/home/help/detail/1334/1370/1310</a></td>
</tr>
<tr>
<td align="left">baidu.mobads</td>
<td align="left">百度广告</td>
<td align="left"><a href="http://bce.ssp.baidu.com/mssp/sdk/BaiduMobAds_MSSP_bd_SDK_android_v5.1.pdf">http://bce.ssp.baidu.com/mssp/sdk/BaiduMobAds_MSSP_bd_SDK_android_v5.1.pdf</a></td>
</tr>
<tr>
<td align="left">MimoSdk</td>
<td align="left">米盟广告</td>
<td align="left"><a href="https://t5.a.market.xiaomi.com/download/AdCenter/0d3a369516ee146e8a9d5c290985939da4624fe0a/AdCenter0d3a369516ee146e8a9d5c290985939da4624fe0a.html">https://t5.a.market.xiaomi.com/download/AdCenter/0d3a369516ee146e8a9d5c290985939da4624fe0a/AdCenter0d3a369516ee146e8a9d5c290985939da4624fe0a.html</a></td>
</tr>
<tr>
<td align="left">sigmob.sdk</td>
<td align="left">sigmob广告</td>
<td align="left"><a href="https://doc.sigmob.com/#/Sigmob%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/SDK%E9%9B%86%E6%88%90%E8%AF%B4%E6%98%8E/Android/SDK%E6%8E%A5%E5%85%A5%E9%85%8D%E7%BD%AE/">https://doc.sigmob.com/#/Sigmob%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/SDK%E9%9B%86%E6%88%90%E8%AF%B4%E6%98%8E/Android/SDK%E6%8E%A5%E5%85%A5%E9%85%8D%E7%BD%AE/</a></td>
</tr>
<tr>
<td align="left">TradPlus</td>
<td align="left">TradPlus聚合广告</td>
<td align="left"><a href="https://service.cocos.com/document/zh/tradplusad.html">https://service.cocos.com/document/zh/tradplusad.html</a></td>
</tr>
</tbody></table>
<p>通过免广告关键字来实现部分广告的去除</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">O</span><span class="token punctuation">(</span><span class="token class-name">SaiUserInfo</span> saiUserInfo<span class="token punctuation">,</span> <span class="token keyword">boolean</span> z<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        g0<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token class-name">BaseApp</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> saiUserInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取用户信息</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
            v<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">q</span><span class="token punctuation">(</span><span class="token class-name">SaiSPKey</span><span class="token punctuation">.</span>appToken<span class="token punctuation">,</span> saiUserInfo<span class="token punctuation">.</span><span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取Token</span>
        <span class="token punctuation">&#125;</span>  
        <span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>saiUserInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">this</span><span class="token punctuation">.</span>h<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>saiUserInfo<span class="token punctuation">.</span><span class="token function">getPic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置用户头像</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>saiUserInfo<span class="token punctuation">.</span><span class="token function">getLogin_type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//判断登录状态，并设置用户信息</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>g<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"点击登录"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">this</span><span class="token punctuation">.</span>f<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  
            <span class="token keyword">this</span><span class="token punctuation">.</span>g<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>saiUserInfo<span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">this</span><span class="token punctuation">.</span>f<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span>  
        <span class="token class-name">ObservableField</span> observableField <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>i<span class="token punctuation">;</span>  
        observableField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"ID:"</span> <span class="token operator">+</span> saiUserInfo<span class="token punctuation">.</span><span class="token function">getUser_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取用户ID</span>
        <span class="token class-name">ObservableField</span> observableField2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>j<span class="token punctuation">;</span>  
        observableField2<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">SaiAppUtils</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>saiUserInfo<span class="token punctuation">.</span><span class="token function">getInvited_count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"人"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取用户邀请人数</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>saiUserInfo<span class="token punctuation">.</span><span class="token function">getInvited_count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
            <span class="token class-name">ObservableField</span> observableField3 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>k<span class="token punctuation">;</span>  
            observableField3<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">SaiAppUtils</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token class-name">N</span><span class="token punctuation">(</span>saiUserInfo<span class="token punctuation">.</span><span class="token function">getInvited_count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"天 "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  
            <span class="token keyword">this</span><span class="token punctuation">.</span>k<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">SaiAppUtils</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"0天"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span>saiUserInfo<span class="token punctuation">.</span><span class="token function">getFree_time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">></span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//获取免广告时间</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">this</span><span class="token punctuation">.</span>m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>saiUserInfo<span class="token punctuation">.</span><span class="token function">getFree_time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">this</span><span class="token punctuation">.</span>l<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"剩余免广告："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token class-name">BaseApp</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFreeTime</span><span class="token punctuation">(</span>saiUserInfo<span class="token punctuation">.</span><span class="token function">getFree_time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">return</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span>  
        <span class="token keyword">this</span><span class="token punctuation">.</span>l<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"邀请好友获得终身免广告特权"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">BaseApp</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFreeTime</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-java" data-language="java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>v<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token class-name">SaiSPKey</span><span class="token punctuation">.</span><span class="token constant">AGREE_PRIVATE</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SaiSplashViewModel</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>viewModel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>s<span class="token punctuation">.</span>c<span class="token punctuation">.</span>b<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token class-name">SaiPrivateEvent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span><span class="token class-name">AndroidSchedulers</span><span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// from class: b.l.i.v.d</span>
                home<span class="token punctuation">.</span>php<span class="token operator">?</span>mod<span class="token operator">=</span>space<span class="token operator">&amp;</span>uid<span class="token operator">=</span><span class="token number">1892347</span> <span class="token comment">// io.reactivex.functions.Consumer</span>
                <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token class-name">SaiSplashActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SaiPrivateEvent</span><span class="token punctuation">)</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            a0<span class="token punctuation">.</span>a<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
            s<span class="token punctuation">.</span>a<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//广告SDK初始化</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            e0<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token string">"===========>>> "</span> <span class="token operator">+</span> e2<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">int</span> g2 <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token class-name">SaiSPKey</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">.</span><span class="token function">getLaunchCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>g2 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>v<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token string">"extend_java_aa"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                v<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token string">"extend_java_aa"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                g2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
            v<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token string">"extend_java_aa"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>g2 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token function">showLoaddingDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SaiSplashViewModel</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>viewModel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>s<span class="token punctuation">.</span>c<span class="token punctuation">.</span>b<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token class-name">SaiAppInitEvent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span><span class="token class-name">AndroidSchedulers</span><span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// from class: b.l.i.v.a</span>
                <span class="token annotation punctuation">@Override</span> <span class="token comment">// io.reactivex.functions.Consumer</span>
                <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token class-name">SaiSplashActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SaiAppInitEvent</span><span class="token punctuation">)</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        g<span class="token punctuation">.</span>a<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span>g2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i2 <span class="token operator">=</span> g2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        v<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">m</span><span class="token punctuation">(</span><span class="token class-name">SaiSPKey</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">.</span><span class="token function">getLaunchCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        c0 c0Var <span class="token operator">=</span> c0<span class="token punctuation">.</span>a<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c0Var<span class="token punctuation">.</span>f3990g <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            c0Var<span class="token punctuation">.</span>f3990g <span class="token operator">=</span> i2<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>g2 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">NetworkUtils</span><span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SaiSplashViewModel</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>viewModel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>c0Var<span class="token punctuation">.</span><span class="token function">l</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token function">showLoaddingDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">SaiSplashAdActivity</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
                    <span class="token function">n</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token constant">DELAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
                <span class="token function">n</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token constant">NONET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SaiSplashViewModel</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>viewModel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> c0Var<span class="token punctuation">.</span>f3986c<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>c0Var<span class="token punctuation">.</span><span class="token function">j</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>app_cudgel<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        e0<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token string">"===========>>> app kill app_cudgel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>赋值参考第六课52:08</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span>method <span class="token keyword">public</span> <span class="token function">getFree_time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">J</span>
    <span class="token punctuation">.</span>registers <span class="token number">3</span>

    <span class="token punctuation">.</span>line <span class="token number">1</span>
    iget<span class="token operator">-</span>wide v0<span class="token punctuation">,</span> p0<span class="token punctuation">,</span> <span class="token class-name">Lcom</span><span class="token operator">/</span>pencil<span class="token operator">/</span>saibeans<span class="token operator">/</span><span class="token class-name">SaiUserInfo</span><span class="token punctuation">;</span><span class="token operator">-></span>free_time<span class="token operator">:</span><span class="token class-name">J</span>

    <span class="token keyword">const</span><span class="token operator">-</span>wide v0<span class="token punctuation">,</span> <span class="token number">0</span>x32d57bf5e8L

    <span class="token keyword">return</span><span class="token operator">-</span>wide v0
<span class="token punctuation">.</span>end method<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="2-去除签名校验"><a href="#2-去除签名校验" class="headerlink" title="2.去除签名校验"></a>2.去除签名校验</h2><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138693&idx=1&sn=a09896ce9c1aa5e7194600ff7ca011e9&chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&scene=21#wechat_redirect">吾爱破解安卓逆向入门教程《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代理、IO重定向</a><br>1.核心破解，免签名安装<br>2.一键去签名工具<br>[实战破解]白描-动态代理Hook签名校验</p>
<p><a href="https://www.52pojie.cn/thread-1526854-1-1.html">https://www.52pojie.cn/thread-1526854-1-1.html</a></p>
<p>3.手动分析签名校验</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span>method <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">List</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span>registers <span class="token number">2</span>
    <span class="token punctuation">.</span>annotation build <span class="token class-name">Landroidx</span><span class="token operator">/</span>annotation<span class="token operator">/</span><span class="token class-name">NonNull</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span>end annotation

    <span class="token punctuation">.</span>annotation system <span class="token class-name">Ldalvik</span><span class="token operator">/</span>annotation<span class="token operator">/</span><span class="token class-name">Signature</span><span class="token punctuation">;</span>
        value <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
            <span class="token string">"()"</span><span class="token punctuation">,</span>
            <span class="token string">"Ljava/util/List&lt;"</span><span class="token punctuation">,</span>
            <span class="token string">"Ljava/lang/String;"</span><span class="token punctuation">,</span>
            <span class="token string">">;"</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">.</span>end annotation

    <span class="token punctuation">.</span>line <span class="token number">1</span>
    <span class="token keyword">new</span><span class="token operator">-</span>instance v0<span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span>

    invoke<span class="token operator">-</span>direct <span class="token punctuation">&#123;</span>v0<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>

    <span class="token keyword">const</span><span class="token operator">-</span>string v1<span class="token punctuation">,</span> <span class="token string">"F9:6C:E9:5F:D5:47:BE:DF:81:15:E3:71:8A:10:54:45"</span> 
    #创建了一个新的 <span class="token class-name">ArrayList</span> 实例，然后向列表中添加了一个字符串常量 <span class="token string">"F9:6C:E9:5F:D5:47:BE:DF:81:15:E3:71:8A:10:54:45"</span>

    invoke<span class="token operator">-</span>virtual <span class="token punctuation">&#123;</span>v0<span class="token punctuation">,</span> v1<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token operator">-></span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Z</span>

    <span class="token keyword">return</span><span class="token operator">-</span>object v0
<span class="token punctuation">.</span>end method<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/./../../img/img/640-1695866802644-79.png" alt="图片"></p>
<h2 id="3-去除更新弹窗"><a href="#3-去除更新弹窗" class="headerlink" title="3. 去除更新弹窗"></a>3. 去除更新弹窗</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> z<span class="token punctuation">,</span> <span class="token class-name">SaiUpgradeInfo</span> saiUpgradeInfo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> saiUpgradeInfo <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>  
                <span class="token comment">//获取版本号进行对比</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>saiUpgradeInfo<span class="token punctuation">.</span><span class="token function">getVersion_code</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> b<span class="token punctuation">.</span>c<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span>d<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
                    <span class="token keyword">boolean</span> b2 <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token class-name">SaiSPKey</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">.</span><span class="token function">getUpgrade_dialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>z <span class="token operator">||</span> <span class="token operator">!</span>b2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>saiUpgradeInfo<span class="token punctuation">.</span><span class="token function">getIs_same</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
                            v c <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>c<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token string">"appUpgrade_"</span> <span class="token operator">+</span> saiUpgradeInfo<span class="token punctuation">.</span><span class="token function">getVersion_code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
                                <span class="token keyword">new</span> <span class="token function">d</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>c<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span>a<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> saiUpgradeInfo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                                v c2 <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                                c2<span class="token punctuation">.</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token string">"appUpgrade_"</span> <span class="token operator">+</span> saiUpgradeInfo<span class="token punctuation">.</span><span class="token function">getVersion_code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  
                            <span class="token punctuation">&#125;</span>  
                        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>saiUpgradeInfo<span class="token punctuation">.</span><span class="token function">getVersion_code</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> b<span class="token punctuation">.</span>c<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span>d<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
                            <span class="token keyword">new</span> <span class="token function">d</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>c<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span>a<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> saiUpgradeInfo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  
                        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
                            <span class="token class-name">ToastUtils</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token string">"已经是最新版本"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                        <span class="token punctuation">&#125;</span>  
                        e0<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token string">"========>>> 包升级更新：$&#123;it.url&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                    <span class="token punctuation">&#125;</span>  
                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
                    <span class="token class-name">ToastUtils</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token string">"已经是最新版本"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token punctuation">&#125;</span>  
            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> unused<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
            <span class="token punctuation">&#125;</span>  
        <span class="token punctuation">&#125;</span>  
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="4-布局优化"><a href="#4-布局优化" class="headerlink" title="4.布局优化"></a>4.布局优化</h2><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138554&idx=1&sn=be2fe7ffb0520ef17405a754ff0725c8&chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&scene=21#wechat_redirect">【吾爱破解安卓逆向入门教程《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡】</a></p>
<p>1.修改xml中的属性值</p>
<table>
<thead>
<tr>
<th align="left">元素名称</th>
<th align="left">属性名称</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">LinearLayout</td>
<td align="left">android:gravity</td>
<td align="left">设置布局内部元素的位置，这里设置为中心和左对齐</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:orientation</td>
<td align="left">设置 <code>LinearLayout</code> 的方向，这里设置为水平</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:tag</td>
<td align="left">为视图设置标签，这里设置为 “binding_13”</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:background</td>
<td align="left">设置背景图片，这里引用了名为 “sai_sp_stroke_divider” 的资源</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:paddingLeft</td>
<td align="left">设置左填充距离，这里引用了名为 “dp_15” 的资源</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:paddingTop</td>
<td align="left">设置顶部填充距离，这里设置为 10dp</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:paddingBottom</td>
<td align="left">设置底部填充距离，这里设置为 10dp</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:visibility</td>
<td align="left">设置视图可见性，这里设置为 “gone”</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:layout_width</td>
<td align="left">设置布局宽度，这里设置为 0dp</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:layout_height</td>
<td align="left">设置布局高度，这里设置为包裹内容</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:layout_marginRight</td>
<td align="left">设置右边距，这里引用了名为 “dp_8” 的资源</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:layout_weight</td>
<td align="left">设置布局权重，这里设置为 1.0</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">android:paddingVertical</td>
<td align="left">设置垂直方向的填充距离，这里设置为 10dp</td>
</tr>
<tr>
<td align="left">ImageView</td>
<td align="left">android:layout_width</td>
<td align="left">设置图片视图宽度，这里引用了名为 “dp_32” 的资源</td>
</tr>
<tr>
<td align="left">ImageView</td>
<td align="left">android:layout_height</td>
<td align="left">设置图片视图高度，这里引用了名为 “dp_32” 的资源</td>
</tr>
<tr>
<td align="left">ImageView</td>
<td align="left">android:src</td>
<td align="left">设置图片资源，这里引用了名为 “icon_mine_invitecode” 的资源</td>
</tr>
<tr>
<td align="left">TextView</td>
<td align="left">android:textSize</td>
<td align="left">设置文本字体大小，这里引用了名为 “sp_14” 的资源</td>
</tr>
<tr>
<td align="left">TextView</td>
<td align="left">android:textColor</td>
<td align="left">设置文本颜色，这里引用了名为 “common_h0” 的资源</td>
</tr>
<tr>
<td align="left">TextView</td>
<td align="left">android:layout_width</td>
<td align="left">设置文本视图宽度，这里设置为包裹内容</td>
</tr>
<tr>
<td align="left">TextView</td>
<td align="left">android:layout_height</td>
<td align="left">设置文本视图高度，这里设置为包裹内容</td>
</tr>
<tr>
<td align="left">TextView</td>
<td align="left">android:layout_marginLeft</td>
<td align="left">设置左边距，这里引用了名为 “dp_10” 的资源</td>
</tr>
<tr>
<td align="left">TextView</td>
<td align="left">android:text</td>
<td align="left">设置文本内容，这里设置为 “填写邀请码”</td>
</tr>
</tbody></table>
<pre class="line-numbers language-none"><code class="language-none"> 复制代码 隐藏代码
android:visibility&#x3D;&quot;gone&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>2.上帝模式优化布局</p>
<p>[白嫖大法]某影视邀请协议分析</p>
<p><a href="https://www.52pojie.cn/thread-1452996-1-1.html">https://www.52pojie.cn/thread-1452996-1-1.html</a></p>
<h1 id="四、课后小作业"><a href="#四、课后小作业" class="headerlink" title="四、课后小作业"></a>四、课后小作业</h1><hr>
<p>完成剩余布局的优化并截图回复<br>最终效果图:<br><img src="/./../../img/img/640-1695866802645-80.png" alt="图片"></p>
<h1 id="五、答疑"><a href="#五、答疑" class="headerlink" title="五、答疑"></a>五、答疑</h1><hr>
<p>待更新</p>
<h1 id="六、视频及课件地址"><a href="#六、视频及课件地址" class="headerlink" title="六、视频及课件地址"></a>六、视频及课件地址</h1><hr>
<p>百度云：</p>
<p><a href="https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9">https://pan.baidu.com/s/1cFWTLn14jeWfpXxlx3syYw?pwd=nqu9</a></p>
<p>阿里云PS：</p>
<p><a href="https://www.aliyundrive.com/s/TJoKMK6du6x">https://www.aliyundrive.com/s/TJoKMK6du6x</a></p>
<p>哔哩哔哩：</p>
<p><a href="https://www.bilibili.com/video/BV1X24y1m7cj">https://www.bilibili.com/video/BV1X24y1m7cj</a></p>
<p>PS:解压密码都是52pj，阿里云由于不能分享压缩包，所以下载exe文件，双击自解压</p>
<h1 id="七、其他章节"><a href="#七、其他章节" class="headerlink" title="七、其他章节"></a>七、其他章节</h1><hr>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138475&idx=1&sn=e3c5242b7c51f022fcc0efb7f626ab61&chksm=bd50b9ff8a2730e9484df2faa08ed63c1980d5f230b69200450917b0daae1904505c878daca8&scene=21#wechat_redirect">《安卓逆向这档事》一、模拟器环境搭建</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138483&idx=1&sn=efa7eabbf0b0cc637a0ccdf8dd62abe5&chksm=bd50b9e78a2730f1f994976f36a60dd8390c4920396b8aec2052b4a666d91d18555096fc8172&scene=21#wechat_redirect">《安卓逆向这档事》二、初识APK文件结构、双开、汉化、基础修改</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138541&idx=1&sn=c7482f59c3d830b2646e276761928941&chksm=bd50b9b98a2730af72e1f9e346663c12973821967c1ac002f5fcdabd0182af5f6106b36d6a01&scene=21#wechat_redirect">《安卓逆向这档事》三、初识smail，vip终结者</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138554&idx=1&sn=be2fe7ffb0520ef17405a754ff0725c8&chksm=bd50b9ae8a2730b84d054c7bd903f8a066251266e16cb1438999759797383e6f20aa656fbbff&scene=21#wechat_redirect">《安卓逆向这档事》四、恭喜你获得广告&amp;弹窗静默卡</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138674&idx=1&sn=17a3271b1771bdacf3392fb64dcc5dc3&chksm=bd50ba268a273330bea4fd1804afff15b9308ed53c88d9aa26a363da0bdeff63642fcce3a42b&scene=21#wechat_redirect">《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138693&idx=1&sn=a09896ce9c1aa5e7194600ff7ca011e9&chksm=bd50bad18a2733c7c536438f5181eb3d73a57c0349e010fda23d7973cb0ebf272f15b82be56a&scene=21#wechat_redirect">《安卓逆向这档事》六、校验的N次方-签名校验对抗、PM代{过}{滤}理、IO重定向</a><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138779&idx=1&sn=7201ed7aca4cdd6954787022c7f26b81&chksm=bd50ba8f8a2733998f65348060f3f6202bea1bba2f61d27e259ecf5521425ccdfcbb93510d06&scene=21#wechat_redirect">《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编写,常用Api</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651138987&idx=1&sn=c36c67b952a02f676fcdd5fb5c42abbc&chksm=bd50bbff8a2732e9c5b256ec89ab50fe1df5158dfbcd4592f4440f564dec4d31e20387e0175b&scene=21#wechat_redirect">《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-xposed快速上手(下)快速hook</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139179&idx=1&sn=26e374dfb5776d41a7d3501770915a77&chksm=bd50bc3f8a2735293c12856cfabf63aa694a2c66b8846a83eb9e301ac60d31484ed1600b8e1c&scene=21#wechat_redirect">《安卓逆向这档事》九、密码学基础、算法自吐、非标准加密对抗</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139564&idx=1&sn=ed1a626174cd39572544fa54e320e135&chksm=bd50bdb88a2734ae34b4d4bad5de061a368863cab0ac1e51c5969c926a6ebab29fbe5f729cbf&scene=21#wechat_redirect">《安卓逆向这档事》十、不是我说，有了IDA还要什么女朋友？</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&mid=2651139620&idx=1&sn=d65e23f4c8a5bc6cf94637af05025cea&chksm=bd50be708a273766f5f00b91d3df8921283fecb3b2b54432bdee2b2b3330b5ea76c68f857bc9&scene=21#wechat_redirect">《安卓逆向这档事》十二、大佬帮我分析一下</a></p>
<p>详细文字介绍、视频原件下载、视频所用到的程序下载、课后作业和学习交流参看论坛原文：</p>
<p><a href="https://www.52pojie.cn/thread-1814917-1-1.html">https://www.52pojie.cn/thread-1814917-1-1.html</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
            <tag> 吾爱破解教程10节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android逆向-某麦网APK抢票接口加密参数分析]]></title>
      <url>/2023/09/27/app%E9%80%86%E5%90%91/Android%E9%80%86%E5%90%91-%E6%9F%90%E9%BA%A6%E7%BD%91APK%E6%8A%A2%E7%A5%A8%E6%8E%A5%E5%8F%A3%E5%8A%A0%E5%AF%86%E5%8F%82%E6%95%B0%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>针对某麦网部分演唱会门票仅能在app渠道抢票的问题，本文研究了APK的抢票接口并编写了抢票工具。本文介绍的顺序为环境搭建、抓包、trace分析、接口参数获取、rpc调用实现，以及最终的功能实现。通过阅读本文，你将学到反抓包技术破解、Frida hook、jadx apk逆向技术，并能对淘系APP的运行逻辑有所了解。本文仅用于学习交流，严禁用于非法用途。</p>
<p>关键词：frida, damai.cn, Android逆向<br>先放成功截图：<img src="/./../../img/img/640-1695709905537-127-1696662606113-4.png" alt="图片"></p>
<h3 id="二、环境搭建"><a href="#二、环境搭建" class="headerlink" title="二、环境搭建"></a>二、环境搭建</h3><p>目前Android模拟器竞品很多，选择Bluestacks <strong>5</strong>是因为它能和windows的hyper-v完美兼容，root过程也相对简单。</p>
<ol>
<li><p>下载安装Bluestacks。</p>
</li>
<li><p>运行Bluestacks Multi-instance Manager，发现默认安装的版本为Android Pie 64bit版本，即Android 9.0。此时退出bluestack所有程序。<br><img src="/./../../img/640-1695709905538-129.png" alt="图片"></p>
</li>
<li><p>关闭bluestack后编辑bluestacks配置文件， <code>%programdata%\BlueStacks_nxt\bluestacks.conf</code><br>&gt; 由于作者安装时C盘空间不足，真实的<code>bluestacks.conf</code>在<code>D:\BlueStacks_nxt\bluestacks.conf</code>，大家也根据实际情况调整<br><img src="/./../../img/640-1695709905538-130.png" alt="图片"></p>
</li>
<li><p>在配置文件中查找root关键词，对应值修改为1，共两处。</p>
<pre class="line-numbers language-none"><code class="language-none">bst.feature.rooting&#x3D;&quot;1&quot;
bst.instance.Pie64.enable_root_access&#x3D;&quot;1&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>启动bluestack模拟器，安装 <code>Root Checker</code> APP，点击验证root，即可发现root已开启<img src="/./../../img/640-1695709905538-131.png" alt="图片"></p>
</li>
</ol>
<h3 id="三、adb调试"><a href="#三、adb调试" class="headerlink" title="三、adb调试"></a>三、adb调试</h3><ol>
<li>bluestack设置-高级中打开Adb调试，并记录下端口</li>
</ol>
<p><img src="/./../../img/640-1695709905538-133.png" alt="图片"></p>
<ol>
<li>打开主机命令行，运行 <code>adb connect localhost:6652</code>，端口号修改为上一步的端口号，即可连接。再运行<code>adb devices</code>，如有对应设备则连接成功。</li>
<li>进入adb shell，执行su进入root权限，命令行标识由<code>$</code>变为<code>#</code>，即表示adb 进入root权限成功</li>
</ol>
<p>frida环境</p>
<p>frida是大名鼎鼎的动态分析的hook神器，用它可以直接访问修改二进制的内存、函数和对象，非常方便。它对于Android的支持也是很完美。</p>
<p>frida的运行采用C&#x2F;S架构，客户端为电脑端的开发环境，服务器端为Android，均需对应部署搭建。</p>
<h3 id="客户端环境搭建-Windows"><a href="#客户端环境搭建-Windows" class="headerlink" title="客户端环境搭建(Windows)"></a>客户端环境搭建(Windows)</h3><p>firda客户端基于python3开发，因此首先需要配置好python3的运行环境，然后执行 <code>pip install frida-tools</code>即可完成安装。运行 <code>frida --version</code>可验证frida版本。</p>
<pre class="line-numbers language-none"><code class="language-none">(py3) PS E:\TEMP\damai&gt; frida --version
16.0.19<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="服务器-环境搭建-Android"><a href="#服务器-环境搭建-Android" class="headerlink" title="服务器 环境搭建(Android)"></a>服务器 环境搭建(Android)</h3><p>环境搭建第二步是在Android模拟器中运行frida-server。这样可以让Frida通过ADB&#x2F;USB调试与我们的Android模拟器连接。</p>
<ol>
<li>下载frida-server<br>最新的frida-server可以从 <a href="https://github.com/frida/frida/releases">https://github.com/frida/frida/releases</a> 下载。请注意下载与设备匹配的架构。如果您的模拟器是x86_64，请下载相应版本的frida-server。本文使用的版本为 frida-server-16.0.18-android-x86_64.xz<br><img src="/./../../img/640-1695709905538-134.png" alt="图片"></li>
<li>传入Android模拟器。</li>
</ol>
<p>将下载后的.xz文件解压，将<code>frida-server</code>传入Android模拟器</p>
<pre class="line-numbers language-none"><code class="language-none">adb push frida-server &#x2F;data&#x2F;local&#x2F;tmp&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ol>
<li>运行 frida-server</li>
</ol>
<p>使用adb root以root模式重新启动ADB，并通过adb shell重新进入shell的访问。进入shell后，进入我们放置frida-server的目录并为其授予执行权限：</p>
<pre class="line-numbers language-none"><code class="language-none">cd &#x2F;data&#x2F;local&#x2F;tmp&#x2F;
chmod +x frida-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>执行：<code>./frida-server </code>，运行frida-server，并保持本shell窗口开启。</p>
<p>成功截图：</p>
<p><img src="/./../../img/640-1695709905538-135.png" alt="图片"></p>
<blockquote>
<p>有些情况下，应用程序会检测在是否在模拟器中运行，但对某麦网app的分析暂无影响。</p>
</blockquote>
<ol>
<li>测试是否连接成功</li>
</ol>
<p>在window端运行frida-ps命令：</p>
<p><img src="/./../../img/640-1695709905539-136.png" alt="图片"></p>
<p>看到一堆熟悉的Android进程，我们就连接成功啦</p>
<ol>
<li>转发frida-server端口 (可选)</li>
</ol>
<p>frida-server跑在Android端，frida需要通过连接frida-server。上一步使用adb的方式连接，frida认为是USB模式，需要<code>-U</code>命令。frida也支持依赖端口的远程连接模式，在某些场景下更加灵活。可以通过端口转发的方式实现此功能。</p>
<pre class="line-numbers language-none"><code class="language-none">adb forward tcp:27042 tcp:27042
adb forward tcp:27043 tcp:27043<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>抓包</p>
<h3 id="1-搞定tcpdump"><a href="#1-搞定tcpdump" class="headerlink" title="1. 搞定tcpdump"></a>1. 搞定tcpdump</h3><p>本文基于termux安装使用tcpdump。</p>
<p>首先安装termux apk。</p>
<p><img src="/./../../img/640-1695709905539-137.png" alt="图片"></p>
<p>打开termux运行：</p>
<ul>
<li>挂载存储</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">termux-setup-storage
## 会弹出授权框，点允许
ls ~&#x2F;storage&#x2F;
## 如果出现dcim, downloads等目录，即表示成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li>安装tcpdump</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">pkg install root-repo
pkg install sudo tcpdump<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ul>
<li>运行抓包</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">sudo tcpdump -i any -s 0 -w ~&#x2F;storage&#x2F;downloads&#x2F;capture.pcap<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>tcpdump 成功截图:<br><img src="/./../../img/640-1695709905539-138.png" alt="图片"></li>
</ul>
<p>之后就可以把downloads目录下的抓包文件拷贝到电脑上，用wireshark打开做进一步分析。</p>
<h3 id="2-解密https流量"><a href="#2-解密https流量" class="headerlink" title="2. 解密https流量"></a>2. 解密https流量</h3><p>Wireshark解密https流量的方法和原理介绍有很多，可参考以下文章，本文不再赘述。</p>
<blockquote>
<ul>
<li><a href="https://unit42.paloaltonetworks.com/wireshark-tutorial-decrypting-https-traffic/">https://unit42.paloaltonetworks.com/wireshark-tutorial-decrypting-https-traffic/</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/36669377">https://zhuanlan.zhihu.com/p/36669377</a></li>
</ul>
</blockquote>
<p>wireshark解密技术的重点在于拿到客户端通信的密钥日志文件(ssl key log)，像下面这种：</p>
<p><img src="/./../../img/640-1695709905539-139.png" alt="图片"></p>
<p>在Android中实现抓取ssl key log需要hook系统的SSL相关函数，可以用frida实现。</p>
<ul>
<li>首先将下面的hook代码保存为<code>sslkeyfilelog.js</code></li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; sslkeyfilelog.js
function startTLSKeyLogger(SSL_CTX_new, SSL_CTX_set_keylog_callback) &#123;
    console.log(&quot;start----&quot;)
    function keyLogger(ssl, line) &#123;
        console.log(new NativePointer(line).readCString());
    &#125;
    const keyLogCallback &#x3D; new NativeCallback(keyLogger, &#39;void&#39;, [&#39;pointer&#39;, &#39;pointer&#39;]);

    Interceptor.attach(SSL_CTX_new, &#123;
        onLeave: function(retval) &#123;
            const ssl &#x3D; new NativePointer(retval);
            const SSL_CTX_set_keylog_callbackFn &#x3D; new NativeFunction(SSL_CTX_set_keylog_callback, &#39;void&#39;, [&#39;pointer&#39;, &#39;pointer&#39;]);
            SSL_CTX_set_keylog_callbackFn(ssl, keyLogCallback);
        &#125;
    &#125;);
&#125;
startTLSKeyLogger(
    Module.findExportByName(&#39;libssl.so&#39;, &#39;SSL_CTX_new&#39;),
    Module.findExportByName(&#39;libssl.so&#39;, &#39;SSL_CTX_set_keylog_callback&#39;)
)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li>然后用frida加载运行hook</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">frida -U -l .\sslkeyfilelog.js  -f cn.damai<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="/./../../img/640-1695709905539-140.png" alt="图片"></p>
<ul>
<li>最后，抓包结束后将得到的key保存到sslkey.txt，格式是下面这样的，不要掺杂别的。</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">CLIENT_RANDOM 557e6dc49faec93dddd41d8c55d3a0084c44031f14d66f68e3b7fb53d3f9586d 886de4677511305bfeaee5ffb072652cbfba626af1465d09dc1f29103fd947c997f6f28962189ee809944887413d8a20
CLIENT_RANDOM e66fb5d6735f0b803426fa88c3692e8b9a1f4dca37956187b22de11f1797e875 65a07797c144ecc86026a44bbc85b5c57873218ce5684dc22d4d4ee9b754eb1961a0789e2086601f5b0441c35d76c448<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>在运行Frida Hook获取sslkey的同时，运行tcpdump抓包。抓包中依次测试获取详情页、选择价位、提交订单等操作，并对应记录下执行操作的时间，方便后续分析。</p>
<p>抓包完成后，用wireshark打开tcpdump抓包获得的pcap文件，在wireshark首选项-protocols-TLS中，设置 (Pre)-Master-Secret log filename为上述sslkey.txt。</p>
<p><img src="/./../../img/640-1695709905539-141.png" alt="图片"></p>
<p>即可实现https流量的解密。</p>
<p>流量分析</p>
<h3 id="某麦网的API流"><a href="#某麦网的API流" class="headerlink" title="某麦网的API流"></a>某麦网的API流</h3><p>在此铺垫一下，通过前期对某麦网PC端和移动端H5的分析，某麦网购票的工作流程大概为：</p>
<ol>
<li>获得详情：接口为<code>mtop.alibaba.damai.detail.getdetail</code>。基于某演出的id(itemId)获得演出的详细信息，包括详情、场次、票档(SkuId)价位及状态信息，</li>
<li>构建订单：接口为<code>mtop.trade.order.build.h5</code>。发送 演出id+数量+票档id(<code>itemId_count_skuId</code>)，得到提交订单所需的表单信息，包括观众、收货地址等。</li>
<li>提交订单：接口为<code>mtop.trade.order.create.h5</code>。对上一步构建订单得到的表单参数作出修改后，发送给服务器，得到最后的订单提交结果和支付信息。</li>
</ol>
<h3 id="apk流量分析"><a href="#apk流量分析" class="headerlink" title="apk流量分析"></a>apk流量分析</h3><p>首先用过滤器<code>http &amp;&amp; tcp.dstport==443</code>，得到向服务器发送的https包，如下图：</p>
<p><img src="/./../../img/640-1695710781461-184.png" alt="图片"></p>
<p>可以看到大量向服务器请求的数据包，但其中有很多干扰的图片请求，因为修改过滤器把图片过滤一下。过滤器：<code>http &amp;&amp; tcp.dstport==443 and !(http.request.uri contains &quot;.webp&quot; or http.request.uri contains &quot;.jpg&quot; or http.request.uri contains &quot;.png&quot;)</code></p>
<p>结果清爽了很多。</p>
<h4 id="订单构建-order-build"><a href="#订单构建-order-build" class="headerlink" title="订单构建(order.build)"></a>订单构建(order.build)</h4><p>根据之前记录的操作的时间，以及对网页版的分析结果，笔者注意到了下图的这条流量：</p>
<p><img src="/./../../img/640-1695710830581-188.png" alt="图片"></p>
<p>然后我们右键选择这条流量包，点击追踪http流，可以看到对应的响应包。</p>
<p><img src="/./../../img/640-1695709905539-142.png" alt="图片"></p>
<p><img src="/./../../img/640-1695710854410-191.png" alt="图片"></p>
<p>响应包里有些中文使用了UTF-8编码，可以点击右下角的<code>Show data as</code>，选择UTF-8，便可以正常显示。此时可以点击另存为，保存为txt文件，方便后续分析。</p>
<p><img src="/./../../img/640-1695710869889-194.png" alt="图片"></p>
<p>订单构建的请求包中核心的数据部分为图中青色圈出来的部分，使用URL解码后为：</p>
<pre class="line-numbers language-none"><code class="language-none">&#123;&quot;buyNow&quot;:&quot;true&quot;,&quot;buyParam&quot;:&quot;716435462268_2_5005943905715&quot;,&quot;exParams&quot;:&quot;&#123;\&quot;atomSplit\&quot;:\&quot;1\&quot;,\&quot;channel\&quot;:\&quot;damai_app\&quot;,\&quot;coVersion\&quot;:\&quot;2.0\&quot;,\&quot;coupon\&quot;:\&quot;true\&quot;,\&quot;seatInfo\&quot;:\&quot;\&quot;,\&quot;umpChannel\&quot;:\&quot;10001\&quot;,\&quot;websiteLanguage\&quot;:\&quot;zh_CN_#Hans\&quot;&#125;&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>buyParam为最核心的部分，拼接方式为演出id+数量+票档id。其他部分只需照抄。</p>
<p>请求包中还包含大量的各种加密参数、ID，而破解实现自动购票脚本的关键就在于如何通过代码的方式拿到这些加密参数。</p>
<p>订单构建的响应包为订单提交表单的各项参数，用于生成“确认订单”的表单。</p>
<p><img src="/./../../img/640-1695710884589-197.png" alt="图片"></p>
<p><img src="/./../../img/640-1695709905539-143.png" alt="图片"></p>
<h4 id="订单提交-order-create"><a href="#订单提交-order-create" class="headerlink" title="订单提交(order.create)"></a>订单提交(order.create)</h4><p>按照同样的方式可以找到订单提交包，订单提交包的API路径为<code>/gw/mtop.trade.order.create</code>，</p>
<p><img src="/./../../img/640-1695710902075-200.png" alt="图片"></p>
<p>其中青色圈出来的部分为data发送的核心数据，对数据用URL解码后为：</p>
<pre class="line-numbers language-none"><code class="language-none">&#123;&quot;feature&quot;:&quot;&#123;\&quot;gzip\&quot;:\&quot;true\&quot;&#125;&quot;,&quot;params&quot;:&quot;H4sIAAAAAAA.................AAWk3NKAAA\n&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>看起来像是把原始数据用gzip压缩后又使用了base64编码，尝试解码：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64
<span class="token keyword">import</span> gzip
<span class="token keyword">import</span> json

<span class="token comment"># 解码后变为python dict</span>
decode_data<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>params_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\\n"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
decompressed_data<span class="token operator">=</span>gzip<span class="token punctuation">.</span>decompress<span class="token punctuation">(</span>decode_data<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>
params<span class="token operator">=</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>decompressed_data<span class="token punctuation">)</span>

<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"reverse\order.create-params.json"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>params<span class="token punctuation">,</span>f<span class="token punctuation">,</span>indent<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>解码成功，存到<code>order.create-params.json</code>,</p>
<p><img src="/./../../img/640-1695710924419-203.png" alt="图片"></p>
<p>解码后发现order.create发送的data参数和order.build请求返回的结果很相似，增加了一些用户对表单操作的记录。</p>
<p><img src="/./../../img/640-1695709905539-144.png" alt="图片"></p>
<p>order.create请求的header中的各种加密参数和order.build一致。</p>
<p>order.create请求的返回结果中包含了订单创建是否成功的结果以及支付链接.</p>
<p>TRACE分析</p>
<p>通过前面对流量的分析，我们已经知道客户端向服务器发送的核心数据和加密参数，核心数据的拼接相对简单，但加密参数怎么获得还比较困难。因此，下面要开始分析加密参数的生成方法。本章节主要采用frida trace动态分析和jadx静态分析相结合的方式，旨在找到加密参数生成的核心函数和输入输出数据的格式。</p>
<p>根据文章 ( app安卓逆向x-sign，x-sgext，x_mini_wua，x_umt加密参数解析 )，其中数据包的加密参数和本文的某麦网很类似，而且提到了 mtopsdk.security.InnerSignImpl 生成的加密函数，本文也参考了这篇文章的思路进行分析。</p>
<h2 id="跟踪-InnerSignImpl"><a href="#跟踪-InnerSignImpl" class="headerlink" title="跟踪 InnerSignImpl"></a>跟踪 InnerSignImpl</h2><p>运行<code>frida-trace -U -j &quot;*InnerSignImpl*!*&quot; 大麦</code>，执行选座提交订单的操作，发现确实有结果输出：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>py3<span class="token punctuation">)</span> PS E:<span class="token punctuation">\</span>TEMP<span class="token punctuation">\</span>damai<span class="token operator">></span> frida-trace <span class="token parameter variable">-U</span> <span class="token parameter variable">-j</span> <span class="token string">"*InnerSignImpl*!*"</span> 大麦
Instrumenting<span class="token punctuation">..</span>.
InnerSignImpl<span class="token variable">$1</span><span class="token builtin class-name">.</span><span class="token variable">$init</span><span class="token builtin class-name">:</span> Loaded handler at <span class="token string">"E:<span class="token entity" title="\\">\\</span>TEMP<span class="token entity" title="\\">\\</span>damai<span class="token entity" title="\\">\\</span>__handlers__<span class="token entity" title="\\">\\</span>mtopsdk.security.InnerSignImpl_1<span class="token entity" title="\\">\\</span>_init.js"</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span>此处省略<span class="token punctuation">..</span>.
InnerSignImpl.init: Loaded handler at <span class="token string">"E:<span class="token entity" title="\\">\\</span>TEMP<span class="token entity" title="\\">\\</span>damai<span class="token entity" title="\\">\\</span>__handlers__<span class="token entity" title="\\">\\</span>mtopsdk.security.InnerSignImpl<span class="token entity" title="\\">\\</span>init.js"</span>
Started tracing <span class="token number">27</span> functions. Press Ctrl+C to stop.
           /* TID 0x144f */
  <span class="token number">6725</span> ms  InnerSignImpl.getUnifiedSign<span class="token punctuation">(</span><span class="token string">"&lt;instance: java.util.HashMap>"</span>, <span class="token string">"&lt;instance: java.util.HashMap>"</span>, <span class="token string">"23781390"</span>, null, <span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token number">6726</span> ms     <span class="token operator">|</span> InnerSignImpl.convertInnerBaseStrMap<span class="token punctuation">(</span><span class="token string">"&lt;instance: java.util.Map, <span class="token variable">$className</span>: java.util.HashMap>"</span>, <span class="token string">"23781390"</span>, <span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token number">6726</span> ms     <span class="token operator">|</span> <span class="token operator">&lt;=</span> <span class="token string">"&lt;instance: java.util.Map, <span class="token variable">$className</span>: java.util.HashMap>"</span>
  <span class="token number">6727</span> ms     <span class="token operator">|</span> InnerSignImpl.getMiddleTierEnv<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token number">6727</span> ms     <span class="token operator">|</span> <span class="token operator">&lt;=</span> <span class="token number">0</span>
  <span class="token number">6737</span> ms  <span class="token operator">&lt;=</span> <span class="token string">"&lt;instance: java.util.HashMap>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>点击发送请求时，调用了InnerSignImpl.getUnifiedSign函数。但是输入参数和数据参数均为HashMap类型，结果中未显示具体内容。从结果输出中猜测frida-trace是通过对需要hook的函数在__handlers__下生成js文件，并调用js文件进行hook操作的，因此笔者修改了“handlers\mtopsdk.security.InnerSignImpl\getUnifiedSign.js”，使其能正确输出HashMap类型。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// __handlers__<span class="token punctuation">\</span>mtopsdk.security.InnerSignImpl<span class="token punctuation">\</span>getUnifiedSign.js

<span class="token punctuation">&#123;</span>onEnter<span class="token punctuation">(</span>log, args, state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
 // 增加了HashMap2Str函数，将HashMap类型转换为字符串
    <span class="token keyword">function</span> HashMap2Str<span class="token punctuation">(</span>params_hm<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      var <span class="token assign-left variable">HashMap</span><span class="token operator">=</span>Java.use<span class="token punctuation">(</span><span class="token string">'java.util.HashMap'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      var <span class="token assign-left variable">args_map</span><span class="token operator">=</span>Java.cast<span class="token punctuation">(</span>params_hm,HashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token builtin class-name">return</span> args_map.toString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
     // 当调用函数时，输出函数参数
    log<span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>InnerSignImpl.getUnifiedSign<span class="token punctuation">(</span>$<span class="token punctuation">&#123;</span>HashMap2Str<span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>,$<span class="token punctuation">&#123;</span>HashMap2Str<span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>,$<span class="token punctuation">&#123;</span>args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>,$<span class="token punctuation">&#123;</span>args<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token variable">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>, onLeave<span class="token punctuation">(</span>log, retval, state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">function</span> HashMap2Str<span class="token punctuation">(</span>params_hm<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        var <span class="token assign-left variable">HashMap</span><span class="token operator">=</span>Java.use<span class="token punctuation">(</span><span class="token string">'java.util.HashMap'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        var <span class="token assign-left variable">args_map</span><span class="token operator">=</span>Java.cast<span class="token punctuation">(</span>params_hm,HashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin class-name">return</span> args_map.toString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>retval <span class="token operator">!=</span><span class="token operator">=</span> undefined<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
     // 当函数运行结束时，输出函数结果
      log<span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span><span class="token operator">&lt;=</span> $<span class="token punctuation">&#123;</span>HashMap2Str<span class="token punctuation">(</span>retval<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token variable">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>再次运行frida-trace，输出的结果已经可以看到具体内容了：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>py3<span class="token punctuation">)</span> PS E:<span class="token punctuation">\</span>TEMP<span class="token punctuation">\</span>damai<span class="token operator">></span> frida-trace <span class="token parameter variable">-U</span> <span class="token parameter variable">-j</span> <span class="token string">"*InnerSignImpl*!*"</span> 大麦
        <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
Started tracing <span class="token number">27</span> functions. Press Ctrl+C to stop.
           /* TID 0x15ab */
  <span class="token number">2653</span> ms  InnerSignImpl.getUnifiedSign<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"itemId"</span><span class="token builtin class-name">:</span><span class="token string">"719193771661"</span>,<span class="token string">"performId"</span><span class="token builtin class-name">:</span><span class="token string">"211232892"</span>,<span class="token string">"skuParamListJson"</span><span class="token builtin class-name">:</span><span class="token string">"[&#123;<span class="token entity" title="\&quot;">\"</span>count<span class="token entity" title="\&quot;">\"</span>:1,<span class="token entity" title="\&quot;">\"</span>price<span class="token entity" title="\&quot;">\"</span>:36000,<span class="token entity" title="\&quot;">\"</span>priceId<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>251592963<span class="token entity" title="\&quot;">\"</span>&#125;]"</span>,<span class="token string">"dmChannel"</span><span class="token builtin class-name">:</span><span class="token string">"*@damai_android_*"</span>,<span class="token string">"channel_from"</span><span class="token builtin class-name">:</span><span class="token string">"damai_market"</span>,<span class="token string">"appType"</span><span class="token builtin class-name">:</span><span class="token string">"1"</span>,<span class="token string">"osType"</span><span class="token builtin class-name">:</span><span class="token string">"2"</span>,<span class="token string">"calculateTag"</span><span class="token builtin class-name">:</span><span class="token string">"0_0_0_0"</span>,<span class="token string">"source"</span><span class="token builtin class-name">:</span><span class="token string">"10101"</span>,<span class="token string">"version"</span><span class="token builtin class-name">:</span><span class="token string">"6000168"</span><span class="token punctuation">&#125;</span>, <span class="token assign-left variable">deviceId</span><span class="token operator">=</span>null, <span class="token assign-left variable">sid</span><span class="token operator">=</span>13abe677c5076a4fa3382afc38a96a04, <span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">2215803849550</span>, x-features<span class="token operator">=</span><span class="token number">27</span>, <span class="token assign-left variable">appKey</span><span class="token operator">=</span><span class="token number">23781390</span>, <span class="token assign-left variable">api</span><span class="token operator">=</span>mtop.damai.item.calcticketprice, <span class="token assign-left variable">utdid</span><span class="token operator">=</span>ZF3KUN8khtQDAIlImefp4RYz, <span class="token assign-left variable">ttid</span><span class="token operator">=</span><span class="token number">10005890</span>@damai_android_8.5.4, <span class="token assign-left variable">t</span><span class="token operator">=</span><span class="token number">1684828096</span>, <span class="token assign-left variable">v</span><span class="token operator">=</span><span class="token number">2.0</span><span class="token punctuation">&#125;</span>,<span class="token punctuation">&#123;</span>pageId<span class="token operator">=</span>, <span class="token assign-left variable">pageName</span><span class="token operator">=</span><span class="token punctuation">&#125;</span>,23781390,null<span class="token punctuation">)</span>
  <span class="token number">2654</span> ms     <span class="token operator">|</span> InnerSignImpl.convertInnerBaseStrMap<span class="token punctuation">(</span><span class="token string">"&lt;instance: java.util.Map, <span class="token variable">$className</span>: java.util.HashMap>"</span>, <span class="token string">"23781390"</span>, <span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token number">2655</span> ms     <span class="token operator">|</span> <span class="token operator">&lt;=</span> <span class="token string">"&lt;instance: java.util.Map, <span class="token variable">$className</span>: java.util.HashMap>"</span>
  <span class="token number">2655</span> ms     <span class="token operator">|</span> InnerSignImpl.getMiddleTierEnv<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token number">2655</span> ms     <span class="token operator">|</span> <span class="token operator">&lt;=</span> <span class="token number">0</span>
  <span class="token number">2662</span> ms  <span class="token operator">&lt;=</span> <span class="token punctuation">&#123;</span>x-sgext<span class="token operator">=</span>JA2qmBOxRVDxFRzca3r9BZibqJqvn7uerZOriayYu4mpnKCeoJiunKGZu5qqyfmaqJqhmvqYr5n8zPyJqImpmbvLrImomqidu5m7m7uYu5u7mLuYu5u7m7ubqYmtiaiJqImoiaiJqImoiaiJu8+7iaCf/cypnruaqJqomruau5j8y7uau4mgiaiJqInf6fDIu5o<span class="token operator">=</span>, x-umt<span class="token operator">=</span>+D0B/05LPEvOgwKIQ1x+SeV5wNE6NzOo, x-mini-wua<span class="token operator">=</span>atASnVJw3vGX1Tw3Y/zDaVZkDUbLxOxtlUmgDOnIjMTBcMPMqQJLpnxoOWEL53Fq/OPcQZiMpDXWNvDz8UQkI5mtkZvIcDN1oxZnuH0M22LHKar4rnO/xm4LtAiniKgYtfgMGK3stXuCmvtE4raIhROimslSk7hCkxaL/DYuLzBLYwXmNyr9UZi1g, x-sign<span class="token operator">=</span>azG34N002xAAK0H9KwNr3txWFMxzW0H7ROfkLQK+Db7ueJHktR/yP/0TcdPFzoYf36zd9lJYMsHCmYX3EcoFnJPMk2pxu0H7QbtB+0<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>可以看到返回结果中包含了 <code>x-sgext</code>,<code>x-umt</code>,<code>x-mini-wua</code>,<code>x-sign</code> 等加密参数。至此，前面的一大堆分析也算有了小的收获。但对比流量分析结果中的发送参数，还是缺失了很多参数。下面我们继续跟踪，找出剩下的参数。</p>
<h2 id="跟踪-mtopsdk"><a href="#跟踪-mtopsdk" class="headerlink" title="跟踪 mtopsdk"></a>跟踪 mtopsdk</h2><p>调研发现淘系的apk都包含mtopsdk，猜想会不会有公开的官方文档描述mtopsdk的使用方法，因此我们就找到了 【阿里云mtopsdk Android接入文档】 。其中介绍了请求构建的流程为，笔者重点关注了请求构建和发送的部分：</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 3. 请求构建
&#x2F;&#x2F; 3.1生成MtopRequest实例
MtopRequest request &#x3D; new MtopRequest();
&#x2F;&#x2F; 3.2 生成MtopBuilder实例
MtopBuilder builder &#x3D; instance.build(MtopRequest request, String ttid);
&#x2F;&#x2F; 4. 请求发送
&#x2F;&#x2F; 4.2 异步调用
ApiID apiId &#x3D; builder.addListener(new MyListener).asyncRequest();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>因此我们不妨大胆一些，直接跟踪所有对mtopsdk中函数的调用。</p>
<pre class="line-numbers language-none"><code class="language-none">(py3) PS E:\TEMP\damai&gt; frida-trace -U -j &quot;*mtopsdk*!*&quot; 大麦<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="/./../../img/640-1695710996524-206.png" alt="图片"></p>
<p>输出的结果大概有2000行，直接看太费劲，我们复制到文本编辑器里做进一步分析。</p>
<p>我们按照阿里的官方文档介绍的流程，对应可以找到在输出的trace中找到一些关键的日志。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># MtopRequest初始化</span>
  <span class="token number">3249</span> ms  MtopRequest.<span class="token variable">$init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token number">3249</span> ms  MtopRequest.setApiName<span class="token punctuation">(</span><span class="token string">"mtop.trade.order.build"</span><span class="token punctuation">)</span>
  <span class="token number">3249</span> ms  MtopRequest.setVersion<span class="token punctuation">(</span><span class="token string">"4.0"</span><span class="token punctuation">)</span>
  <span class="token number">3249</span> ms  MtopRequest.setNeedSession<span class="token punctuation">(</span>true<span class="token punctuation">)</span>
  <span class="token number">3249</span> ms  MtopRequest.setNeedEcode<span class="token punctuation">(</span>true<span class="token punctuation">)</span>
  <span class="token number">3249</span> ms  MtopRequest.setData<span class="token punctuation">(</span><span class="token string">"&#123;<span class="token entity" title="\&quot;">\"</span>buyNow<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>true<span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\&quot;">\"</span>buyParam<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>7191937661_1_51826442779<span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\&quot;">\"</span>exParams<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>&#123;<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>atomSplit<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>1<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>channel<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>damai_app<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>coVersion<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>2.0<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>coupon<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>true<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>seatInfo<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span><span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>umpChannel<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>10001<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>websiteLanguage<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>zh_CN_#Hans<span class="token entity" title="\\">\\</span><span class="token entity" title="\&quot;">\"</span>&#125;<span class="token entity" title="\&quot;">\"</span>&#125;"</span><span class="token punctuation">)</span>

<span class="token comment"># MtopBuilder初始化</span>
  <span class="token number">3251</span> ms  MtopBuilder.<span class="token variable">$init</span><span class="token punctuation">(</span><span class="token string">"&lt;instance: mtopsdk.mtop.intf.Mtop>"</span>, <span class="token string">"&lt;instance: mtopsdk.mtop.domain.MtopRequest>"</span>, null<span class="token punctuation">)</span>

<span class="token comment"># MtopBuilder发送异步请求</span>
<span class="token number">3268</span> ms  MtopBuilder.asyncRequest<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 参数构建</span>
<span class="token number">3301</span> ms     <span class="token operator">|</span>    <span class="token operator">|</span>    <span class="token operator">|</span> InnerProtocolParamBuilderImpl.buildParams<span class="token punctuation">(</span><span class="token string">"&lt;instance: mtopsdk.framework.domain.MtopContext>"</span><span class="token punctuation">)</span>
<span class="token number">3391</span> ms     <span class="token operator">|</span>    <span class="token operator">|</span>    <span class="token operator">|</span> <span class="token operator">&lt;=</span> <span class="token string">"&lt;instance: java.util.Map, <span class="token variable">$className</span>: java.util.HashMap>"</span>,<span class="token punctuation">&#123;</span>wua<span class="token operator">=</span>CofS_+7HCuvRCdz1EN8ICI6A4ZBCJwgY1hi+Bsivjcijs8GggmUxLQQUVTEQ5mYYtPuV7R2QNG5JEONIJRfmzjxFXMrs9AHdepIuqoJJJAyewWALprRnjIAu75t47Tm/RU9xRi7IEo9w0P2aCquLzf7uhiO8JEDSRK/ZdVhURBbof7reFtzEBoYYeIPgnwz7CL3kRlbyqyJcYKxO7ZmmVq1PtMXF2HGJqRSDjdv9l4mySJljIQzBmpX393L6eO1ZQVG1fpp6RaCRcFF+UgfjJXaeMFziHzfQF7KfUQZIeAJV/4GyVEE2f55RwPluOTuQubXQnq+qu41a0V5oyEOFXMoQRYFZzLOv3CjwkiIXsqJFeIHc<span class="token operator">=</span>, x-sgext<span class="token operator">=</span>JA0VLKcO8e9Fqqhj38VJuiwkHCUbIA8jGCwUNh0mDzYdIxQhFCcVJxskDyUedk0lHCUVJU4nGyZIc0g2HDYdJg90GDYcJRwiDyYPJA8kDyQPJA8kDyQPJA8nDyQPJQ8lDyUPJQ8lDyUPJQ82STYPLRlwSiUcNhwlHCUcNhw2HnFNNhw2Dy0PJQ8lD1JvfU42HA<span class="token operator">==</span>, <span class="token assign-left variable">nq</span><span class="token operator">=</span>WIFI, <span class="token assign-left variable">data</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"buyNow"</span><span class="token builtin class-name">:</span><span class="token string">"true"</span>,<span class="token string">"buyParam"</span><span class="token builtin class-name">:</span><span class="token string">"719193771661_1_5182956442779"</span>,<span class="token string">"exParams"</span><span class="token builtin class-name">:</span><span class="token string">"&#123;<span class="token entity" title="\&quot;">\"</span>atomSplit<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>1<span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\&quot;">\"</span>channel<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>damai_app<span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\&quot;">\"</span>coVersion<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>2.0<span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\&quot;">\"</span>coupon<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>true<span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\&quot;">\"</span>seatInfo<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\&quot;">\"</span>umpChannel<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>10001<span class="token entity" title="\&quot;">\"</span>,<span class="token entity" title="\&quot;">\"</span>websiteLanguage<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span>zh_CN_#Hans<span class="token entity" title="\&quot;">\"</span>&#125;"</span><span class="token punctuation">&#125;</span>, <span class="token assign-left variable">pv</span><span class="token operator">=</span><span class="token number">6.3</span>, <span class="token assign-left variable">sign</span><span class="token operator">=</span>azG34N002xAAKiYA2sv237H04abW2iYKIxaD3GVPak+JifYV0u6VzpriFiKiP+HuuF26BzWpVTClaOIGdjtibfQ99JomGiYKJhomCi, <span class="token assign-left variable">deviceId</span><span class="token operator">=</span>null, <span class="token assign-left variable">sid</span><span class="token operator">=</span>13abe677c5076a4fa3382afc38a96a04, <span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">2215803849550</span>, x-features<span class="token operator">=</span><span class="token number">27</span>, x-app-conf-v<span class="token operator">=</span><span class="token number">0</span>, x-mini-wua<span class="token operator">=</span>a3gSvx5K5/NRy/W8+fDouCSQ6VSmMK3awHwo5X+IayY7JL5SwHtiL0soynSAvCobk01qRQ2fQcTvZWakhmhA9xlNOKdwvxdA5nZ4Tno2asO5e7EvSMj6yqVYAXZZUBjZPUOBw3vpH8L2GUq9Gi6MTszU57a58+hJE2BCGTVsxhRonDw1Nnxp74Ffm, <span class="token assign-left variable">appKey</span><span class="token operator">=</span><span class="token number">23781390</span>, <span class="token assign-left variable">api</span><span class="token operator">=</span>mtop.trade.order.build, <span class="token assign-left variable">umt</span><span class="token operator">=</span>+D0B/05LPEvOgwKIQ1x+SeV5wNE6NzOo, f-refer<span class="token operator">=</span>mtop, <span class="token assign-left variable">utdid</span><span class="token operator">=</span>ZF3KUN8khtQDAIlImefp4RYz, <span class="token assign-left variable">netType</span><span class="token operator">=</span>WIFI, x-app-ver<span class="token operator">=</span><span class="token number">8.5</span>.4, x-c-traceid<span class="token operator">=</span>ZF3KUN8khtQDAIlImefp4RYz1684829318230001316498, <span class="token assign-left variable">ttid</span><span class="token operator">=</span><span class="token number">10005890</span>@damai_android_8.5.4, <span class="token assign-left variable">t</span><span class="token operator">=</span><span class="token number">1684829318</span>, <span class="token assign-left variable">v</span><span class="token operator">=</span><span class="token number">4.0</span>, user-agent<span class="token operator">=</span>MTOPSDK/3.1.1.7 <span class="token punctuation">(</span>Android<span class="token punctuation">;</span><span class="token number">9</span><span class="token punctuation">;</span>samsung<span class="token punctuation">;</span>SM-S908E<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>笔者注意到了InnerProtocolParamBuilderImpl.buildParams函数的输出结果完全覆盖了需要的各类加密参数，其输入类型是MtopContext。从jadx逆向的apk代码中可以找到MtopContext类，即包含Mtop生命周期的各个类的一个容器。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MtopContext</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token class-name">ApiID</span> apiId<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> baseUrl<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">MtopBuilder</span> mtopBuilder<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Mtop</span> mtopInstance<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">MtopListener</span> mtopListener<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">MtopRequest</span> mtopRequest<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">MtopResponse</span> mtopResponse<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Request</span> networkRequest<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Response</span> networkResponse<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">MtopNetworkProp</span> property <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MtopNetworkProp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> protocolParams<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> queryParams<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseSource</span> responseSource<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> seqNo<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@NonNull</span>
    <span class="token keyword">public</span> <span class="token class-name">MtopStatistics</span> stats<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>所以现在的问题变为如何能够构建出来MtopContext，然后调用buildParams函数生成各类加密参数。</p>
<h2 id="分析业务模块与mtopsdk的交互过程"><a href="#分析业务模块与mtopsdk的交互过程" class="headerlink" title="分析业务模块与mtopsdk的交互过程"></a>分析业务模块与mtopsdk的交互过程</h2><p>在写本文复盘分析过程的时候，笔者发现仅依赖mtopsdk的调用过程其实已经可以得到MtopContext的全部生成逻辑了。但所谓当局者迷，笔者在当时分析的时候还是一头雾水。因此在此也介绍一下笔者的思考逻辑。</p>
<p>当时看着mtopsdk的调用过程，感觉很复杂。但是猜想从用户点击操作-&gt;业务代码-&gt;mtopsdk的数据流，以及模块间高内聚低耦合的原则，所以猜想模块间的调用不会很复杂，所以笔者就想分析业务代码与mtopsdk的调用逻辑。所以就想跟踪主要业务代码的trace。所以笔者继续跟踪trace，运行<code>frida-trace -U -j &quot;*cn.damai*!*&quot; 大麦 </code>，以分析<code>cn.damai</code>包的调用过程，在其中发现了 <code>NcovSkuFragment.buyNow()</code> 函数，看起来是和购买紧密相关的函数。又找到DMBaseMtopRequest类。</p>
<p><img src="/./../../img/640-1695711024923-209.png" alt="图片"></p>
<p>但是在这里有点卡住了，因为只找到了构建MtopRequest，并未在cn.damai的trace日志中并未发现其他对mtop的调用。</p>
<p>然后笔者又尝试搜索和api(order.build)相关的代码，找到了：</p>
<p><img src="/./../../img/640-1695711036345-212.png" alt="图片"></p>
<p>然而并没有多大用处。</p>
<p>然后，作者又读了大量的源代码，终于定位到了 <code>com.taobao.tao.remotebusiness.MtopBussiness</code>这个关键类。</p>
<p><img src="/./../../img/640-1695711055192-215.png" alt="图片"></p>
<p>笔者本以为com.taobao开头的代码不是那么重要，所以最开始把这个类完全忽略了。但通过对源码的阅读，发现这个类是motpsdk中MtopBuilder类的子类，主要负责管理业务代码和Mtopsdk的交互。</p>
<p>因此我们继续通过trace跟踪MtopBussiness类。运行<code>frida-trace -U -j &quot;*!*buyNow*&quot; -j &quot;com.taobao.tao.remotebusiness.MtopBusiness!*&quot; -j &quot;*MtopContext!*&quot; -j &quot;*mtopsdk.mtop.intf.MtopBuilder!*&quot; 大麦</code></p>
<p><img src="/./../../img/640-1695711068918-218.png" alt="图片"></p>
<p>现在业务代码和mtopsdk的交互就很清晰了，红色的部分是业务代码的函数，绿色的部分是mtopsdk的函数。</p>
<h1 id="0x06-hook得到接口参数"><a href="#0x06-hook得到接口参数" class="headerlink" title="0x06 hook得到接口参数"></a>0x06 hook得到接口参数</h1><p>通过以上对trace的分析，已经知道了具体执行的操作，因此我们可以使用frida编写js代码，直接调用APK中的类，实现功能调用。</p>
<p>先展示一个简单的示例，用于构建一个自定义的MtopRequest 类:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// new_request.js</span>
<span class="token class-name">Java</span><span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> <span class="token class-name">MtopRequest</span> <span class="token operator">=</span> <span class="token class-name">Java</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"mtopsdk.mtop.domain.MtopRequest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    let myMtopRequest <span class="token operator">=</span> <span class="token class-name">MtopRequest</span><span class="token punctuation">.</span>$<span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myMtopRequest<span class="token punctuation">.</span><span class="token function">setApiName</span><span class="token punctuation">(</span><span class="token string">"mtop.trade.order.build"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//item_id + count + ski_id  716435462268_1_5005943905715</span>
    myMtopRequest<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">"&#123;\"buyNow\":\"true\",\"buyParam\":\"716435462268_1_5005943905715\",\"exParams\":\"&#123;\\\"atomSplit\\\":\\\"1\\\",\\\"channel\\\":\\\"damai_app\\\",\\\"coVersion\\\":\\\"2.0\\\",\\\"coupon\\\":\\\"true\\\",\\\"seatInfo\\\":\\\"\\\",\\\"umpChannel\\\":\\\"10001\\\",\\\"websiteLanguage\\\":\\\"zh_CN_#Hans\\\"&#125;\"&#125;"</span><span class="token punctuation">)</span>
    myMtopRequest<span class="token punctuation">.</span><span class="token function">setNeedEcode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myMtopRequest<span class="token punctuation">.</span><span class="token function">setNeedSession</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myMtopRequest<span class="token punctuation">.</span><span class="token function">setVersion</span><span class="token punctuation">(</span><span class="token string">"4.0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>`$<span class="token punctuation">&#123;</span>myMtopRequest<span class="token punctuation">&#125;</span>`<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>再使用运行命令 <code>frida -U -l .\reverse\new_request.js 大麦</code>，以在某麦Apk中执行js hook代码。运行之后即可输出笔者自己构建的MtopRequest实例。（frida真的很奇妙！）</p>
<p><img src="/./../../img/640-1695711086636-221.png" alt="图片"></p>
<p>有了上面的结果，下面继续完善这个示例，添加MtopBussiness的构建过程和输出过程</p>
<pre class="line-numbers language-none"><code class="language-none">       &#x2F;&#x2F;引入Java中的类
const MtopBusiness &#x3D; Java.use(&quot;com.taobao.tao.remotebusiness.MtopBusiness&quot;);
const MtopBuilder &#x3D; Java.use(&quot;mtopsdk.mtop.intf.MtopBuilder&quot;);
&#x2F;&#x2F; let RemoteBusiness &#x3D; Java.use(&quot;com.taobao.tao.remotebusiness.RemoteBusiness&quot;);
const MethodEnum &#x3D; Java.use(&quot;mtopsdk.mtop.domain.MethodEnum&quot;);
const MtopListenerProxyFactory &#x3D; Java.use(&quot;com.taobao.tao.remotebusiness.listener.MtopListenerProxyFactory&quot;);
const System &#x3D; Java.use(&#39;java.lang.System&#39;);
const ApiID &#x3D; Java.use(&quot;mtopsdk.mtop.common.ApiID&quot;);
const MtopStatistics &#x3D; Java.use(&quot;mtopsdk.mtop.util.MtopStatistics&quot;);
const InnerProtocolParamBuilderImpl &#x3D; Java.use(&#39;mtopsdk.mtop.protocol.builder.impl.InnerProtocolParamBuilderImpl&#39;);

&#x2F;&#x2F; create MtopBusiness
let myMtopBusiness &#x3D; MtopBusiness.build(myMtopRequest);
myMtopBusiness.useWua();
myMtopBusiness.reqMethod(MethodEnum.POST.value);
myMtopBusiness.setCustomDomain(&quot;mtop.damai.cn&quot;);
myMtopBusiness.setBizId(24);
myMtopBusiness.setErrorNotifyAfterCache(true);
myMtopBusiness.reqStartTime &#x3D; System.currentTimeMillis();
myMtopBusiness.isCancelled &#x3D; false;
myMtopBusiness.isCached &#x3D; false;
myMtopBusiness.clazz &#x3D; null;
myMtopBusiness.requestType &#x3D; 0;
myMtopBusiness.requestContext &#x3D; null;
myMtopBusiness.mtopCommitStatData(false);
myMtopBusiness.sendStartTime &#x3D; System.currentTimeMillis();

let createListenerProxy &#x3D; myMtopBusiness.$super.createListenerProxy(myMtopBusiness.$super.listener.value);
let createMtopContext &#x3D; myMtopBusiness.createMtopContext(createListenerProxy);
let myMtopStatistics &#x3D; MtopStatistics.$new(null, null); &#x2F;&#x2F;创建一个空的统计类
createMtopContext.stats.value &#x3D; myMtopStatistics;
myMtopBusiness.$super.mtopContext.value &#x3D; createMtopContext;
createMtopContext.apiId.value &#x3D; ApiID.$new(null, createMtopContext);

let myMtopContext &#x3D; createMtopContext;
myMtopContext.mtopRequest.value &#x3D; myMtopRequest;
let myInnerProtocolParamBuilderImpl &#x3D; InnerProtocolParamBuilderImpl.$new();
let res &#x3D; myInnerProtocolParamBuilderImpl.buildParams(myMtopContext);
console.log(&#96;myInnerProtocolParamBuilderImpl.buildParams &#x3D;&gt; $&#123;HashMap2Str(res)&#125;&#96;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>再次执行<code>frida -U -l .\reverse\new_request.js 大麦</code>，输出结果如下图，此时已能根据笔者任意构建的请求data输出其他加密参数：</p>
<p><img src="/./../../img/640-1695711110159-224.png" alt="图片"></p>
<p>对于order.create的原理类似，此处不再赘述。</p>
<p>![图片](data:image&#x2F;svg+xml,&lt;%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F&gt;<svg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><title></title><g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'><g transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'><rect x='249' y='126' width='1' height='1'></rect></g></g></svg>)</p>
<p>原文链接：<a href="https://github.com/m2kar/m2kar.github.io/issues/21">https://github.com/m2kar/m2kar.github.io/issues/21</a></p>
]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> android逆向 </tag>
            
            <tag> 大麦网抢票 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[项目部署踩坑记录]]></title>
      <url>/2023/09/11/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<blockquote>
<p>项目即将进入生产环境，部署在内部还需要一些操作。做了不少的踩坑。记录一下</p>
</blockquote>
<h4 id="一、首先是数据库"><a href="#一、首先是数据库" class="headerlink" title="一、首先是数据库"></a>一、首先是数据库</h4><ul>
<li>安装wps宏插件【<a href="https://www.dongdonga11.eu.org/2023/07/28/%E8%AE%B0%E5%BD%95%E6%88%91%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%AC%AC%E4%BA%8C%E5%BC%B9/">我的项目-第二弹</a>】丢失问题踩坑</li>
<li>SQLserver 安装踩坑</li>
<li>SQLserver 远程连接踩坑</li>
</ul>
<h4 id="二、wps宏插件踩坑："><a href="#二、wps宏插件踩坑：" class="headerlink" title="二、wps宏插件踩坑："></a>二、wps宏插件踩坑：</h4><pre><code>     主要是“宏丢失”问题，因为用的宏插件不一致，所以读代码的时候 “left” “mid”....之类的函数不能用，这是因为`引用`  里有丢失的文件，给关闭就可以了。打开vb编辑器 -&gt;  引用 -&gt; 找到【丢失】 的引用包，-&gt; 关闭即可
</code></pre>
<h4 id="三、动态IP转静态IP"><a href="#三、动态IP转静态IP" class="headerlink" title="三、动态IP转静态IP"></a>三、动态IP转静态IP</h4><blockquote>
<p>dns 静态IP：打开 <code>cmd</code>  利用<code>ipconfig- all</code> 获取ipv4 地址，获取 子掩码 ：255.255.255.0； 获取首选DNS服务器地址；获取备选DNS服务器地址：8.8.8.8。</p>
<p>通过网络适配器更改iP</p>
</blockquote>
<h4 id="四、SQLserver-安装踩坑"><a href="#四、SQLserver-安装踩坑" class="headerlink" title="四、SQLserver 安装踩坑"></a>四、SQLserver 安装踩坑</h4><p>​		sql server 安装踩坑其实也比较大，主要在安装的时候不要图省事，还是需要 <code>自定义</code> 安装，可以看教程</p>
<p><a href="https://www.dongdonga11.eu.org/2023/07/28/%E8%AE%B0%E5%BD%95%E6%88%91%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%AC%AC%E4%BA%8C%E5%BC%B9/">我的项目-第二弹</a>，这在后面可以省很多事</p>
<h4 id="五、sql-server-远程连接踩坑最大"><a href="#五、sql-server-远程连接踩坑最大" class="headerlink" title="五、sql server 远程连接踩坑最大"></a>五、sql server 远程连接踩坑最大</h4><p>问题描述：SQL Serve [SQL Server无法连接到服务器]</p>
<ul>
<li><p>首先：在自定义安装的时候，一定要打开sqlserver windows身份验证 和SQL server 账户验证，很重要</p>
</li>
<li><p>然后是 <code>电脑需要打开远程访问</code>；<code>telnet</code>；  <code>入站规则</code>； <code>sqlserver 允许远程</code>； <code>tcp/ip 打开,设置</code> 等；</p>
</li>
<li><p>其次是设置账户和密码，“如何需要可以设置账户权限”</p>
</li>
<li><p>最后找到电脑的ip地址，需要用ip地址访问。</p>
</li>
</ul>
<p><strong>结论：首先是上代码：</strong></p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Public</span> <span class="token keyword">Sub</span> 连接数据库<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> serverIP <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> serverName <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> dbName <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> userName <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> password <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token comment">'serverName = "DONGDONGA"</span>
    serverIP <span class="token operator">=</span> <span class="token string">"192.168.38.167"</span>
    dbName <span class="token operator">=</span> <span class="token string">"中台数据库"</span>
    userName <span class="token operator">=</span> <span class="token string">"sa"</span>
    password <span class="token operator">=</span> <span class="token string">"Zz5024784"</span>
    <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection
    cnn<span class="token punctuation">.</span>Open <span class="token string">"Provider=SQLOLEDB;Data Source="</span> <span class="token operator">&amp;</span> serverIP <span class="token operator">&amp;</span> <span class="token string">";Initial Catalog="</span> <span class="token operator">&amp;</span> dbName <span class="token operator">&amp;</span> <span class="token string">";User ID="</span> <span class="token operator">&amp;</span> userName <span class="token operator">&amp;</span> <span class="token string">";Password="</span> <span class="token operator">&amp;</span> password <span class="token operator">&amp;</span> <span class="token string">";"</span>

<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p><strong>第一步：</strong>首先是确认下 SQL Server名称或IP地址拼写是否有误；</p>
<p><strong>第二步：</strong>检查网络物理连接：</p>
<blockquote>
<p>ping ＜服务器IP地址＞或者 ping ＜服务器名称＞</p>
<p>如果 ping ＜服务器IP地址＞ 失败，说明物理连接有问题，这时候要检查硬件设备，如网卡、HUB、路由器等。还有一种可能是由于客户端和服务器之间安装有防火墙软件造成的，比如 ISA Server。防火墙软件可能会屏蔽对 ping、telnet 等的响应，因此在检查连接问题的时候，我们要先把防火墙软件暂时关闭，或者打开所有被封闭的端口。</p>
<p>如果ping ＜服务器IP地址＞ 成功而 ping ＜服务器名称＞ 失败，则说明名字解析有问题，这时候要检查 DNS 服务是否正常，有时候客户端和服务器不在同一个局域网里面，这时候很可能无法直接使用服务器名称来标识该服务器</p>
</blockquote>
<p><font color="red">这个部分我也没解决，所以没用实例名称，用的ip地址</font></p>
<p><strong>第三步：</strong>检查SQL Server服务器工作状态：</p>
<blockquote>
<p>​	使用 telnet 命令， telnet ＜服务器IP地址＞ 1433；</p>
<p>​	如果命令执行成功，可以看到屏幕一闪之后光标在左上角不停闪动，这说明 SQL Server 服务器工作正常，并且正在监听1433端口的 TCP&#x2F;IP 连接；如果命令返回”无法打开连接”的错误信息，则说明服务器端没有启动 SQL Server 服务，也可能服务器端没启用 TCP&#x2F;IP 协议，或者服务器端没有在 SQL Server 默认的端口1433上监听。</p>
</blockquote>
<p>​	</p>
<ul>
<li>解决办法：	启用TCP&#x2F;IP协议： 1、打开SQL配置管理器； 2、启用TCP&#x2F;IP服务； 3、打开端口（默认1433）4、重启服务</li>
</ul>
<p><img src="/./../../img/363_485_20190325110219-422411939.png" alt="img"></p>
<p><img src="/./../../img/500_250_20190325110224-1378026421.png" alt="img"></p>
<p>​	<img src="/./../../img/500_327_20190325110226-1307456228.png" alt="img"></p>
<p><img src="/./../../img/500_318_20190325110232-593478683.png" alt="img"></p>
<p><strong>第四步：</strong>在【连接】属性里面打开允许远程连接。</p>
<p><img src="/./../../img/363_481_20190325110245-372478881.png" alt="img"></p>
<p><img src="/./../../img/500_539_20190325110247-1463940198.png" alt="img"></p>
<p><img src="/./../../img/500_321_20190325110255-871410913.png" alt="img"></p>
<p><strong>第五步：</strong>确认权限<font color="red">（这个部分我没用，用的Ip就行，这个部分我也不确定）</font></p>
<p>1、确认是否有服务器读写权限？ 方法：a、客户端访问服务器共享文件夹；b、文件夹里面新建，确认是否有权限</p>
<p><img src="/./../../img/500_126_20190325110300-949671106.jpeg" alt="img"></p>
<p><img src="/./../../img/500_212_20190325110318-1485941175.jpeg" alt="img"></p>
<p>2、修改默认用户名（sa）密码试试；</p>
<p><img src="/./../../img/500_232_20190325110329-1362241327.png" alt="img"></p>
<h5 id="如果还没解决，就把SQL-server-重新安装一下，记得用自定义。然后再-SSMS-中查看下实例，把多余的那个实例关掉（如果有的话，比如安装了2次sqlserver-就会有2个实例），然后再试一下。"><a href="#如果还没解决，就把SQL-server-重新安装一下，记得用自定义。然后再-SSMS-中查看下实例，把多余的那个实例关掉（如果有的话，比如安装了2次sqlserver-就会有2个实例），然后再试一下。" class="headerlink" title="如果还没解决，就把SQL server 重新安装一下，记得用自定义。然后再 SSMS 中查看下实例，把多余的那个实例关掉（如果有的话，比如安装了2次sqlserver,就会有2个实例），然后再试一下。"></a>如果还没解决，就把SQL server 重新安装一下，记得用自定义。然后再 SSMS 中查看下实例，把多余的那个实例关掉（如果有的话，比如安装了2次sqlserver,就会有2个实例），然后再试一下。</h5><hr>
]]></content>
      
        <categories>
            
            <category> excel </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的小项目-第三弹]]></title>
      <url>/2023/09/04/%E5%A4%A7%E9%BA%A6%E7%BD%91APP%E9%80%86%E5%90%91%E9%A1%B9%E7%9B%AE/%E6%88%91%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%AC%AC%E4%B8%89%E5%BC%B9/</url>
      <content type="html"><![CDATA[<p>一、项目起因：</p>
<blockquote>
<p>停滞挺久了，最近这段时间感觉各处不顺，工作没思路，干什么都提不起精神，这2年都没什么成长，有时候想自己不能这样下去，但是也不知道该做什么，怎么做，感觉很焦虑。</p>
<p>最近思考了很多，但是一下子又想不起来自己想了些什么，就是人马上要到35岁了，一想到自己未来30-35岁的样子，就莫名的有点害怕；</p>
<p>以前的时候吧，想着电视上的哪些人，科学家，律师，教师，一个成功的Leader穿西服挂领带，商人，企业家，包工头….以为将来会像这样，但是最近想的更多的吧，自己将来更多的其实是芸芸众生，就像自己的父母那样，平淡，为几毛几块钱也要争个面红耳赤，未来40岁，也许像许哥，也许像赵哥，人到中年，力不从心，却不想认命，却无能为力。也许现在找一份工作，到干不动了，被辞退了，然后为生计发愁。</p>
<p>还想了，人到底要一条路走到黑，还是要兴趣广泛一些，想了一个比较好的比喻，就好比一颗树，是只在一边长还是要多生枝叶。破土而出的时候，总归要多长枝叶，只有这样才能吸取更多养分，要专注自己的主干，才能长高高。</p>
</blockquote>
<blockquote>
<p>感触就这么多吧，说说项目。</p>
<p>最近缺钱，最近花钱没有数，存款几乎全部花掉了，然后还想着要买车，大概3、5万，还有新家还没装修，乱七八糟的花销还有很多，另外，支付宝欠款还有1万多，想想压力就很大，所以准备一个能赚快钱的项目，另外需要准备一个能在未来持续走下去的项目。</p>
<p>抢票软件最近聊的人比较多，这种演唱会门票感觉有搞头，有钱赚，可以先试试，之前曾试过环球影城的，难度是挺高的。这次试一下大麦的，如果能搞定，后续的赚钱路径等于多了一条。</p>
</blockquote>
<p>二、使用工具：</p>
<pre><code> 1. 观看教学视频
  1. 抓包工具及代理教程：charles
  2. 安卓root工具：
  3. 反编译工具
  4. 模拟器：网易MUMU
</code></pre>
<p>待定：未开始</p>
<p>三、项目思考：</p>
<ol>
<li>难题：</li>
</ol>
<p>   代理抓包难题：大麦和环球影城有点像，没有网页端，只有小程序和app，环球影城开代理会被屏蔽掉，直接抓包并能抓到包，不过我记得模拟器的小程序好像可以。但是大麦网的小程序也一样抢不到票，比较麻烦。</p>
<p>   app 脱壳和反编译难题：这种app只能通过反编译来处理</p>
<p>   逆向难题：这两个大公司，里面的加密包应该都是自己设计的，反编译起来，没有十足的把握。</p>
<p>   法律风险：可能涉及法律风险。</p>
<p>四、项目规划：</p>
]]></content>
      
        <categories>
            
            <category> 项目日记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 项目集锦 </tag>
            
            <tag> ideas </tag>
            
            <tag> 小爬虫 </tag>
            
            <tag> APP逆向 </tag>
            
            <tag> 抢票软件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[销售系统搭建（二）]]></title>
      <url>/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>最后一个章节就是调用所有的数据，这个部分很简单了，直接上代码</p>
<p>一、初始化数组</p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'初始化数组</span>
<span class="token keyword">Sub</span> InitTableFrom<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">ReDim</span> tableFrom<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">22</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>
    
    tableFrom<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.id"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.省份"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.市"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.[区/县]"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.地址信息"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.学校名称"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.联系方式"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.学校级别"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.学校性质"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.分配时间"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"cint(T.回访数据总数)"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.回访时间"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.触达结果"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.接通部门"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.情况说明"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.意向等级"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.是否与校长建联"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"跟进结果.加微信"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"跟进结果.加公众号"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"跟进结果.是否应约峰会"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"跟进结果.签约"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"销售.姓名"</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'获取所有数据</span>
<span class="token keyword">Sub</span> 客户跟进数据<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> columsTitle <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> salesName <span class="token keyword">As</span> <span class="token keyword">String</span>
    
    <span class="token keyword">If</span> ActiveSheet<span class="token punctuation">.</span>AutoFilterMode <span class="token keyword">Then</span>
        ActiveSheet<span class="token punctuation">.</span>AutoFilterMode <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">End</span> <span class="token keyword">If</span>
    
    
    salesName <span class="token operator">=</span> asycSalerName
    
    <span class="token comment">'salesName = "孙阔"</span>
    
    <span class="token keyword">Call</span> 连接数据库
    
    
    InitTableFrom <span class="token comment">' 初始化数组</span>
    
    columsTitle <span class="token operator">=</span> Join<span class="token punctuation">(</span>tableFrom<span class="token punctuation">,</span> <span class="token string">", "</span><span class="token punctuation">)</span> <span class="token comment">' 构建新的列名部分</span>
    

    sql <span class="token operator">=</span> <span class="token string">"SELECT "</span> <span class="token operator">&amp;</span> columsTitle <span class="token operator">&amp;</span> <span class="token string">" "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"FROM ((((数据总表 "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"LEFT JOIN "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"(SELECT 回访.数据总表id, COUNT(回访.数据总表id) AS 回访数据总数, Max(回访.id) AS 最后回访数据 "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"FROM 回访 "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"GROUP BY 回访.数据总表id) AS T ON 数据总表.id = T.数据总表id) "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"LEFT JOIN 回访 AS R ON T.最后回访数据 = R.id) "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"LEFT JOIN 销售 ON 数据总表.跟进人id = 销售.id) "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"LEFT JOIN 跟进结果 ON 数据总表.id = 跟进结果.学校名称id) "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"WHERE 销售.姓名 = '"</span> <span class="token operator">&amp;</span> salesName <span class="token operator">&amp;</span> <span class="token string">"'"</span>


    
    <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
    rs<span class="token punctuation">.</span>Open sql<span class="token punctuation">,</span> cnn<span class="token punctuation">,</span> adOpenKeyset<span class="token punctuation">,</span> adLockOptimistic
    
    Sheets<span class="token punctuation">(</span><span class="token string">"客户跟进表"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Range<span class="token punctuation">(</span><span class="token string">"c15"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>CopyFromRecordset rs
    
    <span class="token comment">'释放对象变量空间</span>
    rs<span class="token punctuation">.</span>Close<span class="token punctuation">:</span> <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    cnn<span class="token punctuation">.</span>Close<span class="token punctuation">:</span> <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'获取销售的名字</span>
<span class="token keyword">Function</span> asycSalerName<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>

    <span class="token keyword">Dim</span> ws <span class="token keyword">As</span> Worksheet
    <span class="token keyword">Dim</span> dataValues <span class="token keyword">As</span> <span class="token keyword">Variant</span>
    
    <span class="token comment">' 设置工作表对象</span>
    <span class="token keyword">Set</span> ws <span class="token operator">=</span> ThisWorkbook<span class="token punctuation">.</span>Sheets<span class="token punctuation">(</span><span class="token string">"客户跟进表"</span><span class="token punctuation">)</span>
    
    <span class="token comment">' 定义要获取数据的区域范围</span>
    dataValues <span class="token operator">=</span> ws<span class="token punctuation">.</span>Range<span class="token punctuation">(</span><span class="token string">"c8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value

    asycSalerName <span class="token operator">=</span> dataValues

    <span class="token keyword">Set</span> ws <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    
<span class="token keyword">End</span> <span class="token keyword">Function</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="具体实现："><a href="#具体实现：" class="headerlink" title="具体实现："></a>具体实现：</h4><p>​		<a href="https://www.dongdonga11.eu.org/2023/08/28/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">excel-中台数据库搭建（一）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">excel-中台数据库搭建（二）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%89%EF%BC%89/">excel-中台数据库搭建（三）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E5%9B%9B%EF%BC%89/">excel-中台数据库搭建（四）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">销售系统搭建（一）</a></p>
]]></content>
      
        <categories>
            
            <category> excel </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[销售系统搭建（一）]]></title>
      <url>/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>本章节是继中台数据库后的第二章，中台数据库搭建完成，需要销售填充数据。其实有了最开始踩的坑，做起销售系统就的心应手了。</p>
<p><strong>功能设计：</strong> 点击单元格–&gt;弹出弹窗–&gt; 填写相关信息 –&gt; 提交</p>
<p>获取最新的分配数据。</p>
<p><strong>卡点问题：</strong>这个部分遇到的卡点就是如何把信息分成两个部分发送数据库，因为销售数据，回访中的数据是要逐次添加的，但是跟进结果的数据只有一次，这是放在一起填写，但是拆分成了两个表。在设计窗体的时候花了一些功夫。</p>
<p>另外，在数据更新上面也花了些功夫，就是，数据双击后，跟进结构的数据需要再更新，设计这个部分也花了不少时间。</p>
<p>上代码</p>
<p>窗体设计：</p>
<p><img src="/./../../img/img/image-20230831194210748.png" alt="img"></p>
<p>第二步：双击单元格，弹出窗体，并把已有数据填入chackBOX</p>
<p>再客户跟进表的VBA里打开</p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Private</span> <span class="token keyword">Sub</span> Worksheet_BeforeDoubleClick<span class="token punctuation">(</span><span class="token keyword">ByVal</span> Target <span class="token keyword">As</span> Range<span class="token punctuation">,</span> Cancel <span class="token keyword">As</span> <span class="token keyword">Boolean</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> selectedRow <span class="token keyword">As</span> Range
    <span class="token keyword">Dim</span> dataRange <span class="token keyword">As</span> Range
    <span class="token keyword">Dim</span> textBoxIndex <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    <span class="token comment">'checkBOX数据</span>
    <span class="token keyword">Dim</span> checkBoxRange <span class="token keyword">As</span> Range
    <span class="token keyword">Dim</span> checkBoxIndex <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    <span class="token keyword">Dim</span> checkBoxColumnRange <span class="token keyword">As</span> Range
    
    <span class="token keyword">Dim</span> frm <span class="token keyword">As</span> UserForm1
    <span class="token keyword">Dim</span> columnRange <span class="token keyword">As</span> Range
    
    <span class="token keyword">If</span> <span class="token keyword">Not</span> Intersect<span class="token punctuation">(</span>Target<span class="token punctuation">,</span> Range<span class="token punctuation">(</span><span class="token string">"H:H"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">Is</span> <span class="token boolean">Nothing</span> <span class="token keyword">Then</span>
        <span class="token comment">' 判断选定的单元格是否在列 H 中</span>
        <span class="token comment">' 如果是，则弹出弹窗</span>

        <span class="token keyword">If</span> Target<span class="token punctuation">.</span>Cells<span class="token punctuation">.</span>Count <span class="token operator">></span> <span class="token number">1</span> <span class="token keyword">Then</span> <span class="token keyword">Exit</span> <span class="token keyword">Sub</span>         <span class="token comment">' 检查双击的目标是否为单个单元格</span>
        

        <span class="token keyword">Set</span> selectedRow <span class="token operator">=</span> Target<span class="token punctuation">.</span>EntireRow        <span class="token comment">' 获取当前选中单元格所在的行</span>
        

        <span class="token comment">' 设置数据范围为选中行的某几列的数据，包括空单元格</span>
        <span class="token keyword">Set</span> columnRange <span class="token operator">=</span> selectedRow<span class="token punctuation">.</span>Parent<span class="token punctuation">.</span>Range<span class="token punctuation">(</span><span class="token string">"H:I,M:M,C:C"</span><span class="token punctuation">)</span>
        <span class="token keyword">Set</span> dataRange <span class="token operator">=</span> Intersect<span class="token punctuation">(</span>selectedRow<span class="token punctuation">,</span> columnRange<span class="token punctuation">)</span>
        
        <span class="token comment">' 检查是否存在数据</span>
        <span class="token keyword">If</span> dataRange <span class="token keyword">Is</span> <span class="token boolean">Nothing</span> <span class="token keyword">Then</span> <span class="token keyword">Exit</span> <span class="token keyword">Sub</span>
        
        <span class="token comment">'检查checkbox 数据，初始化checkbox</span>
        <span class="token keyword">Set</span> checkBoxColumnRange <span class="token operator">=</span> selectedRow<span class="token punctuation">.</span>Parent<span class="token punctuation">.</span>Range<span class="token punctuation">(</span><span class="token string">"T:W"</span><span class="token punctuation">)</span>
        <span class="token keyword">Set</span> checkBoxRange <span class="token operator">=</span> Intersect<span class="token punctuation">(</span>selectedRow<span class="token punctuation">,</span> checkBoxColumnRange<span class="token punctuation">)</span>
        
        <span class="token comment">' 检查是否存在数据</span>
        <span class="token keyword">If</span> checkBoxRange <span class="token keyword">Is</span> <span class="token boolean">Nothing</span> <span class="token keyword">Then</span> <span class="token keyword">Exit</span> <span class="token keyword">Sub</span>
        
        <span class="token comment">' 创建并显示用户窗体</span>
        <span class="token keyword">Set</span> frm <span class="token operator">=</span> <span class="token keyword">New</span> UserForm1
        
        
        <span class="token comment">' 将数据依次放入窗体的TextBox中</span>
        textBoxIndex <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token keyword">For</span> <span class="token keyword">Each</span> cell <span class="token keyword">In</span> dataRange
            frm<span class="token punctuation">.</span>Controls<span class="token punctuation">(</span><span class="token string">"TextBox"</span> <span class="token operator">&amp;</span> textBoxIndex<span class="token punctuation">)</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> cell<span class="token punctuation">.</span>value
            textBoxIndex <span class="token operator">=</span> textBoxIndex <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token keyword">Next</span> cell
        
        
        checkBoxIndex <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token keyword">For</span> <span class="token keyword">Each</span> checkCells <span class="token keyword">In</span> checkBoxRange
            <span class="token keyword">If</span> checkCells <span class="token operator">=</span> <span class="token string">"是"</span> <span class="token keyword">Then</span>
                frm<span class="token punctuation">.</span>Controls<span class="token punctuation">(</span><span class="token string">"CheckBox"</span> <span class="token operator">&amp;</span> checkBoxIndex<span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">True</span>
            <span class="token keyword">End</span> <span class="token keyword">If</span>
            <span class="token comment">'MsgBox checkCells</span>
            checkBoxIndex <span class="token operator">=</span> checkBoxIndex <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token keyword">Next</span> checkCells
        
        
        frm<span class="token punctuation">.</span>Show
        <span class="token comment">' 取消双击事件的默认操作</span>
        Cancel <span class="token operator">=</span> <span class="token boolean">True</span>
        
        <span class="token keyword">Set</span> columnRange <span class="token operator">=</span> <span class="token boolean">Nothing</span>
        <span class="token keyword">Set</span> dataRange <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    
    <span class="token keyword">End</span> <span class="token keyword">If</span>

<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>第三步，窗体代码</p>
<p>​	3.1  初始化变量</p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'初始化数组变量</span>
<span class="token keyword">Option</span> Explicit
<span class="token keyword">Dim</span> cnn <span class="token keyword">As</span> ADODB<span class="token punctuation">.</span>connection
<span class="token keyword">Dim</span> rs <span class="token keyword">As</span> ADODB<span class="token punctuation">.</span>Recordset
<span class="token comment">'数组变量</span>
<span class="token keyword">Dim</span> checkValues<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>
<span class="token keyword">Dim</span> commboxValues<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>

<span class="token keyword">Sub</span> InitCheckArray<span class="token punctuation">(</span><span class="token punctuation">)</span>

    checkValues<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>CheckBox1<span class="token punctuation">.</span>value
    checkValues<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"加微信"</span>
    checkValues<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>CheckBox2<span class="token punctuation">.</span>value
    checkValues<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"加公众号"</span>
    checkValues<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>CheckBox3<span class="token punctuation">.</span>value
    checkValues<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"是否应约峰会"</span>
    checkValues<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>CheckBox4<span class="token punctuation">.</span>value
    checkValues<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"签约"</span>
    <span class="token comment">'checkValues(5, 1) = Me.ComboBox2.value</span>
    <span class="token comment">'checkValues(5, 2) = "意向等级"</span>
    <span class="token comment">'checkValues(6, 1) = Me.ComboBox3.value</span>
    <span class="token comment">'checkValues(6, 2) = "是否与校长建联"</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>

<span class="token keyword">Sub</span> InitCommboxArray<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    commboxValues<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox5<span class="token punctuation">.</span>value
    commboxValues<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"回访时间"</span>
    commboxValues<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox1<span class="token punctuation">.</span>value
    commboxValues<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"触达结果"</span>
    commboxValues<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox6<span class="token punctuation">.</span>value
    commboxValues<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"接通部门"</span>
    commboxValues<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox7<span class="token punctuation">.</span>value
    commboxValues<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"情况说明"</span>
    commboxValues<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox3<span class="token punctuation">.</span>value
    commboxValues<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"意向等级"</span>
    commboxValues<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox2<span class="token punctuation">.</span>value
    commboxValues<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"是否与校长建联"</span>
    
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>3.2 初始化窗体，原有的数据填充进窗体</p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'初始化窗体</span>
<span class="token keyword">Private</span> <span class="token keyword">Sub</span> UserForm_Initialize<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
<span class="token comment">'初始化数据</span>
    <span class="token keyword">Dim</span> i <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    <span class="token keyword">Dim</span> ws <span class="token keyword">As</span> Worksheet
    <span class="token keyword">Dim</span> dataRange <span class="token keyword">As</span> Range
    <span class="token keyword">Dim</span> dataValues <span class="token keyword">As</span> <span class="token keyword">Variant</span>
    <span class="token keyword">Dim</span> cell <span class="token keyword">As</span> Excel<span class="token punctuation">.</span>Range
    
    <span class="token comment">' 设置工作表对象</span>
    <span class="token keyword">Set</span> ws <span class="token operator">=</span> ThisWorkbook<span class="token punctuation">.</span>Sheets<span class="token punctuation">(</span><span class="token string">"设置"</span><span class="token punctuation">)</span>
    
    <span class="token comment">' 定义要获取数据的区域范围</span>
    <span class="token keyword">Set</span> dataRange <span class="token operator">=</span> ws<span class="token punctuation">.</span>Range<span class="token punctuation">(</span><span class="token string">"B2:D7"</span><span class="token punctuation">)</span>

    <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox1<span class="token punctuation">.</span>Clear
    <span class="token comment">' 将数据填充到 ComboBox1</span>
    <span class="token keyword">For</span> <span class="token keyword">Each</span> cell <span class="token keyword">In</span> dataRange<span class="token punctuation">.</span>Columns<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Cells
        <span class="token keyword">If</span> cell<span class="token punctuation">.</span>value <span class="token operator">&lt;</span><span class="token operator">></span> <span class="token string">""</span> <span class="token keyword">Then</span>
            <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox1<span class="token punctuation">.</span>AddItem cell<span class="token punctuation">.</span>value
        <span class="token keyword">End</span> <span class="token keyword">If</span>
    <span class="token keyword">Next</span> cell
    <span class="token comment">' 将数据填充到 ComboBox2</span>
    <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox2<span class="token punctuation">.</span>Clear
    <span class="token keyword">For</span> <span class="token keyword">Each</span> cell <span class="token keyword">In</span> dataRange<span class="token punctuation">.</span>Columns<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Cells
        <span class="token keyword">If</span> cell<span class="token punctuation">.</span>value <span class="token operator">&lt;</span><span class="token operator">></span> <span class="token string">""</span> <span class="token keyword">Then</span>
            <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox2<span class="token punctuation">.</span>AddItem cell<span class="token punctuation">.</span>value
        <span class="token keyword">End</span> <span class="token keyword">If</span>        
    <span class="token keyword">Next</span> cell
    <span class="token comment">' 将数据填充到 ComboBox3</span>
    <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox3<span class="token punctuation">.</span>Clear
    <span class="token keyword">For</span> <span class="token keyword">Each</span> cell <span class="token keyword">In</span> dataRange<span class="token punctuation">.</span>Columns<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Cells
        <span class="token keyword">If</span> cell<span class="token punctuation">.</span>value <span class="token operator">&lt;</span><span class="token operator">></span> <span class="token string">""</span> <span class="token keyword">Then</span>
            <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox3<span class="token punctuation">.</span>AddItem cell<span class="token punctuation">.</span>value
        <span class="token keyword">End</span> <span class="token keyword">If</span>     
    <span class="token keyword">Next</span> cell

    ComboBox1<span class="token punctuation">.</span>ListIndex <span class="token operator">=</span> <span class="token number">0</span>
    ComboBox2<span class="token punctuation">.</span>ListIndex <span class="token operator">=</span> <span class="token number">0</span>
    ComboBox3<span class="token punctuation">.</span>ListIndex <span class="token operator">=</span> <span class="token number">0</span>
    
    <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox5<span class="token punctuation">.</span>value <span class="token operator">=</span> Now<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox1<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox3<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox5<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox4<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">False</span>

    <span class="token keyword">Set</span> ws <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    <span class="token keyword">Set</span> dataRange <span class="token operator">=</span> <span class="token boolean">Nothing</span>
   
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'提交数据</span>

<span class="token keyword">Private</span> <span class="token keyword">Sub</span> CommandButton2_Click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> exists <span class="token keyword">As</span> <span class="token keyword">Boolean</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span>
    
    <span class="token keyword">Call</span> 连接数据库
    
    sql <span class="token operator">=</span> <span class="token string">"SELECT COUNT(*) FROM 跟进结果 WHERE 学校名称id = "</span> <span class="token operator">&amp;</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox4<span class="token punctuation">.</span>value
    
    <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
    rs<span class="token punctuation">.</span>Open sql<span class="token punctuation">,</span> cnn<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span>

    exists <span class="token operator">=</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span>Fields<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token comment">'释放对象变量空间</span>
    rs<span class="token punctuation">.</span>Close<span class="token punctuation">:</span> <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    cnn<span class="token punctuation">.</span>Close<span class="token punctuation">:</span> <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    
    <span class="token keyword">Call</span> 回访更新<span class="token punctuation">(</span><span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox4<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    
    <span class="token keyword">If</span> exists <span class="token keyword">Then</span>
        <span class="token comment">' 存在记录，执行更新操作</span>
        UpdateData <span class="token punctuation">(</span><span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox4<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token keyword">Else</span>
        InsertData <span class="token punctuation">(</span><span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox4<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token keyword">End</span> <span class="token keyword">If</span>
    
    
    
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Sub</span> 回访更新<span class="token punctuation">(</span>id <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">)</span>
    <span class="token comment">' 执行插入操作的代码</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> i <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    <span class="token keyword">Dim</span> filedTable <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> filedValues <span class="token keyword">As</span> <span class="token keyword">String</span>
    
    
    InitCommboxArray
    <span class="token comment">' 执行更新操作的代码</span>
    
    <span class="token keyword">Call</span> 连接数据库
    
    sql <span class="token operator">=</span> <span class="token string">"INSERT INTO 回访("</span>
    
    <span class="token keyword">For</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> UBound<span class="token punctuation">(</span>commboxValues<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        
        filedTable <span class="token operator">=</span> filedTable <span class="token operator">&amp;</span> commboxValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">","</span>
        filedValues <span class="token operator">=</span> filedValues <span class="token operator">&amp;</span> <span class="token string">"'"</span> <span class="token operator">&amp;</span> commboxValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">"',"</span>
        
    <span class="token keyword">Next</span> i
    
    sql <span class="token operator">=</span> sql <span class="token operator">&amp;</span> filedTable <span class="token operator">&amp;</span> <span class="token string">"数据总表id) values("</span> <span class="token operator">&amp;</span> filedValues <span class="token operator">&amp;</span> id <span class="token operator">&amp;</span> <span class="token string">")"</span>
    
    MsgBox sql
    
    <span class="token comment">' 添加 WHERE 子句，根据需要修改</span>
    
    <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
    rs<span class="token punctuation">.</span>Open sql<span class="token punctuation">,</span> cnn<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span>
    
    <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    cnn<span class="token punctuation">.</span>Close<span class="token punctuation">:</span> <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    
    <span class="token comment">'Call 跟进结果更新</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">' 跟进结果更新数据, 如果存在的化就更新</span>
<span class="token keyword">Sub</span> UpdateData<span class="token punctuation">(</span>id <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> i <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    InitCheckArray
    <span class="token comment">' 执行更新操作的代码</span>

    <span class="token keyword">Call</span> 连接数据库
    
    sql <span class="token operator">=</span> <span class="token string">"UPDATE 跟进结果 SET "</span>
    <span class="token keyword">For</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">4</span>
        <span class="token keyword">If</span> checkValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token keyword">Then</span>
            checkValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"是"</span>
        <span class="token keyword">Else</span>
            checkValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"否"</span>
        <span class="token keyword">End</span> <span class="token keyword">If</span>
        sql <span class="token operator">=</span> sql <span class="token operator">&amp;</span> checkValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">"='"</span> <span class="token operator">&amp;</span> checkValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">"', "</span>
    <span class="token keyword">Next</span> i
    sql <span class="token operator">=</span> Left<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> Len<span class="token punctuation">(</span>sql<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">' 移除最后一个逗号和空格</span>
    
    <span class="token comment">' 添加 WHERE 子句，根据需要修改</span>
    sql <span class="token operator">=</span> sql <span class="token operator">&amp;</span> <span class="token string">" WHERE 学校名称id="</span> <span class="token operator">&amp;</span> id
    
    <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
    rs<span class="token punctuation">.</span>Open sql<span class="token punctuation">,</span> cnn<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span>
    
    <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    cnn<span class="token punctuation">.</span>Close<span class="token punctuation">:</span> <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    <span class="token keyword">Call</span> 跟进结果更新
    Unload <span class="token keyword">Me</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'如果不存在就插入</span>
<span class="token keyword">Sub</span> InsertData<span class="token punctuation">(</span>id <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">)</span>
    <span class="token comment">' 执行插入操作的代码</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> i <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    <span class="token keyword">Dim</span> filedTable <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> filedValues <span class="token keyword">As</span> <span class="token keyword">String</span>

    InitCheckArray
    <span class="token comment">' 执行更新操作的代码</span>
    <span class="token keyword">Call</span> 连接数据库
    sql <span class="token operator">=</span> <span class="token string">"INSERT INTO 跟进结果("</span>
    <span class="token keyword">For</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> UBound<span class="token punctuation">(</span>checkValues<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">Dim</span> value <span class="token keyword">As</span> <span class="token keyword">String</span>
        
        <span class="token keyword">If</span> checkValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token keyword">Then</span>
            checkValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"是"</span>
            
        <span class="token keyword">Else</span>
            checkValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"否"</span>
        <span class="token keyword">End</span> <span class="token keyword">If</span>
        
        filedTable <span class="token operator">=</span> filedTable <span class="token operator">&amp;</span> checkValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">","</span>
        filedValues <span class="token operator">=</span> filedValues <span class="token operator">&amp;</span> <span class="token string">"'"</span> <span class="token operator">&amp;</span> checkValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">"',"</span>
        
    <span class="token keyword">Next</span> i
    
    sql <span class="token operator">=</span> sql <span class="token operator">&amp;</span> filedTable <span class="token operator">&amp;</span> <span class="token string">"学校名称id) values("</span> <span class="token operator">&amp;</span> filedValues <span class="token operator">&amp;</span> id <span class="token operator">&amp;</span> <span class="token string">")"</span>
    
    <span class="token comment">'MsgBox sql</span>
    
    <span class="token comment">' 添加 WHERE 子句，根据需要修改</span>
    
    <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
    rs<span class="token punctuation">.</span>Open sql<span class="token punctuation">,</span> cnn<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span>
    
    <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    cnn<span class="token punctuation">.</span>Close<span class="token punctuation">:</span> <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    
    <span class="token keyword">Call</span> 跟进结果更新
    
    Unload <span class="token keyword">Me</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'单元格数据更新</span>
<span class="token keyword">Sub</span> 跟进结果更新<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> newArray<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>
    <span class="token keyword">Dim</span> selectedRow <span class="token keyword">As</span> <span class="token keyword">Long</span>
    
    newArray <span class="token operator">=</span> getNewArray
    
    selectedRow <span class="token operator">=</span> ActiveCell<span class="token punctuation">.</span>row
    
    MsgBox newArray<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    
    <span class="token keyword">Dim</span> dataRange <span class="token keyword">As</span> Range
    <span class="token keyword">Set</span> dataRange <span class="token operator">=</span> Range<span class="token punctuation">(</span><span class="token string">"m:w"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Rows<span class="token punctuation">(</span>selectedRow<span class="token punctuation">)</span>
    
    <span class="token keyword">If</span> <span class="token keyword">Not</span> dataRange <span class="token keyword">Is</span> <span class="token boolean">Nothing</span> <span class="token keyword">Then</span>
        <span class="token comment">' 将数组值写入单元格</span>
        dataRange<span class="token punctuation">.</span>value <span class="token operator">=</span> newArray
    <span class="token keyword">Else</span>
        MsgBox <span class="token string">"未找到交叉区域"</span>
    <span class="token keyword">End</span> <span class="token keyword">If</span>
    
    <span class="token keyword">Set</span> dataRange <span class="token operator">=</span> <span class="token boolean">Nothing</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">' 数组重组</span>
<span class="token keyword">Function</span> getNewArray<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>

    <span class="token keyword">Dim</span> valuesArray<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span><span class="token punctuation">,</span> i <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> numRows <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> numRows2 <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    
    <span class="token comment">' 回访数据初次重组</span>
    numRows <span class="token operator">=</span> UBound<span class="token punctuation">(</span>commboxValues<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">ReDim</span> valuesArray<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> numRows<span class="token punctuation">)</span>
    
    <span class="token keyword">If</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox3<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">""</span> <span class="token keyword">Then</span>
        <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox3<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">End</span> <span class="token keyword">If</span>
    
    valuesArray<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox3<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">For</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> numRows <span class="token operator">-</span> <span class="token number">1</span>
        valuesArray<span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> commboxValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">Next</span> i
    
    numRows2 <span class="token operator">=</span> numRows <span class="token operator">+</span> UBound<span class="token punctuation">(</span>checkValues<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    
    <span class="token keyword">ReDim</span> Preserve valuesArray<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> numRows2<span class="token punctuation">)</span>
    
    <span class="token keyword">For</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> UBound<span class="token punctuation">(</span>checkValues<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    
        valuesArray<span class="token punctuation">(</span>numRows <span class="token operator">+</span> i<span class="token punctuation">)</span> <span class="token operator">=</span> checkValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">Next</span> i 
    getNewArray <span class="token operator">=</span> valuesArray 
<span class="token keyword">End</span> <span class="token keyword">Function</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="具体实现："><a href="#具体实现：" class="headerlink" title="具体实现："></a>具体实现：</h4><p>​		<a href="https://www.dongdonga11.eu.org/2023/08/28/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">excel-中台数据库搭建（一）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">excel-中台数据库搭建（二）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%89%EF%BC%89/">excel-中台数据库搭建（三）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E5%9B%9B%EF%BC%89/">excel-中台数据库搭建（四）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">销售系统搭建（二）</a></p>
]]></content>
      
        <categories>
            
            <category> excel </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[excel-中台数据库搭建（四）]]></title>
      <url>/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>补充部分：这个部分卡的时间最长，主要就是一句sql, 正是这句sql 让我重新设计了数据库</p>
<p>需求：根据数据总表中销售的id获取这个销售所有的学校数据，再跟进这个学校数据的ID ,获取回访数据里最后一条回访数据，并且计算回访数据中，这个学校一共有多少条数据，然后再去跟进结果里面获取这个学校的跟进结果的数据。这个联表联到我怀疑人生。</p>
<p><strong>拆解下需求：</strong></p>
<p>根据销售id 获取 这个销售被分配的所有的学校数据</p>
<p>根据学校的id, 获取回访表中这个学校所有的回访数据，并取最后一条</p>
<p>获取所有的回访数据后，计算一下这个学校一共被回访了多少次</p>
<p>最后，根据学校的id查询下跟进结果里的结果数据。</p>
<p>就是这句sql，差点把整个项目鸽了。太费劲了。而且我只想用一句sql，不想来回调数据，既费内存，又费效率，好在终于搞出来了。</p>
<p>上代码</p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Public</span> tableFrom<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>
<span class="token keyword">Sub</span> InitTableFrom<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">ReDim</span> tableFrom<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>

    
    tableFrom<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.id"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.学校名称"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"销售.姓名"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.分配时间"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.回访时间"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.意向等级"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.是否与校长建联"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"跟进结果.加微信"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"跟进结果.加公众号"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"跟进结果.是否应约峰会"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"跟进结果.签约"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"cint(T.回访数据总数)"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.触达结果"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.情况说明"</span>
    tableFrom<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"R.接通部门"</span>

<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Sub</span> 客户跟进数据<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> columsTitle <span class="token keyword">As</span> <span class="token keyword">String</span>
    
    
    <span class="token keyword">Call</span> 连接数据库
    
    InitTableFrom <span class="token comment">' 初始化数组</span>
    
    columsTitle <span class="token operator">=</span> Join<span class="token punctuation">(</span>tableFrom<span class="token punctuation">,</span> <span class="token string">", "</span><span class="token punctuation">)</span> <span class="token comment">' 构建新的列名部分</span>
    
        
    <span class="token comment">'sql = "SELECT " &amp; columsTitle &amp; " " _
    &amp; "FROM (((数据总表 " _
    &amp; "LEFT JOIN " _
    &amp; "(SELECT 回访.数据总表id, COUNT(回访.数据总表id) AS 回访数据总数, Max(回访.id) AS 最后回访数据 " _
    &amp; "FROM 回访 " _
    &amp; "GROUP BY 回访.数据总表id) AS T ON 数据总表.id = T.数据总表id) " _
    &amp; "LEFT JOIN 回访 AS R ON T.最后回访数据 = R.id) " _
    &amp; "LEFT JOIN 销售 ON 数据总表.跟进人id = 销售.id) " _
    &amp; "WHERE 数据总表.跟进人id &lt;> 0"</span>

    sql <span class="token operator">=</span> <span class="token string">"SELECT "</span> <span class="token operator">&amp;</span> columsTitle <span class="token operator">&amp;</span> <span class="token string">" "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"FROM ((((数据总表 "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"LEFT JOIN "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"(SELECT 回访.数据总表id, COUNT(回访.数据总表id) AS 回访数据总数, Max(回访.id) AS 最后回访数据 "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"FROM 回访 "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"GROUP BY 回访.数据总表id) AS T ON 数据总表.id = T.数据总表id) "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"LEFT JOIN 回访 AS R ON T.最后回访数据 = R.id) "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"LEFT JOIN 销售 ON 数据总表.跟进人id = 销售.id) "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"LEFT JOIN 跟进结果 ON 数据总表.id = 跟进结果.学校名称id) "</span> <span class="token operator">_</span>
    <span class="token operator">&amp;</span> <span class="token string">"WHERE 数据总表.跟进人id &lt;> 0"</span>
    
    
    <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
    rs<span class="token punctuation">.</span>Open sql<span class="token punctuation">,</span> cnn<span class="token punctuation">,</span> adOpenKeyset<span class="token punctuation">,</span> adLockOptimistic
    
    Sheets<span class="token punctuation">(</span><span class="token string">"客户跟进表"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Range<span class="token punctuation">(</span><span class="token string">"c15"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>CopyFromRecordset rs
    
    <span class="token comment">'释放对象变量空间</span>
    rs<span class="token punctuation">.</span>Close<span class="token punctuation">:</span> <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    cnn<span class="token punctuation">.</span>Close<span class="token punctuation">:</span> <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="具体实现："><a href="#具体实现：" class="headerlink" title="具体实现："></a>具体实现：</h4><p>​		<a href="https://www.dongdonga11.eu.org/2023/08/28/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">excel-中台数据库搭建（一）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">excel-中台数据库搭建（二）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%89%EF%BC%89/">excel-中台数据库搭建（三）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">销售系统搭建（一）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">销售系统搭建（二）</a></p>
]]></content>
      
        <categories>
            
            <category> excel </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[excel-中台数据库搭建（三）]]></title>
      <url>/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>最后一个部分，完成数据修改、和删除</p>
<hr>
<h4 id="一、part1"><a href="#一、part1" class="headerlink" title="一、part1"></a>一、part1</h4><p><strong>功能设计：</strong>双击单元格 –&gt; 获取单元格的数据  –&gt; 放入指定的TEXTBOX中 –&gt; 修改数据 –&gt; 提交修改 –&gt; 单元格自动更新，不用重复调用数据库 ；  删除数据（从数据库中删除）</p>
<p><strong>遇到的卡点：</strong></p>
<ol>
<li>联表增加和删除问题，因为做了多个表，需要多个表同时删除</li>
<li>修改完数据，单元格要自动更新修改后的数据</li>
<li>窗体的设计，这个窗体设计卡的比较久，主要是想不放到更方便的方法，尝试了很多中，最后用的这种暴力方式，果然，最简单的，最暴力的方法是最有效的方法。另外，还想做一个人员分配的修改，琢磨了一下，实现难实现，同时要更新好多个表的ID，就没做了，以后有需求再说。</li>
</ol>
<h4 id="二、具体实现"><a href="#二、具体实现" class="headerlink" title="二、具体实现"></a>二、具体实现</h4><ol>
<li><p>窗体设计</p>
<p><img src="/./../../img/image-20230829110022276.png" alt="img"></p>
</li>
<li><p>双击单元格，弹出弹窗；将默认信息添加到窗体里，这里需要打开worksheet <code>数据总表</code> vba</p>
</li>
</ol>
<pre class="line-numbers language-vbscript" data-language="vbscript"><code class="language-vbscript">Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    Dim selectedRow As Range
    Dim dataRange As Range
    Dim textBoxIndex As Integer
    Dim frm As 数据修改
    Dim columnRange As Range
    
    &#39; 检查双击的目标是否为单个单元格
    If Target.Cells.Count &gt; 1 Then Exit Sub
    
    &#39; 获取当前选中单元格所在的行
    Set selectedRow &#x3D; Target.EntireRow
    
    &#39; 设置数据范围为选中行中的非空单元格
    &#39;Set dataRange &#x3D; Intersect(selectedRow, selectedRow.Parent.UsedRange).SpecialCells(xlCellTypeConstants)
    
    &#39; 设置数据范围为选中行的第3-15列和第17列的数据
    &#39;Set dataRange &#x3D; Intersect(selectedRow, selectedRow.Parent.Range(&quot;C:O,Q:Q&quot;)).SpecialCells(xlCellTypeConstants)

    
    &#39; 设置数据范围为选中行的第3-15列的数据
    &#39;Set dataRange &#x3D; Intersect(selectedRow, selectedRow.Parent.Range(&quot;C:O&quot;)).SpecialCells(xlCellTypeConstants)

    
    &#39; 设置数据范围为选中行的第3-15列的数据，包括空单元格
    Set columnRange &#x3D; selectedRow.Parent.Range(&quot;C:O&quot;)
    Set dataRange &#x3D; Intersect(selectedRow, columnRange)
    
    &#39; 检查是否存在数据
    If dataRange Is Nothing Then Exit Sub
    
    &#39; 创建并显示用户窗体
    Set frm &#x3D; New 数据修改

    &#39; 将数据依次放入窗体的TextBox中
    textBoxIndex &#x3D; 1
    For Each cell In dataRange
        frm.Controls(&quot;TextBox&quot; &amp; textBoxIndex).Text &#x3D; cell.Value
        textBoxIndex &#x3D; textBoxIndex + 1
    Next cell
    frm.Show
    &#39; 取消双击事件的默认操作
    Cancel &#x3D; True
End Sub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>提交修改后的数据，双击窗体，打开VB</li>
</ol>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'设置id不可修改</span>
<span class="token keyword">Private</span> <span class="token keyword">Sub</span> UserForm_Initialize<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">' 在窗体加载时展示数据</span>
    
    <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox1<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">False</span>
    
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic">
<span class="token comment">' 提交数据更新请求</span>
<span class="token keyword">Private</span> <span class="token keyword">Sub</span> CommandButton1_Click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> myDate <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> i <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> result <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    <span class="token keyword">Dim</span> fieldValues<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>
    
    <span class="token comment">'确认弹窗</span>
    result <span class="token operator">=</span> MsgBox<span class="token punctuation">(</span><span class="token string">"是否确认提交数据？"</span><span class="token punctuation">,</span> vbQuestion <span class="token operator">+</span> vbYesNo<span class="token punctuation">,</span> <span class="token string">"确认提交"</span><span class="token punctuation">)</span>
    
    <span class="token comment">' 根据用户选择的按钮执行不同的操作</span>
    <span class="token keyword">If</span> result <span class="token operator">=</span> vbYes <span class="token keyword">Then</span>
    
        myDate <span class="token operator">=</span> ThisWorkbook<span class="token punctuation">.</span>Path <span class="token operator">&amp;</span> <span class="token string">"\中台数据库.accdb"</span>
        
        <span class="token comment">'建立数据库连接</span>
        <span class="token keyword">With</span> cnn
            <span class="token punctuation">.</span>Provider <span class="token operator">=</span> <span class="token string">"Microsoft.ACE.OLEDB.16.0;"</span>
            <span class="token punctuation">.</span>Open myDate
        <span class="token keyword">End</span> <span class="token keyword">With</span>

        <span class="token comment">' 初始化数组，将 TextBox 的值和对应的字段名称存储在数组中</span>
        
        fieldValues<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox2<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"省份"</span>
        fieldValues<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox3<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"市"</span>
        fieldValues<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox4<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"[区/县]"</span>
        fieldValues<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox5<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"邮编"</span>
        fieldValues<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox6<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"学校名称"</span>
        fieldValues<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox7<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"地址信息"</span>
        fieldValues<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox8<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"姓名"</span>
        fieldValues<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox9<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"职称"</span>
        fieldValues<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox10<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"联系方式"</span>
        fieldValues<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox11<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"学校级别"</span>
        fieldValues<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox12<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"学校性质"</span>
        fieldValues<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox13<span class="token punctuation">.</span>Value
        fieldValues<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"归属人"</span>
        
        <span class="token comment">' 构建 SQL 更新语句的 SET 子句</span>
        sql <span class="token operator">=</span> <span class="token string">"UPDATE 数据总表 SET "</span>
        <span class="token keyword">For</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">12</span>
            sql <span class="token operator">=</span> sql <span class="token operator">&amp;</span> fieldValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">"='"</span> <span class="token operator">&amp;</span> fieldValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">"', "</span>
        <span class="token keyword">Next</span> i
        sql <span class="token operator">=</span> Left<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> Len<span class="token punctuation">(</span>sql<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">' 移除最后一个逗号和空格</span>
        
        <span class="token comment">' 添加 WHERE 子句，根据需要修改</span>
        sql <span class="token operator">=</span> sql <span class="token operator">&amp;</span> <span class="token string">" WHERE ID="</span> <span class="token operator">&amp;</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox1<span class="token punctuation">.</span>Value

        cnn<span class="token punctuation">.</span>Execute sql
        
        <span class="token keyword">Call</span> 数据更新<span class="token punctuation">(</span>fieldValues<span class="token punctuation">)</span>
        
        <span class="token comment">'释放变量</span>
        cnn<span class="token punctuation">.</span>Close
        <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
        <span class="token comment">'关闭窗体</span>
        Unload <span class="token keyword">Me</span>       
    <span class="token keyword">Else</span>
        Unload <span class="token keyword">Me</span>  
    <span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>单元格数据更新</li>
</ol>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'单元格数据更新</span>
<span class="token keyword">Private</span> <span class="token keyword">Sub</span> 数据更新<span class="token punctuation">(</span>fieldValues <span class="token keyword">As</span> <span class="token keyword">Variant</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> valuesArray<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span><span class="token punctuation">,</span> i <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    <span class="token keyword">ReDim</span> valuesArray<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">12</span><span class="token punctuation">)</span>
    
    <span class="token keyword">For</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">12</span>
        valuesArray<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span> fieldValues<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">Next</span> i
    
    <span class="token keyword">Dim</span> selectedRow <span class="token keyword">As</span> <span class="token keyword">Long</span>
    selectedRow <span class="token operator">=</span> ActiveCell<span class="token punctuation">.</span>row
    
    <span class="token keyword">Dim</span> dataRange <span class="token keyword">As</span> Range
    <span class="token keyword">Set</span> dataRange <span class="token operator">=</span> Intersect<span class="token punctuation">(</span>Rows<span class="token punctuation">(</span>selectedRow<span class="token punctuation">)</span><span class="token punctuation">,</span> Range<span class="token punctuation">(</span><span class="token string">"d:O"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>SpecialCells<span class="token punctuation">(</span>xlCellTypeConstants<span class="token punctuation">)</span>
    
    dataRange<span class="token punctuation">.</span>Value <span class="token operator">=</span> valuesArray
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>删除数据</li>
</ol>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'删除按键</span>
<span class="token keyword">Private</span> <span class="token keyword">Sub</span> CommandButton3_Click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> myDate <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> i <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> result <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    
    <span class="token comment">'确认弹窗</span>
    result <span class="token operator">=</span> MsgBox<span class="token punctuation">(</span><span class="token string">"是否确认删除数据？"</span><span class="token punctuation">,</span> vbQuestion <span class="token operator">+</span> vbYesNo<span class="token punctuation">,</span> <span class="token string">"确认删除"</span><span class="token punctuation">)</span>
    
    <span class="token comment">' 根据用户选择的按钮执行不同的操作</span>
    <span class="token keyword">If</span> result <span class="token operator">=</span> vbYes <span class="token keyword">Then</span>
    
        myDate <span class="token operator">=</span> ThisWorkbook<span class="token punctuation">.</span>Path <span class="token operator">&amp;</span> <span class="token string">"\中台数据库.accdb"</span>
        
        <span class="token comment">'建立数据库连接</span>
        <span class="token keyword">With</span> cnn
            <span class="token punctuation">.</span>Provider <span class="token operator">=</span> <span class="token string">"Microsoft.ACE.OLEDB.16.0;"</span>
            <span class="token punctuation">.</span>Open myDate
        <span class="token keyword">End</span> <span class="token keyword">With</span>
        
        sql <span class="token operator">=</span> <span class="token string">"delete from 数据总表 where id="</span> <span class="token operator">&amp;</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox1       
        cnn<span class="token punctuation">.</span>Execute sql
         
        <span class="token comment">'删除当前选中的行</span>
        <span class="token keyword">Dim</span> selectedRow <span class="token keyword">As</span> Range
        <span class="token keyword">Set</span> selectedRow <span class="token operator">=</span> Selection<span class="token punctuation">.</span>EntireRow
        
        selectedRow<span class="token punctuation">.</span>Delete
         
        <span class="token comment">'释放变量</span>
        cnn<span class="token punctuation">.</span>Close
        <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
        <span class="token comment">'关闭窗体</span>
        Unload <span class="token keyword">Me</span>

    <span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="具体实现："><a href="#具体实现：" class="headerlink" title="具体实现："></a>具体实现：</h4><p>​		<a href="https://www.dongdonga11.eu.org/2023/08/28/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">excel-中台数据库搭建（一）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">excel-中台数据库搭建（二）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E5%9B%9B%EF%BC%89/">excel-中台数据库搭建（四）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">销售系统搭建（一）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">销售系统搭建（二）</a></p>
]]></content>
      
        <categories>
            
            <category> excel </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[excel-中台数据库搭建（二）]]></title>
      <url>/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>继续上次的话题，完成了新增的功能</p>
<hr>
<h4 id="一、第二个部分是需要完成线索分配的功能"><a href="#一、第二个部分是需要完成线索分配的功能" class="headerlink" title="一、第二个部分是需要完成线索分配的功能"></a>一、第二个部分是需要完成线索分配的功能</h4><ul>
<li><p><strong>功能设计：</strong> 点击线索分配 –&gt; 弹出弹窗 –&gt; 选择分配数据类型 –&gt; 选择分配数量 –&gt; 选择查询方式 –&gt; 选择分配人–&gt; 更新分配时间 –&gt; 提交数据</p>
</li>
<li><p><strong>遇到的卡点：</strong></p>
</li>
</ul>
<p>​	这个部分做起来相对容易一些，主要遇到的是数据库设计的问题，access数据库没有动态生成id的功能，也没有事务，表的设计最初想的麻烦了，想分成很多个表，然后根据情况调取不同的表，后来发现，这个方式实在是太复杂了，放弃了，重新设计了数据库。</p>
<p>​	另外就是窗体设计和代码的编辑问题，这个部分看了教程和视频，用了chatgpt就完成了。记得之前渡一的袁老师说，程序员最重要的是思路，代码并不重要，现在发现是对的，有思路就不怕不能实现。</p>
<p>​	指针问题，这个问题困扰了很久，因为不想一直重复调用数据库，提交的时候，整体调用一次，结果就是这个坑，费了很久的时间。如果用完指针，一定要恢复指针的初始位置</p>
<h4 id="二、具体实现："><a href="#二、具体实现：" class="headerlink" title="二、具体实现："></a>二、具体实现：</h4><p>接下来说一说具体功能的实现</p>
<ol>
<li>窗体展示：</li>
</ol>
<p><img src="/./../../img/image-20230829102036849-1693374381855-1.png" alt="img"></p>
<ul>
<li><p>窗体设计的时候有个问题，就是viewList 这个在原本的设计中并没有，需要打开这个按钮：</p>
</li>
<li><p>第一步：右击空白处，点击附加控件</p>
</li>
</ul>
<p><img src="/./../../img/image-20230829102149445.png"></p>
<ul>
<li>第二步：添加附件：</li>
</ul>
<p><img src="/./../../img/image-20230829102323843-1693374393774-3.png" alt="img"></p>
<ol start="2">
<li><p>代码–获取列表框中的默认数据</p>
<p>这个部分的设计是这样的，想从设置中获取数据</p>
<p>（1）先在设置中列出数据</p>
<p><img src="/./../../img/image-20230829102901272-1693374398266-5.png" alt="img"></p>
</li>
</ol>
<p>​		（2）具体代码</p>
<p>在 <code>窗体USERFORM</code> 中双击窗体打开代码</p>
<p>这个 <code>UserForm_Initialize()</code>很重要，是初始化数据用的</p>
<p>注意，如果在提交的时候没有关闭记录集，一定要把<strong>记录集的指针</strong>调到开头，很重要（在<code>提交代码</code>里有）</p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Option</span> Explicit
<span class="token keyword">Dim</span> myArray
<span class="token keyword">Dim</span> cnn <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>connection
<span class="token keyword">Dim</span> rs <span class="token keyword">As</span> ADODB<span class="token punctuation">.</span>Recordset
<span class="token keyword">Dim</span> selectedID <span class="token keyword">As</span> <span class="token keyword">Long</span>

<span class="token comment">'初始化数据</span>

<span class="token keyword">Private</span> <span class="token keyword">Sub</span> UserForm_Initialize<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> i <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    <span class="token keyword">Dim</span> ws <span class="token keyword">As</span> Worksheet
    <span class="token keyword">Dim</span> dataRange <span class="token keyword">As</span> Range
    <span class="token keyword">Dim</span> dataValues <span class="token keyword">As</span> <span class="token keyword">Variant</span>
    <span class="token keyword">Dim</span> cell <span class="token keyword">As</span> Excel<span class="token punctuation">.</span>Range
    
    <span class="token comment">' 设置工作表对象</span>
    <span class="token keyword">Set</span> ws <span class="token operator">=</span> ThisWorkbook<span class="token punctuation">.</span>Sheets<span class="token punctuation">(</span><span class="token string">"设置"</span><span class="token punctuation">)</span>
    
    <span class="token comment">' 定义要获取数据的区域范围</span>
    <span class="token keyword">Set</span> dataRange <span class="token operator">=</span> ws<span class="token punctuation">.</span>Range<span class="token punctuation">(</span><span class="token string">"B3:C5"</span><span class="token punctuation">)</span>

    
    <span class="token comment">' 将数据填充到 ComboBox1</span>
    <span class="token keyword">For</span> <span class="token keyword">Each</span> cell <span class="token keyword">In</span> dataRange<span class="token punctuation">.</span>Columns<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Cells
    
        <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox1<span class="token punctuation">.</span>AddItem cell<span class="token punctuation">.</span>Value
        
    <span class="token keyword">Next</span> cell
    <span class="token keyword">For</span> <span class="token keyword">Each</span> cell <span class="token keyword">In</span> dataRange<span class="token punctuation">.</span>Columns<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Cells
    
        <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox2<span class="token punctuation">.</span>AddItem cell<span class="token punctuation">.</span>Value
        
    <span class="token keyword">Next</span> cell
    
    ComboBox1<span class="token punctuation">.</span>ListIndex <span class="token operator">=</span> <span class="token number">0</span>
    ComboBox2<span class="token punctuation">.</span>ListIndex <span class="token operator">=</span> <span class="token number">0</span>
    
    <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox1<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox3<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">False</span>
    
    <span class="token keyword">Set</span> ws <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    <span class="token keyword">Set</span> dataRange <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">' 获取员工数据</span>
<span class="token keyword">Public</span> <span class="token keyword">Sub</span> employ<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> rsx <span class="token keyword">As</span> ADODB<span class="token punctuation">.</span>Recordset<span class="token punctuation">,</span> myDate <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> sql_employ <span class="token keyword">As</span> <span class="token keyword">String</span>
    
    <span class="token comment">'获取分配人数据</span>
    
    sql <span class="token operator">=</span> <span class="token string">"select id,姓名 from 销售"</span>
    
    <span class="token keyword">Set</span> rsx <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
    rsx<span class="token punctuation">.</span>Open sql<span class="token punctuation">,</span> cnn<span class="token punctuation">,</span> adOpenKeyset<span class="token punctuation">,</span> adLockOptimistic
    
    ComboBox3<span class="token punctuation">.</span>Clear
    
    <span class="token keyword">While</span> <span class="token keyword">Not</span> rsx<span class="token punctuation">.</span>EOF
        <span class="token comment">' 将记录集中指定列的值添加到 ComboBox 中</span>
        ComboBox3<span class="token punctuation">.</span>AddItem rsx<span class="token punctuation">.</span>Fields<span class="token punctuation">(</span><span class="token string">"姓名"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Value <span class="token operator">&amp;</span> rsx<span class="token punctuation">.</span>Fields<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>
        rsx<span class="token punctuation">.</span>MoveNext
    <span class="token keyword">Wend</span>
    
    rsx<span class="token punctuation">.</span>Close
    <span class="token keyword">Set</span> rsx <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'改变combobox 获取分配人的ID</span>

<span class="token keyword">Private</span> <span class="token keyword">Sub</span> ComboBox3_Change<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> selectedName <span class="token keyword">As</span> <span class="token keyword">String</span>
    
    <span class="token comment">' 获取选中的员工姓名</span>
    selectedName <span class="token operator">=</span> ComboBox3<span class="token punctuation">.</span>Value
    selectedID <span class="token operator">=</span> ComboBox3<span class="token punctuation">.</span>ListIndex <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token comment">'MsgBox selectedID</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">' 根据选项卡调取数据</span>
<span class="token keyword">Private</span> <span class="token keyword">Sub</span> OptionButton3_Click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> tableTitle <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> allocation <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> entry <span class="token keyword">As</span> <span class="token keyword">Integer</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> myDate <span class="token keyword">As</span> <span class="token keyword">String</span>
    
    <span class="token keyword">If</span> cnn<span class="token punctuation">.</span>State <span class="token operator">=</span> adStateOpen <span class="token keyword">Then</span>
        <span class="token comment">' 关闭记录集</span>
        rs<span class="token punctuation">.</span>Close
        <span class="token comment">' 关闭连接</span>
        cnn<span class="token punctuation">.</span>Close
        
        <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token boolean">Nothing</span>
        <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    <span class="token keyword">End</span> <span class="token keyword">If</span>
        
    
    myDate <span class="token operator">=</span> ThisWorkbook<span class="token punctuation">.</span>Path <span class="token operator">&amp;</span> <span class="token string">"\中台数据库.accdb"</span>
    
    <span class="token comment">'建立数据库连接</span>
    <span class="token keyword">With</span> cnn
        <span class="token punctuation">.</span>Provider <span class="token operator">=</span> <span class="token string">"Microsoft.ACE.OLEDB.16.0;"</span>
        <span class="token punctuation">.</span>Open myDate
    <span class="token keyword">End</span> <span class="token keyword">With</span>
    
    <span class="token keyword">Call</span> employ

    <span class="token keyword">ReDim</span> myArray<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>
    myArray<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.id"</span>
    myArray<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.学校名称"</span>
    myArray<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.地址信息"</span>
    myArray<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.学校级别"</span>
    myArray<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"数据总表.学校性质"</span>
    tableTitle <span class="token operator">=</span> Join<span class="token punctuation">(</span>myArray<span class="token punctuation">,</span> <span class="token string">", "</span><span class="token punctuation">)</span> <span class="token comment">' 构建新的列名部分</span>
    
    <span class="token comment">'获取选框数据</span>
    allocation <span class="token operator">=</span> ComboBox1<span class="token punctuation">.</span>ListIndex   <span class="token comment">' 获取选中的第几个数据</span>
    entry <span class="token operator">=</span> ComboBox2<span class="token punctuation">.</span>Value  <span class="token comment">' 获取选中的条数</span>
    
    <span class="token keyword">Select</span> <span class="token keyword">Case</span> allocation
        <span class="token comment">' 获取发送快递的数据</span>
        <span class="token keyword">Case</span> <span class="token number">0</span>

            sql <span class="token operator">=</span> <span class="token string">"SELECT TOP "</span> <span class="token operator">&amp;</span> entry <span class="token operator">&amp;</span> <span class="token string">" "</span> <span class="token operator">&amp;</span> tableTitle <span class="token operator">&amp;</span> <span class="token string">" FROM (数据总表 "</span> <span class="token operator">_</span>
            <span class="token operator">&amp;</span> <span class="token string">"inner JOIN 快递数据 ON 数据总表.学校名称 = 快递数据.学校名称) "</span> <span class="token operator">_</span>
            <span class="token operator">&amp;</span> <span class="token string">"WHERE 数据总表.跟进人id = 0"</span>
            
            <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
            rs<span class="token punctuation">.</span>Open sql<span class="token punctuation">,</span> cnn<span class="token punctuation">,</span> adOpenKeyset<span class="token punctuation">,</span> adLockOptimistic
            <span class="token keyword">Call</span> ListView1_data
            
            
        <span class="token comment">' 获取所有的数据</span>
        <span class="token keyword">Case</span> <span class="token number">1</span>
            
            sql <span class="token operator">=</span> <span class="token string">"SELECT TOP "</span> <span class="token operator">&amp;</span> entry <span class="token operator">&amp;</span> <span class="token string">" "</span> <span class="token operator">&amp;</span> tableTitle <span class="token operator">&amp;</span> <span class="token string">" FROM 数据总表 "</span> <span class="token operator">_</span>
            <span class="token operator">&amp;</span> <span class="token string">"LEFT JOIN 快递数据 ON 数据总表.学校名称= 快递数据.学校名称 "</span> <span class="token operator">_</span>
            <span class="token operator">&amp;</span> <span class="token string">"WHERE 数据总表.跟进人id = 0"</span>

            <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
            rs<span class="token punctuation">.</span>Open sql<span class="token punctuation">,</span> cnn<span class="token punctuation">,</span> adOpenKeyset<span class="token punctuation">,</span> adLockOptimistic
            
            <span class="token keyword">Call</span> ListView1_data
            
        <span class="token comment">'获取未发快递数据</span>
        <span class="token keyword">Case</span> <span class="token number">2</span>

            sql <span class="token operator">=</span> <span class="token string">"SELECT DISTINCT TOP "</span> <span class="token operator">&amp;</span> entry <span class="token operator">&amp;</span> <span class="token string">" "</span> <span class="token operator">&amp;</span> tableTitle <span class="token operator">&amp;</span> <span class="token string">" FROM 数据总表,快递数据 "</span> <span class="token operator">_</span>
            <span class="token operator">&amp;</span> <span class="token string">"WHERE 数据总表.学校名称 &lt;> 快递数据.学校名称 and 数据总表.跟进人id = 0 "</span> <span class="token operator">_</span>

            <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
            rs<span class="token punctuation">.</span>Open sql<span class="token punctuation">,</span> cnn<span class="token punctuation">,</span> adOpenKeyset<span class="token punctuation">,</span> adLockOptimistic
            
            <span class="token keyword">Call</span> ListView1_data
            
        <span class="token keyword">Case</span> <span class="token keyword">Else</span>
            MsgBox <span class="token string">"其他"</span>
    
    <span class="token keyword">End</span> <span class="token keyword">Select</span>
    <span class="token keyword">Me</span><span class="token punctuation">.</span>ComboBox3<span class="token punctuation">.</span>Enabled <span class="token operator">=</span> <span class="token boolean">True</span>
    <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox1<span class="token punctuation">.</span>Value <span class="token operator">=</span> Now
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'获取listview里的数据</span>

<span class="token keyword">Public</span> <span class="token keyword">Sub</span> ListView1_data<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> field <span class="token keyword">As</span> field<span class="token punctuation">,</span> i <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> j <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> lvwItem <span class="token keyword">As</span> ListItem
    <span class="token keyword">On</span> <span class="token keyword">Error</span> <span class="token keyword">Resume</span> <span class="token keyword">Next</span>
    
    <span class="token keyword">If</span> rs<span class="token punctuation">.</span>EOF <span class="token keyword">Or</span> rs<span class="token punctuation">.</span>BOF <span class="token keyword">Then</span>
        MsgBox <span class="token string">"Recordset is empty."</span>
        <span class="token keyword">Exit</span> <span class="token keyword">Sub</span>
    <span class="token keyword">End</span> <span class="token keyword">If</span>
    
     <span class="token comment">' 清除 ListView1 中的所有项</span>
    ListView1<span class="token punctuation">.</span>ListItems<span class="token punctuation">.</span>Clear
    <span class="token keyword">With</span> ListView1
    
        <span class="token punctuation">.</span>ColumnHeaders<span class="token punctuation">.</span>Clear <span class="token comment">'清除表头</span>
        <span class="token punctuation">.</span>ListItems<span class="token punctuation">.</span>Clear <span class="token comment">'清除记录</span>
        <span class="token punctuation">.</span>View <span class="token operator">=</span> lvwReport <span class="token comment">' 设置显示方式未报表</span>
        <span class="token punctuation">.</span>FullRowSelect <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token comment">'允许选中整行</span>
        <span class="token punctuation">.</span>Gridlines <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token comment">' 显示网格线</span>
        
        <span class="token comment">'循环方式为listbox1 添加标题</span>
        <span class="token keyword">For</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">To</span> rs<span class="token punctuation">.</span>Fields<span class="token punctuation">.</span>Count <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token punctuation">.</span>ColumnHeaders<span class="token punctuation">.</span>Add <span class="token punctuation">,</span> <span class="token punctuation">,</span> rs<span class="token punctuation">.</span>Fields<span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Name
        <span class="token keyword">Next</span> i
        
         <span class="token comment">' 循环遍历记录集中的数据</span>
        i <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token keyword">While</span> <span class="token keyword">Not</span> rs<span class="token punctuation">.</span>EOF
            <span class="token comment">' 添加新的项</span>
            <span class="token keyword">Set</span> lvwItem <span class="token operator">=</span> ListView1<span class="token punctuation">.</span>ListItems<span class="token punctuation">.</span>Add<span class="token punctuation">(</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> rs<span class="token punctuation">.</span>Fields<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Value<span class="token punctuation">)</span> <span class="token comment">' 第一列数据</span>
        
            <span class="token comment">' 添加子项</span>
            <span class="token keyword">For</span> j <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> rs<span class="token punctuation">.</span>Fields<span class="token punctuation">.</span>Count <span class="token operator">-</span> <span class="token number">1</span>
                lvwItem<span class="token punctuation">.</span>ListSubItems<span class="token punctuation">.</span>Add <span class="token punctuation">,</span> <span class="token punctuation">,</span> rs<span class="token punctuation">.</span>Fields<span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Value <span class="token comment">' 其他列数据</span>
            <span class="token keyword">Next</span> j
        
            rs<span class="token punctuation">.</span>MoveNext
            i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token keyword">Wend</span>

    <span class="token keyword">End</span> <span class="token keyword">With</span>
    
    
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'提交</span>
<span class="token keyword">Public</span> <span class="token keyword">Sub</span> CommandButton1_Click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">,</span> nowDate <span class="token keyword">As</span> <span class="token keyword">Date</span><span class="token punctuation">,</span> i <span class="token keyword">As</span> <span class="token keyword">Long</span><span class="token punctuation">,</span> result <span class="token keyword">As</span> <span class="token keyword">Integer</span>

    <span class="token comment">'确认弹窗</span>
    result <span class="token operator">=</span> MsgBox<span class="token punctuation">(</span><span class="token string">"是否确认提交数据？"</span><span class="token punctuation">,</span> vbQuestion <span class="token operator">+</span> vbYesNo<span class="token punctuation">,</span> <span class="token string">"确认提交"</span><span class="token punctuation">)</span>
    
    <span class="token comment">' 根据用户选择的按钮执行不同的操作</span>
    <span class="token keyword">If</span> result <span class="token operator">=</span> vbYes <span class="token keyword">Then</span>
        nowDate <span class="token operator">=</span> <span class="token keyword">Me</span><span class="token punctuation">.</span>TextBox1<span class="token punctuation">.</span>Value
        
        rs<span class="token punctuation">.</span>MoveFirst    <span class="token comment">'将记录集指针移动到开头</span>
        
        <span class="token keyword">If</span> rs<span class="token punctuation">.</span>EOF <span class="token keyword">Or</span> rs<span class="token punctuation">.</span>BOF <span class="token keyword">Then</span>
            MsgBox <span class="token string">"Recordset is empty."</span>
            <span class="token keyword">Exit</span> <span class="token keyword">Sub</span>
        <span class="token keyword">End</span> <span class="token keyword">If</span>
        
        <span class="token keyword">While</span> <span class="token keyword">Not</span> rs<span class="token punctuation">.</span>EOF
            
            sql <span class="token operator">=</span> <span class="token string">"update 数据总表 "</span> <span class="token operator">_</span>
            <span class="token operator">&amp;</span> <span class="token string">"set 跟进人id="</span> <span class="token operator">&amp;</span> selectedID <span class="token operator">&amp;</span> <span class="token string">","</span> <span class="token operator">&amp;</span> <span class="token string">"分配时间="</span> <span class="token operator">&amp;</span> <span class="token string">"'"</span> <span class="token operator">&amp;</span> nowDate <span class="token operator">&amp;</span> <span class="token string">"',"</span> <span class="token operator">&amp;</span> <span class="token string">"更新时间="</span> <span class="token operator">&amp;</span> <span class="token string">"'"</span> <span class="token operator">&amp;</span> nowDate <span class="token operator">&amp;</span> <span class="token string">"' "</span> <span class="token operator">_</span>
            <span class="token operator">&amp;</span> <span class="token string">"where 数据总表.id = "</span> <span class="token operator">&amp;</span> <span class="token keyword">CInt</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span>Fields<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Value<span class="token punctuation">)</span>
            
            cnn<span class="token punctuation">.</span>Execute <span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
            rs<span class="token punctuation">.</span>MoveNext
        <span class="token keyword">Wend</span>
        
        <span class="token comment">' 关闭记录集</span>
        rs<span class="token punctuation">.</span>Close
        <span class="token comment">' 关闭连接</span>
        cnn<span class="token punctuation">.</span>Close
        
        <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token boolean">Nothing</span>
        <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
        
        Unload <span class="token keyword">Me</span>
    
    <span class="token keyword">Else</span>
        <span class="token comment">' 关闭记录集</span>
        rs<span class="token punctuation">.</span>Close
        <span class="token comment">' 关闭连接</span>
        cnn<span class="token punctuation">.</span>Close
        
        <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token boolean">Nothing</span>
        <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
        
    <span class="token keyword">End</span> <span class="token keyword">If</span>

<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<hr>
<h4 id="具体实现："><a href="#具体实现：" class="headerlink" title="具体实现："></a>具体实现：</h4><p>​		<a href="https://www.dongdonga11.eu.org/2023/08/28/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">excel-中台数据库搭建（一）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%89%EF%BC%89/">excel-中台数据库搭建（三）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E5%9B%9B%EF%BC%89/">excel-中台数据库搭建（四）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">销售系统搭建（一）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">销售系统搭建（二）</a></p>
]]></content>
      
        <categories>
            
            <category> excel </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[excel-中台数据库搭建（一）]]></title>
      <url>/2023/08/28/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<blockquote>
<p>最近事情很多，有好的，有不好的。项目拖延了很久，大概有20多天，项目是之前答应好的，总算告一段落，想着做一些总结，写一份8月的日志。</p>
<ul>
<li><p>在这个月，姥爷去世了，第一次直面亲人的离世，没有看到水晶棺的那一刻，总归没有多少感触，当看到的那一刻，眼泪怎么也止不住的流，以前的种种经历就像灯片一样在眼前划过。</p>
</li>
<li><p>另一个事情，和小彭的感情也变好了一些，可能是两人在最近都经历了亲人的离开，心理上难免走进了一点，也算是这个月的安慰吧</p>
</li>
<li><p>还有一个事是对于自己的思考，有两个项目的机会，一个是慧婷希望一起合作一个画画的项目，一个是牛杰的抢票业务。但是最近也不知道为什么，总也提不起精神。以前的时候老因为项目的事放别人鸽子，最近突然觉得，人，要守信</p>
</li>
<li><p>最后聊聊工作，最近工作上也有点不顺，感觉最近没有精神头，很多知道的事也不知道怎么干了，很困扰，不知道是瓶颈还是什么，总说不清，反正工作上是不太舒服，没什么事，也有点事，有点事又不想干，不想干又不甘心，说不清。</p>
</li>
</ul>
</blockquote>
<p>经过半个多月的学习，查资料，构思，加上家里乱七八糟的事，终于把系统做的差不多。</p>
<p>这个项目属于第一次写VBA项目，之前都是用公式做自动化，但是公式能做的毕竟有限，所以还是想练习下VBA的系统，没准以后用的着，也是自己百闲中的一个小兴趣吧。</p>
<h4 id="一、part1"><a href="#一、part1" class="headerlink" title="一、part1"></a>一、part1</h4><p>在做这个系统中，初想挺简单的，无非就是调调数据库，做做查询，实际做起来还是有点东西的，在这个项目中遇到几个困难</p>
<ol>
<li>数据库的设计（如何把数据库分开设计，都有哪些数据需要分开，设计的时候给自己造成了很多的困难）</li>
<li>窗体的设计（设计窗体我没试过，第一次设计窗体，还行，没那么复杂）</li>
<li>数据更新后不想调数据库，如何把数据放到指定位置</li>
<li>数据库联表查询，多个数据库，联表查询可费了老鼻子劲了</li>
<li>数据库ID值更新，更新一个数据，在其他数据库中更新这个id（后来我放弃了）</li>
</ol>
<p>总体来说就是这几个问题，幸好有chatgpt，要不自己真不知道啥时候能整出来。</p>
<h4 id="二、part2"><a href="#二、part2" class="headerlink" title="二、part2"></a>二、part2</h4><p>接下来说一下具体功能上的实现</p>
<p><strong>第一个：新增数据</strong></p>
<p><strong>功能设计：</strong></p>
<p>这个功能就是一个批量导入数据，需要一个固定的excel模板，点击按钮 &#x3D;&gt; 选则文件 &#x3D;&gt; 获取数据 &#x3D;&gt; 添加数据库 &#x3D;&gt; 同步添加到这个excel里</p>
<p><strong>遇到的问题和卡点：</strong></p>
<ol>
<li>最初设计的时候最后一步是希望直接添加到excel里的，但是后来在实现的过程中，发现如果不调取数据库,id值的获取是个问题，因为如果要删除的话，id就全乱了，所以最后还是添加完数据以后再调用一次数据库。</li>
</ol>
<p><strong>代码设计：</strong></p>
<ol>
<li>连接数据库和调取全部数据用的次数比较多，需要封装一个方法</li>
<li>调用数据库中”字段名“也使用频繁，而且改动比较麻烦，为了方便维护，需要用数组将数据存起来，以后需要改动代码，只用改动数组就可以了</li>
<li>添加的步骤比较繁琐，后续用的也不多，可以根据功能用”面向过程“思路实现</li>
</ol>
<p><strong>具体实现：</strong></p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Option</span> Explicit
<span class="token keyword">Public</span> myArray<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>
<span class="token keyword">Sub</span> InitializeArray<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">ReDim</span> myArray<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> <span class="token number">13</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>
    myArray<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"id"</span>
    myArray<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"省份"</span>
    myArray<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"市"</span>
    myArray<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"[区/县]"</span>
    myArray<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"邮编"</span>
    myArray<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"学校名称"</span>
    myArray<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"地址信息"</span>
    myArray<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"姓名"</span>
    myArray<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"职称"</span>
    myArray<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"联系方式"</span>
    myArray<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"学校级别"</span>
    myArray<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"学校性质"</span>
    myArray<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"归属人"</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'第一步 打开对话框</span>

<span class="token keyword">Public</span> <span class="token keyword">Sub</span> forlder_open<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> fileDialog <span class="token keyword">As</span> fileDialog
    <span class="token keyword">Dim</span> selectedFile <span class="token keyword">As</span> <span class="token keyword">Variant</span>
    
    <span class="token comment">' 创建文件选择对话框</span>
    <span class="token keyword">Set</span> fileDialog <span class="token operator">=</span> Application<span class="token punctuation">.</span>fileDialog<span class="token punctuation">(</span>msoFileDialogFilePicker<span class="token punctuation">)</span>
    
    <span class="token comment">' 设置对话框属性</span>
    fileDialog<span class="token punctuation">.</span>AllowMultiSelect <span class="token operator">=</span> <span class="token boolean">False</span>
    fileDialog<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">"选择 Excel 文件"</span>
    fileDialog<span class="token punctuation">.</span>Filters<span class="token punctuation">.</span>Clear
    fileDialog<span class="token punctuation">.</span>Filters<span class="token punctuation">.</span>Add <span class="token string">"Excel 文件"</span><span class="token punctuation">,</span> <span class="token string">"*.xlsx; *.xls"</span>
    
    <span class="token comment">' 显示文件选择对话框并获取选中的文件</span>
    <span class="token keyword">If</span> fileDialog<span class="token punctuation">.</span>Show <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">Then</span>
        selectedFile <span class="token operator">=</span> fileDialog<span class="token punctuation">.</span>SelectedItems<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">Call</span> open_fild<span class="token punctuation">(</span>selectedFile<span class="token punctuation">)</span>
    <span class="token keyword">Else</span>
        <span class="token keyword">Exit</span> <span class="token keyword">Sub</span> <span class="token comment">' 用户取消了选择，退出子过程</span>
    <span class="token keyword">End</span> <span class="token keyword">If</span>
    
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'第二步 获取excel对象，并获取数据</span>

<span class="token keyword">Public</span> <span class="token keyword">Sub</span> open_fild<span class="token punctuation">(</span>selectedFile<span class="token punctuation">)</span>

    <span class="token keyword">Dim</span> excelApp <span class="token keyword">As</span> <span class="token keyword">Object</span>
    <span class="token keyword">Dim</span> Workbook <span class="token keyword">As</span> <span class="token keyword">Object</span>
    <span class="token keyword">Dim</span> Worksheet <span class="token keyword">As</span> <span class="token keyword">Object</span>
    <span class="token keyword">Dim</span> fieldValue <span class="token keyword">As</span> <span class="token keyword">Variant</span>


    <span class="token keyword">Call</span> 连接数据库     <span class="token comment">'数据库连接</span>
    
    MsgBox <span class="token string">"数据库已连接"</span>
    
    <span class="token comment">' 创建 Excel 应用程序对象</span>
    <span class="token keyword">Set</span> excelApp <span class="token operator">=</span> CreateObject<span class="token punctuation">(</span><span class="token string">"Excel.Application"</span><span class="token punctuation">)</span>
    
    <span class="token comment">' 打开选中的 Excel 文件</span>
    <span class="token keyword">Set</span> Workbook <span class="token operator">=</span> excelApp<span class="token punctuation">.</span>Workbooks<span class="token punctuation">.</span>Open<span class="token punctuation">(</span>selectedFile<span class="token punctuation">)</span>
    
    <span class="token comment">' 获取 Excel 数据并填充到数据库</span>
    <span class="token keyword">Set</span> Worksheet <span class="token operator">=</span> Workbook<span class="token punctuation">.</span>Sheets<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">' 假设数据在第一个工作表中</span>
    
    <span class="token keyword">Call</span> add_sql<span class="token punctuation">(</span>Worksheet<span class="token punctuation">)</span>
    
    <span class="token comment">' 关闭 Excel 文件</span>
    Workbook<span class="token punctuation">.</span>Close <span class="token boolean">False</span>
    
    <span class="token comment">' 关闭 Excel 应用程序</span>
    excelApp<span class="token punctuation">.</span>Quit
    <span class="token keyword">Set</span> Workbook <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    <span class="token keyword">Set</span> excelApp <span class="token operator">=</span> <span class="token boolean">Nothing</span>

<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'第三步 增加数据</span>

<span class="token keyword">Public</span> <span class="token keyword">Sub</span> add_sql<span class="token punctuation">(</span>Worksheet<span class="token punctuation">)</span>
        
    <span class="token keyword">Dim</span> fieldNames<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> dataArray<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Variant</span>
    <span class="token keyword">Dim</span> row <span class="token keyword">As</span> <span class="token keyword">Long</span>
    <span class="token keyword">Dim</span> column <span class="token keyword">As</span> <span class="token keyword">Long</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span>
    
    <span class="token comment">' 获取字段名称数组</span>
    <span class="token keyword">ReDim</span> fieldNames<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> Worksheet<span class="token punctuation">.</span>UsedRange<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span>Count<span class="token punctuation">)</span>
    <span class="token keyword">For</span> column <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> Worksheet<span class="token punctuation">.</span>UsedRange<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span>Count
        fieldNames<span class="token punctuation">(</span>column<span class="token punctuation">)</span> <span class="token operator">=</span> Worksheet<span class="token punctuation">.</span>Cells<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> column<span class="token punctuation">)</span><span class="token punctuation">.</span>Value
    <span class="token keyword">Next</span> column
    
    <span class="token comment">' 获取数据数组</span>
    <span class="token keyword">ReDim</span> dataArray<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">To</span> Worksheet<span class="token punctuation">.</span>UsedRange<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span>Count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">To</span> Worksheet<span class="token punctuation">.</span>UsedRange<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span>Count<span class="token punctuation">)</span>
    <span class="token keyword">For</span> row <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">To</span> Worksheet<span class="token punctuation">.</span>UsedRange<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span>Count
        <span class="token keyword">For</span> column <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> Worksheet<span class="token punctuation">.</span>UsedRange<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span>Count
            dataArray<span class="token punctuation">(</span>row <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token punctuation">)</span> <span class="token operator">=</span> Worksheet<span class="token punctuation">.</span>Cells<span class="token punctuation">(</span>row<span class="token punctuation">,</span> column<span class="token punctuation">)</span><span class="token punctuation">.</span>Value
        <span class="token keyword">Next</span> column
    <span class="token keyword">Next</span> row
    
    <span class="token comment">' 执行插入语句将数据插入到数据库表中</span>
    <span class="token keyword">For</span> row <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> UBound<span class="token punctuation">(</span>dataArray<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        sql <span class="token operator">=</span> <span class="token string">"INSERT INTO 数据总表("</span> <span class="token operator">&amp;</span> Join<span class="token punctuation">(</span>fieldNames<span class="token punctuation">,</span> <span class="token string">", "</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">") VALUES("</span>
        <span class="token keyword">For</span> column <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">To</span> UBound<span class="token punctuation">(</span>dataArray<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
            sql <span class="token operator">=</span> sql <span class="token operator">&amp;</span> <span class="token string">"'"</span> <span class="token operator">&amp;</span> Replace<span class="token punctuation">(</span><span class="token keyword">CStr</span><span class="token punctuation">(</span>dataArray<span class="token punctuation">(</span>row<span class="token punctuation">,</span> column<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"'"</span><span class="token punctuation">,</span> <span class="token string">"''"</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">"', "</span>
        <span class="token keyword">Next</span> column
        sql <span class="token operator">=</span> Left<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> Len<span class="token punctuation">(</span>sql<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">")"</span>
        <span class="token comment">'MsgBox sql</span>
        cnn<span class="token punctuation">.</span>Execute sql
    <span class="token keyword">Next</span> row


    <span class="token comment">'Call UpdateForeignKey(Worksheet.UsedRange.Rows.Count - 1) '更新外键</span>
    <span class="token keyword">Call</span> 获取所有数据
    
    <span class="token comment">'MsgBox Worksheet.UsedRange.Rows.Count</span>
    MsgBox <span class="token string">"写入数据"</span>
    
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="具体实现："><a href="#具体实现：" class="headerlink" title="具体实现："></a>具体实现：</h4><p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">excel-中台数据库搭建（二）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%89%EF%BC%89/">excel-中台数据库搭建（三）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E5%9B%9B%EF%BC%89/">excel-中台数据库搭建（四）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">销售系统搭建（一）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">销售系统搭建（二）</a></p>
]]></content>
      
        <categories>
            
            <category> excel </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-小示例-02-连接mdb数据库]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E5%B0%8F%E7%A4%BA%E4%BE%8B-02-%E8%BF%9E%E6%8E%A5mdb%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      <content type="html"><![CDATA[<p>目录</p>
<p>Part 1：本篇目标</p>
<ol>
<li>常用Access数据库格式为<em><strong>accdb</strong></em>，近来发现一种<em><strong>mdb</strong></em>数据格式的</li>
<li>作为数据库端，本文就是验证一下两者在使用<em><strong>VBA</strong></em>连接时是否有一些明显区别</li>
<li>示例：连接***mdb***数据库，并将内容显示到前端</li>
</ol>
<p><strong>mdb数据库</strong></p>
<p><img src="/./../../img/640-1690880578432-390.png" alt="图片"></p>
<p><strong>前端效果</strong></p>
<p><img src="/./../../img/640-1690880578433-391.gif" alt="图片"></p>
<hr>
<p>目录</p>
<p>Part 2：实现步骤</p>
<ol>
<li><p>新建一个<em><strong>Access</strong></em>文件，默认为<em><strong>accdb</strong></em>格式，转变为<em><strong>mdb</strong></em>格式步骤如下</p>
</li>
<li><ul>
<li>打开该文件，点击<strong>文件</strong>菜单，另存为<strong>mdb</strong>格式即可</li>
<li>在该文件中录入相关信息</li>
</ul>
</li>
<li><p>再新建一个<strong>Access</strong>文件，作为界面端，<strong>VBA</strong>代码也是写在这里</p>
</li>
<li><ul>
<li>搭建一个简单界面，包括一个按钮和一个列表框</li>
<li>设计视图下，设置列表框的<strong>列数</strong>、<strong>列标题：是</strong>、<strong>行来源类型：值列表</strong></li>
<li>设计视图下，按钮的单击事件写入以下代码</li>
</ul>
</li>
</ol>
<p><strong>另存为mdb文件</strong></p>
<p><img src="/./../../img/640-1690880578433-392.png" alt="图片"></p>
<hr>
<p>目录</p>
<p>Part 3：代码</p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command0_Click()  </span><br><span class="line">    <span class="comment">&#x27; 第1部分：后端操作   </span></span><br><span class="line">    <span class="comment">&#x27; 数据库连接  </span></span><br><span class="line">    <span class="keyword">Dim</span> currentDir </span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line">    <span class="keyword">Dim</span> adConn As ADODB.Connection </span><br><span class="line">    <span class="keyword">Set</span> adConn = <span class="keyword">New</span> ADODB.Connection   </span><br><span class="line">    <span class="keyword">Dim</span> rs As ADODB.Recordset  </span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="keyword">New</span> ADODB.Recordset        </span><br><span class="line">    <span class="comment">&#x27; 数据库地址  </span></span><br><span class="line">    currentDir = Application.CurrentProject.Path &amp; <span class="string">&quot;\&quot;</span>    dbAddr = currentDir &amp; <span class="string">&quot;数据库.mdb&quot;</span>     </span><br><span class="line">    <span class="keyword">With</span> adConn    </span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0;&quot;</span>    </span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span>     </span><br><span class="line">    SQL = <span class="string">&quot;Select * From basic&quot;</span><span class="comment">&#x27;   </span></span><br><span class="line">    <span class="keyword">Set</span> rs = adConn.<span class="keyword">Execute</span>(SQL)  </span><br><span class="line">    rs.Open SQL, adConn, adOpenKeyset, adLockOptimistic  </span><br><span class="line">    <span class="comment">&#x27; 第2部分：前端显示   </span></span><br><span class="line">    <span class="keyword">Set</span> ctrl = <span class="keyword">Me</span>.Controls(<span class="string">&quot;List1&quot;</span>) </span><br><span class="line">    <span class="comment">&#x27;清除原listbox 信息  </span></span><br><span class="line">    ctrl.RowSource = <span class="string">&quot;&quot;</span>    </span><br><span class="line">    <span class="keyword">Dim</span> rsCount  </span><br><span class="line">    </span><br><span class="line">    rsCount = rs.RecordCount     </span><br><span class="line">    <span class="keyword">If</span> rsCount &lt; <span class="number">1</span> <span class="keyword">Then</span> <span class="comment">&#x27;没有信息&#x27;  </span></span><br><span class="line">        strAnswer = <span class="built_in">MsgBox</span>(<span class="string">&quot;无数据&quot;</span>, vbInformation, <span class="string">&quot;提示&quot;</span>)     </span><br><span class="line">        <span class="keyword">Exit</span> <span class="keyword">Sub</span>   </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span>      </span><br><span class="line">    fildCount = rs.Fields.Count   <span class="comment">&#x27; 字段数目  </span></span><br><span class="line">    existsRow = ctrl.ListCount    <span class="comment">&#x27; 当前已写入行        </span></span><br><span class="line">    <span class="comment">&#x27;写入表头   </span></span><br><span class="line">    tableHeader = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">If</span> existsRow = <span class="number">0</span> <span class="keyword">Then</span>    </span><br><span class="line">        <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> fildCount - <span class="number">1</span> <span class="keyword">Step</span> <span class="number">1</span>    </span><br><span class="line">            fildName = rs.Fields(i).Name      </span><br><span class="line">            <span class="keyword">If</span> tableHeader = <span class="string">&quot;&quot;</span> <span class="keyword">Then</span>         </span><br><span class="line">                tableHeader = fildName      </span><br><span class="line">            <span class="keyword">Else</span>               </span><br><span class="line">                tableHeader = tableHeader &amp; <span class="string">&quot;;&quot;</span> &amp; fildName    </span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span> i</span><br><span class="line">        ctrl.AddItem tableHeader </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span>     </span><br><span class="line">    <span class="comment">&#x27;回到第一条记录  </span></span><br><span class="line">    rs.MoveFirst   </span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> rsCount   </span><br><span class="line">        fildContents = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> fildCount - <span class="number">1</span> <span class="keyword">Step</span> <span class="number">1</span>    </span><br><span class="line">            fildContent = rs.Fields(j).Value   </span><br><span class="line">            <span class="keyword">If</span> fildContents = <span class="string">&quot;&quot;</span> <span class="keyword">Then</span>        </span><br><span class="line">                fildContents = fildContent     </span><br><span class="line">            <span class="keyword">Else</span>              </span><br><span class="line">                fildContents = fildContents &amp; <span class="string">&quot;;&quot;</span> &amp; fildContent     </span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span> j     </span><br><span class="line">        ctrl.AddItem fildContents</span><br><span class="line">        rs.MoveNext </span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line">    adConn.Close  </span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span>  </span><br><span class="line">    <span class="keyword">Set</span> adConn = <span class="literal">Nothing</span> </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>





<p><strong>代码截图</strong></p>
<p><img src="/./../../img/640-1690880578433-393.png" alt="图片"></p>
<p><img src="/./../../img/640-1690880578433-394.png" alt="图片"></p>
<hr>
<p>目录</p>
<p>Part 4：部分代码解读</p>
<ol>
<li><p>对数据库的操作，一般分为以下几个步骤</p>
</li>
<li><ul>
<li>确定数据库地址</li>
<li>连接数据库</li>
<li>确定SQL语句</li>
<li>执行SQL语句</li>
<li>若有返回结果，对返回结果进行处理</li>
</ul>
</li>
<li><p>执行SQL语句一般有两种方法</p>
</li>
<li><ul>
<li><code>Set rs = adConn.Execute(SQL)</code>，若无需返回结果，可以采用该方法，例如插入、删除、更新等操作</li>
<li><code>rs.Open SQL, adConn, adOpenKeyset, adLockOptimistic</code>，若需要返回结果，可以采用该方法，例如查询</li>
<li>当然还有一些更细致的区别，但一般也只用到这两个区别</li>
</ul>
</li>
<li><p>本文使用<code>ADODB.Connection</code>连接数据库，记得务必在<strong>Access</strong>中手动加入引用，本文采用的是<code>Microsoft ActiveX Data Objects 6.1 Library</code>,加入方法如下</p>
</li>
<li><ul>
<li>VBE界面下<strong>工具</strong>菜单-引用</li>
</ul>
</li>
</ol>
<p><img src="/./../../img/640-1690880578433-395.png" alt="图片"></p>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>目录</p>
<p>Part 5：小结</p>
<ol>
<li>本文中对<em><strong>mdb</strong></em>数据库的连接方法与<em><strong>accdb</strong></em>采用一样的方法，目前来看可以适用</li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 常用小实例 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-常用功能解析-01-账户权限管理]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90-01-%E8%B4%A6%E6%88%B7%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p><strong>Part 1：本篇目标</strong></p>
<ol>
<li>根据打开软件的不同用户，赋予不同操作权限</li>
<li>本质上就是将一部分控件禁用，一部分控件启用</li>
<li>如下图所示，打开窗体时，禁用按钮<strong>非管理员按钮</strong>，启用按钮<strong>管理员按钮</strong>，在文本框中写入当前登录账户</li>
</ol>
<p>效果图</p>
<p><img src="/./../../img/640-1690880364122-379.png" alt="图片"></p>
<p><strong>Part 2：实现步骤</strong></p>
<ol>
<li>画出设计图，文本框名称为<em><strong>txt1*<strong>，管理员按钮名称为</strong>*cmd1**<em>，非管理员按钮名称为</em></strong>cmd2*</em>*</li>
</ol>
<p>界面设计</p>
<p><img src="/./../../img/640-1690880364123-380.png" alt="图片"></p>
<p><strong>Part 3：代码</strong></p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Load()  </span><br><span class="line">    currentUserName = Environ(<span class="string">&quot;username&quot;</span>)  </span><br><span class="line">    Debug.Pr<span class="built_in">int</span> (currentUserName)     </span><br><span class="line">    <span class="keyword">Set</span> frm = Forms(<span class="string">&quot;窗体1&quot;</span>)    </span><br><span class="line">    <span class="keyword">Set</span> ctrl1 = frm.Controls(<span class="string">&quot;cmd1&quot;</span>)  </span><br><span class="line">    <span class="keyword">Set</span> ctrl2 = frm.Controls(<span class="string">&quot;cmd2&quot;</span>) </span><br><span class="line">    <span class="keyword">Set</span> ctrl3 = frm.Controls(<span class="string">&quot;txt1&quot;</span>)      </span><br><span class="line">    <span class="keyword">If</span> currentUserName = <span class="string">&quot;Administrator&quot;</span> <span class="keyword">Then</span>     </span><br><span class="line">        ctrl1.Enabled = <span class="literal">True</span>    </span><br><span class="line">        ctrl2.Enabled = <span class="literal">False</span> </span><br><span class="line">    <span class="keyword">Else</span>    </span><br><span class="line">        ctrl1.Enabled = <span class="literal">False</span>      </span><br><span class="line">        ctrl2.Enabled = <span class="literal">True</span>  </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span>     </span><br><span class="line">    ctrl3.Value = currentUserName  </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>



<p>代码截图</p>
<p><img src="/./../../img/640-1690880364126-381.png" alt="图片"></p>
<p><strong>Part 3：部分代码解读</strong></p>
<ol>
<li><code>currentUserName = Environ(&quot;username&quot;)</code>获取当前登录账户</li>
<li><code>ctrl1.Enabled = True</code>启用控件<em><strong>ctrl1</strong></em></li>
<li><code>ctrl2.Enabled = False</code>禁用控件<em><strong>ctrl2</strong></em></li>
<li>***Private Sub Form_Load()***，窗体启动事件</li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 常用小实例 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-控件解析-窗体-02-进度条]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%AA%97%E4%BD%93-02-%E8%BF%9B%E5%BA%A6%E6%9D%A1/</url>
      <content type="html"><![CDATA[<p><strong>Part 1：示例</strong></p>
<ol>
<li>点击按钮实现进度条显示，并显示完成程度百分比</li>
</ol>
<p>效果图<br><img src="/./../../img/640-1690880136994-358.png" alt="图片"></p>
<p>动态图<br><img src="/./../../img/640-1690880136994-359.gif" alt="图片"></p>
<p><strong>Part 2：代码</strong></p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 进度条()   </span><br><span class="line">    <span class="keyword">Dim</span> i, n  </span><br><span class="line">    n = <span class="number">5000</span>   </span><br><span class="line">    UserForm1.Show <span class="number">0</span>  </span><br><span class="line">    <span class="keyword">Set</span> ProgressBar1 = UserForm1.ProgressBar1</span><br><span class="line">    ProgressBar1.Max = n  </span><br><span class="line">    ProgressBar1.Min = <span class="number">0</span>     </span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> n  </span><br><span class="line">        process = <span class="built_in">CInt</span>(<span class="number">100</span> * (i - <span class="number">0</span>) / (n - <span class="number">0</span>))    </span><br><span class="line">        UserForm1.Caption = <span class="string">&quot;完成度：&quot;</span> &amp; process &amp; <span class="string">&quot;%&quot;</span>   </span><br><span class="line">        ProgressBar1.Value = i  </span><br><span class="line">    <span class="keyword">Next</span>  </span><br><span class="line">    Unload UserForm1  </span><br><span class="line">    MsgBox <span class="string">&quot;完成&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>



<p>代码截图</p>
<p><img src="/./../../img/640-1690880136994-360.png" alt="图片"></p>
<p><strong>Part 3：窗体搭建</strong></p>
<p>新建一个窗体，插入控件<code>ProgressBar</code></p>
<ol>
<li><ul>
<li>如果没有发现控件工具箱，可以在菜单栏：<strong>视图</strong>-<strong>工具箱</strong>打开</li>
</ul>
</li>
<li><ul>
<li>默认是没有进度条控件的，需要人工加入，鼠标悬浮在工具箱<strong>控件区域</strong>位置上，右键<code>附加控件</code>，注意鼠标位置，不同位置右键效果不同。添加控件<code>Microsoft ProgressBar Control</code></li>
</ul>
</li>
</ol>
<p>显示工箱</p>
<p><img src="/./../../img/640-1690880136994-361.png" alt="图片"></p>
<p>添加进度条控件</p>
<p><img src="/./../../img/640-1690880136994-362.png" alt="图片"></p>
<p><img src="/./../../img/640-1690880136994-363.png" alt="图片"></p>
<p><strong>Part 4：部分代码解读</strong></p>
<ol>
<li><code>UserForm1.Show 0</code>，显示窗体</li>
<li><code>Unload UserForm1</code>，关闭窗体</li>
<li><code>Set ProgressBar1 = UserForm1.ProgressBar1</code>，定义控件</li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 控件 </tag>
            
            <tag> 弹出控件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-控件解析-窗体-01-弹出]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%AA%97%E4%BD%93-01-%E5%BC%B9%E5%87%BA/</url>
      <content type="html"><![CDATA[<p><strong>Part 1：本篇目标</strong></p>
<ol>
<li>本篇介绍窗体。涉及功能为：点击按钮后，弹出一个窗体</li>
<li>严格来说窗体不是控件，它是控件的载体</li>
</ol>
<p>效果动图</p>
<p><img src="/./../../img/640-1690879931180-340.gif" alt="图片"></p>
<p><strong>Part 2：实现步骤</strong></p>
<ol>
<li><p>本项目中涉及到两个窗体</p>
</li>
<li><ul>
<li>窗体<em><strong>main</strong></em>作为主窗体，有一个按钮，点击后弹出窗体<strong>弹窗</strong></li>
<li>窗体<strong>弹窗</strong>，需要将其<strong>弹出方式</strong>选择<strong>是</strong></li>
</ul>
</li>
<li><p>窗体<em><strong>main</strong></em>中设置按钮对应的代码</p>
</li>
</ol>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command0_Click() </span><br><span class="line">    <span class="keyword">Dim</span> frm   </span><br><span class="line">    <span class="keyword">Dim</span> ctrl </span><br><span class="line">    <span class="keyword">Dim</span> frmName   </span><br><span class="line">    frmName = <span class="string">&quot;弹窗&quot;</span>    </span><br><span class="line">    DoCmd.OpenForm (frmName)     </span><br><span class="line">    <span class="keyword">Set</span> frm = Forms(frmName)  </span><br><span class="line">    frm.Caption = <span class="string">&quot;说明&quot;</span>      </span><br><span class="line">    <span class="keyword">Set</span> ctrl = frm.Controls(<span class="string">&quot;Label4&quot;</span>) </span><br><span class="line">    strSay = <span class="string">&quot;这是一个测试弹窗功能的小程序&quot;</span>  </span><br><span class="line">    ctrl.Caption = strSay</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p>代码截图<br><img src="/./../../img/640-1690879931180-341.png" alt="图片"></p>
<p>窗体<strong>弹窗</strong></p>
<p><img src="/./../../img/640-1690879931180-342.png" alt="图片"></p>
<p><strong>弹出方式</strong>设置</p>
<p><img src="/./../../img/640-1690879931180-343.png" alt="图片"></p>
<p><strong>Part 3：部分代码解读</strong></p>
<ol>
<li><code>DoCmd.OpenForm (frmName)</code>打开窗体</li>
<li><code>frm.Caption = &quot;说明&quot;</code>设置标题</li>
</ol>
<p>设置标题效果</p>
<p><img src="/./../../img/640-1690879931180-344.png" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 控件 </tag>
            
            <tag> 弹出空间 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-控件解析-按钮-02-来个双击]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E6%8C%89%E9%92%AE-02-%E6%9D%A5%E4%B8%AA%E5%8F%8C%E5%87%BB/</url>
      <content type="html"><![CDATA[<p><strong>Part 1：本篇目标</strong></p>
<ol>
<li>本篇介绍的控件为：<strong>按钮</strong>。涉及功能为：双击事件</li>
</ol>
<p>效果动图</p>
<p><img src="/./../../img/640-1690879828265-328.gif" alt="图片"></p>
<p><strong>Part 2：实现步骤</strong></p>
<ol>
<li>设计视图下，插入按钮</li>
<li>选中按钮，右键-属性，事件选项卡下，双击，关联事件过程</li>
<li>点击右侧的<code>...</code>，直接打开<em><strong>VBE</strong></em>界面，进行代码编写</li>
<li>直接关联的代码是在窗体对应的代码窗口，建议核心代码还是写在模块下，方便管理，窗体代码只是一个事件导入</li>
<li>仔细看下图，发现有很多事件，不仅仅只是最近写的两篇文章，单击事件，双击事件，其它事件大家可以试试</li>
<li>对于其它控件，也有一些事件，但是每个控件支持的事件可能是不同的</li>
</ol>
<p>属性设置</p>
<p><img src="/./../../img/640-1690879828265-329.png" alt="图片"></p>
<p><strong>标签</strong>支持事件</p>
<p><img src="/./../../img/640-1690879828265-330.png" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 控件 </tag>
            
            <tag> 按钮 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-控件解析-按钮-01-关联代码]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E6%8C%89%E9%92%AE-01-%E5%85%B3%E8%81%94%E4%BB%A3%E7%A0%81/</url>
      <content type="html"><![CDATA[<p><strong>Part 1：本篇目标</strong></p>
<ol>
<li>本篇介绍的控件为：<strong>按钮</strong>。涉及功能为：关联代码</li>
</ol>
<p>效果动图</p>
<p><img src="/./../../img/640-1690879757230-313.gif" alt="图片"></p>
<p><strong>Part 2：实现步骤</strong></p>
<ol>
<li>设计视图下，插入按钮</li>
<li>选中按钮，右键-属性，事件选项卡下，单击，关联事件过程</li>
<li>点击右侧的<code>...</code>，直接打开<em><strong>VBE</strong></em>界面，进行代码编写</li>
<li>直接关联的代码是在窗体对应的代码窗口，建议核心代码还是写在模块下，方便管理，窗体代码只是一个事件导入</li>
</ol>
<p>插入按钮</p>
<p><img src="/./../../img/640-1690879757230-314.png" alt="图片"></p>
<p>属性设置</p>
<p><img src="/./../../img/640-1690879757230-315.png" alt="图片"></p>
<p>代码位置</p>
<p><img src="/./../../img/640-1690879757230-316.png" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 控件 </tag>
            
            <tag> 按钮 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-控件解析-文本框-01-格式设置]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E6%96%87%E6%9C%AC%E6%A1%86-01-%E6%A0%BC%E5%BC%8F%E8%AE%BE%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p><strong>Part 1：本篇目标</strong></p>
<ol>
<li>本篇介绍的控件为：<strong>文本框</strong>。涉及功能为：文本框输入内容的<strong>格式</strong>限制</li>
<li>一般系统可以简单理解为有3个部分组成：<strong>输入</strong>-<strong>处理</strong>-<strong>输出</strong></li>
<li>对于输入这部分往往会有些要求，例如要求输入日期。因为使用客户不同，如果希望由客户来主动规范化输入是不现实的，所以希望系统方面来限制</li>
</ol>
<p>功能效果<br><img src="/./../../img/640-1690879638307-298.png" alt="图片"></p>
<p><strong>Part 2：实现步骤</strong></p>
<ol>
<li><strong>设计视图</strong>下，插入文本框</li>
<li>选中文本框，右键-属性，格式选项卡下，选择需求的格式</li>
<li>设置完格式后，当用户输入不满足要求的数据时，系统会提示</li>
</ol>
<p>插入文本框</p>
<p><img src="/./../../img/640-1690879638308-299.png" alt="图片"></p>
<p>格式选项卡</p>
<p><img src="/./../../img/640-1690879638309-300.png" alt="图片"></p>
<p>输入格式错误</p>
<p><img src="/./../../img/640-1690879638310-301.png" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 控件 </tag>
            
            <tag> 文本框 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-控件解析-组合框-02-两个组合框联动]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%BB%84%E5%90%88%E6%A1%86-02-%E4%B8%A4%E4%B8%AA%E7%BB%84%E5%90%88%E6%A1%86%E8%81%94%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p><strong>Part 1：本篇目标</strong></p>
<ol>
<li>本篇介绍的控件为：组合框。涉及功能为：两个组合框联动</li>
</ol>
<p><strong>功能动图</strong></p>
<p><img src="/./../../img/640-1690879336337-283.gif" alt="图片"></p>
<p><strong>Part 2：实现功能</strong></p>
<ol>
<li>手动设置<strong>省</strong>组合框下拉列表：广东，湖南</li>
<li><strong>省</strong>组合框变化时，<strong>市</strong>组合框下拉列表随之变化</li>
<li>这里<strong>省</strong>组合框有3个事件，都引起<strong>市</strong>组合框下拉列表变化，包括<strong>更改</strong>，<strong>键按下</strong>，<strong>进入</strong>三个事件。具体哪些事件会触发，根据需要自己制定。一般来说这三种即可</li>
</ol>
<p>界面</p>
<p><img src="/./../../img/640-1690879336337-284.png" alt="图片"></p>
<p>3类事件</p>
<p><img src="/./../../img/640-1690879336338-285.jpeg" alt="图片"></p>
<p><strong>Part 3：代码</strong></p>
<p><strong>事件代码</strong></p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> cbo1_Change()  </span><br><span class="line">    frmName = <span class="keyword">Me</span>.Name</span><br><span class="line">    <span class="keyword">Call</span> sMod_通用库_01_零件名称下拉列表(frmName)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> cbo1_Enter()  </span><br><span class="line">    frmName = <span class="keyword">Me</span>.Name</span><br><span class="line">    <span class="keyword">Call</span> sMod_通用库_01_零件名称下拉列表(frmName)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> cbo1_KeyDown(KeyCode As Integer, Shift As Integer)  </span><br><span class="line">    frmName = <span class="keyword">Me</span>.Name</span><br><span class="line">    <span class="keyword">Call</span> sMod_通用库_01_零件名称下拉列表(frmName)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>实际动作</strong></p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> sMod_通用库_01_零件名称下拉列表(frmName)    </span><br><span class="line">    <span class="keyword">Dim</span> ctrl    </span><br><span class="line">    <span class="keyword">Dim</span> frm   </span><br><span class="line">    <span class="keyword">Dim</span> ctrlName        </span><br><span class="line">    <span class="keyword">Set</span> frm = Forms(frmName)        </span><br><span class="line">    <span class="keyword">Set</span> ctrl = frm.Controls(<span class="string">&quot;cbo1&quot;</span>)  </span><br><span class="line">    sheng = ctrl.Value       </span><br><span class="line">    ctrlName = <span class="string">&quot;cbo2&quot;</span>   </span><br><span class="line">    <span class="keyword">Set</span> cbo = frm.Controls(ctrlName)      </span><br><span class="line">    <span class="keyword">If</span> sheng = <span class="string">&quot;广东&quot;</span> <span class="keyword">Then</span>        </span><br><span class="line">        cbo.RowSource = <span class="string">&quot;&quot;</span>        </span><br><span class="line">        cbo.Value = <span class="string">&quot;&quot;</span>               </span><br><span class="line">        arr = <span class="built_in">Array</span>(<span class="string">&quot;广州&quot;</span>, <span class="string">&quot;深圳&quot;</span>, <span class="string">&quot;东莞&quot;</span>, <span class="string">&quot;佛山&quot;</span>)       </span><br><span class="line">        <span class="keyword">For</span> <span class="keyword">Each</span> x <span class="keyword">In</span> arr           </span><br><span class="line">            cbo.AddItem x       </span><br><span class="line">        <span class="keyword">Next</span>    </span><br><span class="line">    <span class="keyword">ElseIf</span> sheng = <span class="string">&quot;湖南&quot;</span> <span class="keyword">Then</span>       </span><br><span class="line">        cbo.RowSource = <span class="string">&quot;&quot;</span>       </span><br><span class="line">        cbo.Value = <span class="string">&quot;&quot;</span>               </span><br><span class="line">        arr = <span class="built_in">Array</span>(<span class="string">&quot;长沙&quot;</span>, <span class="string">&quot;湘潭&quot;</span>, <span class="string">&quot;株洲&quot;</span>, <span class="string">&quot;郴州&quot;</span>)       </span><br><span class="line">        <span class="keyword">For</span> <span class="keyword">Each</span> x <span class="keyword">In</span> arr           </span><br><span class="line">            cbo.AddItem x       </span><br><span class="line">        <span class="keyword">Next</span>   </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span>   </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>代码截图****代码位置</strong>：将通用代码写在模块内了，方便代码复用</p>
<p><img src="/./../../img/640-1690879336338-286.png" alt="图片"></p>
<p><strong>Part 4：部分代码解读</strong></p>
<ol>
<li>虽然本示例中涉及3个事件，但只是触发不一样，但引起的结果是一样的，所以将共用代码写在了模块内</li>
<li><code>frmName = Me.Name</code>，获取当前窗体名称，该代码必须放在对应的窗体中才有效</li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 控件 </tag>
            
            <tag> 组合框 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-控件解析-组合框-01-下拉列表]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E7%BB%84%E5%90%88%E6%A1%86-01-%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8/</url>
      <content type="html"><![CDATA[<p><strong>Part 1：本篇目标</strong></p>
<ol>
<li>本篇介绍的控件为：<strong>组合框</strong>。涉及功能为：下拉列表的实现</li>
</ol>
<p>功能动图</p>
<p><img src="/./../../img/640-1690879216174-271.gif" alt="图片"></p>
<p><strong>Part 2：实现功能</strong></p>
<ol>
<li>手动设置组合框下拉列表：长江；黄河；珠江；淮河</li>
<li>通过代码修改组合框下拉列表：1；2；3；4</li>
<li><strong>应用场景</strong>，组合框的下拉列表随着另外一个控件的取值变化而变化。例如，两个组合框，一个显示省份，一个显示城市，当省份不同时，城市组合框下拉列表也会不同</li>
</ol>
<p><strong>手动设置</strong>：打开组合框<strong>属性</strong> - <strong>数据</strong>选项卡 - <strong>行来源类型</strong>设置为<strong>值列表</strong> - <strong>行来源</strong>设置下拉列表数据，以<strong>分号</strong>**;**隔开</p>
<p><img src="/./../../img/640-1690879216174-272.png" alt="图片"></p>
<p><strong>Part 3：代码</strong></p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command4_Click() </span><br><span class="line">    ctrlName = <span class="string">&quot;Combo2&quot;</span>   </span><br><span class="line">    <span class="keyword">Set</span> cbo = <span class="keyword">Me</span>.Controls(ctrlName) </span><br><span class="line">    cbo.RowSource = <span class="string">&quot;&quot;</span> </span><br><span class="line">    cbo.Value = <span class="string">&quot;&quot;</span></span><br><span class="line">    arr = <span class="built_in">Array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)  </span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> x <span class="keyword">In</span> arr   </span><br><span class="line">        cbo.AddItem x   </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>



<p>代码截图</p>
<p><img src="/./../../img/640-1690879216175-273.png" alt="图片"></p>
<p><strong>Part 4：部分代码解读</strong></p>
<p><img src="/./../../img/640-1690879216174-270.png" alt="图片"></p>
<ol>
<li><code>cbo.RowSource = &quot;&quot;</code>，将下拉列表清空</li>
<li><code>cbo.Value = &quot;&quot;</code>，将组合框取值清空</li>
<li><code>cbo.AddItem x</code> ，增加组合框下拉列表</li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 控件 </tag>
            
            <tag> 组合框 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-控件解析-列表框-04-双击效果]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-04-%E5%8F%8C%E5%87%BB%E6%95%88%E6%9E%9C/</url>
      <content type="html"><![CDATA[<p><strong>Part 1：本篇目标</strong></p>
<ol>
<li>本篇介绍的控件为：<strong>列表框</strong>。涉及功能为：双击列表框显示所选行第1列信息</li>
</ol>
<p>功能动图</p>
<p><img src="/./../../img/640-1690879009674-259.gif" alt="图片"></p>
<p><strong>Part 2：代码</strong></p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span></span><br><span class="line">    List0_DblClick(Cancel As Integer)</span><br><span class="line">    ctrlName = <span class="string">&quot;List0&quot;</span>  </span><br><span class="line">    <span class="keyword">Set</span> ctrl = <span class="keyword">Me</span>.Controls(ctrlName)  </span><br><span class="line">    chooseRow = ctrl.ListIndex <span class="comment">&#x27;listIndex 计数不包括标题行   </span></span><br><span class="line">    colNum = <span class="number">1</span>  </span><br><span class="line">    <span class="keyword">If</span> chooseRow &gt;= <span class="number">0</span> <span class="keyword">Then</span>    </span><br><span class="line">        chooseContent = ctrl.Column(colNum - <span class="number">1</span>, chooseRow + <span class="number">1</span>)    </span><br><span class="line">        MsgBox <span class="string">&quot;选中行第1列信息为：&quot;</span> &amp; chooseContent  </span><br><span class="line">    <span class="keyword">Else</span>     </span><br><span class="line">        chooseContent = <span class="string">&quot;未选中&quot;</span>    </span><br><span class="line">        MsgBox chooseContent        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span>  </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>



<p>代码截图</p>
<p><img src="/./../../img/640-1690879009674-260.jpeg" alt="图片"></p>
<p><strong>Part 3：事件设置</strong></p>
<ol>
<li>获取选项内容在上一篇文章中已经讲过，核心函数<code>ctrl.Column</code></li>
<li>设置双击事件：<strong>设计视图</strong>下-右键列表框-选择<strong>属性</strong>-选择<strong>事件</strong>选项卡-设置<strong>双击</strong>事件</li>
<li>对应双击事件<em>Sub</em>名称：<code>List0_DblClick(Cancel As Integer)</code>，***DblClick，double click***的缩写</li>
<li>整个<em><strong>Sub</strong></em>名称是系统自动生成的，尽量不要自己看出规律后人为建立，有时候系统无法识别</li>
</ol>
<p>事件设置</p>
<p><img src="/./../../img/640-1690879009675-261.jpeg" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 控件 </tag>
            
            <tag> 列表框 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-控件解析-列表框-03-向列表框录入信息]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-03-%E5%90%91%E5%88%97%E8%A1%A8%E6%A1%86%E5%BD%95%E5%85%A5%E4%BF%A1%E6%81%AF/</url>
      <content type="html"><![CDATA[<p>目录</p>
<p>Part 1：本篇目标</p>
<ol>
<li>本篇介绍的控件为：<strong>列表框</strong>。涉及功能为：向列表框中录入信息</li>
</ol>
<p>功能动图</p>
<p><img src="/./../../img/640-1690878870332-240.gif" alt="图片"></p>
<p>静图</p>
<p><img src="/./../../img/640-1690878870332-241.png" alt="图片"></p>
<p>目录</p>
<p>Part 2：代码</p>
<p>录入信息</p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> btn_Click()</span><br><span class="line">    arrTitle = <span class="built_in">Array</span>(<span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;性别&quot;</span>, <span class="string">&quot;年龄&quot;</span>)</span><br><span class="line">    arrContents1 = <span class="built_in">Array</span>(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="number">20</span>)</span><br><span class="line">    arrContents2 = <span class="built_in">Array</span>(<span class="string">&quot;李四&quot;</span>, <span class="string">&quot;男&quot;</span>)</span><br><span class="line">    arrContents3 = <span class="built_in">Array</span>(<span class="number">100</span>)        </span><br><span class="line">    <span class="keyword">Set</span> ctrl = <span class="keyword">Me</span>.Controls(<span class="string">&quot;List0&quot;</span>)</span><br><span class="line">    ctrl.RowSource = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;加入标题</span></span><br><span class="line">    inputContents = arrToStr(arrTitle)</span><br><span class="line">    ctrl.AddItem inputContents    <span class="comment">&#x27;加入内容</span></span><br><span class="line">    inputContents = arrToStr(arrContents1)</span><br><span class="line">    ctrl.AddItem inputContents</span><br><span class="line"></span><br><span class="line">    inputContents = arrToStr(arrContents2)</span><br><span class="line">    ctrl.AddItem inputContents</span><br><span class="line"></span><br><span class="line">    inputContents = arrToStr(arrContents3)</span><br><span class="line">    ctrl.AddItem inputContentsEnd <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>



<p>代码截图</p>
<p><img src="/./../../img/640-1690878870332-242.jpeg" alt="图片"></p>
<p><strong>数组转为字符串</strong></p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> arrToStr(arr)        <span class="comment">&#x27;假设数组不为空</span></span><br><span class="line">    op = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">If</span> <span class="built_in">UBound</span>(arr) = <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line">        op = arr(<span class="number">0</span>)       </span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        <span class="keyword">For</span> <span class="keyword">Each</span> x <span class="keyword">In</span> arr                        </span><br><span class="line">            <span class="keyword">If</span> op = <span class="string">&quot;&quot;</span> <span class="keyword">Then</span></span><br><span class="line">                op = x &amp; <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">Else</span></span><br><span class="line">                op = op &amp; <span class="string">&quot;;&quot;</span> &amp; x                       </span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">Next</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">    arrToStr = opEnd <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>



<p>代码截图</p>
<p><img src="/./../../img/640-1690878870332-243.png" alt="图片"></p>
<p>清空列表框</p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> btn2_Click()        </span><br><span class="line">    <span class="keyword">Set</span> ctrl = <span class="keyword">Me</span>.Controls(<span class="string">&quot;List0&quot;</span>)</span><br><span class="line">    ctrl.RowSource = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p>代码截图</p>
<p><img src="/./../../img/640-1690878870332-244.png" alt="图片"></p>
<p>目录</p>
<p>Part 3：部分代码解读</p>
<ol>
<li><code>ctrl.AddItem inputContents</code>，向列表框一行一行加入信息，要求输入内容为<strong>字符串</strong>，不同列之间用**;**分开</li>
<li><code>op = x &amp; &quot;&quot;</code>，将其它数据类型转为字符串，其实在本示例可以不使用，会自动转为字符串，可以手动测试一下</li>
</ol>
<p>ListBox.AddItem官方解读</p>
<p><img src="/./../../img/640-1690878870332-245.jpeg" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 控件 </tag>
            
            <tag> 列表框 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-控件解析-列表框-02-获取选项]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-02-%E8%8E%B7%E5%8F%96%E9%80%89%E9%A1%B9/</url>
      <content type="html"><![CDATA[<p>Part 1：本篇目标</p>
<ol>
<li>本篇介绍的控件为：列表框。涉及功能为：后台获取用户的选择项</li>
<li>UI界面存在大量与用户互动的部分，根据客户不同的选择展现不同的信息</li>
</ol>
<p><strong>功能动图</strong></p>
<p><img src="/./../../img/640-1690874789826-228.gif" alt="图片"></p>
<p><strong>静图</strong></p>
<p><img src="/./../../img/640-1690874789826-229.png" alt="图片"></p>
<p>Part 2：代码</p>
<p><strong>控件关联代码</strong></p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> 获取姓名信息_Click()</span><br><span class="line">    frmName = <span class="keyword">Me</span>.Name</span><br><span class="line">    ctrlName = <span class="string">&quot;List0&quot;</span></span><br><span class="line">    colNum = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    x = 获取列表框选项(frmName, ctrlName, colNum)</span><br><span class="line">    MsgBox <span class="string">&quot;选择姓名为：&quot;</span> &amp; x</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>





<p><strong>核心函数</strong>：获取不同列，改变***colNum***值即可</p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> 获取列表框选项(frmName, ctrlName, colNum)        <span class="keyword">Rem</span>&gt;&gt;</span><br><span class="line">    <span class="keyword">Dim</span> frm        </span><br><span class="line">    <span class="keyword">Dim</span> ctrl        </span><br><span class="line">    <span class="keyword">Dim</span> chooseRow        </span><br><span class="line">    <span class="keyword">Set</span> frm = Forms(frmName)        </span><br><span class="line">    <span class="keyword">Set</span> ctrl = frm.Controls(ctrlName)</span><br><span class="line">    chooseRow = ctrl.ListIndex <span class="comment">&#x27;listIndex 计数不包括标题行</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;ListBox.Column(Index, Row)，Index表示列信息，Row表示行信息，都是从0开始</span></span><br><span class="line">    <span class="keyword">If</span> chooseRow &gt;= <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line">        获取列表框选项 = ctrl.Column(colNum - <span class="number">1</span>, chooseRow + <span class="number">1</span>)        </span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        获取列表框选项 = <span class="string">&quot;未选中&quot;</span></span><br><span class="line">    <span class="keyword">End</span> IfEnd <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>





<p><strong>代码截图</strong></p>
<p><img src="/./../../img/640-1690874789826-230.jpeg" alt="图片"></p>
<p>Part 3：部分代码解读</p>
<ol>
<li><p><code>chooseRow = ctrl.ListIndex</code>，注意是否设置列标题选项，在计数时，是不包括列标题的</p>
</li>
<li><p><code>ListBox.Column(Index, Row)</code>，列表框可以看成一个<strong>Excel</strong>表格，不同的是</p>
</li>
<li><ul>
<li>行和列都是从0开始计数</li>
<li>与Excel中不同的是，先是列再是行，格式：（列，行）</li>
</ul>
</li>
</ol>
<p><strong>ListBox.Column官方解读</strong></p>
<p><img src="/./../../img/640-1690874825992-237.jpeg" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 控件 </tag>
            
            <tag> 列表框 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-控件解析-列表框-01-多选数目获取]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-%E6%8E%A7%E4%BB%B6%E8%A7%A3%E6%9E%90-%E5%88%97%E8%A1%A8%E6%A1%86-01-%E5%A4%9A%E9%80%89%E6%95%B0%E7%9B%AE%E8%8E%B7%E5%8F%96/</url>
      <content type="html"><![CDATA[<p>Part 1：本篇目标</p>
<ol>
<li><p>本篇介绍的控件为：<strong>列表框</strong></p>
</li>
<li><ul>
<li>列表框可以理解成一个简单的***Excel***表格，只不过不能直接编辑</li>
<li>可以将第一行设置为列标题</li>
</ul>
</li>
<li><p>列表框支持多选（属性表-其他-多重选择-展开的），本文目标在于：每次选择后获取选择的行数</p>
</li>
<li><ul>
<li>关于多重选择，有两种：简单；展开的</li>
<li>简单：左键直接多选</li>
<li>展开的：<em><strong>windows</strong></em>多选方法（结合<em><strong>ctrl</strong></em>和<em><strong>shift</strong></em>）</li>
</ul>
</li>
</ol>
<p><strong>功能动图</strong></p>
<p><img src="/./../../img/640-1690874638367-201.gif" alt="图片"></p>
<p><strong>展示给客户的最终界面如下</strong></p>
<p><img src="/./../../img/640-1690874638367-202.png" alt="图片"></p>
<p><strong>列表框控件位置</strong></p>
<p><img src="/./../../img/640-1690874638367-203.jpeg" alt="图片"></p>
<p><strong>列表框录入数据</strong></p>
<p><img src="/./../../img/640-1690874638368-204.png" alt="图片"></p>
<p><strong>打开多重选择功能</strong></p>
<p><img src="/./../../img/640-1690874638368-205.png" alt="图片"></p>
<p><strong>打开列标题功能</strong></p>
<p><img src="/./../../img/640-1690874638368-206.png" alt="图片"></p>
<p>Part 2：代码</p>
<p><strong>窗体内代码</strong></p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> 选择数目_Click()        </span><br><span class="line">    <span class="keyword">Set</span> ctrl = <span class="keyword">Me</span>.Controls(<span class="string">&quot;List0&quot;</span>)</span><br><span class="line">    choose_num = ctrl.ItemsSelected.Count</span><br><span class="line">    MsgBox <span class="string">&quot;选中数目：&quot;</span> &amp; choose_num</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>





<p><strong>代码截图</strong></p>
<p><img src="/./../../img/640-1690874638369-207.png" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
            <tag> 控件 </tag>
            
            <tag> 列表框 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-15-表信息整体迁移]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-15-%E8%A1%A8%E4%BF%A1%E6%81%AF%E6%95%B4%E4%BD%93%E8%BF%81%E7%A7%BB/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：问题"><a href="#Part-1：问题" class="headerlink" title="Part 1：问题"></a>Part 1：问题</h2><ol>
<li>有一个<strong>原信息</strong>表存储着学生的姓名和成绩信息，现在需要对信息进行扩容</li>
<li>有一个<strong>新信息</strong>表，不仅有学生的姓名和成绩信息，还有一些其它信息</li>
<li>问题：将<strong>原信息</strong>表中满足要求的信息复制到<strong>新信息</strong>表中去，示例复制张三的信息</li>
</ol>
<p><strong>原信息</strong>数据表<br><img src="/./../../img/640-1690874446329-180.png" alt="图片"></p>
<p><strong>新信息</strong>表<br><img src="/./../../img/640-1690874446329-181.png" alt="图片"></p>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()        </span><br><span class="line">    <span class="keyword">Dim</span> adConn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset        </span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName        </span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\信息档案.accdb&quot;</span></span><br><span class="line">    tbl1Name = <span class="string">&quot;原信息&quot;</span></span><br><span class="line">    tbl2Name = <span class="string">&quot;新信息&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> adConn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    opFilds = <span class="string">&quot;*&quot;</span></span><br><span class="line">    searchC = <span class="string">&quot;姓名=&#x27;张三&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;Insert Into &quot;</span> &amp; tbl2Name &amp; <span class="string">&quot; Select &quot;</span> &amp; opFilds &amp; <span class="string">&quot; From &quot;</span> &amp; tbl1Name &amp; <span class="string">&quot; Where (&quot;</span> &amp; searchC &amp; <span class="string">&quot;)&quot;</span></span><br><span class="line">    <span class="keyword">Set</span> rs = adConn.<span class="keyword">Execute</span>(SQL)<span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>代码截图</strong><br><img src="/./../../img/640-1690874446329-182.jpeg" alt="图片"></p>
<p><strong>执行结果</strong><br><img src="/./../../img/640-1690874446329-183.png" alt="图片"></p>
<h2 id="Part-3：部分代码解读"><a href="#Part-3：部分代码解读" class="headerlink" title="Part 3：部分代码解读"></a>Part 3：部分代码解读</h2><ol>
<li>**核心*SQL***：<code>Insert Into 新信息 Select * From 原信息 Where (姓名=&#39;张三&#39;)</code></li>
<li>上面<em><strong>SQL</strong></em>由两部分组成：<em><strong>Insert Into</strong></em> 加入新表部分，<em><strong>Select</strong></em> 查询获取拟加入新表的信息</li>
<li>这种方法要求<strong>新信息</strong>表中必须有相同的字段</li>
</ol>
<p><strong>核心*SQL*</strong><br><img src="/./../../img/640-1690874446329-184.png" alt="图片"></p>
<h2 id="Part-4：延伸"><a href="#Part-4：延伸" class="headerlink" title="Part 4：延伸"></a>Part 4：延伸</h2><ul>
<li>只从<strong>旧信息</strong>表中获取2个字段：姓名，语文</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Insert Into 新信息 Select 姓名,语文 From 原信息 Where (姓名=&#x27;李四&#x27;)</span><br></pre></td></tr></table></figure>

<p><strong>执行结果</strong><br><img src="/./../../img/640-1690874446330-185.png" alt="图片"></p>
<ul>
<li><p>从<strong>旧信息</strong>表中获取所有字段所有记录</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Insert Into 新信息 Select * From 原信息</span><br></pre></td></tr></table></figure>

<p><strong>执行结果</strong><br><img src="/./../../img/640-1690874446330-186.png" alt="图片"></p>
</li>
</ul>
<p><strong>思考</strong>：下面这句***SQL***的结果又是什么效果呢？</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Insert</span> <span class="keyword">Into</span> 新信息 (姓名,数学) <span class="keyword">Select</span> 姓名,语文 <span class="keyword">From</span> 原信息 <span class="keyword">Where</span> (姓名<span class="operator">=</span><span class="string">&#x27;李四&#x27;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-14-消除重复值]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-14-%E6%B6%88%E9%99%A4%E9%87%8D%E5%A4%8D%E5%80%BC/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：题目"><a href="#Part-1：题目" class="headerlink" title="Part 1：题目"></a>Part 1：题目</h2><ol>
<li>从地址表中获取含有的省份信息，结果是：广东省，湖南省，安徽省</li>
<li>那么怎么使用<em><strong>SQL</strong></em>实现呢</li>
</ol>
<p><strong>地址</strong>数据表<br><img src="/./../../img/640-1690874333335-168.png" alt="图片"></p>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()        </span><br><span class="line">    <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset        </span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName        </span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\地址信息.accdb&quot;</span></span><br><span class="line">    tblName = <span class="string">&quot;地址&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    opFilds = <span class="string">&quot;省份&quot;</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;Select distinct &quot;</span> &amp; opFilds &amp; <span class="string">&quot; from &quot;</span> &amp; tblName </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)            </span><br><span class="line">    <span class="keyword">Dim</span> sht        </span><br><span class="line">    <span class="keyword">Dim</span> fildNum        </span><br><span class="line">    <span class="keyword">Set</span> sht = ThisWorkbook.Worksheets(<span class="string">&quot;示例&quot;</span>)</span><br><span class="line">    sht.Cells.ClearContents</span><br><span class="line"></span><br><span class="line">    fildNum = rs.Fields.Count        </span><br><span class="line">    <span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> fildNum - <span class="number">1</span> <span class="keyword">Step</span> <span class="number">1</span></span><br><span class="line">        fildName = rs.Fields(j).Name</span><br><span class="line">        sht.Cells(<span class="number">1</span>, j + <span class="number">1</span>) = fildName        </span><br><span class="line">    <span class="keyword">Next</span> j</span><br><span class="line"></span><br><span class="line">    sht.Cells(<span class="number">2</span>, <span class="number">1</span>).CopyFromRecordset rs</span><br><span class="line"></span><br><span class="line">    cnn.Close        </span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = NothingEnd <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>代码截图</strong><br><img src="/./../../img/640-1690874333336-169.jpeg" alt="图片"></p>
<p><strong>执行结果</strong><br><img src="/./../../img/640-1690874333336-170.png" alt="图片"></p>
<h2 id="Part-3：部分代码解读"><a href="#Part-3：部分代码解读" class="headerlink" title="Part 3：部分代码解读"></a>Part 3：部分代码解读</h2><ol>
<li><p>**核心*SQL***：<code>Select distinct 省份 from 地址</code></p>
</li>
<li><p>中文释义：</p>
</li>
<li><ul>
<li>从<strong>地址</strong>中获取<strong>省份</strong>字段非重复的值</li>
<li>关键字：<em><strong>distinct</strong></em>，在字段前加上这个关键字，输出值中就没有重复值</li>
</ul>
</li>
</ol>
<p><strong>核心SQL</strong><br><img src="/./../../img/640-1690874333336-171.png" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-13-嵌套查询]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-13-%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：题目"><a href="#Part-1：题目" class="headerlink" title="Part 1：题目"></a>Part 1：题目</h2><ol>
<li>获取<strong>张三</strong>，<strong>李四</strong>的数学成绩</li>
<li>已知条件：数据库中有两个表（<strong>学生信息表</strong>，<strong>成绩表</strong>），如下图</li>
<li>逻辑过程：从<strong>学生信息表</strong>中获取张三&#x2F;李四的学号，从<strong>成绩表</strong>中以<strong>学号</strong>查询满足条件的<strong>数学成绩</strong></li>
</ol>
<p><strong>学生信息表</strong><br><img src="/./../../img/0-1690874160819-153.jpeg" alt="图片"></p>
<p><strong>成绩表</strong><br><img src="/./../../img/0-1690874160820-154.jpeg" alt="图片"></p>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()        </span><br><span class="line">    <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset        </span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName        </span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\学生信息.accdb&quot;</span></span><br><span class="line">    tbl1Name = <span class="string">&quot;学生信息表&quot;</span></span><br><span class="line">    tbl2Name = <span class="string">&quot;成绩表&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    op1Filds = <span class="string">&quot;学号&quot;</span></span><br><span class="line">    search1C = <span class="string">&quot;姓名 in (&#x27;张三&#x27;,&#x27;李四&#x27;)&quot;</span></span><br><span class="line">    SQL1 = <span class="string">&quot;Select &quot;</span> &amp; op1Filds &amp; <span class="string">&quot; from &quot;</span> &amp; tbl1Name &amp; <span class="string">&quot; where (&quot;</span> &amp; search1C &amp; <span class="string">&quot;)&quot;</span></span><br><span class="line"></span><br><span class="line">    op2Filds = <span class="string">&quot;学号,年级,数学成绩&quot;</span></span><br><span class="line">    search2C = <span class="string">&quot;学号 in (&quot;</span> &amp; SQL1 &amp; <span class="string">&quot;)&quot;</span></span><br><span class="line">    SQL2 = <span class="string">&quot;Select &quot;</span> &amp; op2Filds &amp; <span class="string">&quot; from &quot;</span> &amp; tbl2Name &amp; <span class="string">&quot; where (&quot;</span> &amp; search2C &amp; <span class="string">&quot;) order by 学号 asc,年级 desc&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL2)            </span><br><span class="line">    <span class="keyword">Dim</span> sht        </span><br><span class="line">    <span class="keyword">Dim</span> fildNum        </span><br><span class="line">    <span class="keyword">Set</span> sht = ThisWorkbook.Worksheets(<span class="string">&quot;示例&quot;</span>)</span><br><span class="line">    sht.Cells.ClearContents</span><br><span class="line"></span><br><span class="line">    fildNum = rs.Fields.Count        </span><br><span class="line">    <span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> fildNum - <span class="number">1</span> <span class="keyword">Step</span> <span class="number">1</span></span><br><span class="line">        fildName = rs.Fields(j).Name</span><br><span class="line">        sht.Cells(<span class="number">1</span>, j + <span class="number">1</span>) = fildName        </span><br><span class="line">    <span class="keyword">Next</span> j</span><br><span class="line"></span><br><span class="line">    sht.Cells(<span class="number">2</span>, <span class="number">1</span>).CopyFromRecordset rs</span><br><span class="line"></span><br><span class="line">    cnn.Close        </span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = NothingEnd <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>代码截图</strong><br><img src="/./../../img/0-1690874160820-155.jpeg" alt="图片"></p>
<p><strong>执行结果</strong><br><img src="/./../../img/0-1690874160820-156.jpeg" alt="图片"></p>
<h2 id="Part-3：部分代码解读"><a href="#Part-3：部分代码解读" class="headerlink" title="Part 3：部分代码解读"></a>Part 3：部分代码解读</h2><ol>
<li><p>**核心*SQL***：<code>Select 学号,年级,数学成绩 from 成绩表 where (学号 in (Select 学号 from 学生信息表 where (姓名 in (&#39;张三&#39;,&#39;李四&#39;)))) order by 学号 asc,年级 desc</code></p>
</li>
<li><p><strong>中文释义</strong>：</p>
</li>
<li><ul>
<li>两层***Select***，内层获取张三&#x2F;李四的学号，外层以学号检索需要的信息</li>
<li>输出排序：第一级排序以<strong>学号</strong>升序（<em><strong>asc</strong></em>），第二级排序以<strong>年级</strong>降序（<em><strong>desc</strong></em>）</li>
</ul>
</li>
</ol>
<p><strong>核心SQL</strong><br><img src="/./../../img/0-1690874160820-157.jpeg" alt="图片"></p>
<p><strong>思考</strong>：输出的信息中不含有姓名信息，看起来不清晰，那么如何将姓名信息加进来呢？和之前的<strong>left join</strong>结合吗？</p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-12-模糊查询]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-12-%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：目标"><a href="#Part-1：目标" class="headerlink" title="Part 1：目标"></a>Part 1：目标</h2><p><strong>商品清单</strong><br><img src="/./../../img/640-1690874077454-129.png" alt="图片"></p>
<ol>
<li><p>根据<strong>商品ID</strong>检索需要的商品</p>
</li>
<li><p>通过模糊检索实现，有点<strong>百度</strong>的味道，只知道部分信息，来查询</p>
</li>
<li><p>逻辑过程</p>
</li>
<li><ul>
<li>连接数据库</li>
<li>根据需求确定***SQL***语句</li>
<li>执行<strong><em>SQL*<strong>语句，得到</strong></em>recordset</strong>*</li>
<li>将***recordset***写入工作表（字段名+所有记录 <strong>即</strong> 列名+每一行）</li>
<li>断开与数据库的连接</li>
</ul>
</li>
<li><p>检索<strong>商品ID</strong>首字母为<em><strong>m</strong></em>的商品</p>
</li>
</ol>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()        </span><br><span class="line">    <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset        </span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName        </span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\商品清单.accdb&quot;</span></span><br><span class="line">    tblName = <span class="string">&quot;商品清单&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    opFilds = <span class="string">&quot;商品ID,商品名称,厂家,数量&quot;</span></span><br><span class="line">    searchC = <span class="string">&quot;商品ID like &#x27;m%&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;Select &quot;</span> &amp; opFilds &amp; <span class="string">&quot; from &quot;</span> &amp; tblName &amp; <span class="string">&quot; where (&quot;</span> &amp; searchC &amp; <span class="string">&quot;)&quot;</span></span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)            </span><br><span class="line">    <span class="keyword">Dim</span> sht        </span><br><span class="line">    <span class="keyword">Dim</span> fildNum        </span><br><span class="line">    <span class="keyword">Set</span> sht = ThisWorkbook.Worksheets(<span class="string">&quot;示例&quot;</span>)</span><br><span class="line">    sht.Cells.ClearContents</span><br><span class="line"></span><br><span class="line">    fildNum = rs.Fields.Count        </span><br><span class="line">    <span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> fildNum - <span class="number">1</span> <span class="keyword">Step</span> <span class="number">1</span></span><br><span class="line">        fildName = rs.Fields(j).Name</span><br><span class="line">        sht.Cells(<span class="number">1</span>, j + <span class="number">1</span>) = fildName        </span><br><span class="line">    <span class="keyword">Next</span> j</span><br><span class="line"></span><br><span class="line">    sht.Cells(<span class="number">2</span>, <span class="number">1</span>).CopyFromRecordset rs</span><br><span class="line"></span><br><span class="line">    cnn.Close        </span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = NothingEnd <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>代码截图</strong><br><img src="/./../../../img/640-1690874077454-130.jpeg" alt="图片"></p>
<p><strong>执行结果</strong><br><img src="/./../../img/640-1690874077454-131.png" alt="图片"></p>
<h2 id="Part-3：部分代码解读"><a href="#Part-3：部分代码解读" class="headerlink" title="Part 3：部分代码解读"></a>Part 3：部分代码解读</h2><ol>
<li><code>Select 商品ID,商品名称,厂家,数量 from 商品清单 where (商品ID like &#39;m%&#39;)</code></li>
<li><strong>中文释义</strong>：选取满足<strong>商品ID</strong>第1位为字母*<strong>m*<strong>的商品信息，从结果看，</strong>没有区分</strong>大小写</li>
<li>这样的***%<em><strong>表示</strong>0</em>*或者<strong>任意字符</strong>，有点像<code>*</code>的作用</li>
</ol>
<p><strong>Part 4：延伸</strong></p>
<hr>
<ul>
<li><code>_</code>代表单一字符，<code>searchC = &quot;商品ID like &#39;____&#39;&quot;</code>，<strong>四个下划线</strong>，结果如下</li>
</ul>
<p><img src="/./../../img/640-1690874077455-132.png" alt="图片"></p>
<ul>
<li><code>[]</code>指定范围，<code>searchC = &quot;商品ID like &#39;[0-9]%&#39;&quot;</code>，表示***0-9***开头的字符串，结果如下</li>
</ul>
<p><img src="/./../../img/640-1690874077455-133.png" alt="图片"></p>
<ul>
<li><code>[ ]</code>指定范围，<code>searchC = &quot;商品ID like &#39;[a-z]%&#39;&quot;</code>，表示<em>a-z</em>开头的字符串，依然没有区分大小写，结果如下</li>
</ul>
<p><img src="/./../../img/640-1690874077455-134.png" alt="图片"></p>
<ul>
<li><p><code>[!]</code>指定范围之外，<code>searchC = &quot;商品ID like &#39;[!a-z]%&#39;&quot;</code>，表示不以***a-z***开头，结果如下</p>
<p><img src="/./../../img/640-1690874077455-135.png" alt="图片"></p>
</li>
<li><p><code>not like</code>取反，<code>searchC = &quot;商品ID not like &#39;[a-z]%&#39;&quot;</code>，表示<strong>不满足a-z</strong>开头的字符串，依然<strong>没有区分</strong>大小写，结果如下</p>
</li>
</ul>
<p><img src="/./../../img/640-1690874077455-136.png" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-左连接-11]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E5%B7%A6%E8%BF%9E%E6%8E%A5-11/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：目标"><a href="#Part-1：目标" class="headerlink" title="Part 1：目标"></a>Part 1：目标</h2><p><strong>成绩表</strong></p>
<p><img src="/./../../img/640-1690873974530-102.png" alt="图片"></p>
<p><strong>学生信息表</strong></p>
<p><img src="/./../../img/640-1690873974530-103.png" alt="图片"></p>
<p><strong>运行过程</strong></p>
<p><img src="/./../../img/0-1690873974530-104.gif" alt="图片"></p>
<ol>
<li><p>获取学号为<em><strong>1101</strong></em>学生在不同年级的<strong>语文成绩</strong>，输出信息包括：<strong>姓名，学号，性别，年级，语文成绩</strong></p>
</li>
<li><p>最终想要获得的信息来自于两个工作表，所以需要连接查询</p>
</li>
<li><p>逻辑过程</p>
</li>
<li><ul>
<li>连接数据库</li>
<li>根据需求确定<em><strong>SQL</strong></em>语句</li>
<li>执行<em><strong>SQL</strong></em>语句，得到*<strong>recordset*</strong></li>
<li>将<em><strong>recordset</strong></em>写入工作表（字段名+所有记录 <strong>即</strong> 列名+每一行）</li>
<li>断开与数据库的连接</li>
</ul>
</li>
<li><p><em><strong>SQL</strong></em>语句</p>
</li>
<li><ul>
<li><code>&quot;Select &quot; &amp; opFilds &amp; &quot; from &quot; &amp; &quot;(&quot; &amp; tbls &amp; &quot;)&quot; &amp; &quot; where (&quot; &amp; searchC &amp; &quot;)&quot;</code></li>
<li><code>opFilds = &quot;姓名,&quot; &amp; tblNote &amp; &quot;.学号,性别,年级,语文成绩&quot;</code></li>
<li><code>searchC = tblNote &amp; &quot;.学号=1101&quot;</code></li>
<li><code>tbls = tblNote &amp; &quot; left join &quot; &amp; tblName &amp; &quot; on &quot; &amp; tblNote &amp; &quot;.学号=&quot; &amp; tblName &amp; &quot;.学号&quot;</code></li>
</ul>
</li>
</ol>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()        </span><br><span class="line">    <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset        </span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName        </span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\学生信息.accdb&quot;</span></span><br><span class="line">    tblName = <span class="string">&quot;学生信息表&quot;</span></span><br><span class="line">    tblNote = <span class="string">&quot;成绩表&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    opFilds = <span class="string">&quot;姓名,&quot;</span> &amp; tblNote &amp; <span class="string">&quot;.学号,性别,年级,语文成绩&quot;</span></span><br><span class="line">    searchC = tblNote &amp; <span class="string">&quot;.学号=1101&quot;</span></span><br><span class="line"></span><br><span class="line">    tbls = tblNote &amp; <span class="string">&quot; left join &quot;</span> &amp; tblName _</span><br><span class="line">    &amp; <span class="string">&quot; on &quot;</span> &amp; tblNote &amp; <span class="string">&quot;.学号=&quot;</span> &amp; tblName &amp; <span class="string">&quot;.学号&quot;</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;Select &quot;</span> &amp; opFilds &amp; <span class="string">&quot; from &quot;</span> &amp; <span class="string">&quot;(&quot;</span> &amp; tbls &amp; <span class="string">&quot;)&quot;</span> &amp; <span class="string">&quot; where (&quot;</span> &amp; searchC &amp; <span class="string">&quot;)&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)        </span><br><span class="line">    <span class="keyword">Dim</span> sht        </span><br><span class="line">    <span class="keyword">Dim</span> fildNum        </span><br><span class="line">    <span class="keyword">Set</span> sht = ThisWorkbook.Worksheets(<span class="string">&quot;示例&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    sht.Cells.ClearContents</span><br><span class="line"></span><br><span class="line">    fildNum = rs.Fields.Count        </span><br><span class="line">    <span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> fildNum - <span class="number">1</span> <span class="keyword">Step</span> <span class="number">1</span></span><br><span class="line">        fildName = rs.Fields(j).Name</span><br><span class="line">        sht.Cells(<span class="number">1</span>, j + <span class="number">1</span>) = fildName       </span><br><span class="line">    <span class="keyword">Next</span> j</span><br><span class="line"></span><br><span class="line">    sht.Cells(<span class="number">2</span>, <span class="number">1</span>).CopyFromRecordset rs</span><br><span class="line"></span><br><span class="line">    cnn.Close        </span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = NothingEnd <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>代码截图</strong></p>
<p><img src="/./../../img/640-1690873974530-105.jpeg" alt="图片"></p>
<p><img src="/./../../img/640-1690873974531-106.jpeg" alt="图片"></p>
<p><strong>执行结果</strong></p>
<p><img src="/./../../img/640-1690873974531-107.png" alt="图片"></p>
<h2 id="Part-3：部分代码解读"><a href="#Part-3：部分代码解读" class="headerlink" title="Part 3：部分代码解读"></a>Part 3：部分代码解读</h2><ol>
<li><p><code>SQL = &quot;Select &quot; &amp; opFilds &amp; &quot; from &quot; &amp; &quot;(&quot; &amp; tbls &amp; &quot;)&quot; &amp; &quot; where (&quot; &amp; searchC &amp; &quot;)&quot;</code></p>
</li>
<li><ul>
<li>本问题中，相关变量取值后<em><strong>SQL</strong></em>语句如下</li>
<li>*<strong>Select*</strong> 姓名,成绩表.学号,性别,年级,语文成绩 *<strong>from*</strong> (成绩表 *<strong>left join*</strong> 学生信息表 *<strong>on*</strong> 成绩表.学号&#x3D;学生信息表.学号) *<strong>where*</strong> (成绩表.学号&#x3D;1101)</li>
</ul>
</li>
<li><pre><code>Select 姓名,成绩表.学号,性别,年级,语文成绩 from (成绩表 left join 学生信息表 on 成绩表.学号=学生信息表.学号) where (成绩表.学号=1101)
</code></pre>
</li>
<li><p><strong>中文解读</strong>：从成绩表和学生信息表连接表中获取学号为1101的学生信息</p>
</li>
<li><p><code>表1 left join 表2 on 表1.ID=表2.ID</code></p>
</li>
<li><ul>
<li>两个表进行连接，以左侧为基准，即这里的<strong>表1</strong></li>
<li>连接条件：表1与表2的ID号相同</li>
<li>当表2中满足表1中ID条件的有多条记录，那么进行分别匹配</li>
<li>当表2中没有满足表1中ID的条件时，匹配Null</li>
</ul>
</li>
</ol>
<p><strong>例1</strong>：匹配多个，修改<strong>学生信息表</strong>，增加同样学号的</p>
<p><img src="/./../../img/640-1690873974531-108.png" alt="图片"></p>
<p><strong>查询结果</strong></p>
<p><img src="/./../../img/640-1690873974531-109.png" alt="图片"></p>
<p><strong>例2</strong>：若未匹配上，则对应信息为空</p>
<p><img src="/./../../img/640-1690873974532-110.png" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel - access - vba </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-多条件筛选数据-10]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E5%A4%9A%E6%9D%A1%E4%BB%B6%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE-10/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：目标"><a href="#Part-1：目标" class="headerlink" title="Part 1：目标"></a>Part 1：目标</h2><p><img src="/./../../img/640-1690873872930-90.png" alt="图片"></p>
<ol>
<li><p>目标1：将数据库中数据表<strong>学生信息表</strong>中的语文成绩大于<strong>85分</strong>且学号<strong>大于</strong>4的人员信息读入当前工作簿<strong>示例</strong>工作表</p>
</li>
<li><p>目标2：将数据库中数据表<strong>学生信息表</strong>中姓名为<strong>张三</strong>或者<strong>小红</strong>的人员信息读入当前工作簿<strong>示例</strong>工作表</p>
</li>
<li><p>逻辑过程</p>
</li>
<li><ul>
<li>连接数据库</li>
<li>根据需求确定SQL语句</li>
<li>执行SQL语句，得到<em>recordset</em></li>
<li>将<em><strong>recordset</strong></em>写入工作表（字段名+所有记录 <strong>即</strong> 列名+每一行）</li>
<li>断开与数据库的连接</li>
</ul>
</li>
<li><p>实现两个目标只有<em><strong>SQL</strong></em>语句不同，其余一致</p>
</li>
<li><ul>
<li>目标1：<code>SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 语文成绩&gt;85 and 学号&gt;4&quot;</code></li>
<li>目标2：<code>SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 姓名 in(&#39;张三&#39;,&#39;小红&#39;)&quot;</code></li>
</ul>
</li>
</ol>
<p><strong>目标1</strong><br><img src="/./../../img/640-1690873872930-91.png" alt="图片"></p>
<p><strong>目标2</strong><br><img src="/./../../img/640-1690873872930-92.png" alt="图片"></p>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()        </span><br><span class="line">    <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset        </span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName        </span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\学生信息.accdb&quot;</span></span><br><span class="line">    tblName = <span class="string">&quot;学生信息表&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;Select * from &quot;</span> &amp; tblName &amp; <span class="string">&quot; where 语文成绩&gt;85 and 学号&gt;4&quot;</span><span class="comment">&#x27;   SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 姓名 in(&#x27;张三&#x27;,&#x27;小红&#x27;)&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)        </span><br><span class="line">    <span class="keyword">Dim</span> sht        </span><br><span class="line">    <span class="keyword">Dim</span> fildNum        </span><br><span class="line">    <span class="keyword">Set</span> sht = ThisWorkbook.Worksheets(<span class="string">&quot;示例&quot;</span>)</span><br><span class="line">    sht.Cells.ClearContents</span><br><span class="line"></span><br><span class="line">    fildNum = rs.Fields.Count        </span><br><span class="line">    <span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> fildNum - <span class="number">1</span> <span class="keyword">Step</span> <span class="number">1</span></span><br><span class="line">        fildName = rs.Fields(j).Name</span><br><span class="line">        sht.Cells(<span class="number">1</span>, j + <span class="number">1</span>) = fildName        </span><br><span class="line">    <span class="keyword">Next</span> j</span><br><span class="line"></span><br><span class="line">    sht.Cells(<span class="number">2</span>, <span class="number">1</span>).CopyFromRecordset rs</span><br><span class="line"></span><br><span class="line">    cnn.Close        </span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = NothingEnd <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>代码截图</strong><br><img src="/./../../img/640-1690873872931-93.jpeg" alt="图片"></p>
<h2 id="Part-3：部分代码解读"><a href="#Part-3：部分代码解读" class="headerlink" title="Part 3：部分代码解读"></a>Part 3：部分代码解读</h2><ol>
<li><p><code>SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 语文成绩&gt;85 and 学号&gt;4&quot;</code>，中文释义：从工作表中获取满足语文成绩&gt;85且学号&gt;4的所有信息</p>
</li>
<li><p><code>SQL = &quot;Select * from &quot; &amp; tblName &amp; &quot; where 姓名 in(&#39;张三&#39;,&#39;小红&#39;)&quot;</code>，中文释义：从工作表中获取满足姓名为张三或者小红的所有信息，也可以使用<code>or</code>来实现该功能</p>
</li>
<li><ul>
<li><code>&quot;Select * from &quot; &amp; tblName &amp; &quot; where 姓名=&#39;张三&#39; or 姓名=&#39;小红&#39;&quot;</code></li>
</ul>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-单表筛选数据-09]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E5%8D%95%E8%A1%A8%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE-09/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：目标"><a href="#Part-1：目标" class="headerlink" title="Part 1：目标"></a>Part 1：目标</h2><p><img src="/./../img/640.png" alt="图片"></p>
<ol>
<li><p>将数据库中数据表<strong>学生信息表</strong>中的语文成绩<strong>大于85分</strong>的人员信息读入当前工作簿<strong>示例</strong>工作表</p>
</li>
<li><p>逻辑过程</p>
</li>
<li><ul>
<li>连接数据库</li>
<li>根据需求确定<em><strong>SQ</strong>L</em>语句</li>
<li>执行<strong><em>SQL*<strong>语句，得到</strong></em>recordset</strong>*</li>
<li>将<em><strong>recordset</strong></em>写入工作表（字段名+所有记录 <strong>即</strong> 列名+每一行）</li>
<li>断开与数据库的连接</li>
</ul>
</li>
<li><p>所以与上一篇文章的区别在于<em><strong>SQL</strong></em>语句</p>
</li>
</ol>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()        </span><br><span class="line">    <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset        </span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName        </span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\学生信息.accdb&quot;</span></span><br><span class="line">    tblName = <span class="string">&quot;学生信息表&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;Select * from &quot;</span> &amp; tblName &amp; <span class="string">&quot; where 语文成绩&gt;85&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)            </span><br><span class="line">    <span class="keyword">Dim</span> sht        </span><br><span class="line">    <span class="keyword">Dim</span> fildNum        </span><br><span class="line">    <span class="keyword">Set</span> sht = ThisWorkbook.Worksheets(<span class="string">&quot;示例&quot;</span>)</span><br><span class="line"></span><br><span class="line">    fildNum = rs.Fields.Count        </span><br><span class="line">    <span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> fildNum - <span class="number">1</span> <span class="keyword">Step</span> <span class="number">1</span></span><br><span class="line">        fildName = rs.Fields(j).Name</span><br><span class="line">        sht.Cells(<span class="number">1</span>, j + <span class="number">1</span>) = fildName        </span><br><span class="line">    <span class="keyword">Next</span> j</span><br><span class="line"></span><br><span class="line">    sht.Cells(<span class="number">2</span>, <span class="number">1</span>).CopyFromRecordset rs</span><br><span class="line"></span><br><span class="line">    cnn.Close        </span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = NothingEnd <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>代码截图</strong></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/OSQ4UFyzdeN92ZOSmM847ib3iadwibRoQTwbJb0micJricK8MSoicSnKh7icZKu7Xwibt14jyqKgUnmBH8SmaVJ4VePxkg/640?wx_fmt=png&tp=wxpic&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p>
<p><strong>Access与Excel数据对比</strong></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/OSQ4UFyzdeN92ZOSmM847ib3iadwibRoQTwWeoMTxdRU7MnIcicjmNTUnT96RicRcnGicnHsyAnB3DvhbLXzPiahcnUzQ/640?wx_fmt=png&tp=wxpic&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p>
<h2 id="Part-3：部分代码解读"><a href="#Part-3：部分代码解读" class="headerlink" title="Part 3：部分代码解读"></a>Part 3：部分代码解读</h2><ol>
<li><p><code>&quot;Select * from &quot; &amp; tblName &amp; &quot; where 语文成绩&gt;85&quot;</code>，中文释义：从工作表中获取满足语文成绩&gt;85所有信息</p>
</li>
<li><p><code>rs.Fields.Count</code>获取字段数目</p>
</li>
<li><ul>
<li>字段是从0开始计数，所以最后一个字段表示为rs.Fields(rs.Fields.Count-1)</li>
</ul>
</li>
<li><p><code>rs.Fields(j).Name</code>获取字段的名称（列名）</p>
</li>
<li><p><code>CopyFromRecordset</code>复制整个<code>rs</code>（所有记录）</p>
</li>
</ol>
<p><strong>联想</strong>：那么是不是还有其它筛选方式呢？那必须有，这也是<em><strong>SQL</strong></em>的强大之处，常规<em><strong>VBA</strong></em>语句需要写很多代码实现的功能，<em><strong>SQL</strong></em>一句可能就搞定了</p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-获取数据库数据-08]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE-08/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：目标"><a href="#Part-1：目标" class="headerlink" title="Part 1：目标"></a>Part 1：目标</h2><p><img src="/./../../img/640-1690873608593-70.jpeg" alt="图片"></p>
<ol>
<li><p>将<em><strong>Access*<strong>数据库中数据表</strong>学生信息表</strong>中的所有信息读入当前</em><strong>Excel*<strong>工作簿</strong>示例</strong>工作表</p>
</li>
<li><p>***VBA***逻辑过程</p>
</li>
<li><ul>
<li>连接数据库</li>
<li>根据需求确定SQL语句</li>
<li>执行SQL语句，得到<em><strong>recordset</strong></em></li>
<li>将<em><strong>recordset</strong></em>写入工作表（字段名+所有记录 <strong>即</strong> 列名+每一行）</li>
<li>断开与数据库的连接</li>
</ul>
</li>
</ol>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()        </span><br><span class="line">    <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset       </span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName        </span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\学生信息.accdb&quot;</span></span><br><span class="line">    tblName = <span class="string">&quot;学生信息表&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;Select * from &quot;</span> &amp; tblName        </span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)        </span><br><span class="line">    <span class="keyword">Dim</span> sht        </span><br><span class="line">    <span class="keyword">Dim</span> fildNum        </span><br><span class="line">    <span class="keyword">Set</span> sht = ThisWorkbook.Worksheets(<span class="string">&quot;示例&quot;</span>)</span><br><span class="line"></span><br><span class="line">    fildNum = rs.Fields.Count        </span><br><span class="line">    <span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> fildNum - <span class="number">1</span> <span class="keyword">Step</span> <span class="number">1</span></span><br><span class="line">        fildName = rs.Fields(j).Name</span><br><span class="line">        sht.Cells(<span class="number">1</span>, j + <span class="number">1</span>) = fildName        </span><br><span class="line">    <span class="keyword">Next</span> j</span><br><span class="line"></span><br><span class="line">    sht.Cells(<span class="number">2</span>, <span class="number">1</span>).CopyFromRecordset rs</span><br><span class="line"></span><br><span class="line">    cnn.Close        </span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = NothingEnd <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>代码截图</strong></p>
<p><img src="/./../../img/640-1690873608593-71.jpeg" alt="图片"></p>
<p>**运行过程<br>**</p>
<p><img src="/./../../img/0.gif" alt="图片"></p>
<p><strong>Access与Excel数据对比</strong></p>
<p><img src="/./../../img/640-1690873608593-72.jpeg" alt="图片"></p>
<h2 id="Part-3：部分代码解读"><a href="#Part-3：部分代码解读" class="headerlink" title="Part 3：部分代码解读"></a>Part 3：部分代码解读</h2><ol>
<li><code>Select * from &quot; &amp; tblName</code>，中文释义：从工作表中获取所有信息</li>
<li><code>rs.Fields.Count</code>获取字段数目</li>
<li><code>rs.Fields(j).Name</code>获取字段的名称（列名）</li>
<li><code>CopyFromRecordset</code>复制整个<code>rs</code>（所有记录）</li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-Access字段删除-07]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-Access%E5%AD%97%E6%AE%B5%E5%88%A0%E9%99%A4-07/</url>
      <content type="html"><![CDATA[<blockquote>
<ul>
<li>这个系列开展一个新的篇章，重点关注Access数据库</li>
<li>主体框架：以Excel作为操作界面，Access作为数据库</li>
<li>今天讲讲如何删除特定字段</li>
<li>涉及知识：<code>ADO</code>，<code>SQL：Alter + drop</code></li>
</ul>
</blockquote>
<h2 id="Part-1：目标"><a href="#Part-1：目标" class="headerlink" title="Part 1：目标"></a>Part 1：目标</h2><p><img src="/./../../img/640-1690872346770-61.png" alt="图片"></p>
<ol>
<li><p>如上图所示，删除<strong>性别</strong>这一<strong>字段</strong>（列）</p>
</li>
<li><p>逻辑过程</p>
</li>
<li><ul>
<li>连接数据库</li>
<li>根据需求确定***SQL***语句</li>
<li>执行<em><strong>SQL</strong></em>语句</li>
<li>断开与数据库的连接</li>
</ul>
</li>
</ol>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()        </span><br><span class="line">    <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset        </span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName        </span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\学生信息.accdb&quot;</span></span><br><span class="line">    tblName = <span class="string">&quot;学生信息表&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;Alter table &quot;</span> &amp; tblName &amp; <span class="string">&quot; drop Column 性别&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)</span><br><span class="line"></span><br><span class="line">    cnn.Close        </span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = NothingEnd <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p>**代码截图<br>**</p>
<p><img src="/./../../img/640-1690872346771-62.jpeg" alt="图片"></p>
<p><strong>执行后效果</strong></p>
<p><img src="/./../../img/640-1690872346771-63.png" alt="图片"></p>
<h2 id="Part-3：部分代码解读"><a href="#Part-3：部分代码解读" class="headerlink" title="Part 3：部分代码解读"></a>Part 3：部分代码解读</h2><ol>
<li><code>Alter table &quot; &amp; tblName &amp; &quot; drop Column 性别</code></li>
<li>中文释义：改变工作表，具体变化点为删除<strong>性别</strong>列（<strong>字段</strong>）</li>
<li>删除不同表下不同的字段，只需替换<strong>表名称</strong>及<strong>字段名称</strong>即可</li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-Access记录删除-06]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-Access%E8%AE%B0%E5%BD%95%E5%88%A0%E9%99%A4-06/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：目标"><a href="#Part-1：目标" class="headerlink" title="Part 1：目标"></a>Part 1：目标</h2><ol>
<li><p>删除姓名为<strong>张三</strong>的这一条记录</p>
</li>
<li><p>逻辑过程</p>
</li>
<li><ul>
<li>连接数据库</li>
<li>根据需求确定***SQL***语句</li>
<li>执行***SQL***语句</li>
<li>断开与数据库的连接</li>
</ul>
</li>
</ol>
<p><strong>删除记录前</strong></p>
<p><img src="/./../../img/640-1690872280975-55.jpeg" alt="图片"></p>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()        <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset        <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName        <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\学生信息.accdb&quot;</span></span><br><span class="line">    tblName = <span class="string">&quot;学生信息表&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;delete from &quot;</span> &amp; tblName &amp; <span class="string">&quot; where 姓名=&#x27;张三&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)</span><br><span class="line"></span><br><span class="line">    cnn.Close        <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = NothingEnd <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>执行后效果</strong></p>
<p><img src="/./../../img/640-1690872280976-56.jpeg" alt="图片"></p>
<h2 id="Part-3：部分代码解读"><a href="#Part-3：部分代码解读" class="headerlink" title="Part 3：部分代码解读"></a>Part 3：部分代码解读</h2><ol>
<li><code>delete from &quot; &amp; tblName &amp; &quot; where 姓名=&#39;张三&#39;</code></li>
<li>中文释义：从工作表中删除一条 <strong>姓名</strong>字段取值为<strong>张三</strong>的一条记录</li>
<li>注意：张三有<strong>单引号</strong>包围起来</li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-Access记录修改-05]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-Access%E8%AE%B0%E5%BD%95%E4%BF%AE%E6%94%B9-05/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：目标"><a href="#Part-1：目标" class="headerlink" title="Part 1：目标"></a>Part 1：目标</h2><ol>
<li><p>前文中，我们已经获取了一个工作表（学生信息表）和4个字段（ID，姓名，学号，性别），并输入了两行记录</p>
</li>
<li><p>今天在原有字段的基础上增加<strong>籍贯</strong>，<strong>语文成绩</strong>两个新的字段</p>
</li>
<li><p>并对原<strong>张三</strong>的记录做一些修改：修改学号信息，增加籍贯及语文成绩信息</p>
</li>
<li><ul>
<li>原记录：张三，11，男</li>
<li>修改后：张三，<strong>1</strong>，男，<strong>广东省</strong>，<strong>85</strong></li>
</ul>
</li>
</ol>
<p><strong>结果如下</strong></p>
<p><img src="/./../../img/640-1690872173015-52.jpeg" alt="图片"></p>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()</span><br><span class="line">    <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset</span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName</span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\学生信息.accdb&quot;</span></span><br><span class="line">    tblName = <span class="string">&quot;学生信息表&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    field1 = <span class="string">&quot;籍贯 text(10)&quot;</span></span><br><span class="line">    field2 = <span class="string">&quot;语文成绩 single&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;增加字段</span></span><br><span class="line">    SQL = <span class="string">&quot;ALTER TABLE &quot;</span> &amp; tblName &amp; <span class="string">&quot; ADD &quot;</span> &amp; field1 &amp; <span class="string">&quot;,&quot;</span> &amp; field2</span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;补充记录</span></span><br><span class="line">    stuName = <span class="string">&quot;张三&quot;</span></span><br><span class="line">    jiGuan = <span class="string">&quot;广东省&quot;</span></span><br><span class="line">    yuWenNote = <span class="number">85</span></span><br><span class="line">    newXueHao = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;Update &quot;</span> &amp; tblName &amp; <span class="string">&quot; SET &quot;</span> _</span><br><span class="line">    &amp; <span class="string">&quot;籍贯=&quot;</span> &amp; <span class="built_in">Chr</span>(<span class="number">39</span>) &amp; jiGuan &amp; <span class="built_in">Chr</span>(<span class="number">39</span>) _</span><br><span class="line">    &amp; <span class="string">&quot;,语文成绩=&quot;</span> &amp; yuWenNote _</span><br><span class="line">    &amp; <span class="string">&quot;,学号=&quot;</span> &amp; newXueHao _</span><br><span class="line">    &amp; <span class="string">&quot; where 姓名=&quot;</span> &amp; <span class="built_in">Chr</span>(<span class="number">39</span>) &amp; stuName &amp; <span class="built_in">Chr</span>(<span class="number">39</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)</span><br><span class="line"></span><br><span class="line">    cnn.Close</span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<h2 id="Part-3：部分代码解读"><a href="#Part-3：部分代码解读" class="headerlink" title="Part 3：部分代码解读"></a>Part 3：部分代码解读</h2><ol>
<li><code>Update 工作表名 set 字段1=X1，字段2=X2 where 字段4=X4</code></li>
<li>中文释义：修改（更新）工作表，字段4&#x3D;X4所在记录（行）中，字段1的值改为&#x3D;X1，字段2改为X2</li>
<li>即：通过某一字段的值，定位到某一记录（行），修改这一记录（行）中其它字段的值</li>
</ol>
<p><strong>小结：</strong>对数据库的操作转化为对应的<code>SQL</code>语句，然后运行，搞定</p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-Access记录创建-04]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-Access%E8%AE%B0%E5%BD%95%E5%88%9B%E5%BB%BA-04/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：目标"><a href="#Part-1：目标" class="headerlink" title="Part 1：目标"></a>Part 1：目标</h2><ol>
<li><p>从上一篇文章中，我们已经获取了一个工作表（<strong>学生信息表</strong>）和4个字段（<strong>ID</strong>，<strong>姓名</strong>，<strong>学号</strong>，<strong>性别</strong>）</p>
</li>
<li><p>今天的文章开始向Access数据库中录入一条条数据</p>
</li>
<li><p>包括两条记录</p>
</li>
<li><ul>
<li>张三，11，男</li>
<li>李四，12，男</li>
</ul>
</li>
</ol>
<p><strong>结果如下</strong></p>
<p><img src="/./../../img/640-1690872060121-49.jpeg" alt="图片"></p>
<h2 id="Part-2：代码"><a href="#Part-2：代码" class="headerlink" title="Part 2：代码"></a>Part 2：代码</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()</span><br><span class="line">    <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection</span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset</span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName</span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\学生信息.accdb&quot;</span></span><br><span class="line">    tblName = <span class="string">&quot;学生信息表&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;记录1</span></span><br><span class="line">    stuName = <span class="string">&quot;张三&quot;</span></span><br><span class="line">    stuNum = <span class="number">11</span></span><br><span class="line">    stuGender = <span class="string">&quot;男&quot;</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;INSERT INTO &quot;</span> &amp; tblName &amp; <span class="string">&quot; (姓名,学号,性别) VALUES&quot;</span> _</span><br><span class="line">    &amp; <span class="string">&quot;(&quot;</span> &amp; <span class="built_in">Chr</span>(<span class="number">39</span>) &amp; stuName &amp; <span class="built_in">Chr</span>(<span class="number">39</span>) &amp; <span class="string">&quot;,&quot;</span> &amp; stuNum &amp; <span class="string">&quot;,&quot;</span> &amp; <span class="built_in">Chr</span>(<span class="number">39</span>) &amp; stuGender &amp; <span class="built_in">Chr</span>(<span class="number">39</span>) &amp; <span class="string">&quot;)&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;记录2</span></span><br><span class="line">    stuName = <span class="string">&quot;李四&quot;</span></span><br><span class="line">    stuNum = <span class="number">12</span></span><br><span class="line">    stuGender = <span class="string">&quot;男&quot;</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;INSERT INTO &quot;</span> &amp; tblName &amp; <span class="string">&quot; (姓名,学号,性别) VALUES&quot;</span> _</span><br><span class="line">    &amp; <span class="string">&quot;(&quot;</span> &amp; <span class="built_in">Chr</span>(<span class="number">39</span>) &amp; stuName &amp; <span class="built_in">Chr</span>(<span class="number">39</span>) &amp; <span class="string">&quot;,&quot;</span> &amp; stuNum &amp; <span class="string">&quot;,&quot;</span> &amp; <span class="built_in">Chr</span>(<span class="number">39</span>) &amp; stuGender &amp; <span class="built_in">Chr</span>(<span class="number">39</span>) &amp; <span class="string">&quot;)&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)</span><br><span class="line">    cnn.Close</span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<h2 id="Part-3：部分代码解读s"><a href="#Part-3：部分代码解读s" class="headerlink" title="Part 3：部分代码解读s"></a>Part 3：部分代码解读s</h2><ol>
<li><code>INSERT INTO 工作表名称 （字段1，字段2，字段3） VALUES（字段1对应值，字段2对应值，字段3对应值）</code></li>
<li>中文释义：向工作表X中的字段1中录入数据X，字段2中录入数据X，字段3录入数据X</li>
<li>若字段中对应值为字符串，需在单引号（**Chr(39)**）中<code>&#39;&#39;</code>，若是时间，则使用<code>#时间信息#</code></li>
<li><code>ID</code>字段是自增式，无需额外赋值，每有一个新的记录，会自动+1</li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Excel-Excel-入门（Excel作为界面端，Excel作为数据库）]]></title>
      <url>/2023/08/01/Excel-Excel-%E5%85%A5%E9%97%A8%EF%BC%88Excel%E4%BD%9C%E4%B8%BA%E7%95%8C%E9%9D%A2%E7%AB%AF%EF%BC%8CExcel%E4%BD%9C%E4%B8%BA%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><strong>示例</strong>：<strong><em>Excel*<strong>作为数据库，从</strong></em>Excel</strong><em>中获取来自于<strong>交通院</strong>，语文和数学成绩都是*</em>&gt;80**分的信息</p>
<p><img src="/./../img/640-1690871561199-13.png" alt="图片"></p>
<p><strong>实现结果</strong><br><img src="/./../img/640-1690871561200-14.png" alt="图片"></p>
<h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><ol>
<li><p>传统方法：对数据表进行循环判断，找到满足条件的行</p>
</li>
<li><p>新方法：查询通过一句***SQL***实现<code>SQL = &quot;Select &quot; &amp; filds &amp; &quot; From &quot; &amp; tbl_name &amp; &quot; Where (&quot; &amp; searchC &amp; &quot;)&quot;</code>，逻辑过程如下：</p>
</li>
<li><ul>
<li>连接数据库</li>
<li>确定***SQL***语句</li>
<li>执行***SQL***语句</li>
<li>获取结果</li>
<li>断开数据库</li>
</ul>
</li>
</ol>
<p><strong>SQL</strong><br><img src="/./../img/640-1690871561201-15.png" alt="图片"></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><strong>过程</strong><code>main</code></p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> main()        <span class="keyword">Dim</span> dbAddr</span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\数据源.xlsx&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> adConn As ADODB.Connection  <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Set</span> adConn = <span class="keyword">New</span> ADODB.Connection        <span class="keyword">Dim</span> rs As ADODB.Recordset        <span class="keyword">Set</span> rs = <span class="keyword">New</span> ADODB.Recordset            <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> filds        <span class="keyword">Dim</span> tbl_name        <span class="keyword">Dim</span> searchC</span><br><span class="line"></span><br><span class="line">    adConn.Open <span class="string">&quot;provider=Microsoft.ACE.OLEDB.12.0;&quot;</span> _</span><br><span class="line">                            &amp; <span class="string">&quot;extended properties=excel 12.0;&quot;</span> _</span><br><span class="line">                            &amp; <span class="string">&quot;data source=&quot;</span> &amp; dbAddr</span><br><span class="line"></span><br><span class="line">    filds = <span class="string">&quot;姓名,学院,语文,数学&quot;</span></span><br><span class="line">    tbl_name = <span class="string">&quot;[data$]&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> searchC1        <span class="keyword">Dim</span> searchC2        <span class="keyword">Dim</span> searchC3        <span class="keyword">Dim</span> sht_name        <span class="keyword">Dim</span> sht        <span class="keyword">Dim</span> i</span><br><span class="line"></span><br><span class="line">    searchC1 = <span class="string">&quot;学院=&#x27;交通院&#x27;&quot;</span></span><br><span class="line">    searchC2 = <span class="string">&quot;语文&gt;80&quot;</span></span><br><span class="line">    searchC3 = <span class="string">&quot;数学&gt;80&quot;</span></span><br><span class="line">    searchC = searchC1 &amp; <span class="string">&quot; and &quot;</span> &amp; searchC2 &amp; <span class="string">&quot; and &quot;</span> &amp; searchC3</span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;Select &quot;</span> &amp; filds &amp; <span class="string">&quot; From &quot;</span> &amp; tbl_name &amp; <span class="string">&quot; Where (&quot;</span> &amp; searchC &amp; <span class="string">&quot;)&quot;</span></span><br><span class="line">    <span class="keyword">Set</span> rs = adConn.<span class="keyword">Execute</span>(SQL)</span><br><span class="line"></span><br><span class="line">    sht_name = <span class="string">&quot;示例&quot;</span></span><br><span class="line">    <span class="keyword">Set</span> sht = ThisWorkbook.Worksheets(sht_name)            <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> rs.Fields.Count <span class="keyword">Step</span> <span class="number">1</span></span><br><span class="line">        sht.Range(<span class="string">&quot;A1&quot;</span>).Offset(<span class="number">0</span>, i - <span class="number">1</span>) = rs.Fields(i - <span class="number">1</span>).Name <span class="comment">&#x27;字段序号从0开始</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"></span><br><span class="line">    sht.Range(<span class="string">&quot;A2&quot;</span>).CopyFromRecordset rs</span><br><span class="line">    sht.Cells.EntireColumn.AutoFit        <span class="comment">&#x27;关闭数据库</span></span><br><span class="line">    adConn.Close        <span class="keyword">Set</span> adConn = NothingEnd <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>代码截图</strong><br><img src="/./../img/640-1690871561201-16.jpeg" alt="图片"></p>
<h2 id="部分代码解读"><a href="#部分代码解读" class="headerlink" title="部分代码解读"></a>部分代码解读</h2><ol>
<li><p>数据库连接<br>***Excel***<strong>连接</strong></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adConn.Open &quot;provider=Microsoft.ACE.OLEDB.12.0;&quot; _</span><br><span class="line">             &amp; &quot;extended properties=excel 12.0;&quot; _</span><br><span class="line">             &amp; &quot;data source=&quot; &amp; dbAddr</span><br></pre></td></tr></table></figure>

<p><strong>Access连接</strong></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">With adConn</span><br><span class="line">     .Provider = &quot;Microsoft.ACE.OLEDB.12.0;&quot;</span><br><span class="line">     .Open &quot;Data Source=&quot; &amp; dbAddrEnd With</span><br></pre></td></tr></table></figure>
</li>
<li><p>工作表的表示方法<code>tbl_name = &quot;[data$]&quot;</code>，使用<code>[$]</code></p>
</li>
<li><p>复制***rs***信息到工作表：<code>sht.Range(&quot;A2&quot;).CopyFromRecordset rs</code></p>
</li>
</ol>
<p>**<br>**</p>
<p><strong>Ps</strong>：<br>1）采用<em><strong>ADO</strong></em>的方式连接的数据库，需要人为先在*<strong>VBE*<strong>中打开这个引用，菜单</strong>工具</strong>-<strong>引用</strong><br><img src="/./../img/640-1690871561202-17.png" alt="图片"><br>2)当数据量越大，本文中采用的方式，效率越明显，是不错的方法幺</p>
]]></content>
      
        <categories>
            
            <category> excel </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> 数据库 </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-Access表及字段创建-03]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-Access%E8%A1%A8%E5%8F%8A%E5%AD%97%E6%AE%B5%E5%88%9B%E5%BB%BA-03/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：前面的话"><a href="#Part-1：前面的话" class="headerlink" title="Part 1：前面的话"></a>Part 1：前面的话</h2><ol>
<li>对Access数据库的大部分操作都可以通过<code>SQL</code>语言来实现</li>
<li><code>SQL:Structure Query Language</code>，结构化查询语言，语法简单，非常容易学</li>
<li><code>SQL</code>语言的执行可借助于<code>ADO</code>，<code>ADO</code>本身也支持对数据库的各种操作，但是涉及到一些其它知识的学习</li>
<li>这个系列中，除非无法用<code>SQL</code>来实现，否则会使用<code>SQL</code></li>
<li><code>SQL</code>作为数据库操作的通用语言，学会了后也可用于对其它数据库的操作，那也是极好的</li>
</ol>
<h2 id="Part-2：本篇目标"><a href="#Part-2：本篇目标" class="headerlink" title="Part 2：本篇目标"></a>Part 2：本篇目标</h2><ol>
<li><p>对已有空白数据库创建一个<strong>数据表</strong></p>
</li>
<li><p>根据要求创建新的字段，指定字段的约束</p>
</li>
<li><p>基本逻辑过程：</p>
</li>
<li><ul>
<li>连接数据库</li>
<li>确定<code>SQL</code>语句</li>
<li>执行<code>SQL</code>语句</li>
<li>根据需求重复上面两步</li>
<li>关闭数据库的连接</li>
</ul>
</li>
<li><p>记得引用<code>Microsoft ActiveX Data Objects 2.8 Library</code></p>
</li>
</ol>
<p><strong>Part 3：代码</strong></p>
<hr>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()</span><br><span class="line">    <span class="keyword">Dim</span> cnn As <span class="keyword">New</span> ADODB.Connection <span class="comment">&#x27;连接</span></span><br><span class="line">    <span class="keyword">Dim</span> rs As <span class="keyword">New</span> ADODB.Recordset</span><br><span class="line">    <span class="keyword">Dim</span> SQL As String</span><br><span class="line">    <span class="keyword">Dim</span> tblName</span><br><span class="line">    <span class="keyword">Dim</span> dbAddr</span><br><span class="line"></span><br><span class="line">    dbAddr = ThisWorkbook.Path &amp; <span class="string">&quot;\学生信息.accdb&quot;</span></span><br><span class="line">    tblName = <span class="string">&quot;学生信息表&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;连接数据库</span></span><br><span class="line">    <span class="keyword">With</span> cnn</span><br><span class="line">        .Provider = <span class="string">&quot;Microsoft.ACE.OLEDB.12.0&quot;</span></span><br><span class="line">        .Open <span class="string">&quot;Data Source=&quot;</span> &amp; dbAddr</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;CREATE TABLE &quot;</span> &amp; tblName &amp; <span class="string">&quot; (ID AUTOINCREMENT primary key)&quot;</span></span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)</span><br><span class="line"></span><br><span class="line">    field1 = <span class="string">&quot;姓名  text(6)&quot;</span></span><br><span class="line">    field2 = <span class="string">&quot;学号  single&quot;</span></span><br><span class="line">    field3 = <span class="string">&quot;性别  text(1)&quot;</span></span><br><span class="line"></span><br><span class="line">    SQL = <span class="string">&quot;ALTER TABLE &quot;</span> &amp; tblName &amp; <span class="string">&quot; ADD &quot;</span> &amp; field1 &amp; <span class="string">&quot;,&quot;</span> &amp; field2 &amp; <span class="string">&quot;,&quot;</span> &amp; field3</span><br><span class="line">    <span class="keyword">Set</span> rs = cnn.<span class="keyword">Execute</span>(SQL)</span><br><span class="line"></span><br><span class="line">    cnn.Close</span><br><span class="line">    <span class="keyword">Set</span> rs = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> cnn = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<p><strong>执行结果：新建表</strong></p>
<p><img src="/./../../img/640-1690871939017-40.jpeg" alt="图片"></p>
<p><strong>执行结果：新建字段</strong></p>
<p><img src="/./../../img/640-1690871939017-41.jpeg" alt="图片"></p>
<h2 id="Part-4：部分代码解读"><a href="#Part-4：部分代码解读" class="headerlink" title="Part 4：部分代码解读"></a>Part 4：部分代码解读</h2><ol>
<li><p><code>ADO</code>连接不同数据库采用不同引擎</p>
</li>
<li><ul>
<li><code>Microsoft.ACE.OLEDB.12.0 **连接Access**</code></li>
<li>老版本的Access（.mdb后缀的）可以使用引擎 <code>Microsoft.Jet.OLEDB.4.0</code></li>
</ul>
</li>
<li><p><code>CREATE TABLE &quot; &amp; tblName &amp; &quot; (ID AUTOINCREMENT primary key)</code>创建了一个工作表，并设置一个字段（主键，唯一且自增）</p>
</li>
<li><ul>
<li><code>CREATE TABLE 工作表名称 （字段信息）</code>，中文释义可以理解为：新建数据表XX，字段XX且为主键</li>
<li><code>ID</code>这个字段每增加一行记录，会自增1，设为主键</li>
</ul>
</li>
<li><p><code>SQL = &quot;ALTER TABLE &quot; &amp; tblName &amp; &quot; ADD &quot; &amp; field1 &amp; &quot;,&quot; &amp; field2 &amp; &quot;,&quot; &amp; field3</code>，新增字段</p>
</li>
<li><ul>
<li><code>ALTER</code>，修改，上面的<strong>SQL</strong>中文释义可以理解为，修改数据表XX增加字段XX，其实还是比较直白的</li>
</ul>
</li>
<li><p><code>field2 = &quot;学号  single&quot;</code>，设置字段特性，字段名称为<strong>学号</strong>，类型为Single，单精度实数</p>
</li>
<li><p><code>Set rs = cnn.Execute(SQL)</code>，运行该<code>SQL</code>语句</p>
</li>
</ol>
<p><strong>字段约束</strong></p>
<p><img src="/./../../img/640-1690871939018-42.jpeg" alt="图片"></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">主键官方定义：</span><br><span class="line"></span><br><span class="line">主键是表中的一个字段或字段集，为每条记录提供一个唯一的标识符。</span><br><span class="line">在数据库中，请将信息划分到基于主题的不同表中。</span><br><span class="line">然后，使用表关系和主键以指示 Access 如何将信息再次组合起来。</span><br><span class="line">Access 使用主键字段将多个表中的数据迅速关联起来，并以一种有意义的方式将这些数据组合在一起。</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-新建Access文件-02]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E6%96%B0%E5%BB%BAAccess%E6%96%87%E4%BB%B6-02/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：逻辑过程"><a href="#Part-1：逻辑过程" class="headerlink" title="Part 1：逻辑过程"></a>Part 1：逻辑过程</h2><ol>
<li><p>引用<code>Microsoft DAO 3.6 Object Library</code>（工具-引用）</p>
</li>
<li><p>定义<code>DAO</code>及地址变量</p>
</li>
<li><p>变量赋值</p>
</li>
<li><p>判断拟创建文件是否存在，不存在则创建（带密码和不带密码的）</p>
</li>
<li><p>应用场景</p>
</li>
<li><ul>
<li>Access文件的创建，当然可以通过右键创建</li>
<li>当存在大量的Access数据库时，根据实际需要自动创建</li>
<li>或者是快速创建特定需求的数据库（如带密码）</li>
</ul>
</li>
</ol>
<h2 id="Part-2：代码（创建空白数据库）"><a href="#Part-2：代码（创建空白数据库）" class="headerlink" title="Part 2：代码（创建空白数据库）"></a>Part 2：代码（创建空白数据库）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Sub 新建Access()</span><br><span class="line">    Dim dbAccess As DAO.Database</span><br><span class="line">    Dim dbAddr1</span><br><span class="line"></span><br><span class="line">    dbAddr1 = ThisWorkbook.Path &amp; &quot;\Access数据库.accdb&quot;</span><br><span class="line">    </span><br><span class="line">    &#x27;创建数据库</span><br><span class="line">    If Dir(dbAddr1) = &quot;&quot; Then</span><br><span class="line">        Set dbAccess = CreateDatabase(dbAddr1, dbLangChineseSimplified) </span><br><span class="line">        dbAccess.Close</span><br><span class="line">    End If</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure>

<h2 id="Part-3：代码（创建带密码数据库）"><a href="#Part-3：代码（创建带密码数据库）" class="headerlink" title="Part 3：代码（创建带密码数据库）"></a>Part 3：代码（创建带密码数据库）</h2><ol>
<li>将创建数据库代码替换如下，新建Access数据库密码为<code>xxx</code></li>
<li>其中<code>pwd</code>可以理解为<code>password</code>简写</li>
<li>手动打开该数据库时，会弹出输入密码框</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set dbAccess = CreateDatabase(dbAddr2, dbLangChineseSimplified &amp; &quot;;pwd=xxx&quot;) </span><br></pre></td></tr></table></figure>

<p><strong>输入密码界面</strong></p>
<p><img src="/./../../img/640-1690871843572-37.jpeg" alt="图片"></p>
<h2 id="Part-4：部分代码解读"><a href="#Part-4：部分代码解读" class="headerlink" title="Part 4：部分代码解读"></a>Part 4：部分代码解读</h2><ol>
<li><p><code>Dir(dbAddr1) = &quot;&quot;</code>判断文件是否存在，若成立表示不存在</p>
</li>
<li><p><code>CreateDatabase(数据库绝对地址,字符串比较规则)</code>，这里采用的是简体中文</p>
</li>
<li><ul>
<li>官方解读网址：<code>https://msdn.microsoft.com/en-us/library/office/ff835033.aspx</code></li>
<li><code>dbLangChineseSimplified</code>意义，官方定义：<strong>A string expression that specifies a collating order for creating the database</strong></li>
</ul>
</li>
<li><p>“;pwd&#x3D;xxx”，表示密码为xxx，注意那个<code>;</code>不能省略</p>
</li>
</ol>
<p><strong>番外：</strong>其实也可以通过在硬盘中设置一个空白的Access文件，若需新建文件，直接复制该文件即可</p>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access/VBA/Excel-数据库-01]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-Excel-%E6%95%B0%E6%8D%AE%E5%BA%93-01/</url>
      <content type="html"><![CDATA[<h2 id="Part-1：概览"><a href="#Part-1：概览" class="headerlink" title="Part 1：概览"></a>Part 1：概览</h2><ol>
<li><p>在我们之前介绍种种<code>VBA</code>的使用，其实主要就是一个<strong>数据处理过程</strong>，类比我们的工作很多时候人承担的也是一个信息处理的角色</p>
</li>
<li><p>用户直接看到的<code>Excel</code>工作表整体可以分为四个部分</p>
</li>
<li><ul>
<li><strong>操作界面</strong>，就是使用者可以点击的一系列按钮</li>
<li><strong>数据处理过渡表格</strong>（可选，可以直接在内存中处理），就是一些计算借助了Excel工作表（类似于数组，看起来更直接）</li>
<li><strong>数据库</strong>，计算完的数据保存到这些工作表之中，输出时会用到其中的数据</li>
<li><strong>输出模板</strong>，信息处理后按照什么形式输出</li>
</ul>
</li>
<li><p>这个系列中重点介绍的<strong>Access</strong>替代的就是<strong>原数据库工作表</strong>这个部分，其中<code>ADO</code>&#x2F;<code>DAO</code>&#x2F;<code>SQL</code>都是操作<code>Access</code>的方法</p>
</li>
<li><p>整体的思路是将数据库从整个信息处理过程中独立出来，用专门方法去操作</p>
</li>
<li><p>那么为什么这么做？看看下篇</p>
</li>
</ol>
<h2 id="Part-2：Access"><a href="#Part-2：Access" class="headerlink" title="Part 2：Access"></a>Part 2：Access</h2><ol>
<li><p><strong>定义</strong>：Microsoft Office Access是由微软发布的关系数据库管理系统。它结合了 Microsoft Jet Database Engine 和 图形用户界面两项特点，是 Microsoft Office 的系统程序之一（百度百科）</p>
</li>
<li><p>这个系列中，对数据库的操作全部是后台进行的，都是通过<strong>代码</strong>实现的</p>
</li>
<li><p>本系列用的功能主要就是<code>Access</code>的表，其它的暂且不需要使用，所以理论上来说不需要了解<code>Access</code>软件的各个操作按钮，但是建议各位打开这个软件看看，有个感性认识</p>
</li>
<li><p>可以简单理解为<code>Excel</code>，也是由一个个工作表构成，只不过约束更多</p>
</li>
<li><p><code>Access</code>一个工作表的列称为<strong>字段</strong>，一行称为一个<strong>记录</strong>，这两点记住</p>
</li>
<li><p>为什么要使用<code>Access</code>，竟然主要使用的也是工作表，原因如下：</p>
</li>
<li><ul>
<li><code>Excel</code>文件过大时，例如超过50M，普通办公电脑处理起来就非常卡了</li>
<li><code>Access</code>支持2GB文件的处理，理论上允许255个人并发处理，这个基本上已经满足日常办公所需</li>
<li><code>Access</code>操作起来非常方便，对数据的管理很省心，例如增加一个新的记录只需一句<code>SQL</code>,而不用寻找存储具体的行号</li>
<li><code>Access</code>允许同时对多个工作表进行连接处理，就是很容易从不同的表获取关联信息，底层的寻找数据工作是<code>Access</code>系统自己处理的</li>
<li>如果你想在<strong>数据处理</strong>的道路上走的更远，数据库技术是必须要学习的</li>
</ul>
</li>
</ol>
<p><strong>Access界面</strong></p>
<p><img src="/./../../img/640-1690871750266-28.jpeg" alt="图片"></p>
<p><strong>Access规格</strong>（Access软件打开后F1按钮，输入<strong>规格</strong>得到对应帮助文件）</p>
<p><img src="/./../../img/640-1690871750267-29.jpeg" alt="图片"></p>
<h2 id="Part-3：ADO-x2F-DAO"><a href="#Part-3：ADO-x2F-DAO" class="headerlink" title="Part 3：ADO&#x2F;DAO"></a>Part 3：<code>ADO</code>&#x2F;<code>DAO</code></h2><ol>
<li><p><code>ADO</code>&#x2F;<code>DAO</code>类似于<code>FSO</code>使用前需先引用</p>
</li>
<li><p>对于新手建议可以采用前期引用，这样输入代码的时候会有提示，打开<code>Excel</code>的VBE界面，前期引用方法：工具菜单-引用，勾选</p>
</li>
<li><ul>
<li><code>Microsoft ActiveX Data Objects 2.8 Library</code></li>
<li><code>Microsoft DAO 3.6 Object Library</code></li>
<li>后续的代码使用都是默认大家已经勾选了这两个选项</li>
</ul>
</li>
<li><p>如果大家有看上一篇关于网页操作的：<a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484116&idx=1&sn=2c8d2555a40781836864d21a5d703426&chksm=ea811f79ddf6966f8d78e25adc04501846998f80ec6cab657bab3d355d942354aad13a331648&scene=21#wechat_redirect">VBA&#x2F;Excel-网页操作-01</a>，其实也是引用一个库，<code>VBA</code>的扩展库还是蛮多，有需求的可以研究一下</p>
</li>
<li><p>通过<code>ADO</code>&#x2F;<code>DAO</code>打通<code>Excel</code>与<code>Access</code>的连接</p>
</li>
</ol>
<p><strong>引用</strong></p>
<p><img src="/./../../img/640-1690871750267-30.jpeg" alt="图片"></p>
<h2 id="Part-3：SQL"><a href="#Part-3：SQL" class="headerlink" title="Part 3：SQL"></a>Part 3：<code>SQL</code></h2><ol>
<li><strong>定义：</strong>结构化查询语言(Structured Query Language)简称SQL(发音：&#x2F;ˈes kjuː ˈel&#x2F; “S-Q-L”)，是一种特殊目的的编程语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统；同时也是数据库脚本文件的扩展名（百度百科）</li>
<li><code>SQL</code>不仅仅使用在<strong>Access</strong>这样的数据库，基本所有的关系型数据库都支持该语言，但是针对不同的数据库同一个操作写法上可能会有区别</li>
<li>这个系列中主要涉及的就是对数据库的<strong>增、删、建、改、查</strong></li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Access-VBA-目录]]></title>
      <url>/2023/08/01/ACCESS-VBA/Access-VBA-%E7%9B%AE%E5%BD%95/</url>
      <content type="html"><![CDATA[<p><strong>目录：</strong></p>
<blockquote>
<ol>
<li>Excel-Access-入门（Excel作为界面端，Access作为数据库）</li>
<li>Access-控件解析</li>
<li>Access-小示例</li>
<li>Access-大项目-培训管理系统</li>
<li>Excel-Excel-入门（Excel作为界面端，Excel作为数据库）</li>
</ol>
</blockquote>
<p><strong>Excel-Access-入门（Excel作为界面端，Access作为数据库）</strong></p>
<hr>
<ol>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484122&idx=1&sn=0587815bb9cb4d36e8a1106723b58f28&chksm=ea811f77ddf69661bcddeaa1d9bccd9a5a04d2486bda46b5c885a3627176235ac403118f1ec6&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-数据库-01</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484127&idx=1&sn=0b87098bc60444af4aa419a4c545fa0a&chksm=ea811f72ddf696641f98ab5f2d06a7c8bd12e7c9803fc0d6b885e8c80e6dda0afdef2182f82c&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-新建Access文件-02</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484136&idx=1&sn=cffcfc40d6486185e92f0d8a6d0ca35a&chksm=ea811f45ddf6965392e29519eae95bdbbf225feef8676cdc26d1238006455c03a6c83b295d82&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-Access表及字段创建-03</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484140&idx=1&sn=b6429db84d4ba8b7ae2bb9024e4b5dc7&chksm=ea811f41ddf696570352be40b399f50d1444a1f45f870aa0b694bfdf30b2957a29459ec21220&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-Access记录创建-04</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484144&idx=1&sn=400cba73e328a8d4792f50280f006877&chksm=ea811f5dddf6964b0d9130d2528db22353ce4ab721887f0f1515f1d6a340cf9a52a6e3fb19a2&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-Access记录修改-05</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484486&idx=1&sn=28c04338c3fe20f4db6a098765bdb21d&chksm=ea8119ebddf690fd8dc2b968de34d342235a2e5757595f179449bae6db07859ec62638607e77&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-Access记录删除-06</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484521&idx=1&sn=f3326992d6c4c86aea4d5096b196e128&chksm=ea8119c4ddf690d2f8e7883f9418a997f803ce103880c60225abd6e9c08e2ab34f5ef8a6419f&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-Access字段删除-07</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484554&idx=1&sn=149518da2ef1c7f9d86265cc223cfdfd&chksm=ea811927ddf69031cf35b1cb1be11bbfd6c16fbe3b9c2e19865c9cd3d9a94a7906c50acc2b10&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-获取数据库数据-08</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484570&idx=1&sn=d43c000c5aa85f5495baa63500754670&chksm=ea811937ddf690215c9e818a4954c2e30cf367924369ee87e109449ee088232d186cf47f56d2&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-单表筛选数据-09</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484591&idx=1&sn=a39c1e880f3fbfecf5cf4410ba66cc34&chksm=ea811902ddf690149dd24fd9f3887f2d49a22aad684d50e6e9581b567f6d8254fe9e952a0abe&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-多条件筛选数据-10</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484630&idx=1&sn=ccd2fb66805e8887b00a111f52d4cbf9&chksm=ea81197bddf6906dc449057e182f5e9fb3d166ee7df3c6acb45e6180be40aff98a24b6c9db7f&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-左连接-11</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484642&idx=1&sn=f853c3abea7799636e5e60ff37b0bc09&chksm=ea81194fddf69059d804d81e5d96915e9a24c45b60cd5cccd7c10aa70da1ea01441172bfd67d&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-12-模糊查询</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484654&idx=1&sn=5814bf972a362874a1c3f3218c0918c3&chksm=ea811943ddf69055d6f43b937c28f0104a2f79f83a90c0b58bdb9b8dd5dfaaac424d632f6d22&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-13-嵌套查询</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484667&idx=1&sn=f55663cd0499668dda1d1405cd3b620b&chksm=ea811956ddf6904054c7df67e5b9e532a03217323ef698071692426b4f9c384097c97c63c83a&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-14-消除重复值</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484692&idx=1&sn=a5e89c01799240aad808b26f6652587d&chksm=ea8118b9ddf691aff071cb4b85ae46d795e05e596a1dd3fa5ff981c9da3d98b785d96e6d3a4e&scene=21#wechat_redirect">Access&#x2F;VBA&#x2F;Excel-15-表信息整体迁移</a></li>
</ol>
<blockquote>
<p><strong>我是分界线</strong></p>
</blockquote>
<p><strong>Access-控件解析</strong></p>
<hr>
<ol>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484994&idx=1&sn=b3729e4ef33b10d4b5ba9c8405ff5153&chksm=ea811befddf692f97b7812dc9aa1124185880254014c650313f142dc6bc48ecbef868b69dac5&scene=21#wechat_redirect">Access-控件解析-列表框-01-多选数目获取</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485002&idx=1&sn=1bfe56af9b19f5a3efaca1783b6dbe25&chksm=ea811be7ddf692f1f1b88d1ed1ccf252a22a357ba70ffa4f6d5e3be0477b369bbe211e7674c3&scene=21#wechat_redirect">Access-控件解析-列表框-02-获取选项</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485114&idx=1&sn=04546a7120b3e61aa36c168b4ef94f19&chksm=ea811b17ddf692017db11d593e17e26bded90bde67de57784a41da56856723008c850ae32a97&scene=21#wechat_redirect">Access-控件解析-列表框-03-向列表框录入信息</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485179&idx=1&sn=2b456f8bd88177e34e229d5557bbea0f&chksm=ea811b56ddf69240998715b7a734279cca2d52f963c361a4f9d94bbe7329592fd02f0b3ae664&scene=21#wechat_redirect">Access-控件解析-列表框-04-双击效果</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485184&idx=1&sn=4dc97db44facf92e1196a9ffc40dbcbf&chksm=ea811aadddf693bb8ccce328c343bbea01289f74e68d96de868bb8b40937be6a95dbf92348e9&scene=21#wechat_redirect">Access-控件解析-组合框-01-下拉列表</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485205&idx=1&sn=ff50515a46aef487ac7da9e25eebac12&chksm=ea811ab8ddf693aef9b152687b57f687c1cca26389ec59779bd87fce685c31105ffe45081a8b&scene=21#wechat_redirect">Access-控件解析-组合框-02-两个组合框联动</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485270&idx=1&sn=cb6b307725b606ae7a84a2967fe20f76&chksm=ea811afbddf693ed8d65723871ec3ecf9c0183c255a4344cdbc3b54474131621ad0c7ed3bf0a&scene=21#wechat_redirect">Access-控件解析-文本框-01-格式设置</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485294&idx=1&sn=e4d8e98324266a3228a3d74446b751b2&chksm=ea811ac3ddf693d5e72a23986c81162c3b6d47c69d8796f1d73dc7a9d80de1d616edae7533c7&scene=21#wechat_redirect">Access-控件解析-按钮-01-关联代码</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485299&idx=1&sn=8119fb142d5a22b693a3423b532ef0d8&chksm=ea811adeddf693c87b375ddd86965f68850369b20f9d94bf8b7314d8e01cf01d8ad9d5543867&scene=21#wechat_redirect">Access-控件解析-按钮-02-来个双击</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485311&idx=1&sn=518208b96e505b71a88284e4b60a2e23&chksm=ea811ad2ddf693c4854e0f73f001078ecfd8263a847b759bba439ede993bca927164014be9d0&scene=21#wechat_redirect">Access-控件解析-标签-01-控件提示</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485320&idx=1&sn=bd3e612b8f2a0e4130665582175829be&chksm=ea811a25ddf69333bc81ed36e59d6df96782b539a7bf60fc95f0d93b721b45ac45b05d2df357&scene=21#wechat_redirect">Access-控件解析-窗体-01-弹出</a></li>
</ol>
<blockquote>
<p><strong>我是分界线</strong></p>
</blockquote>
<p><strong>Access-小示例</strong></p>
<hr>
<ol>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485340&idx=1&sn=5d191556de83e156c79bc8b488150270&chksm=ea811a31ddf69327a821c27cf221b92fa6ed93a7819031a5355b39ed05d89e4ddaabba5b636d&scene=21#wechat_redirect">Access-常用功能解析-01-账户权限管理</a>（Environ(“username”)）</li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485620&idx=1&sn=18cbace8c97db797bded35293b61221b&chksm=ea811519ddf69c0f750cc63ccfcbf00c3e5a01a3c34c5dfd05bca505a25397375994e6ea1a49&scene=21#wechat_redirect">Access-小示例-02-连接mdb数据库</a></li>
</ol>
<blockquote>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247483868&idx=1&sn=2c695bf89caee63b612f3df5161c01ae&scene=21#wechat_redirect"><strong>我是分界线</strong></a></p>
</blockquote>
<p><strong>Access-实战项目-培训管理系统</strong></p>
<hr>
<ol>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484735&idx=1&sn=bc7f1f6616ff2154cc300c71a1a9e6ae&chksm=ea811892ddf691849e0b4e0191c4de533e7ff9be9d118a17ebabceb9069f3b9b62832f3aa62d&scene=21#wechat_redirect">Access-培训管理系统-01-概括</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484747&idx=1&sn=23f7218a970b782cd5f1c38775be8abc&chksm=ea8118e6ddf691f052b1d3137ad848ada4210204ea3f21fc51c6495d3a96ee2013684edf7a91&scene=21#wechat_redirect">Access-培训管理系统-02-来个界面</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484768&idx=1&sn=030ffbfc406ef1f4c91785d05a01e9f6&chksm=ea8118cdddf691db9a0331cfd6cb7d9c6c40f4bec07aa03c741c23f5e1c90902147a1a87b0f3&scene=21#wechat_redirect">Access-培训管理系统-03-建个数据库</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484793&idx=1&sn=ba9af6227774e79fc353c9a6a0700326&chksm=ea8118d4ddf691c29c319c5c2d43801aaf8726375845d0857c0107011fff94bba7eb58192b52&scene=21#wechat_redirect">Access-培训管理系统-04-清空界面及下拉列表实现（上篇）</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484801&idx=1&sn=710af2e5d3132990dd875be27b38aa22&chksm=ea81182cddf6913a28aba7fd23296b30db425d9b672d3fc81789dc048820863b3f186f293192&scene=21#wechat_redirect">Access-培训管理系统-04-清空界面及下拉列表实现（下篇）</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484814&idx=1&sn=3d0c745504a73e8693cd08f58a97b0c2&chksm=ea811823ddf691352b701e3727339558a25e4d60ec84b181559ac298984cba4c53c08ae87304&scene=21#wechat_redirect">Access-培训管理系统-06-按钮代码设置之 清空所有</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484824&idx=1&sn=d4185218c90ecce0b53c26e21ca3aa9f&chksm=ea811835ddf69123534f51624f2f23825d056df0200b5ebd0e82e99c2381ef97500d204f1dee&scene=21#wechat_redirect">Access-培训管理系统-07-按钮代码设置之增加学员</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484833&idx=1&sn=9cb70f94f09f3954fdd4cca50aaee830&chksm=ea81180cddf6911ab24fa7800da58e41616b677086b7d2f1d9f19f0bedd282db65a625fff922&scene=21#wechat_redirect">Access-培训管理系统-08-按钮代码设置之 删除所选行</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484846&idx=1&sn=dc5787dd73ca503dbb337dfebe49912a&chksm=ea811803ddf69115522b6865362b4d9660113f650db18e44d729121bcade9d12ea168390ab30&scene=21#wechat_redirect">Access-培训管理系统-09-按钮代码设置之 录入（1）</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484856&idx=1&sn=665b468e7dc524d2210c4e6d529bfa2a&chksm=ea811815ddf691032b503b4d34204a505238e2aa349542aaa29a0a9ed7708ff08571f6dd79ab&scene=21#wechat_redirect">Access-培训管理系统-10-按钮代码设置之 录入（2）</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484878&idx=1&sn=51629a522870d683181b2be37de5d526&chksm=ea811863ddf69175121951b227297dfb7c5f2977c23b32317446d21e0ad8d2e81324a4d4986c&scene=21#wechat_redirect">Access-培训管理系统-11-按钮代码设置之 录入（3）</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247484961&idx=1&sn=540edd3eb1f8cb86aeee0cc93c3a520c&chksm=ea811b8cddf6929a88fa40c57dd570d918d7c6b882e1aa23d80192892cea0718ab1f53fbdb88&scene=21#wechat_redirect">Access-培训管理系统-12-输出界面</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485021&idx=1&sn=7107a67e4cbc1b265909cfdeba05e519&chksm=ea811bf0ddf692e6c8ddde1f47fb8e81a37c22be1629c8f1b175c0217ed93676672f80fa30c9&scene=21#wechat_redirect">Access-培训管理系统-13-输出个人培训档案</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485028&idx=1&sn=b6c5b12534e6bbd47990ebba04c2787b&chksm=ea811bc9ddf692df03b68c67cebdd340b1a80cdb215870342a0d1e8e898ed3aa581ba7264ef0&scene=21#wechat_redirect">Access-培训管理系统-14-输出老师上课记录</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485034&idx=1&sn=b33d88dd04db8ebcf2de63776dfe1d18&chksm=ea811bc7ddf692d1b3aba73ef72526bc99b45815a36f654bcef8034f9aa7779bc33bcfe329c5&scene=21#wechat_redirect">Access-培训管理系统-15-输出所有老师上课记录</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485043&idx=1&sn=ca29bce9c43ffe8f0884b5ebd259cb09&chksm=ea811bdeddf692c828d6f3eff5b1133f7daf12c892e5016f2667f93a701b711e3d7b99fdab5e&scene=21#wechat_redirect">Access-培训管理系统-16-首页</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI2NzM0MDk5NA==&mid=2247485254&idx=1&sn=c11b9d3d6826d63bd58886a2dc9f624a&chksm=ea811aebddf693fda784a23c12964990155180bb621ab0f55171fc7a561c11cbf7f072f79591&scene=21#wechat_redirect">Access-培训管理系统-17-番外篇-程序发布</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> vba-access </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> access </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信图文编辑器-Markdown]]></title>
      <url>/2023/08/01/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E6%96%87%E7%BC%96%E8%BE%91%E5%99%A8-Markdown/</url>
      <content type="html"><![CDATA[<p>今天推荐的开源项目可以将 Markdown 文档自动即时渲染为微信图文，还可以自动排版，支持自定义 CSS 样式，最终什么样式你可以自己定义。</p>
<p>也就是说你只需要在 Markdown 编辑器上写文章，就能一键生成一篇样式简洁而又美观大方的微信图文，这就大大提高了你的效率，不用每天去排版了。</p>
<p>图片怎么办？别担心，这个开源项目还支持 GitHub、阿里云、腾讯云、七牛云 等图床。</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开源地址：https://github.com/doocs/md</span><br></pre></td></tr></table></figure>

<h2 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a><strong>功能特性</strong></h2><ul>
<li>支持 Markdown 所有基础语法</li>
<li>支持浅色、暗黑两种主题模式</li>
<li>支持 Ctrl + F 快速格式化文档</li>
<li>支持色盘取色，快速替换文章整体色调</li>
<li>支持多图上传，可自定义配置图床</li>
<li>支持自定义上传逻辑</li>
<li>支持在编辑框右键弹出功能选项卡</li>
<li>支持批量转换本地图片为线上图片</li>
</ul>
<p><img src="/./../img/740.gif" alt="图片"><img src="/./../img/640-1690869329948-4.gif" alt="图片"><img src="/./../img/640-1690869352746-8.gif" alt="图片"></p>
]]></content>
      
        <categories>
            
            <category> github </category>
            
        </categories>
        
        
        <tags>
            
            <tag> markdown </tag>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[excel-vba 数据库操作方式]]></title>
      <url>/2023/07/28/excel-vba-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<h4 id="一、卡点："><a href="#一、卡点：" class="headerlink" title="一、卡点："></a>一、卡点：</h4><p><img src="/./../img/image-20230728134957123.png" alt="image-20230728134957123"></p>
<p>这个问题是用wps连接的OLEDB（access数据库）, 用excel打开就没有问题，如果用wps就需要用其他方式</p>
<p><strong>excel：</strong></p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Dim</span> con <span class="token keyword">As</span> ADODB<span class="token punctuation">.</span>Connection
<span class="token keyword">Set</span> con <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection <span class="token comment">'对象变量赋值必须用set</span>
` 建立数据连接    
con<span class="token punctuation">.</span>Open <span class="token string">"provider=Microsoft.ACE.OLEDB.16.0;data source="</span> <span class="token operator">&amp;</span> <span class="token operator">_</span>
    ThisWorkbook<span class="token punctuation">.</span>Path <span class="token operator">&amp;</span> <span class="token string">"\基础数据.accdb"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>wps：</strong></p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Dim</span> con <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection
con<span class="token punctuation">.</span>Open <span class="token string">"provider=microsoft.jet.oledb.4.0;extended properties=excel 8.0;data source="</span> <span class="token operator">&amp;</span> ThisWorkbook<span class="token punctuation">.</span>Path <span class="token operator">&amp;</span> <span class="token string">"/test2.xls"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><strong>SQLserver：</strong></p>
<ul>
<li>数据库本身（非服务器本身的密码）没有账号密码</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Dim</span> conn <span class="token keyword">As</span> <span class="token keyword">Object</span>
<span class="token keyword">Set</span> conn <span class="token operator">=</span> CreateObject<span class="token punctuation">(</span><span class="token string">"ADODB.Connection"</span><span class="token punctuation">)</span>

<span class="token keyword">Dim</span> serverName <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> dbName <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> connStr <span class="token keyword">As</span> <span class="token keyword">String</span>

serverName <span class="token operator">=</span> <span class="token string">"服务器名称"</span>  <span class="token comment">' 替换为实际的服务器名称</span>
dbName <span class="token operator">=</span> <span class="token string">"数据库名称"</span>  <span class="token comment">' 替换为实际的数据库名称</span>

<span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection
cnn<span class="token punctuation">.</span>Open <span class="token string">"Provider=SQLOLEDB;Data Source="</span> <span class="token operator">&amp;</span> serverName <span class="token operator">&amp;</span> <span class="token string">";Initial Catalog="</span> <span class="token operator">&amp;</span> dbName <span class="token operator">&amp;</span> <span class="token string">";Trusted_Connection=Yes;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li>数据库本身有密码</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Dim</span> conn <span class="token keyword">As</span> <span class="token keyword">Object</span>
<span class="token keyword">Set</span> conn <span class="token operator">=</span> CreateObject<span class="token punctuation">(</span><span class="token string">"ADODB.Connection"</span><span class="token punctuation">)</span>

<span class="token keyword">Dim</span> serverName <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> dbName <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> username <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> password <span class="token keyword">As</span> <span class="token keyword">String</span>

serverName <span class="token operator">=</span> <span class="token string">"服务器名称"</span>  <span class="token comment">' 替换为实际的服务器名称</span>
dbName <span class="token operator">=</span> <span class="token string">"数据库名称"</span>  <span class="token comment">' 替换为实际的数据库名称</span>
username <span class="token operator">=</span> <span class="token string">"用户名"</span>  <span class="token comment">' 留空，因为使用服务器身份验证</span>
password <span class="token operator">=</span> <span class="token string">""</span>  <span class="token comment">' 留空，因为使用服务器身份验证</span>

conn<span class="token punctuation">.</span>ConnectionString <span class="token operator">=</span> <span class="token string">"Provider=SQLOLEDB;Data Source="</span> <span class="token operator">&amp;</span> serverName <span class="token operator">&amp;</span> <span class="token string">";Initial Catalog="</span> <span class="token operator">&amp;</span> dbName <span class="token operator">&amp;</span> <span class="token string">";User ID="</span> <span class="token operator">&amp;</span> username <span class="token operator">&amp;</span> <span class="token string">";Password="</span> <span class="token operator">&amp;</span> password <span class="token operator">&amp;</span> <span class="token string">";"</span>
conn<span class="token punctuation">.</span>Open<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li>示例：</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Sub</span> 连接数据库<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> serverName <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> dbName <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> userName <span class="token keyword">As</span> <span class="token keyword">String</span>
    <span class="token keyword">Dim</span> password <span class="token keyword">As</span> <span class="token keyword">String</span>
    serverName <span class="token operator">=</span> <span class="token string">"DONGDONGA"</span>
    dbName <span class="token operator">=</span> <span class="token string">"中台数据库"</span>
    userName <span class="token operator">=</span> <span class="token string">""</span>
    password <span class="token operator">=</span> <span class="token string">""</span>
    <span class="token keyword">Set</span> cnn <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection
    cnn<span class="token punctuation">.</span>Open <span class="token string">"Provider=SQLOLEDB;Data Source="</span> <span class="token operator">&amp;</span> serverName <span class="token operator">&amp;</span> <span class="token string">";Initial Catalog="</span> <span class="token operator">&amp;</span> dbName <span class="token operator">&amp;</span> <span class="token string">";Trusted_Connection=Yes;"</span>
    
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="二、access-数据库操作指南"><a href="#二、access-数据库操作指南" class="headerlink" title="二、access 数据库操作指南"></a>二、access 数据库操作指南</h4><ul>
<li><strong>第一步：</strong>告诉电脑我要用ADO了，</li>
</ul>
<p>​	<em><strong>这个操作在【工具】–&gt; 【引用】–&gt; 【Microsoft ActiveX Data Objects 6.1 	Libray】</strong></em></p>
<p><img src="/./../img/image-20230728143220859.png" alt="image-20230728143220859"></p>
<ul>
<li><strong>第二步：</strong>创建连接对对象</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"> <span class="token comment">' 2-1 声明对象变量名</span>
<span class="token keyword">Dim</span> con <span class="token keyword">As</span> ADODB<span class="token punctuation">.</span>Connection
 <span class="token comment">' 2-2 创建对象变量并赋值</span>
<span class="token keyword">Set</span> con <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection <span class="token comment">'对象变量赋值必须用set</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li><strong>第三步：</strong>连接数据库</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">' 建立数据库连接</span>
con<span class="token punctuation">.</span>Open <span class="token string">"provider=Microsoft.ACE.OLEDB.16.0;data source="</span> <span class="token operator">&amp;</span> <span class="token operator">_</span>
ThisWorkbook<span class="token punctuation">.</span>Path <span class="token operator">&amp;</span> <span class="token string">"\基础数据.accdb"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><em>(注意这个部分，OLEDB, 2007以上是12.0，一下是8.0或4.0)</em></p>
<ul>
<li><strong>第四步：</strong>执行sql语句</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'插入记录：insert into 表名 （字段1，字段2，...） values(值1，值2，...)</span>
<span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span>
sql <span class="token operator">=</span> <span class="token string">"insert into TEST(测试1,测试2,测试3) values('a09','D文学员','6999')"</span>
<span class="token comment">' 执行sql</span>
con<span class="token punctuation">.</span>Execute <span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li><strong>第五步：</strong> 关闭数据库连接，并释放变量（一定要）</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic">con<span class="token punctuation">.</span>Close
<span class="token comment">' 释放变量</span>
<span class="token keyword">Set</span> con <span class="token operator">=</span> <span class="token boolean">Nothing</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<hr>
<h4 id="三、数据库语法"><a href="#三、数据库语法" class="headerlink" title="三、数据库语法"></a>三、数据库语法</h4><pre><code> 1. **数据常见的`增`、`删`、`改`、`查`**
</code></pre>
<ul>
<li><strong>增加数据</strong></li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">sub</span> InsetSql<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span>
    sql <span class="token operator">=</span> <span class="token string">"insert into TEST(测试1,测试2,测试3) values('a09','D文学员','6999')"</span>
    <span class="token comment">' 执行sql</span>
    con<span class="token punctuation">.</span>Execute <span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
<span class="token keyword">end</span> <span class="token keyword">sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li><strong>删除数据</strong></li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Sub</span> DelSql<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">'删除数据： delete from 表名 [where 条件]</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span>
    sql <span class="token operator">=</span> <span class="token string">"delete from TEST where id=2"</span> <span class="token comment">'如果是字符串需要加''</span>
    con<span class="token punctuation">.</span>Execute <span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li><strong>修改数据</strong></li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Sub</span> UpdateSql<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">'更新记录 update 表名 set 字段=值 [where 条件]</span>
    <span class="token comment">' 多条件更新 update 表名 set 字段1=值1，字段2=值2 where 条件</span>
    <span class="token comment">' 如果要使用变量的化，一定要在“号的外面</span>
    <span class="token comment">' "update 表名 set 字段1=值1，字段2='"&amp; 变量 &amp; "' where 条件" 注意'</span>
    <span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span>
    sql <span class="token operator">=</span> <span class="token string">"update TEST set 测试1='a088' where 测试3='999'"</span>
    con<span class="token punctuation">.</span>Execute <span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li><strong>查找数据</strong></li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Sub</span> SelectSql<span class="token punctuation">(</span><span class="token punctuation">)</span>
 	<span class="token keyword">Dim</span> sql <span class="token keyword">As</span> <span class="token keyword">String</span>
    sql <span class="token operator">=</span> <span class="token string">"select * from TEST"</span>
	con<span class="token punctuation">.</span>Execute <span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'书写sql命令字符串</span>
sql <span class="token operator">=</span> <span class="token string">"select * from 院校"</span>                                  	<span class="token comment">'查询全部字段</span>
sql <span class="token operator">=</span> <span class="token string">"select 姓名，性别，职称 from 导师"</span>        				 	<span class="token comment">'指定部分字段</span>
sql <span class="token operator">=</span> <span class="token string">"select distinct 研究方向 from 学生"</span>        		    	<span class="token comment">'提取不重复记录</span>
sql <span class="token operator">=</span> <span class="token string">"select 课程代码，成绩 from 成绩 order by 成绩 asc"</span> 		 	<span class="token comment">'排序</span>
sql <span class="token operator">=</span> <span class="token string">"select *，2006 from 学生"</span> 							   <span class="token comment">'生成新的字段</span>
sql <span class="token operator">=</span> <span class="token string">"select 学号，姓名，性别，year(入学日期) as 年份 from 学生"</span>  <span class="token comment">'根据年份查找对应字段</span>
sql <span class="token operator">=</span> <span class="token string">"selcet 姓名，性别 from union select 姓名，性别 from 导师"</span> 
<span class="token comment">' union：去除重复，并按照第一个字段升序排序</span>
<span class="token comment">' union all 全部复制，重复的也不管，不排序</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li><strong>数据库记录集</strong></li>
</ol>
<blockquote>
<p>通过查询或其他方式获取数据后，需要存放在一个记录集对象中</p>
<ul>
<li><p>创建一个记录集对象，创建记录集主要有两个方法(第二种用的最多)</p>
</li>
<li><p>第一中不能修改记录集对象，第二种可以修改</p>
</li>
<li><p>使用 <code>Set rs = con.Execute(sql)</code> 语句可以直接执行 SQL 查询，并将结果集赋值给记录集对象 <code>rs</code>。这种方法适用于执行 SQL 查询并将结果保存在记录集中。</p>
</li>
<li><p>使用 <code>rs.Open sql, con, adOpenReyset, adLicjOptimistic</code> 语句可以在已经创建的记录集对象 (<code>rs</code>) 上打开一个结果集。这个方法可以用于在已经存在的记录集对象上重新打开一个新的结果集。</p>
</li>
</ul>
</blockquote>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">Dim</span> rs <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset <span class="token comment">'创建了一个记录集对象</span>
<span class="token keyword">Set</span> rs <span class="token operator">=</span> con<span class="token punctuation">.</span>Execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>  <span class="token comment">'这是一个记录集</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">set</span> rs <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset <span class="token comment">'创建记录集对象</span>
rs<span class="token punctuation">.</span>Open sql<span class="token punctuation">,</span> con<span class="token punctuation">,</span> adOpenRecordset<span class="token punctuation">,</span> adLockOptimistic<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ul>
<li><strong>获取记录集中的字段</strong>，需要用<code>Fields.name</code></li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'获取字段名需要一个循环</span>
<span class="token keyword">Dim</span> i <span class="token keyword">As</span> <span class="token keyword">Integer</span>
<span class="token keyword">For</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">To</span> rs<span class="token punctuation">.</span>Fields<span class="token punctuation">.</span>Count <span class="token operator">-</span> <span class="token number">1</span>
	Cells<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> rs<span class="token punctuation">.</span>Fields<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>Name
<span class="token keyword">Next</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li><strong>将记录集返回到数据表</strong></li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic">sheets<span class="token punctuation">(</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Range<span class="token punctuation">(</span><span class="token string">"A2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>CopyFromRecordset rs  <span class="token comment">'可以直接定位到当前的单元格，sheets("sheet1"）可加可不加</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li><strong>释放对象变量空间</strong></li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token comment">'释放对象变量空间</span>
rs<span class="token punctuation">.</span>Close<span class="token punctuation">:</span> <span class="token keyword">Set</span> rs <span class="token operator">=</span> <span class="token boolean">Nothing</span>
con<span class="token punctuation">.</span>Close<span class="token punctuation">:</span> <span class="token keyword">Set</span> con <span class="token operator">=</span> <span class="token boolean">Nothing</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h4 id="四、多表查询（where连接"><a href="#四、多表查询（where连接" class="headerlink" title="四、多表查询（where连接)"></a>四、多表查询（where连接)</h4><ul>
<li><strong>案例1：</strong>查询所有学生的姓名、性别、选修的课程名称及成绩</li>
</ul>
<pre class="line-numbers language-vbscript" data-language="vbscript"><code class="language-vbscript">sql &#x3D; &quot;select 姓名，性别，课程名称，成绩&quot; _
&amp; &quot; from 学生，课程，成绩&quot; _
&amp; &quot; where 学生.学号&#x3D;成绩.学号 and 课程.课程代码&#x3D;成绩.成绩代码&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ul>
<li><strong>案例2：</strong>查询“王维欣”同学的性别、选修的课程名称及考试成绩</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic">sql <span class="token operator">=</span> <span class="token string">"select 性别，课程名称，成绩"</span> <span class="token operator">_</span>
<span class="token operator">&amp;</span> <span class="token string">" from 学生，课程，成绩"</span> <span class="token operator">_</span>
<span class="token operator">&amp;</span> <span class="token string">" where 学生，学号=成绩.学号 and 课程.课程代码=成绩.课程代码"</span> <span class="token operator">_</span>
<span class="token operator">&amp;</span> <span class="token string">" and 姓名='王维欣'"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="五、多表查询（内连接）"><a href="#五、多表查询（内连接）" class="headerlink" title="五、多表查询（内连接）"></a>五、多表查询（内连接）</h4><ul>
<li><strong>案例1：</strong>查询所有课程的平均成绩，结果包含课程名称，平均成绩两个字段</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic">sql <span class="token operator">=</span> <span class="token string">"select 课程名称，avg(成绩) as 平均成绩"</span> <span class="token operator">_</span>
<span class="token operator">&amp;</span> <span class="token string">" from 课程 inner join 成绩 on 课程.课程代码=成绩.课程代码"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ul>
<li><strong>案例2：</strong> 查询所有课程的平均成绩，结果包含课程名称，平均成绩两个字段，平均成绩要大于85分</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic">sql <span class="token operator">=</span> <span class="token string">"select 课程名称，avg(成绩) as 平均成绩"</span> <span class="token operator">_</span>
<span class="token operator">&amp;</span> <span class="token string">" from 课程 inner join 成绩 on 课程.课程代码=成绩.课程代码"</span> <span class="token operator">_</span>
<span class="token operator">&amp;</span> <span class="token string">" group by 课程名称 having avg(成绩)>=85"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>（sql语句的执行顺序是: from –&gt; where –&gt; group –&gt; having –&gt; select）</p>
<h4 id="六、多表查询（外连接）"><a href="#六、多表查询（外连接）" class="headerlink" title="六、多表查询（外连接）"></a>六、多表查询（外连接）</h4><blockquote>
<p>基本格式： from 左表 连接类型  右表 on 连接条件</p>
</blockquote>
<ul>
<li><strong>案例1：</strong>查询所有导师的院系信息，包含姓名，性别，职称，系号、系名</li>
</ul>
<p>​	<code>左连接：左边连接字段有的，而右表没有的，左表全部显示，右表留空</code></p>
<p><code>(根据左表查右表)</code></p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic">sql <span class="token operator">=</span> <span class="token string">"select 姓名，性别，职称，系号，系名 "</span> <span class="token operator">_</span>
<span class="token operator">&amp;</span> <span class="token string">" from 导师 left join 院系 on 导师.院系编号=院系.系号"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ul>
<li><strong>案例2：</strong>查询所有院系的导师信息，包含系号、系名、姓名、职称</li>
</ul>
<p><code>右连接：右表连接字段有的，而左表没有的，右边全部显示，左表留空</code></p>
<p><code>（根据右表查左表）</code></p>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic">sql <span class="token operator">=</span> <span class="token string">"select 系号，系名，姓名，职称"</span> <span class="token operator">_</span>
<span class="token operator">&amp;</span> <span class="token string">" from 导师 right join 院系 on 导师.院系编号=院系.系号"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ul>
<li><strong>案例3：</strong>查询所有导师、所有院系的信息，包含姓名、性别、职称、系号、系名</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic">sql <span class="token operator">=</span> <span class="token string">"select 姓名，性别，职称，系号，系名"</span> <span class="token operator">_</span>
<span class="token operator">&amp;</span> <span class="token string">" from 导师 full join 院系 on 导师.院系编号=院系.系号"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h4 id="七、多表查询（自连接）"><a href="#七、多表查询（自连接）" class="headerlink" title="七、多表查询（自连接）"></a>七、多表查询（自连接）</h4><p><code>含义：自己连接自己</code></p>
<ul>
<li><strong>案例1：</strong>查询员工表中姓名有重复的员工记录(刷出全部记录看看)</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic">sql <span class="token operator">=</span> <span class="token string">"select * from 员工 t1 inner join 员工 t2 on t1.姓名=t2.姓名"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="八、子查询（嵌套查询）"><a href="#八、子查询（嵌套查询）" class="headerlink" title="八、子查询（嵌套查询）"></a>八、子查询（嵌套查询）</h4><ul>
<li><strong>案例1：</strong>查询每个部门年龄在30岁以上的员工的平均年龄</li>
</ul>
<pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic">sql <span class="token operator">=</span> <span class="token string">"select 部门，count(*) as 人数 from 员工 where 年龄>30 group by 部门"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li><p><strong>案例2：</strong> 查询年龄高于平均年龄的员工信息，包含姓名、身份证号、部门、年龄职务</p>
</li>
<li><p><strong>案例3：</strong> 查询年龄排在第5-10名的员工信息，包含姓名、身份证号、部门、年龄职务</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> excel </category>
            
        </categories>
        
        
        <tags>
            
            <tag> excel </tag>
            
            <tag> vba </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[记录我的小项目-第二弹]]></title>
      <url>/2023/07/28/%E8%AE%B0%E5%BD%95%E6%88%91%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%AC%AC%E4%BA%8C%E5%BC%B9/</url>
      <content type="html"><![CDATA[<h4 id="一、项目起因："><a href="#一、项目起因：" class="headerlink" title="一、项目起因："></a>一、项目起因：</h4><blockquote>
<p>前段时间开会，跟公司快递营销组两位同事闹了点不愉快，这个原因是两方面的：第一是因为也是对工作项确实不太清楚（说实话，官僚主义太严重，全是形式主义，扣字眼一个比一个厉害，整一些形式主义的东西，什么三大标准化，要必须产出，也没明白什么是三大标准，不清楚怎么定义，也不清楚什么算什么标准，怎么提交怎么弄）第二是对这项工作的不认可（业务本身是千变万化的，标准是在工作中形成的，不清楚这件事对项目有什么帮助，在产品还在定义中，出标准化有什么意义。花大量的时间做了一些纸面文档【说多了，算是吐槽吧】）后来被批了，想想也没什么，思想本身也无法统一也无法调和，只能低头默认（得吃饭呀），后来挨批了一顿，然后想想怎么缓和下关系（写到这里，突然觉得自己活成自己讨厌的样子了，社会发展，个人成长，环境适应）</p>
<p>针对这件事，自己也有问题，对事情的不认可可以向上提出，可以无法接收文化离开，可以沉默隐忍接受，但是不应该对项目里执行的人出言刁难，（本意并非如此，只是提出了疑问，没想到点了炸药包，确实不知三大标准化是什么）尤其不应该对一个小专员，然她下不来台。现在也没到权力斗争的地步，搞掉别人对自己也没什么好处，自己的思维和工作方式的问题，也需要检讨。</p>
<p>后来想想，自己在以前的工作中做过一个《培训管理系统》就琢磨用excel做一个自动化系统吧，算是关系的缓和，也不是有意刁难的，这个事情也算过去了</p>
</blockquote>
<h4 id="二、使用工具："><a href="#二、使用工具：" class="headerlink" title="二、使用工具："></a>二、使用工具：</h4><p>​	<strong>wps</strong>：<em>最新版就可以</em></p>
<p>​	<strong>excel：</strong><em>最好是2017-2023版</em></p>
<p>​	<strong>WPS宏插件：</strong> <a href="https://wws.lanzout.com/inOQs0nmaf3e">VBA宏插件（含安装说明）.rar</a></p>
<p>​	密码：1234 提取码：yypd</p>
<p>​	<strong>access数据库：</strong></p>
<ul>
<li>​	office_ tool  <a href="https://www.uy5.net/office-tool-plus/">Office_Tool_with_runtime_v10.1.3.4.zip</a></li>
<li>​     破解工具 <a href="https://www.uy5.net/r1nrebirth/"> ReBirth Activator 1.4.zip</a></li>
</ul>
<p>​	<strong>sqlServer数据库：</strong><a href="https://www.zhihu.com/tardis/bd/art/59017254?source_id=1001">SQLserver 安装教程</a></p>
<h4 id="三、项目需求："><a href="#三、项目需求：" class="headerlink" title="三、项目需求："></a>三、项目需求：</h4><ol>
<li>可以分发数据，让销售自己的数据看自己</li>
<li>可以有一个数据对照，因为用“vlookup”有时候会出错（销售填写的表格有时候会加一个空格）</li>
<li>有一个数据看板和查找系统</li>
</ol>
<h4 id="四、项目思考："><a href="#四、项目思考：" class="headerlink" title="四、项目思考："></a>四、项目思考：</h4><ol>
<li><p>根据现有的信息来看，无法通过钉钉进行文件共享，通过公式来满足</p>
</li>
<li><p>数据库有两套方案：</p>
<p>(1). 用传统的数据库进行，access，sqlServer</p>
<p>​	优势：数据库安全，易操作，数据调用方便</p>
<p>​	劣势：需要给他人电脑安装access数据库和sqlserver，比较麻烦</p>
<p>(2).用excel 的xls 作为数据库，ocdb 用 jet，通过共享文件进行</p>
<p>​	优势： 简单方便，wps也能用</p>
<p>​	劣势：数据不安全，不确定效率如何，另外是否也需要给别人的电脑安装OBDC不确定</p>
</li>
<li><p>数据分配方式：</p>
<p>准备多个表格，用名字区分，每人一个（简单易行就好了，不整太复杂的）用数据库区分</p>
</li>
<li><p>数据展示：</p>
<p>看下模板，有合适的模板直接套用，加代码就可以了</p>
</li>
</ol>
<h4 id="五、项目逻辑："><a href="#五、项目逻辑：" class="headerlink" title="五、项目逻辑："></a>五、项目逻辑：</h4><ol>
<li>将所有的数据放入数据库，中台可以获取所有的数据，给中台加入一个数据获取按钮，获取最新的所有数据，数据最好是更新过来的（因为数据量有几千条，不能所有数据一起更新）</li>
<li>中台做一个数据分配按钮（每天更新一次数据，分配给销售）</li>
<li>销售一人准备一个表，做数据的提交，注意限制原始数据的改动</li>
</ol>
<h4 id="六、项目计划："><a href="#六、项目计划：" class="headerlink" title="六、项目计划："></a>六、项目计划：</h4><ol>
<li>测试数据库：测试access，及xlsx</li>
<li>找合适的表模板</li>
<li>敲代码</li>
</ol>
<p> 结论：最后采用了sqlserver，苦笑不得。代码逻辑基本上完成，改数据库比较简单</p>
<p> 发现sqlserver 优点： </p>
<ol>
<li><p>和access数据库共用了<code>Microsoft ActivateX Data Object</code>(ado),</p>
</li>
<li><p>SQLserver的SQL语句和access是共用的。相较于xlsx ，这个数据不能用联表查，就只能打开，然后取数据，然后操作，会更麻烦一些。</p>
</li>
<li><p>SQLserver wps也是可以用的</p>
</li>
</ol>
<h4 id="七、具体实现："><a href="#七、具体实现：" class="headerlink" title="七、具体实现："></a>七、具体实现：</h4><p>​		<a href="https://www.dongdonga11.eu.org/2023/08/28/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">excel-中台数据库搭建（一）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">excel-中台数据库搭建（二）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%89%EF%BC%89/">excel-中台数据库搭建（三）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/29/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/excel-%E4%B8%AD%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA%EF%BC%88%E5%9B%9B%EF%BC%89/">excel-中台数据库搭建（四）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/">销售系统搭建（一）</a></p>
<p>​		<a href="https://www.dongdonga11.eu.org/2023/08/31/excel%E4%B8%AD%E5%8F%B0%E7%B3%BB%E7%BB%9F/%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/">销售系统搭建（二）</a></p>
<h4 id="八、项目指标："><a href="#八、项目指标：" class="headerlink" title="八、项目指标："></a>八、项目指标：</h4><p>​	暂未涉及（后续精进再看）</p>
<p>​	&#x3D;&#x3D; 当前项目进展：&#x3D;&#x3D;</p>
<h1 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h1>]]></content>
      
        <categories>
            
            <category> 项目日记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 项目集锦 </tag>
            
            <tag> excel </tag>
            
            <tag> 销售流程 </tag>
            
            <tag> vba </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用免费国外服务器搭建ChatGPT接口服务[附注册教程/源码]]]></title>
      <url>/2023/06/26/%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9%E5%9B%BD%E5%A4%96%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAChatGPT%E6%8E%A5%E5%8F%A3%E6%9C%8D%E5%8A%A1-%E9%99%84%E6%B3%A8%E5%86%8C%E6%95%99%E7%A8%8B-%E6%BA%90%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>最近这段时间，ChatGPT火的一塌糊涂，到处都是介绍ChatGPT的文章，但自从前段时间开始，很多人可能都发现了ChatGPT接口国内调用不了了，而很多人可能是抱着玩玩的心态，并不愿意去花钱另外购买国外的服务器，当然这其中也包括我，由于没有预算去购买一台国外的服务器，所以我公众号的ChatGPT功能也被迫停止运行了一段时间，但是今天我想告诉大家，<strong>本站公众号ChatGPT服务重启了</strong>，还是之前的使用方式，但是速度快了很多，有兴趣的朋友可以去关注公众号去体验，不知道怎么用的可以看公众号的“使用帮助”。</p>
<p>回到正题，虽然我重启了公众号的ChatGPT功能，但是我并没有额外花钱，因为我找到了免费的国外服务器，它不香吗？？？市面上提供服务器免费试用的厂商不少，比如阿里云、亚马逊等等，但是注册比较麻烦，需要信用卡，国外手机号、国外身份信息等等之类的信息，我最先也是准备注册阿里云，后来卡在了手机号这块儿，免费的手机号根本注册不了，而我又不想花钱去买验证码，直到最后我找到了hostbuddy这个网站，全程只需要一个邮箱即可，下面介绍一下注册流程。</p>
<p><strong>一、hostbuddy注册</strong></p>
<p><strong>1、注册账号</strong></p>
<p>首先我们访问hostbuddy官网，地址：<a href="https://www.hostbuddy.com/%EF%BC%8C%E5%B9%B6%E7%82%B9%E5%87%BB%E2%80%9CGET">https://www.hostbuddy.com/，并点击“GET</a> STARTED”按钮，</p>
<p><img src="/./../img/vcbxe-1688378723958-18.png" alt="图片"></p>
<p>填写注册信息，并点击注册</p>
<p><img src="/./../img/dbxcvb-1688378731501-21.png" alt="图片"></p>
<p>不出意外的话，我们会进入以下界面</p>
<p><img src="/./../img/fdvv-1688378734880-24.png" alt="图片"></p>
<p><strong>2、验证账号</strong></p>
<p>进入注册账号时填写的邮箱，找到激活邮件，并点击激活链接</p>
<p><img src="/./../img/fghdf-1688378738393-27.png" alt="图片"></p>
<p><strong>3、登录账号</strong></p>
<p>账号成功激活后会转向到登录页，填写我们注册的账号并登录</p>
<p><img src="/./../img/fghdfg-1688378742077-30.png" alt="图片"></p>
<p><strong>4、激活试用计划</strong></p>
<p>首次登录完毕之后我们需要激活我们的试用计划，点击“Try Now”</p>
<p><img src="/./../img/asfahcv-1688378745049-33.png" alt="图片"></p>
<p>可以看到默认的地区是美国，刚好可以用于我们访问ChatGPT服务，然后我们填入密码和网站名，这里的密码就是后面我们登录FTP的密码，网站名就是网站的目录名称，然后点击“Next”</p>
<p><img src="/./../img/fgdfg-1688378747991-36.png" alt="图片"></p>
<p>确认信息并点击“提交”</p>
<p><img src="/./../img/agdg-1688378750426-39.png" alt="图片"></p>
<p>此时不要关闭窗口，需要等待激活完成，一般1-3分钟</p>
<p><img src="/./../img/bsfb-1688378753182-42.png" alt="图片"></p>
<p><strong>5、创建node应用</strong></p>
<p>在激活完成后，我们登录主机面板并创建node应用，</p>
<p><img src="/./../img/gweg-1688378756006-45.png" alt="图片"></p>
<p><img src="/./../img/567356-1688378759503-48.png" alt="图片"></p>
<p>这里显示了我们的FTP登录信息和对外域名，我们点击“管理网站”并点击“NodeJs“进入node应用创建界面</p>
<p><img src="/./../img/34567-1688378762811-51.png" alt="图片"></p>
<p>按序号依次点击完成node应用的创建，需要注意的是当激活NodeJS后，所有的javascript将会被当作NodeJS运行。</p>
<p><strong>6、登录FTP</strong></p>
<p>在node应用创建完成后，我们用步骤5截图中显示的FTP信息和步骤4设置的密码登录FTP，登录后目录结构如下：</p>
<p><img src="/./../img/246246-1688378766105-54.png" alt="图片"></p>
<p>“www”即为存放网站源码的目录，我们进入目录</p>
<p><img src="/./../img/352345-1688378768975-57.png" alt="图片"></p>
<p>目录中有2个文件，default.asp是网站的默认页，我们需要删除掉，web.config是网站的配置文件。</p>
<p><strong>7、测试node应用</strong></p>
<p>在node应用创建完毕后我们就可以开始测试了，创建app.js， 并编写如下代码：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&#x27;Hello, world!&#x27;</span>);</span><br><span class="line">&#125;).<span class="title function_">listen</span>(process.<span class="property">env</span>.<span class="property">PORT</span>);</span><br></pre></td></tr></table></figure>

<p>注意这里不能自定义端口，必须使用process.env.PORT。将app.js文件传到www目录下，并更改配置文件如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system.webServer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">handlers</span>&gt;</span>            </span><br><span class="line">            <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;iisnode&quot;</span> <span class="attr">path</span>=<span class="string">&quot;*.js&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;*&quot;</span> <span class="attr">modules</span>=<span class="string">&quot;iisnode&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">handlers</span>&gt;</span>        </span><br><span class="line">        <span class="tag">&lt;<span class="name">rewrite</span>&gt;</span>            </span><br><span class="line">            <span class="tag">&lt;<span class="name">rules</span>&gt;</span>                </span><br><span class="line">                <span class="tag">&lt;<span class="name">rule</span> <span class="attr">name</span>=<span class="string">&quot;mysite&quot;</span>&gt;</span>                    </span><br><span class="line">                    <span class="tag">&lt;<span class="name">match</span> <span class="attr">url</span>=<span class="string">&quot;/*&quot;</span> /&gt;</span>                    </span><br><span class="line">                    <span class="tag">&lt;<span class="name">action</span> <span class="attr">type</span>=<span class="string">&quot;Rewrite&quot;</span> <span class="attr">url</span>=<span class="string">&quot;app.js&quot;</span> /&gt;</span>                </span><br><span class="line">                <span class="tag">&lt;/<span class="name">rule</span>&gt;</span>            </span><br><span class="line">            <span class="tag">&lt;/<span class="name">rules</span>&gt;</span>        </span><br><span class="line">        <span class="tag">&lt;/<span class="name">rewrite</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">system.webServer</span>&gt;</span><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>访问步骤5中获取的对外域名，如果页面显示”Hello, world!“则测试通过。</p>
<p><strong>二、部署ChatGPT接口服务</strong></p>
<p>通过步骤一，我们注册了免费的国外服务器，并创建了node应用环境，接下来我们需要开始部署ChatGPT的接口服务，这里我们使用koa搭建一个简单的服务，首先创建基础项目结构，</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">├── app.js  </span><br><span class="line">	├── node_modules  </span><br><span class="line">	├── package-lock.json  </span><br><span class="line">	├── package.json  </span><br><span class="line">	├── public  </span><br><span class="line">	├── routes  </span><br><span class="line">	│   └── gpt.js  </span><br><span class="line">	├── utils  </span><br><span class="line">	│   └── ai.js  </span><br><span class="line">	└── views</span><br></pre></td></tr></table></figure>

<p>app.js的代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Koa</span> = <span class="built_in">require</span>(<span class="string">&#x27;koa&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Koa</span>();</span><br><span class="line"><span class="keyword">const</span> json = <span class="built_in">require</span>(<span class="string">&#x27;koa-json&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> onerror = <span class="built_in">require</span>(<span class="string">&#x27;koa-onerror&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyparser = <span class="built_in">require</span>(<span class="string">&#x27;koa-bodyparser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> koaBody = <span class="built_in">require</span>(<span class="string">&#x27;koa-body&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> gpt = <span class="built_in">require</span>(<span class="string">&#x27;./routes/gpt&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">onerror</span>(app);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">async</span> (ctx, next)=&gt; &#123;  </span><br><span class="line">    ctx.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">    ctx.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="string">&#x27;Content-Type&#x27;</span>);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">koaBody</span>(&#123;  </span><br><span class="line">    <span class="attr">multipart</span>: <span class="literal">true</span>,  </span><br><span class="line">    <span class="attr">formidable</span>: &#123;</span><br><span class="line">        <span class="attr">maxFieldsSize</span>: <span class="number">2</span> * <span class="number">1024</span> * <span class="number">1024</span>,</span><br><span class="line">        <span class="attr">multipart</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">bodyparser</span>());</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(gpt.<span class="title function_">routes</span>(), gpt.<span class="title function_">allowedMethods</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>(app.<span class="title function_">callback</span>());</span><br><span class="line">server.<span class="title function_">listen</span>(process.<span class="property">env</span>.<span class="property">PORT</span>);</span><br></pre></td></tr></table></figure>

<p>gpt.js代码如下：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="built_in">require</span>(<span class="string">&#x27;koa-router&#x27;</span>)();</span><br><span class="line"><span class="keyword">const</span> &#123; getData &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../utils/ai&#x27;</span>);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">prefix</span>(<span class="string">&#x27;/gpt&#x27;</span>);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">all</span>(<span class="string">&#x27;/chat&#x27;</span>, <span class="keyword">async</span> (ctx, next) =&gt; &#123;  </span><br><span class="line">    <span class="keyword">const</span> &#123; q = <span class="string">&#x27;&#x27;</span> &#125; = ctx.<span class="property">query</span>;  </span><br><span class="line">    <span class="keyword">if</span> (!q.<span class="title function_">trim</span>()) &#123;     </span><br><span class="line">        <span class="keyword">return</span> ctx.<span class="property">body</span> = <span class="string">&#x27;您想问啥呢？&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ctx.<span class="property">body</span> = <span class="title function_">getData</span>(q);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure>

<p>对于getData方法的实现，这里图方便使用request库（目前已废弃）来发起请求，大家可以根据自己的习惯更改，代码如下：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">&#x27;request&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getData</span>(<span class="params">prompt</span>) &#123;    </span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;        </span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;https://api.openai.com/v1/completions&#x27;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">            prompt,</span><br><span class="line">            <span class="attr">max_tokens</span>: <span class="number">2048</span>,</span><br><span class="line">            <span class="attr">model</span>: <span class="string">&#x27;text-davinci-003&#x27;</span>        &#125;,</span><br><span class="line">        <span class="attr">json</span>: <span class="literal">true</span>, </span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="title class_">Authorization</span>: <span class="string">&#x27;OPENAI_TOKEN&#x27;</span>       </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    getData,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>将所有的源码连同node_modules一起上传到www目录下，这里稍微有点慢，可以尝试压缩后再上传，然后在线解压，</p>
<p><img src="/./../img/640134123-1688378776316-60.png" alt="图片"></p>
<p>等待所有文件上传完毕后，通过“对外地址&#x2F;gpt&#x2F;chat?q&#x3D;你的问题”即可访问我们部署的ChatGPT服务。</p>
<p><strong>三、问题总结</strong></p>
<p>1、hostbuddy服务器的免费试用时长目前是60天即2个月，这个门槛比较低，到期前找个邮箱重新注册即可继续使用，当然也可以选择其他的厂商，比如LAF，免费时长是一个月，需要手机号注册，具体可参考：<a href="https://mp.weixin.qq.com/s?__biz=Mzg5NTczMjAxMg==&mid=2247484797&idx=1&sn=de3d62aa80284e08f658a1421c490991&scene=21#wechat_redirect">用Laf云平台，两步将ChatGPT接入微信公众号(含代码)</a></p>
<p>2、注册hostbuddy一个IP只可注册一次，如果遇到访问注册页显示已经注册的情况，可以选择重启路由器换IP或者使用代理。</p>
<p>3、如果使用代理注册hostbuddy需要注意并不是所有的地区都可以注册免费试用账号，具体支持的地区需要自测，我只发现日本是不行的。</p>
<p>4、hostbuddy服务器目前默认的node版本是v18x，如果需要自定义node版本，可参考：<a href="https://www.hostbuddy.com/support/kb/a2205/how-to-custom-nodejs-version-with-our-server.aspx">https://www.hostbuddy.com/support/kb/a2205/how-to-custom-nodejs-version-with-our-server.aspx</a></p>
<p>5、在更新程序文件时，如遇到代码不更新的情况，需要重新保存入口文件比如app.js，重新上传即可。</p>
<p>6、如果网站无法访问，又没有给出具体的错误信息，可以到FTP网站目录如www下根据访问时间查看iisnode目录下对应的txt文件获得报错信息。</p>
<p><strong>四、结语</strong></p>
<p>如需下载本文所涉及的源码及素材包，请在关注公众号后发送：<strong>gpt</strong></p>
]]></content>
      
        <categories>
            
            <category> chatgpt </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[有趣的chrom插件]]></title>
      <url>/2023/06/20/%E6%9C%89%E8%B6%A3%E7%9A%84chrom%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>推荐一位国外全栈开发者大神：Alyssa，在 Github 上有 5.34K 的关注者。她是一名全栈开发者、Sonuum 公司的创始人。</p>
<p>被 Maker Mag 评为 2018 最佳女性 Maker，并两次入围 Product Hunt Maker of the Year 决赛。</p>
<p>注：Product Hunt 是国外的一个寻找好产品的网站，开发者或者开发团队可以把自己开发的产品发布到网站，与社区的用户一起讨论。本文中推荐 4 个有趣的开源项目，都是由开发者 Alyssa 完成。</p>
<p><img src="/./../img/651" alt="图片"></p>
<p>本期推荐开源项目目录：</p>
<p>\1. 适用于 Chrome 的屏幕录制工具</p>
<p>\2. 强大的浏览器插件</p>
<p>\3. 实时协作的地图工具</p>
<p>\4. 创建漂亮的流程图</p>
<hr>
<h1 id="01"><a href="#01" class="headerlink" title="01"></a>01</h1><p><strong>适用于 Chrome 的屏幕录制工具</strong></p>
<p>适用于 Chrome 的最强大的屏幕录像机和注释工具，使用该插件你可以录制你的屏幕和并且在屏幕任意位置进行绘画、添加文本、添加箭头，同时还可以录制你的电脑音频。</p>
<p>录制完成，你可以对录制的视频片段进行修剪，导出为 MP4、Gif 并且一键保存到谷歌云盘。该开源项目的地址和使用的库的地址都放在了下面。</p>
<p>编程语言：Javascript</p>
<p>开源地址：<a href="https://github.com/alyssaxuu/screenity">https://github.com/alyssaxuu/screenity</a></p>
<p>相关开源组件地址：</p>
<p>用于交互式文本和箭头：<a href="https://github.com/fabricjs/fabric.js">https://github.com/fabricjs/fabric.js</a><br>下拉菜单的开源组件：<a href="https://github.com/hernansartorio/jquery-nice-select">https://github.com/hernansartorio/jquery-nice-select</a><br>用于修剪&#x2F;删除录音部分的范围组件：<a href="https://github.com/leongersen/noUiSlider">https://github.com/leongersen/noUiSlider</a><br>颜色选择块：<a href="https://github.com/Simonwep/pickr">https://github.com/Simonwep/pickr</a><br>用于在录制时异步保存视频：<a href="https://github.com/jimmywarting/StreamSaver.js">https://github.com/jimmywarting/StreamSaver.js</a><br>使下载的视频可搜索的开源组件：<a href="https://github.com/yusitnikov/fix-webm-duration">https://github.com/yusitnikov/fix-webm-duration</a></p>
<p><img src="/./../img/652" alt="图片"></p>
<h1 id="02"><a href="#02" class="headerlink" title="02"></a>02</h1><p><strong>强大的浏览器插件</strong></p>
<p>使用开源项目 Omni 可以帮助你更专业的管理你的浏览器， Omni 提供了一个简单界面，在界面中你只需要使用简单的命令就能管理选项卡、书签、浏览器历史记录、执行各种操作等等。</p>
<p>你可以方便的搜索、浏览管理标签、快速搜索浏览历史记录、与 Notion、Figma、稳定集成，同时好包含更多高级设置。</p>
<p>编程语言：JavaScript</p>
<p>开源地址：<a href="https://github.com/alyssaxuu/omni">https://github.com/alyssaxuu/omni</a></p>
<p><img src="/./../img/653" alt="图片"></p>
<p><img src="/./../img/654" alt="图片"></p>
<p><img src="/./../img/655" alt="图片"></p>
<h1 id="03"><a href="#03" class="headerlink" title="03"></a>03</h1><p><strong>实时协作的地图工具</strong></p>
<p>Mapus 是一种在地图上协作探索和注释的工具，开源一年获得了近 3K 的 Star。使用该开源项目你可以在地图上绘制、标记、画出区域等等，想当于在普通的地图上增加了实时协作的功能。</p>
<p>通过实时协作，你可以与其他用户同步计划和行程；你能使用画笔或者箭头在地图上标记和注释；还可以创建一些标记，方便快速定位标注地图上的位置，同样可以把地图数据导出。</p>
<p>编程语言：JavaScript、CSS、HTML</p>
<p>开源地址：<a href="https://github.com/alyssaxuu/mapus">https://github.com/alyssaxuu/mapus</a></p>
<p><img src="/./../img/656" alt="图片"></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruyZm3e5tzWtkJfR1EqvtZGmtyaSdznmJHgJDqiclRG4AN4CicTOicwLcPKxTX8vOiam49ribuqHUnLVfaA/640?wx_fmt=png&tp=wxpic&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p>
<p><img src="/./../img/657" alt="图片"></p>
<h1 id="04"><a href="#04" class="headerlink" title="04"></a>04</h1><p><strong>创建漂亮的流程图</strong></p>
<p>这是一个轻量级的 JavaScript 库 近1W人 Star，通过该 Flowy 你能在你的应用中创建漂亮的流程图，使用步骤如下：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/* 在你的 Web 项目引入 flowy.min.js 和 flow.min.css  */</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/alyssaxuu/flowy/flowy.min.css&quot;&gt; </span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/alyssaxuu/flowy/flowy.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">/* 引入 create-flowy 类就能创建可拖动的 block   */</span><br><span class="line">&lt;div class=&quot;create-flowy&quot;&gt;The block to be dragged&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;canvas&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>更详细的教程可以参考该项目的 Readme 文件：</p>
<p><img src="/./../img/658" alt="图片"></p>
<p>开源地址：<a href="https://github.com/alyssaxuu/flowy">https://github.com/alyssaxuu/flowy</a></p>
<p><img src="/./../img/659" alt="图片"></p>
]]></content>
      
        
        <tags>
            
            <tag> 插件 </tag>
            
            <tag> chrom </tag>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[申请永久免费域名并绑定到个人网站]]></title>
      <url>/2023/06/20/%E7%94%B3%E8%AF%B7%E6%B0%B8%E4%B9%85%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E5%B9%B6%E7%BB%91%E5%AE%9A%E5%88%B0%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
      <content type="html"><![CDATA[<p><code>eu.org</code>一个从1996开始提供免费域名的组织, 其官网地址是 <a href="https://nic.eu.org/">https://nic.eu.org/</a> ，他帮助学生、爱好者或者非营利组织不用花费购买域名就可能拥有自己的免费域名，虽然 eu.org 网域切确来说这是一个子域名（Subdomain）或者二级域名，但是根据一些网站的资讯，有许多大型互联网公司，像是 Google, Cloudflare, Bing 等厂商都已经将eu.org域名当成是一个顶级网域了。</p>
<p><code>eu.org</code>对个人和组织是免费注册的。</p>
<h1 id="域名申请"><a href="#域名申请" class="headerlink" title="域名申请"></a>域名申请</h1><h3 id="申请地址"><a href="#申请地址" class="headerlink" title="申请地址"></a>申请地址</h3><p>申请地址：<a href="https://nic.eu.org/">https://nic.eu.org/</a></p>
<p>第一次打开你可能会怀疑进错了页面，不用怀疑，他们就是这么简洁的页面。</p>
<p><img src="/./../img/640" alt="图片"></p>
<p>点击 <code>Sign-in or sign-up here!</code> 进入登录页面。</p>
<h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>然后点击Register进入注册页面。输入你的基本信息，比如Name，Email等等基本信息，这里不建议填国内的地址信息，你可以进入 <a href="https://www.haoweichi.com/">https://www.haoweichi.com/</a> 网站随机生成一个虚拟英国或者美国地址，会提高通过的概率。</p>
<p><img src="/./../img/641" alt="图片"></p>
<p>注册成功之后点击<code>New Domain</code>申请新的域名，</p>
<p>设置你的域名，eu.org后缀，比如我申请一个新的域名：techxiaofei.eu.org</p>
<p>![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>‘ xmlns:xlink&#x3D;’<a href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg">http://www.w3.org/1999/xlink&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E)</p>
<p>最主要的就是NameServers也就是域名解析，也就是我们要用什么域名解析商来解析域名。</p>
<p>![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>‘ xmlns:xlink&#x3D;’<a href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg">http://www.w3.org/1999/xlink&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E)</p>
<h3 id="DNSPod"><a href="#DNSPod" class="headerlink" title="DNSPod"></a>DNSPod</h3><p>这里填DNSPod的地址，也就是腾讯云的域名解析商，使用微信扫码登录就可以。<a href="https://www.dnspod.cn/">https://www.dnspod.cn/</a></p>
<p>扫码之后点击右上角<code>管理控制台</code>-&gt;<code>我的域名</code>-&gt;<code>添加域名</code>，添加刚才你申请的域名，也就是<code>techxiaofei.eu.org</code></p>
<p>点击确认，会提示<code>未使用DNSPod</code>，鼠标放上去会显示具体的DNS服务器地址：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">barlow.dnspod.nethammer.dnspod.net</span><br></pre></td></tr></table></figure>

<p><img src="/./../img/642" alt="图片"></p>
<p>这个DNS服务器就是我们需要在eu.org填写的Name Servers</p>
<h3 id="Name-Servers"><a href="#Name-Servers" class="headerlink" title="Name Servers"></a>Name Servers</h3><p>选择<code>server names</code>，然后填写刚才DNSPod上的两个DNS服务器地址：</p>
<p><img src="/./../img/643" alt="图片"></p>
<p>然后点击Submit后跳转页面显示：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---- Servers and domain names check</span><br><span class="line">Getting IP for BARLOW.DNSPOD.NET: 112.80.181.45 1.12.0.4 61.151.180.44 129.211.176.187 120.241.130.98Getting IP for BARLOW.DNSPOD.NET: 2402:4e00:1430:1102:0:9136:2b30:e554Getting IP for HAMMER.DNSPOD.NET: 112.80.181.111 1.12.0.1 117.89.178.184 129.211.176.224 36.155.149.176Getting IP for HAMMER.DNSPOD.NET: 2402:4e00:1020:1264:0:9136:29bc:87f9</span><br><span class="line"></span><br><span class="line">No error, storing for validation...Saved as request 20230326043206-arf-59848</span><br><span class="line">Done</span><br></pre></td></tr></table></figure>

<p>说明你申请成功了，需要等待1到30天，通过会给邮件通知。</p>
<h3 id="申请通过"><a href="#申请通过" class="headerlink" title="申请通过"></a>申请通过</h3><p>我这里等待了大半个月收到邮件通知，这个时候说明你的免费域名已经申请通过了。</p>
<p><img src="/./../img/644" alt="图片"></p>
<p>收到通知之后就可以去DNSPod上添加具体的解析记录绑定到你的个人网站了：</p>
<h1 id="绑定个人网站"><a href="#绑定个人网站" class="headerlink" title="绑定个人网站"></a>绑定个人网站</h1><h3 id="DNSPod记录"><a href="#DNSPod记录" class="headerlink" title="DNSPod记录"></a>DNSPod记录</h3><p>申请通过之后DNSPod记录会从<code>未使用DNSPod</code>变为无记录，就说明域名已经授权使用DNSPod来解析了。只是还没有添加解析记录。</p>
<p><img src="/./../img/645" alt="图片"></p>
<h3 id="绑定域名到Vercel托管平台"><a href="#绑定域名到Vercel托管平台" class="headerlink" title="绑定域名到Vercel托管平台"></a>绑定域名到Vercel托管平台</h3><p>由于我的网站是部署在Vercel托管平台，所以我们需要先回到Vercel来添加域名：</p>
<p>回到你的vercel，点击你的项目-&gt;<code>Settings</code>-&gt;<code>Domains</code></p>
<p>添加你刚申请的域名</p>
<p><img src="/./../img/646" alt="图片"></p>
<p>添加之后会提示你需要域名解析商添加一条A记录。</p>
<p><img src="/./../img/647" alt="图片"></p>
<h3 id="添加一条A记录"><a href="#添加一条A记录" class="headerlink" title="添加一条A记录"></a>添加一条A记录</h3><p>回到DNSPod域名解析商那里添加一条A记录，记录值就是Vercel平台提示的IP地址。</p>
<p><img src="/./../img/648" alt="图片"></p>
<h3 id="添加成功"><a href="#添加成功" class="headerlink" title="添加成功"></a>添加成功</h3><p>回到Verel托管平台，会自动刷新，显示合法配置。</p>
<p><img src="/./../img/649" alt="图片"></p>
<p>然后点击域名后面的跳转链接，直接打开个人网站。</p>
<p><img src="/./../img/650" alt="图片"></p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>希望大家都能早日成功申请到自己的免费域名。</p>
]]></content>
      
        
        <tags>
            
            <tag> 域名 </tag>
            
            <tag> 绑定域名 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一键部署你的ChatGPT Web网站]]></title>
      <url>/2023/06/20/%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E4%BD%A0%E7%9A%84ChatGPT-Web%E7%BD%91%E7%AB%99/</url>
      <content type="html"><![CDATA[<p>想要搭建自己的ChatGPT Web网站，我们只需要两个账号：</p>
<p>1.Github账号 -<a href="https://github.com/2.Vercel%E8%B4%A6%E5%8F%B7">https://github.com/2.Vercel账号</a> -<a href="https://vercel.com/login">https://vercel.com/login</a></p>
<p>其实<code>Vercel</code>账号可以使用Github账号直接登录：</p>
<p><img src="/./../img/image-20230620135811094.png" alt="image-20230620135811094"></p>
<p>所以我们只需要注册一个Github账号即可。</p>
<h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h3 id="1-Github"><a href="#1-Github" class="headerlink" title="1. Github"></a>1. Github</h3><p>我们首先先在<strong>Github</strong>上访问这个地址：<a href="https://github.com/Yidadaa/ChatGPT-Next-Web">https://github.com/Yidadaa/ChatGPT-Next-Web</a></p>
<p>然后点击右上角的<code>Fork</code>也就是克隆，然后点击<code>Create Fork</code>把这个仓库克隆到你的账号下</p>
<p><img src="/./../img/202307031758362.png" alt="图片"></p>
<p>这个时候就会把这个github 仓库克隆到你的个人账号下面。</p>
<h3 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h3><p>克隆之后我们去到Vercel平台。<strong>Vercel</strong> 使用刚才的Github账号登录并授权。</p>
<p>我们直接点击<code>Add New-&gt;Project</code>，然后找到我们的<code>ChatGPT-next-web</code>这个Github仓库，点击<code>Import</code>导入</p>
<p><img src="/./../img/640asga" alt="图片"></p>
<p>这个<strong>project name</strong>我们可以随便选，使用默认的即可。</p>
<p>我们唯一要注意的就是这个环境变量，我们需要把ChatGPT的<code>API Key</code>添加进来，然后部署。</p>
<p>这个API Key是为了验证你的身份，需要你有<strong>OpenAI</strong>账号。</p>
<p>![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>‘ xmlns:xlink&#x3D;’<a href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg">http://www.w3.org/1999/xlink&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E)</p>
<h3 id="API-key"><a href="#API-key" class="headerlink" title="API key"></a>API key</h3><p>如果你不知道上面的API Key怎么获得，这个非常简单，我们打开openai的平台地址：<a href="https://platform.openai.com/">https://platform.openai.com/</a></p>
<p>登录之后点击右上角的头像，点击<code>Manage Account</code>-&gt;<code>API Keys</code>-&gt;<code>Create New Secret Key</code>, 然后复制下来保存备用。</p>
<p><img src="/./../img/agsdgas" alt="图片"></p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>然后回到刚才的部署界面，在刚才的环境变量在<strong>Name</strong>里面输入 <code>OEPNAI_API_KEY</code>，然后<code>Value</code>就输入我们刚才复制的API Key</p>
<p>点击<code>Add</code>添加，然后我们点击<code>Deploy</code>部署。</p>
<p>当然如果你需要你的ChatGPT支持密码访问，可以添加一个新的环境变量，</p>
<h2 id=""><a href="#" class="headerlink" title="- "></a>- </h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Name: CODEValue: 你想要设置的密码</span><br></pre></td></tr></table></figure>

<p>这个时候，我们的网站就会需要密码访问</p>
<p>我们点击<strong>Deploy</strong>，可以看到它就开始部署了 我们稍等一会就可以看到我们的网站就能部署成功了。</p>
<p><img src="/./../img/asdga" alt="图片"></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>我们可以点击就可以进入到我们的ChatGPT 个人网站了。</p>
<p><img src="/./../img/gdfh" alt="图片"></p>
<p>此时Vercel 给我们自动分配了域名，当然这个域名由于某些原因，在国内可能无法访问，你可能需要使用自己的域名。</p>
<p>我们在刚才的部署成功的页面点击右边的<code>Add Domain</code>添加域名，</p>
<p><img src="/./../img/sgdfgv" alt="图片"></p>
<p>然后输入我们的域名，点击添加。我们选择默认的选项， 然后点击添加</p>
<p><img src="/./../img/asdfcx" alt="图片"></p>
<p>添加之后Vercel会提示我们需要添加两条记录，一条是<code>A记录</code>，一条是<code>CNAME记录</code>。</p>
<p><img src="/./../img/vzxcv" alt="图片"></p>
<p>我们进入到我们的域名解析商，这里我使用<code>cloudflare</code>来解析我的域名。</p>
<p>我们在这里点击添加记录：</p>
<p>•首先我们添加A记录，记录类型是<code>A</code>，名称是<code>@</code>，然后ipv4地址就是刚才的ip地址•然后我们再添加一条 CNAME 记录，记录类型是<code>CNAME</code>，名称是<code>www</code>，值是刚才的值</p>
<p><img src="/./../img/xcvz" alt="图片"></p>
<p>现在我们这两条记录，就已经添加成功了</p>
<p>我们再回到我们的 Vercel 托管平台，可以看到，我们的DNS记录已经设置成功了</p>
<p><img src="/./../img/adcxzx" alt="图片"></p>
<p>我们添加成功之后直接点击跳转，用我们自己的域名就可以访问ChatGPT Web网站了。</p>
<p>那我们可以开始在这里和ChatGPT进行聊天了。</p>
<h3 id="角色扮演"><a href="#角色扮演" class="headerlink" title="角色扮演"></a>角色扮演</h3><p>我们也可以让ChatGPT来扮演各种角色，此时ChatGPT的回答会更具有专业性。</p>
<p>我们可以看到这里有非常多的角色，我们来让他帮我们扮演一个职业顾问，点击左下角<code>新的聊天</code>，找到<code>职业顾问</code>点击跳转新的聊天。</p>
<p><img src="/./../img/vzxcvdfh" alt="图片"></p>
<p>然后我们问他问题：<strong>作为一个程序员，我以后的职业生涯应该怎么规划？</strong></p>
<p>点击发送，可以看到作为一个职业顾问，他给我们详细列明了我们有很多职业道路可以选择，然后还给我们的职业生活也做了一些规划。</p>
<p><img src="/./../img/drter" alt="图片"></p>
<p>如果不让它扮演职业顾问，它给的回答是怎么样的呢？</p>
<p><img src="/./../img/rstnner" alt="图片"></p>
<p>可以看到，同样的问题，当我们不让他扮演任何角色的时候，他给我们的答案就相对专业性就没有那么强。</p>
<p>所以角色扮演在专业的问题上，ChatGPT能给到更好的回答，我们可以使用这个来获得更优秀的答案。</p>
<h3 id="密码访问"><a href="#密码访问" class="headerlink" title="密码访问"></a>密码访问</h3><p>同时这个ChatGPT网站也是支持密码访问的，想要支持密码访问非常简单，上面已经告诉你如何添加环境变量。</p>
<p>如果你之前没有添加，这里教你如何再次添加。</p>
<p>点击你的当前项目，找到<code>settings</code>设置项，然后找到左边的<code>Environment Variables</code>也就是环境变量。</p>
<p><img src="/./../img/ascasv" alt="图片"></p>
<p>密码的环境变量的key是<code>CODE</code>，这个值你可以填写你的密码，比如说我填写<strong>techxiaofei</strong>，然后点击保存</p>
<p>现在我们环境已经添加成功了，添加成功之后我们重新编译一下，我们点击redeploy就是重编译。</p>
<p><img src="/./../img/gser4" alt="图片"></p>
<p>重新访问我们的ChatGPT网站，可以看到上面提示：<strong>现在是未授权状态，请点击左下角设置按钮输入访问密码。</strong></p>
<p><img src="/./../img/sgraweg" alt="图片"></p>
<p>我们点击左下角的设置，然后找到访问密码，输入我们的访问密码，就可以正常和ChatGPT对话了。</p>
<p><img src="/./../img/vdagew" alt="图片"></p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这个ChatGPT Web网站可以解决在国内无法正常访问ChatGPT的问题</p>
<p>而且它也不需要云服务器，不需要你购买任何东西，完全免费，任何人都可以轻松一键部署，所以赶紧尝试一下吧。</p>
]]></content>
      
        <categories>
            
            <category> chatgpt </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vercel </tag>
            
            <tag> ChatGPT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown 书写示例]]></title>
      <url>/2023/06/19/exp/</url>
      <content type="html"><![CDATA[<h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">::: slot module1</span><br><span class="line">this is module1</span><br><span class="line">::::</span><br><span class="line"></span><br><span class="line">::: slot module2</span><br><span class="line">this is module2</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>[[toc]]</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[toc]]</span><br></pre></td></tr></table></figure>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote>
<p>这是一条引用</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一条引用</span><br></pre></td></tr></table></figure>
<h2 id="自定义容器"><a href="#自定义容器" class="headerlink" title="自定义容器"></a>自定义容器</h2><p>::: info 信息<br>这是一个信息<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: info 信息</span><br><span class="line">这是一个信息</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>

<p>::: tip 告示<br>这是一个提示<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: tip 告示</span><br><span class="line">这是一个提示</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>

<p>::: warning 警告<br>这是一个警告<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: warning 警告</span><br><span class="line">这是一个警告</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>

<p>::: danger STOP<br>危险区域，禁止通行<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: danger STOP</span><br><span class="line">危险区域，禁止通行</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>


<p>::: details 点击查看代码</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好，VuePress！&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">::: details 点击查看代码</span><br><span class="line">```</span><br><span class="line">console.log(&#x27;你好，VuePress！&#x27;)</span><br><span class="line">```</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>

<p>::: v-pre<br><code>&#123;&#123; This will be displayed as-is &#125;&#125;</code><br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: v-pre</span><br><span class="line">`&#123;&#123; This will be displayed as-is &#125;&#125;`</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>

<p>::: center<br>居中文字<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: center</span><br><span class="line">居中文字</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>
<p>::: right<br>居右文字<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: right</span><br><span class="line">居右文字</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>
<h2 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h2><p>我是 &#x3D;&#x3D;高亮&#x3D;&#x3D; 的</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我是 ==高亮== 的</span><br></pre></td></tr></table></figure>
<h2 id="代码块行高亮"><a href="#代码块行高亮" class="headerlink" title="代码块行高亮"></a>代码块行高亮</h2><figure class="highlight js"><figcaption><span>&#123;1,3-5&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">msg</span>: <span class="string">&#x27;Highlighted!&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">``` js &#123;1,3-5&#125;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      msg: &#x27;Highlighted!&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure>
<p>更多用法参照：<a href="https://v1.vuepress.vuejs.org/zh/guide/markdown.html">https://v1.vuepress.vuejs.org/zh/guide/markdown.html</a></p>
<h2 id="emoji"><a href="#emoji" class="headerlink" title="emoji"></a>emoji</h2><p>:tada:</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:tada:</span><br></pre></td></tr></table></figure>
<h2 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h2><ul>
<li><p><input disabled="" type="checkbox"> 
看板娘</p>
</li>
<li><p><input disabled="" type="checkbox"> 
调色板</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
多语言</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- [ ] 看板娘</span><br><span class="line"></span><br><span class="line">- [ ] 调色板</span><br><span class="line"></span><br><span class="line">- [x] 多语言</span><br></pre></td></tr></table></figure>
<h2 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h2><p>19^th^<br>H<del>2</del>O</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">19^th^</span><br><span class="line">H~2~O</span><br></pre></td></tr></table></figure>
<h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>脚注 1 链接<a href="%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E8%84%9A%E6%B3%A8">^first</a>.</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">脚注 1 链接[^first].</span><br><span class="line"></span><br><span class="line">[^first]: 这是一个脚注</span><br></pre></td></tr></table></figure>
<h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start|past:&gt;http://localhost:8080/exp.html[blank]</span><br><span class="line">e=&gt;end: End|future:&gt;http://localhost:8080/exp.html</span><br><span class="line">op1=&gt;operation: My Operation|past</span><br><span class="line">op2=&gt;operation: Stuff|current</span><br><span class="line">sub1=&gt;subroutine: My Subroutine|invalid</span><br><span class="line">cond=&gt;condition: Yes</span><br><span class="line">or No?|approved:&gt;http://localhost:8080/exp.html</span><br><span class="line">c2=&gt;condition: Good idea|rejected</span><br><span class="line">io=&gt;inputoutput: catch something...|future</span><br><span class="line"></span><br><span class="line">st-&gt;op1(right)-&gt;cond</span><br><span class="line">cond(yes, right)-&gt;c2</span><br><span class="line">cond(no)-&gt;sub1(left)-&gt;op1</span><br><span class="line">c2(yes)-&gt;io-&gt;e</span><br><span class="line">c2(no)-&gt;op2-&gt;e</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">```flow</span><br><span class="line">st=&gt;start: Start|past:&gt;http://localhost:8080/exp.html[blank]</span><br><span class="line">e=&gt;end: End|future:&gt;http://localhost:8080/exp.html</span><br><span class="line">op1=&gt;operation: My Operation|past</span><br><span class="line">op2=&gt;operation: Stuff|current</span><br><span class="line">sub1=&gt;subroutine: My Subroutine|invalid</span><br><span class="line">cond=&gt;condition: Yes</span><br><span class="line">or No?|approved:&gt;http://localhost:8080/exp.html</span><br><span class="line">c2=&gt;condition: Good idea|rejected</span><br><span class="line">io=&gt;inputoutput: catch something...|future</span><br><span class="line"></span><br><span class="line">st-&gt;op1(right)-&gt;cond</span><br><span class="line">cond(yes, right)-&gt;c2</span><br><span class="line">cond(no)-&gt;sub1(left)-&gt;op1</span><br><span class="line">c2(yes)-&gt;io-&gt;e</span><br><span class="line">c2(no)-&gt;op2-&gt;e</span><br><span class="line">```</span><br></pre></td></tr></table></figure>


<h2 id="Tex"><a href="#Tex" class="headerlink" title="Tex"></a>Tex</h2><p>Euler’s identity $e^{i\pi}+1&#x3D;0$ is a beautiful formula in $\mathbb{R}^2$.</p>
<p>$$<br>\frac {\partial^r} {\partial \omega^r} \left(\frac {y^{\omega}} {\omega}\right)<br>&#x3D; \left(\frac {y^{\omega}} {\omega}\right) \left{(\log y)^r + \sum_{i&#x3D;1}^r \frac {(-1)^i r \cdots (r-i+1) (\log y)^{r-i}} {\omega^i} \right}<br>$$</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Euler’s identity $e^&#123;i\pi&#125;+1=0$ is a beautiful formula in $\mathbb&#123;R&#125;^2$.</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">\frac &#123;\partial^r&#125; &#123;\partial \omega^r&#125; \left(\frac &#123;y^&#123;\omega&#125;&#125; &#123;\omega&#125;\right)</span><br><span class="line">= \left(\frac &#123;y^&#123;\omega&#125;&#125; &#123;\omega&#125;\right) \left\&#123;(\log y)^r + \sum_&#123;i=1&#125;^r \frac &#123;(-1)^i r \cdots (r-i+1) (\log y)^&#123;r-i&#125;&#125; &#123;\omega^i&#125; \right\&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>

<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>::: demo 这是 demo 标题</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>点我试试<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#hello&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">::: demo 这是 demo 标题</span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line">&lt;p&gt;&lt;span id=&quot;hello&quot;&gt;点我试试&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">```js</span><br><span class="line">document.querySelector(&quot;#hello&quot;).addEventListener(&quot;click&quot;, () =&gt; &#123;</span><br><span class="line">  alert(&quot;hello world&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">```css</span><br><span class="line">span &#123;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">:::</span><br></pre></td></tr></table></figure>
<p>存在超自然现象，谨慎使用！</p>
<h2 id="常用Front-Matter"><a href="#常用Front-Matter" class="headerlink" title="常用Front Matter"></a>常用Front Matter</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">日期</span> <span class="number">2021-03-4</span></span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">JavaScript</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Vue</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ElementUI</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">作者</span></span><br><span class="line"><span class="attr">location:</span> <span class="string">地理位置</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">模板</span></span><br><span class="line"><span class="attr">meta:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">description</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">seo用页面描述</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">keywords</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">seo用关键词</span></span><br><span class="line"><span class="attr">summary:</span> <span class="string">列表显示文章简述</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">伪静态用生成文章url</span></span><br><span class="line"><span class="attr">metaTitle:</span> <span class="string">网页的title</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">changefreq:</span> <span class="string">monthly</span> [<span class="string">alway|shourly|daily|weekly|monthly|yearly|never</span>]</span><br><span class="line"><span class="attr">styleClass:</span> <span class="string">someClass</span></span><br><span class="line"><span class="attr">comment:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">waiting:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>其他格式 请使用 Typora 编辑器辅助使用<br>或者参照</p>
<p><a href="https://markdown-it.github.io/">https://markdown-it.github.io/</a></p>
<p><a href="https://vuepress-theme-hope.github.io/md-enhance/zh/guide/">https://vuepress-theme-hope.github.io/md-enhance/zh/guide/</a></p>
<p>书写规范，参见</p>
<p><a href="/2021/04/27/docs-regulation/">此处</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[记录我的小项目-第一弹]]></title>
      <url>/2023/06/19/%E8%AE%B0%E5%BD%95%E6%88%91%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%AC%AC%E4%B8%80%E5%BC%B9/</url>
      <content type="html"><![CDATA[<p>记录我的小项目-第一弹</p>
<h5 id="一、项目起因："><a href="#一、项目起因：" class="headerlink" title="一、项目起因："></a>一、项目起因：</h5><blockquote>
<p>最近一致在琢磨一个有趣的项目，可以涵盖自己的所学知识，运营、技术、产品、销售。最初规划是希望通过chatgpt的Vercel项目免费开发给美术生，Midjourney出一些美图在小红书、抖音上发进行引流，chatGPT做钩子引导公众号，通过公众号做文章软文做转化，小程序做chatgpt活跃,。最后完成产品的售卖。</p>
<p>而后切入到6月高考季，发现社会热点的仍是聚焦志愿填报，而且自己的目标人群也有十分之一是美术生，所幸自己的Excel运用也不错，就想通过Excel做一个高考志愿填报的系统，主要用公式进行志愿分析，用于引流，料想应该不会差。遂进行初期尝试。</p>
</blockquote>
<p><strong>记录工具：</strong><a href="https://kgithub.com/hexojs">hexojs</a>&#x2F;<a href="https://kgithub.com/hexojs/hexo">hexo</a>博客，vercel部署</p>
<p><strong>chatGpt：</strong><a href="https://kgithub.com/Yidadaa">Yidadaa</a>&#x2F;<a href="https://kgithub.com/Yidadaa/ChatGPT-Next-Web">ChatGPT-Next-Web</a>，vercel部署</p>
<p><strong>流程工具：</strong><a href="https://gitee.com/aipaw">aipaw</a> &#x2F; <a href="https://gitee.com/aipaw/dootask">dootask</a>，docker部署</p>
<p><strong>小程序工具：</strong><a href="https://gitee.com/smalle">月星墙</a> &#x2F; <a href="https://gitee.com/smalle/ChatGPT-MP">ChatGPT-MP</a>，（未开发）</p>
<h5 id="二、项目逻辑："><a href="#二、项目逻辑：" class="headerlink" title="二、项目逻辑："></a>二、项目逻辑：</h5><ol>
<li>Midjourney出图，在小红书（美术生栋栋阿）、抖音号（美术生栋栋阿）发，通过简介发布美术生-找我免费领chatGPT。Midjourney教程。引导（美考攻略公众号）</li>
<li>美考攻略账号直播“美术生志愿填报”引导加公众号领取</li>
<li>公众号发布美术生文章和产品软文，菜单发布ChatGPT单日密码，引导加小程序</li>
<li>小程序有chatGPT,内含升序规划和资料包，引导加微信</li>
<li>产品包设计，美术生小班课、直播插画课、美术生找画室产品</li>
</ol>
<p>chatgpt可以涵盖美术生找画室、美术生查成绩、美术生升学规划、美术报志愿等功能。通过小红书、抖音等新媒体渠道进行引流。</p>
<h5 id="三、整体规划："><a href="#三、整体规划：" class="headerlink" title="三、整体规划："></a>三、整体规划：</h5><ol>
<li>小红书、抖音账号注册；公众号注册（6月完成）</li>
<li>完成Midjourney出图。（6月完成）</li>
<li>完成美术生志愿填报系统设计（6月完成）</li>
<li>公众号文章存档（7月完成10篇）</li>
<li>小班课产品营销物料设计（7月完成10篇）</li>
<li>找老师，出课程（待定）</li>
<li>小程序完善（待定）</li>
</ol>
<h5 id="四、当前进展："><a href="#四、当前进展：" class="headerlink" title="四、当前进展："></a>四、当前进展：</h5><ul>
<li><input checked="" disabled="" type="checkbox"> 小红书、抖音账号、公众号注册完成(已完成)</li>
<li><input disabled="" type="checkbox"> 美术生志愿填报设计制作中（计划6月29日前完成）(未完成)</li>
</ul>
<h5 id="五、指标计划："><a href="#五、指标计划：" class="headerlink" title="五、指标计划："></a>五、指标计划：</h5><p>暂未涉及</p>
<p>&#x3D;&#x3D; 当前项目进展：&#x3D;&#x3D;</p>
<p>已经延后</p>
]]></content>
      
        <categories>
            
            <category> 项目日记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 项目集锦 </tag>
            
            <tag> ideas </tag>
            
            <tag> 小爬虫 </tag>
            
            <tag> 高考网站 </tag>
            
            <tag> 志愿填报 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[pandas 使用方法]]></title>
      <url>/2023/06/14/pandas-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>好的，我可以帮你介绍如何使用 Pandas 来读取 Excel 数据并实现追加数据或追加 Sheet。</p>
<p>首先需要安装 Pandas 库，可以使用以下命令进行安装：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pandas</span><br></pre></td></tr></table></figure>

<p>有了 Pandas 库，就可以通过 <code>read_excel()</code> 方法读取 Excel 文件了。假设我们有一个名为 <code>data.xlsx</code> 的 Excel 文件，可以使用以下代码读取其中的 Sheet1 中的数据：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;data.xlsx&#x27;</span>, sheet_name=<span class="string">&#x27;Sheet1&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure>

<p>其中 <code>sheet_name</code> 参数可以用来指定要读取的 Sheet 名称或 Sheet 的下标。</p>
<p>接下来可以使用 Pandas 提供的方法往 Excel 中追加数据。假设我们有一个名为 <code>new_data.xlsx</code> 的 Excel 文件，要将数据追加到其中的 Sheet1，可以使用以下代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取原有数据</span></span><br><span class="line">df1 = pd.read_excel(<span class="string">&#x27;new_data.xlsx&#x27;</span>, sheet_name=<span class="string">&#x27;Sheet1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 待追加的新数据</span></span><br><span class="line">data_to_append = &#123;<span class="string">&#x27;Column1&#x27;</span>: [<span class="string">&#x27;New value 1&#x27;</span>, <span class="string">&#x27;New value 2&#x27;</span>],</span><br><span class="line">                  <span class="string">&#x27;Column2&#x27;</span>: [<span class="string">&#x27;New value 3&#x27;</span>, <span class="string">&#x27;New value 4&#x27;</span>]&#125;</span><br><span class="line">df2 = pd.DataFrame(data=data_to_append)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将新数据追加到原有数据后面</span></span><br><span class="line">df = pd.concat([df1, df2], axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将新数据写入 Excel</span></span><br><span class="line"><span class="keyword">with</span> pd.ExcelWriter(<span class="string">&#x27;new_data.xlsx&#x27;</span>) <span class="keyword">as</span> writer:</span><br><span class="line">    df.to_excel(writer, sheet_name=<span class="string">&#x27;Sheet1&#x27;</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<p>以上代码中，我们首先使用 <code>read_excel()</code> 方法读取名为 <code>new_data.xlsx</code> 的 Excel 文件中的 Sheet1 数据，然后创建一个包含新数据的数据帧 <code>df2</code>，接着使用 <code>concat()</code> 方法将新数据追加到原有数据后面，最后使用 <code>ExcelWriter()</code> 创建一个 ExcelWriter 对象，并使用 <code>to_excel()</code> 方法将数据写入 Excel 文件中的 Sheet1。</p>
<p>如果要新增一个 Sheet，可以使用以下代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取 Excel 文件</span></span><br><span class="line">df1 = pd.read_excel(<span class="string">&#x27;new_data.xlsx&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 待追加的新数据</span></span><br><span class="line">data_to_append = &#123;<span class="string">&#x27;Column1&#x27;</span>: [<span class="string">&#x27;New value 1&#x27;</span>, <span class="string">&#x27;New value 2&#x27;</span>],</span><br><span class="line">                  <span class="string">&#x27;Column2&#x27;</span>: [<span class="string">&#x27;New value 3&#x27;</span>, <span class="string">&#x27;New value 4&#x27;</span>]&#125;</span><br><span class="line">df2 = pd.DataFrame(data=data_to_append)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将新数据写入 Excel 中的新 Sheet 中</span></span><br><span class="line"><span class="keyword">with</span> pd.ExcelWriter(<span class="string">&#x27;new_data.xlsx&#x27;</span>, engine=<span class="string">&#x27;openpyxl&#x27;</span>, mode=<span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> writer:</span><br><span class="line">    df2.to_excel(writer, sheet_name=<span class="string">&#x27;New Sheet&#x27;</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<p>以上代码中，我们使用 <code>read_excel()</code> 方法读取名为 <code>new_data.xlsx</code> 的 Excel 文件中的所有数据，接着创建一个包含新数据的数据帧 <code>df2</code>，最后使用 <code>ExcelWriter()</code> 创建一个 ExcelWriter 对象，并使用 <code>to_excel()</code> 方法将新数据写入 Excel 文件中的新 Sheet 中。请注意，我们在 <code>ExcelWriter()</code> 中指定了 <code>engine</code> 为 <code>openpyxl</code>，并将 <code>mode</code> 参数设置为 <code>a</code>，这样可以以追加模式打开 Excel 文件。</p>
]]></content>
      
        
        <tags>
            
            <tag> pandas </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[高考志愿网JS逆向]]></title>
      <url>/2023/06/14/%E9%AB%98%E8%80%83%E5%BF%97%E6%84%BF%E7%BD%91JS%E9%80%86%E5%90%91/</url>
      <content type="html"><![CDATA[<blockquote>
<p>起因：最近想出一个高考志愿填报的excel系统，想先从网上拿一些资源，最开始的设计是希望从网站上找到近5年的报考指南PDF，然后写代码OCR扫描PDF，摘取关键数据，后发现网站没有PDF,于是告吹。后来就找寻网站，看看有没有我想要的数据，于是找到了”掌上高考“，发现有一些数据是想要的。（其实公司内有一个高考志愿网站，草率了）</p>
</blockquote>
<p>处理数据：</p>
<h4 id="第一步：打开开发者工具"><a href="#第一步：打开开发者工具" class="headerlink" title="第一步：打开开发者工具"></a>第一步：打开开发者工具</h4><p>找到对应的数据文件</p>
<p><img src="/./../img/image-202306191342401592.png" alt="image-20230619134240159"></p>
<h4 id="第二步：分析payload"><a href="#第二步：分析payload" class="headerlink" title="第二步：分析payload"></a>第二步：分析payload</h4><p>发现是一个POST请求，需要给他的服务器发送数据，再分析payload，发现里面有要发送的数据，里面有个signsafe（估计是个加密数据）看来必须要逆向才行了</p>
<p>后来发现这个网站做逆向纯属脱裤子放屁了。（既然可以用GET请求得到数据，signsafe就是个摆设）不过正好可以学习一下如何逆向。</p>
<p><img src="/./../img/image-20230619134459860.png" alt="image-20230619134459860"></p>
<p><img src="/./../img/image-20230619134408130.png" alt="image-20230619134408130"></p>
<h4 id="第三步：用search搜索一下signsafe（这个需要用H5模式）"><a href="#第三步：用search搜索一下signsafe（这个需要用H5模式）" class="headerlink" title="第三步：用search搜索一下signsafe（这个需要用H5模式）"></a>第三步：用search搜索一下signsafe（这个需要用H5模式）</h4><p>发现了一堆数据，但是能用的就是第一个</p>
<p><img src="/./../img/image-20230620084226083.png" alt="image-20230620084226083"></p>
<h4 id="第四步：分析数据"><a href="#第四步：分析数据" class="headerlink" title="第四步：分析数据"></a>第四步：分析数据</h4><p>通过上下文判断是用的Hmac sha1加密，找到了signsafe</p>
<p><img src="/./../img/image-20230620084326175.png" alt="image-20230620084326175"></p>
<h4 id="第五步：找到文件，用source打断点试试"><a href="#第五步：找到文件，用source打断点试试" class="headerlink" title="第五步：找到文件，用source打断点试试"></a>第五步：找到文件，用source打断点试试</h4><p>根据文件夹的headers找到数据文件夹<img src="/./../img/image-20230619141030125.png" alt="image-20230619141030125"></p>
<p><img src="/./../img/image-20230620084943417.png" alt="image-20230620084943417"></p>
<p>经过断点运行，多试了几次，发现就是这个代码。</p>
<p>这是一个加密的方法，所有的singsafe都走这一个方法，断点可以走第二遍，就能出现我们想要的safe</p>
<p>具体的加密逻辑是这样的：首先获取url（包括传递的数据），然后去掉<code>https:\\</code>,进行sha1加密，密钥是D23ABC@#56,加密后再进行Base64加密，再将加密的数据用MD5进行加密。最后进行拼接。</p>
<h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> common</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将已知信息汇总</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">StringConcatenation</span>(<span class="params">url: <span class="built_in">str</span>, p: <span class="built_in">int</span>, n=<span class="literal">None</span></span>) -&gt;<span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(p):</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;signsafe&#x27;</span> <span class="keyword">in</span> common.data:</span><br><span class="line">            common.data.pop(<span class="string">&#x27;signsafe&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> n == <span class="literal">None</span>:</span><br><span class="line">            common.data[<span class="string">&#x27;page&#x27;</span>] = i + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            common.data[<span class="string">&#x27;page&#x27;</span>] = i + n</span><br><span class="line">        <span class="comment"># 将对象作为参数构建URL</span></span><br><span class="line">        <span class="comment"># print(common.data[&#x27;page&#x27;])</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;已完成：&#x27;</span>, i, <span class="string">&#x27;当前页数:&#x27;</span>, common.data[<span class="string">&#x27;page&#x27;</span>])</span><br><span class="line">        params = urllib.parse.urlencode(common.data)</span><br><span class="line">        params = urllib.parse.unquote(params)</span><br><span class="line">        url_new = url + <span class="string">&#x27;?&#x27;</span> + params</span><br><span class="line">        <span class="comment"># 构建加密信息</span></span><br><span class="line">        msg = url_new.replace(<span class="string">&#x27;https://&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        Encrypt(msg)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将信息加密</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Encrypt</span>(<span class="params">msg</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 基础信息</span></span><br><span class="line">    key = <span class="string">&#x27;D23ABC@#56&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    msg = msg</span><br><span class="line">    <span class="comment"># print(msg)</span></span><br><span class="line">    <span class="comment"># hmac SHA1加密</span></span><br><span class="line">    h = hmac.new(key, msg.encode(<span class="string">&#x27;utf-8&#x27;</span>), hashlib.sha1).digest()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># base64 加密</span></span><br><span class="line">    b = base64.b64encode(h)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># md5 加密</span></span><br><span class="line">    m = hashlib.md5(b)</span><br><span class="line">    m = m.hexdigest()</span><br><span class="line">    <span class="built_in">print</span>(m)</span><br><span class="line">    common.data[<span class="string">&#x27;signsafe&#x27;</span>] = m</span><br><span class="line">    <span class="comment"># RequestsHttp()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 做请求</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">RequestsHttp</span>(<span class="params">medth</span>):</span><br><span class="line">    ua = UserAgent()</span><br><span class="line">    useragent = ua.random</span><br><span class="line">    common.headers[<span class="string">&#x27;User-Agent&#x27;</span>] = useragent</span><br><span class="line">    ips = proxies_ip()</span><br><span class="line">    proxies = &#123;</span><br><span class="line">    <span class="string">&#x27;HTTP&#x27;</span>: ips,</span><br><span class="line">    <span class="string">&#x27;HTTPS&#x27;</span>: ips</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">print</span>(ips)</span><br><span class="line">    <span class="keyword">if</span> medth == <span class="string">&#x27;post&#x27;</span>:</span><br><span class="line">        <span class="comment"># 构建URL</span></span><br><span class="line">        res = requests.post(url=common.urls[<span class="string">&#x27;url&#x27;</span>], headers=common.headers,data=common.data)</span><br><span class="line"></span><br><span class="line">        res = res.content.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        json_str = json.loads(res)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;school_all2.json3&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span> ) <span class="keyword">as</span> f:</span><br><span class="line">            json.dump(json_str, f, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        </span><br><span class="line">        res = requests.get(url=common.urls[<span class="string">&#x27;url&#x27;</span>],headers=common.headers, proxies=proxies, verify=<span class="literal">False</span>)</span><br><span class="line">        res = res.content.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        json_str = json.loads(res)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;spictial_school4.json&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">            json.dump(json_str, f, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">    <span class="comment"># StringConcatenation(common.urls[&#x27;url&#x27;])</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">proxies_ip</span>():</span><br><span class="line"></span><br><span class="line">    res = requests.get(url=url).text</span><br><span class="line"><span class="comment"># 判断高匿代理</span></span><br><span class="line">    url2 = <span class="string">&#x27;http://example.com&#x27;</span></span><br><span class="line">    ips = res</span><br><span class="line">    <span class="built_in">print</span>(ips)</span><br><span class="line">    proxies = &#123;</span><br><span class="line">        <span class="string">&#x27;http&#x27;</span>: <span class="string">f&#x27;http://<span class="subst">&#123;ips&#125;</span>&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https&#x27;</span>: <span class="string">f&#x27;https://<span class="subst">&#123;ips&#125;</span>&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url2, proxies=proxies, timeout=<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span> <span class="keyword">in</span> response.headers:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;Proxy <span class="subst">&#123;ips&#125;</span> 是高匿代理!&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(ips)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;Proxy <span class="subst">&#123;ips&#125;</span> is not high anonymity.&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;出现异常&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        <span class="comment"># common.urls[&#x27;url&#x27;] = &#x27;https://api.eol.cn/gh5/api&#x27;</span></span><br><span class="line">    <span class="comment"># StringConcatenation(common.urls[&#x27;url&#x27;], 10, 230)</span></span><br></pre></td></tr></table></figure>

]]></content>
      
        <categories>
            
            <category> 爬虫逆向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 高考网站 </tag>
            
            <tag> 逆向 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[搭建一个Hexo博客并用vercel部署]]></title>
      <url>/2023/05/31/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAHexo%E5%8D%9A%E5%AE%A2%E5%B9%B6%E7%94%A8vercel%E9%83%A8%E7%BD%B2%20(2)/</url>
      <content type="html"><![CDATA[<p>Hexo 是一款基于Node.js的静态博客生成器，具有简单易用、快速高效、丰富主题、插件支持等特点，适合用于个人博客、技术文档、个人网站等场景。而且基于 markdown 编写起来非常顺畅，个人非常喜欢这个博客。这次下定决心搭建一个 Hexo 博客来实现我日常分享的一个小博客网站。</p>
<h5 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h5><ol>
<li>一台 windows 笔记本电脑，当然 mac 电脑也是没问题的，即使 Linux 电脑也是可以的。</li>
<li>Git工具: Git (git-scm.com)</li>
<li>Node+ Npm工具：Node.js (nodejs.org)</li>
<li>准备好 Hexo 博客程序： <a href="https://hexo.io/">https://hexo.io/</a></li>
<li>创建一个 Git 仓库</li>
<li>注册一个 vercel 账号(如果有自己的服务器或者不适用 vercel 可以不用管这一步)：<a href="https://vercel.com/">https://vercel.com/</a></li>
<li>准备一个域名(如果不需要独立域名可以略过这一步)</li>
<li>hexo 本地图片部署</li>
</ol>
<h5 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h5><h6 id="安装-Hexo-工具"><a href="#安装-Hexo-工具" class="headerlink" title="安装 Hexo 工具"></a>安装 Hexo 工具</h6><p>上面的 GIT和 Node在百度或者谷歌上已经有很多相关专业的教程，这里就不详细讲解这块的知识了。一般来说到官网上下载完毕直接下一步下一步即可。我们先来全局安装一个 Hexo 工具</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>


<h6 id="创建-hexo-本地博客程序"><a href="#创建-hexo-本地博客程序" class="headerlink" title="创建 hexo 本地博客程序"></a>创建 hexo 本地博客程序</h6><p>安装完成之后我们就可以使用 hexo 的工具来创建博客了。在电脑上创建一个目录并进入该目录，我起名叫做 javier-blog，刚才我们安装过 Git 工具这时候就派上用场了。在该目录内右键找到 Git Bash Here 点击打开一个 Git的命令行窗口或者你可以使用其他的命令行工具。执行以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo init </span><br><span class="line"></span><br><span class="line"># 下面是在执行上面的命令之后的结果</span><br><span class="line"></span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">INFO  Install dependencies</span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure>


<h6 id="启动-hexo-本地服务"><a href="#启动-hexo-本地服务" class="headerlink" title="启动 hexo 本地服务"></a>启动 hexo 本地服务</h6><p>安装完成 hexo程序直接执行 hexo s 命令就可以打开 hexo 的本地服务。在命令行上会显示启动后的服务地址。</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>


<p><img src="/./../img/image-20230530180853849.png" alt="image-20230530180853849"></p>
<p>以上就正式搭建完成 hexo 的博客程序了。</p>
<h5 id="修改博客的基本信息"><a href="#修改博客的基本信息" class="headerlink" title="修改博客的基本信息"></a>修改博客的基本信息</h5><p>修改 博客的标题，副标题，描述，语言时区等信息</p>
<p><img src="/../img/cf60858892fa440482540f548322cbfc.png" alt="../img/"></p>
<p>修改博客地址</p>
<p><img src="/../img/5dce8878e1fd42228974ee532b328a31.png" alt="5dce8878e1fd42228974ee532b328a31"></p>
<p>创建 github 仓库<br>打开 <a href="https://github.com/">https://github.com/</a> 创建一个仓库用来存储我们的部署程序,创建后是这个样子的。</p>
<p><img src="/../img/87e34403497b4e8092b8e234b7d154aa.png" alt="../img/"></p>
<p><img src="/../img/2dce5d421d4a45ae8b2628b405f00c85.png" alt="../img/"></p>
<h5 id="同步本地-Hexo-部署页面到-github-中"><a href="#同步本地-Hexo-部署页面到-github-中" class="headerlink" title="同步本地 Hexo 部署页面到 github 中"></a>同步本地 Hexo 部署页面到 github 中</h5><h5 id="初始化-git-项目"><a href="#初始化-git-项目" class="headerlink" title="初始化 git 项目"></a>初始化 git 项目</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin https://github.com/runbrick/javier-blog.git</span><br></pre></td></tr></table></figure>


<p>打开本地 **hexo **项目目录并执行下面的命令,用来安装 git 的部署组件</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>安装之后在项目目录中找到<code>**_config.yml **</code>修改 deploy 参数</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy<span class="punctuation">:</span></span><br><span class="line">  type<span class="punctuation">:</span> &#x27;git&#x27;</span><br><span class="line">  repo<span class="punctuation">:</span> &#x27;https<span class="punctuation">:</span><span class="comment">//github.com/runbrick/javier-blog.git&#x27;</span></span><br><span class="line">  branch<span class="punctuation">:</span> &#x27;master&#x27;</span><br></pre></td></tr></table></figure>


<p>执行 <code>hexo g</code> 然后执行 <code>hexo d </code>将静态页面部署到 <strong>github</strong> 上，是这个样子的。</p>
<p><img src="/../img/1ee6f73b701249a483c8022e90aa6d6d-1685510451300-24.png" alt="../img/"></p>
<h5 id="将项目部署到-vercel-上"><a href="#将项目部署到-vercel-上" class="headerlink" title="将项目部署到 vercel 上"></a>将项目部署到 vercel 上</h5><p>如果不需要部署到 vercel 上此步可以略过</p>
<p>在 **dashboard **上 选择 <strong>Create a New Project</strong></p>
<p><img src="/../img/54ae8c862963400ea1c2b86c0bec2e79.png" alt="../img/"></p>
<p>在关联的 **github **账户中，找到刚才的博客仓库，选择 import</p>
<p><img src="/../img/6a5b756f46bb4e3fb46a5d93bb32c5ca.png" alt="../img/"></p>
<p>进入部署页面选择 deploy</p>
<p><img src="/../img/d3f01706b7e84ac19d017b12b45cf23b.png" alt="../img/"></p>
<p>生成之后点击 Continue to Dashboard</p>
<p><img src="/../img/83a40d63337d4c02a6ac9d7d8a336ca6.png" alt="../img/"></p>
<p>点击 Visit 就可以看到刚刚生成的博客程序了</p>
<p><img src="/../img/73fea79fe1634cf897df435520360cc0.png" alt="../img/"></p>
<p>将项目资源文件放入同一个仓库中<br>在命令行创建一个新的分支并切换过去</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b source</span><br></pre></td></tr></table></figure>


<p>提交代码</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git push origin source</span><br></pre></td></tr></table></figure>

<p>常用命令</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;name&quot;       # 新建文章</span><br><span class="line">hexo new page &quot;name&quot;  # 新建页面</span><br><span class="line">hexo g                # 生成页面</span><br><span class="line">hexo d                # 部署</span><br><span class="line">hexo g -d             # 生成页面并部署</span><br><span class="line">hexo s                # 本地预览</span><br><span class="line">hexo clean            # 清除缓存和已生成的静态文件</span><br><span class="line">hexo help             # 帮助</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> github </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vervel </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
