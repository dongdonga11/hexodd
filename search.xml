<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[我们]]></title>
      <url>/2023/06/08/we/</url>
      <content type="html"><![CDATA[<h2 id="author"><a href="#author" class="headerlink" title="author"></a>author</h2><AuthorList />

<h2 id="TBD"><a href="#TBD" class="headerlink" title="TBD"></a>TBD</h2><ul>
<li><input checked="" disabled="" type="checkbox"> 标签列表、作者列表页 plus 标签收起、展开</li>
<li><input checked="" disabled="" type="checkbox"> 作者列表动态获取，不再需要维护，并优化了展示形式</li>
<li><input checked="" disabled="" type="checkbox"> 随机壁纸</li>
<li><input checked="" disabled="" type="checkbox"> 看板娘</li>
<li><input checked="" disabled="" type="checkbox"> 看板娘静音</li>
<li><input disabled="" type="checkbox"> 看板娘 plus 增加聊天、配音优化</li>
<li><input checked="" disabled="" type="checkbox"> 调色板</li>
<li><input disabled="" type="checkbox"> 多语言</li>
<li><input checked="" disabled="" type="checkbox"> markdown 复选框支持</li>
<li><input checked="" disabled="" type="checkbox"> 单页样式</li>
<li><input checked="" disabled="" type="checkbox"> 图片懒加载</li>
<li><input disabled="" type="checkbox"> 图片懒加载 plus</li>
<li><input checked="" disabled="" type="checkbox"> sitemap</li>
<li><input checked="" disabled="" type="checkbox"> 引入百度</li>
<li><input disabled="" type="checkbox"> sitemap 自动化更新频次默认值</li>
<li><input checked="" disabled="" type="checkbox"> valine 社评插件</li>
<li><input checked="" disabled="" type="checkbox"> last-updated 插件</li>
<li><input disabled="" type="checkbox"> 登录组件</li>
<li><input disabled="" type="checkbox"> 百度自动化提交 sitemap</li>
<li><input checked="" disabled="" type="checkbox"> markdown 增强</li>
<li><input disabled="" type="checkbox"> 将 valine 统计的阅读量进行展示</li>
<li><input disabled="" type="checkbox"> 引入百度统计</li>
<li><input disabled="" type="checkbox"> 页面密码访问</li>
<li><input checked="" disabled="" type="checkbox"> 优化作者页面</li>
<li><input checked="" disabled="" type="checkbox"> 中文 tag 、 中文 author 等引发的 404 问题</li>
<li><input disabled="" type="checkbox"> 置顶、推荐等效果</li>
<li><input checked="" disabled="" type="checkbox"> 图片灯箱</li>
<li><input disabled="" type="checkbox"> 图片灯箱 plus</li>
<li><input disabled="" type="checkbox"> 懒加载引起的IE无法看到图片 or  kill IE！</li>
</ul>
<h2 id="TBW"><a href="#TBW" class="headerlink" title="TBW"></a>TBW</h2><ul>
<li>网站那些奇怪的插件</li>
<li>Lazy loading attribute 和 Intersection Observer API</li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title></title>
      <url>/2023/06/08/index/</url>
      <content type="html"><![CDATA[<p>这是一个不纯粹的三无网站了</p>
<p><strong>无水平</strong><br>  全靠缝合+瞎鸡巴改</p>
<p><strong>有备案</strong><br>  家里穷，买不起服务器 <del> 没法备案 </del> 白嫖了一个备了案</p>
<p><strong>无后端</strong><br>  只想白嫖，托管静态不要钱不香吗？</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown 书写示例]]></title>
      <url>/2023/06/08/exp/</url>
      <content type="html"><![CDATA[<h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">::: slot module1</span><br><span class="line">this is module1</span><br><span class="line">::::</span><br><span class="line"></span><br><span class="line">::: slot module2</span><br><span class="line">this is module2</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>[[toc]]</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[toc]]</span><br></pre></td></tr></table></figure>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote>
<p>这是一条引用</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一条引用</span><br></pre></td></tr></table></figure>
<h2 id="自定义容器"><a href="#自定义容器" class="headerlink" title="自定义容器"></a>自定义容器</h2><p>::: info 信息<br>这是一个信息<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: info 信息</span><br><span class="line">这是一个信息</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>

<p>::: tip 告示<br>这是一个提示<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: tip 告示</span><br><span class="line">这是一个提示</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>

<p>::: warning 警告<br>这是一个警告<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: warning 警告</span><br><span class="line">这是一个警告</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>

<p>::: danger STOP<br>危险区域，禁止通行<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: danger STOP</span><br><span class="line">危险区域，禁止通行</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>


<p>::: details 点击查看代码</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好，VuePress！&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">::: details 点击查看代码</span><br><span class="line">```</span><br><span class="line">console.log(&#x27;你好，VuePress！&#x27;)</span><br><span class="line">```</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>

<p>::: v-pre<br><code>&#123;&#123; This will be displayed as-is &#125;&#125;</code><br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: v-pre</span><br><span class="line">`&#123;&#123; This will be displayed as-is &#125;&#125;`</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>

<p>::: center<br>居中文字<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: center</span><br><span class="line">居中文字</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>
<p>::: right<br>居右文字<br>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::: right</span><br><span class="line">居右文字</span><br><span class="line">:::</span><br></pre></td></tr></table></figure>
<h2 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h2><p>我是 &#x3D;&#x3D;高亮&#x3D;&#x3D; 的</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我是 ==高亮== 的</span><br></pre></td></tr></table></figure>
<h2 id="代码块行高亮"><a href="#代码块行高亮" class="headerlink" title="代码块行高亮"></a>代码块行高亮</h2><figure class="highlight js"><figcaption><span>&#123;1,3-5&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">msg</span>: <span class="string">&#x27;Highlighted!&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">``` js &#123;1,3-5&#125;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      msg: &#x27;Highlighted!&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure>
<p>更多用法参照：<a href="https://v1.vuepress.vuejs.org/zh/guide/markdown.html">https://v1.vuepress.vuejs.org/zh/guide/markdown.html</a></p>
<h2 id="emoji"><a href="#emoji" class="headerlink" title="emoji"></a>emoji</h2><p>:tada:</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:tada:</span><br></pre></td></tr></table></figure>
<h2 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h2><ul>
<li><p><input disabled="" type="checkbox"> 
看板娘</p>
</li>
<li><p><input disabled="" type="checkbox"> 
调色板</p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
多语言</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- [ ] 看板娘</span><br><span class="line"></span><br><span class="line">- [ ] 调色板</span><br><span class="line"></span><br><span class="line">- [x] 多语言</span><br></pre></td></tr></table></figure>
<h2 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h2><p>19^th^<br>H<del>2</del>O</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">19^th^</span><br><span class="line">H~2~O</span><br></pre></td></tr></table></figure>
<h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>脚注 1 链接<a href="%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E8%84%9A%E6%B3%A8">^first</a>.</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">脚注 1 链接[^first].</span><br><span class="line"></span><br><span class="line">[^first]: 这是一个脚注</span><br></pre></td></tr></table></figure>
<h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start|past:&gt;http://localhost:8080/exp.html[blank]</span><br><span class="line">e=&gt;end: End|future:&gt;http://localhost:8080/exp.html</span><br><span class="line">op1=&gt;operation: My Operation|past</span><br><span class="line">op2=&gt;operation: Stuff|current</span><br><span class="line">sub1=&gt;subroutine: My Subroutine|invalid</span><br><span class="line">cond=&gt;condition: Yes</span><br><span class="line">or No?|approved:&gt;http://localhost:8080/exp.html</span><br><span class="line">c2=&gt;condition: Good idea|rejected</span><br><span class="line">io=&gt;inputoutput: catch something...|future</span><br><span class="line"></span><br><span class="line">st-&gt;op1(right)-&gt;cond</span><br><span class="line">cond(yes, right)-&gt;c2</span><br><span class="line">cond(no)-&gt;sub1(left)-&gt;op1</span><br><span class="line">c2(yes)-&gt;io-&gt;e</span><br><span class="line">c2(no)-&gt;op2-&gt;e</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">```flow</span><br><span class="line">st=&gt;start: Start|past:&gt;http://localhost:8080/exp.html[blank]</span><br><span class="line">e=&gt;end: End|future:&gt;http://localhost:8080/exp.html</span><br><span class="line">op1=&gt;operation: My Operation|past</span><br><span class="line">op2=&gt;operation: Stuff|current</span><br><span class="line">sub1=&gt;subroutine: My Subroutine|invalid</span><br><span class="line">cond=&gt;condition: Yes</span><br><span class="line">or No?|approved:&gt;http://localhost:8080/exp.html</span><br><span class="line">c2=&gt;condition: Good idea|rejected</span><br><span class="line">io=&gt;inputoutput: catch something...|future</span><br><span class="line"></span><br><span class="line">st-&gt;op1(right)-&gt;cond</span><br><span class="line">cond(yes, right)-&gt;c2</span><br><span class="line">cond(no)-&gt;sub1(left)-&gt;op1</span><br><span class="line">c2(yes)-&gt;io-&gt;e</span><br><span class="line">c2(no)-&gt;op2-&gt;e</span><br><span class="line">```</span><br></pre></td></tr></table></figure>


<h2 id="Tex"><a href="#Tex" class="headerlink" title="Tex"></a>Tex</h2><p>Euler’s identity $e^{i\pi}+1&#x3D;0$ is a beautiful formula in $\mathbb{R}^2$.</p>
<p>$$<br>\frac {\partial^r} {\partial \omega^r} \left(\frac {y^{\omega}} {\omega}\right)<br>&#x3D; \left(\frac {y^{\omega}} {\omega}\right) \left{(\log y)^r + \sum_{i&#x3D;1}^r \frac {(-1)^i r \cdots (r-i+1) (\log y)^{r-i}} {\omega^i} \right}<br>$$</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Euler’s identity $e^&#123;i\pi&#125;+1=0$ is a beautiful formula in $\mathbb&#123;R&#125;^2$.</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">\frac &#123;\partial^r&#125; &#123;\partial \omega^r&#125; \left(\frac &#123;y^&#123;\omega&#125;&#125; &#123;\omega&#125;\right)</span><br><span class="line">= \left(\frac &#123;y^&#123;\omega&#125;&#125; &#123;\omega&#125;\right) \left\&#123;(\log y)^r + \sum_&#123;i=1&#125;^r \frac &#123;(-1)^i r \cdots (r-i+1) (\log y)^&#123;r-i&#125;&#125; &#123;\omega^i&#125; \right\&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>

<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>::: demo 这是 demo 标题</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>点我试试<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#hello&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>:::</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">::: demo 这是 demo 标题</span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line">&lt;p&gt;&lt;span id=&quot;hello&quot;&gt;点我试试&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">```js</span><br><span class="line">document.querySelector(&quot;#hello&quot;).addEventListener(&quot;click&quot;, () =&gt; &#123;</span><br><span class="line">  alert(&quot;hello world&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">```css</span><br><span class="line">span &#123;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">:::</span><br></pre></td></tr></table></figure>
<p>存在超自然现象，谨慎使用！</p>
<h2 id="常用Front-Matter"><a href="#常用Front-Matter" class="headerlink" title="常用Front Matter"></a>常用Front Matter</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">日期</span> <span class="number">2021-03-4</span></span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">JavaScript</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Vue</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ElementUI</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">作者</span></span><br><span class="line"><span class="attr">location:</span> <span class="string">地理位置</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">模板</span></span><br><span class="line"><span class="attr">meta:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">description</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">seo用页面描述</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">keywords</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">seo用关键词</span></span><br><span class="line"><span class="attr">summary:</span> <span class="string">列表显示文章简述</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">伪静态用生成文章url</span></span><br><span class="line"><span class="attr">metaTitle:</span> <span class="string">网页的title</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">changefreq:</span> <span class="string">monthly</span> [<span class="string">alway|shourly|daily|weekly|monthly|yearly|never</span>]</span><br><span class="line"><span class="attr">styleClass:</span> <span class="string">someClass</span></span><br><span class="line"><span class="attr">comment:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">waiting:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>其他格式 请使用 Typora 编辑器辅助使用<br>或者参照</p>
<p><a href="https://markdown-it.github.io/">https://markdown-it.github.io/</a></p>
<p><a href="https://vuepress-theme-hope.github.io/md-enhance/zh/guide/">https://vuepress-theme-hope.github.io/md-enhance/zh/guide/</a></p>
<p>书写规范，参见</p>
<p><a href="/2021/04/27/docs-regulation/">此处</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[我的双11、618]]></title>
      <url>/2023/06/08/611118/</url>
      <content type="html"><![CDATA[<blockquote>
<p>2022 1111 - 9985.08</p>
</blockquote>
<p>::: info 来源<br>猫<br>:::</p>
<p>瑞幸咖啡 拿铁特调 2.0<br>规格 18 * 2g * 3<br>赠品 不锈钢咖啡杯<br>实付 217.03<br>单价 72.34<br>比较速算 4.02 &#x2F; 杯</p>
<p>超白缸<br>规格 20 * 20 * 30 cm * 2<br>实付 76.32<br>单价 38.06<br>比较速算 3.17 &#x2F; L</p>
<p>丽尔泰椰浆<br>规格 1L * 2<br>实付 39.76<br>单价 19.88<br>比较速算 19.88 &#x2F; L</p>
<p>加贝水质检测笔 TDS<br>实付 17.9</p>
<p>oatly 咖啡大师燕麦奶<br>规格 1L * 6<br>赠品 甄品精品冻干咖啡粉 * 6<br>实付 117.45<br>单价 19.58<br>比较速算 19.58 &#x2F; L</p>
<p>YEE PH 值 检测笔<br>实付 23.22</p>
<p>Iphone 13<br>规格 256G<br>实付 5597.62</p>
<p>骰盘<br>实付 12.97</p>
<p>德绒内衣 女童<br>实付 84.22</p>
<p>璀璨宝石对决<br>实付 142.92</p>
<p>wiyas EP106<br>规格 重锤 三踏 X 架 琴包<br>实付 1615.52</p>
<p>观锦农场营养土<br>规格 绿植通用 4 斤<br>实付 24.5<br>比较速算 6.13 &#x2F; 斤</p>
<p>郁美净洋甘菊<br>规格 35g * 6<br>实付 183.82<br>比较速算 30.64 &#x2F; 35g</p>
<p>耐尔女袜<br>规格 6<br>实付 45.04<br>比较速算 7.51 &#x2F; 双</p>
<p>保洁 儿童牙膏<br>规格 40g * 4<br>实付 24.98<br>比较速算 6.25 &#x2F; 支</p>
<p>恒源祥秋衣裤套装<br>规格 中领 * 2<br>实付 115.31<br>比较速算 57.66 &#x2F; 套</p>
<p>绣球专用土<br>规格 15L 酸性营养土 + 营养颗粒 + 绣球调蓝剂配方<br>赠品 磷酸二氢钾 + 硫酸亚铁<br>实付 20.91<br>比较速算 1.39 &#x2F; L</p>
<p>protefix 儿童牙膏 + 牙刷<br>规格 4 + 4<br>实付 47.87</p>
<p>::: warning 合计<br>8286.27<br>:::</p>
<p>::: info 来源<br>狗<br>:::</p>
<p>水星路由器<br>规格 AX3000<br>实付 178.5</p>
<p>妙可蓝多 奶酪棒<br>规格 500g * 4<br>实付 127.54<br>单价 31.89<br>比较速算 6.38 &#x2F; 100g</p>
<p>黛珂 紫苏水+牛油果乳液<br>规格 300ml + 300ml<br>实付 388</p>
<p>::: warning 合计<br>694.04<br>:::</p>
<p>::: info 来源<br>多多<br>:::</p>
<p>水族吸便器<br>规格 30ML 28CM<br>实付 2.58</p>
<p>尼特利水族液肥<br>规格 综合肥 350ML<br>实付 19.25<br>比较速算 5.5 &#x2F; 100ML</p>
<p>拖鞋架<br>规格 48CM &amp; 38CM<br>实付 4.93 + 4.22</p>
<p>五月花 拖地湿巾<br>规格 100 抽 * 5<br>实付 14.92<br>单价 2.98<br>比较速算 0.3 &#x2F; 10 抽</p>
<p>书靠<br>规格 2 个<br>实付 6.01<br>单价 3</p>
<p>松皮石<br>规格 18 斤<br>实付 46.79<br>比较速算 2.6 &#x2F; 斤</p>
<p>黛珂牛油果乳霜<br>规格 40g<br>实付 161.41</p>
<p>水族滤材 石英中空球<br>规格 5 斤<br>实付 14.34<br>比较速算 2.87 &#x2F; 斤</p>
<p>高锰酸钾<br>规格 200ml<br>赠品 滴管<br>实付 7.87<br>比较速算 3.94 &#x2F; 100ml</p>
<p>水草<br>规格 雨裂 无菌杯趴地珍珠 天胡荽 迷你椒草 陶瓷环迷你绿九冠+大叶绿九冠+细叶铁皇冠<br>实付 6.98 + 9.16 + 7.38 + 3.96 + 14.03</p>
<p>收纳盒<br>规格 29 * 9 * 8.5 不规则 * 3<br>实付 14.78<br>单价 4.93</p>
<p>硫磺皂<br>规格 85g * 5<br>实付 8.97<br>单价 1.79</p>
<p>过滤陶瓷环<br>规格 5 斤<br>实付 13.4<br>比较速算 2.68 &#x2F; 斤</p>
<p>鱼药<br>规格 白点 + 甲基兰粉 + 烂鳍烂尾 + 消毒粉 + 蒙眼康 + 肠炎灵 + 土霉素 + 万能鱼药 + 纯日本黄粉 + 体外寄生虫<br>实付 14.38</p>
<p>丝塔芙身体乳<br>规格 550g * 4<br>实付 272.04<br>单价 68.01</p>
<p>白发苔藓<br>规格 15 * 10cm * 5<br>实付 15.39<br>单价 3.08</p>
<p>白云金丝<br>规格 1.5 - 2.5cm * 20<br>实付 17.02<br>单价 0.85</p>
<p>溪流石<br>规格 6-9mm 5 斤<br>实付 6.25<br>单价 1.25<br>比较速算 1.25 &#x2F; 斤</p>
<p>水陆缸<br>规格 20 * 20 * 30 前开门+顶掀盖<br>实付 106.93</p>
<p>卡通酱油碟<br>规格 5<br>实付 9.26<br>单价 1.85</p>
<p>水草剪刀<br>规格 波浪剪 25cm<br>实付 15.4</p>
<p>菲诺厚椰乳<br>规格 1L * 2<br>实付 25.71<br>单价 12.86<br>比较速算 12.86 &#x2F; L</p>
<p>::: warning 合计<br>1004.77<br>:::</p>
<h3 id="待买"><a href="#待买" class="headerlink" title="待买"></a>待买</h3><p>卡分离盒子<br>漱口水<br>折叠桌子<br>麻将键帽<br>过滤器<br>虾屋、繁殖屋<br>辣椒蟹<br>蕨类<br>鱼类<br>底滤板</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[搭建一个Hexo博客并用vercel部署]]></title>
      <url>/2023/05/31/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAHexo%E5%8D%9A%E5%AE%A2%E5%B9%B6%E7%94%A8vercel%E9%83%A8%E7%BD%B2%20(2)/</url>
      <content type="html"><![CDATA[<p>Hexo 是一款基于Node.js的静态博客生成器，具有简单易用、快速高效、丰富主题、插件支持等特点，适合用于个人博客、技术文档、个人网站等场景。而且基于 markdown 编写起来非常顺畅，个人非常喜欢这个博客。这次下定决心搭建一个 Hexo 博客来实现我日常分享的一个小博客网站。</p>
<h5 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h5><ol>
<li>一台 windows 笔记本电脑，当然 mac 电脑也是没问题的，即使 Linux 电脑也是可以的。</li>
<li>Git工具: Git (git-scm.com)</li>
<li>Node+ Npm工具：Node.js (nodejs.org)</li>
<li>准备好 Hexo 博客程序： <a href="https://hexo.io/">https://hexo.io/</a></li>
<li>创建一个 Git 仓库</li>
<li>注册一个 vercel 账号(如果有自己的服务器或者不适用 vercel 可以不用管这一步)：<a href="https://vercel.com/">https://vercel.com/</a></li>
<li>准备一个域名(如果不需要独立域名可以略过这一步)</li>
<li>hexo 本地图片部署</li>
</ol>
<h5 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h5><h6 id="安装-Hexo-工具"><a href="#安装-Hexo-工具" class="headerlink" title="安装 Hexo 工具"></a>安装 Hexo 工具</h6><p>上面的 GIT和 Node在百度或者谷歌上已经有很多相关专业的教程，这里就不详细讲解这块的知识了。一般来说到官网上下载完毕直接下一步下一步即可。我们先来全局安装一个 Hexo 工具</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>


<h6 id="创建-hexo-本地博客程序"><a href="#创建-hexo-本地博客程序" class="headerlink" title="创建 hexo 本地博客程序"></a>创建 hexo 本地博客程序</h6><p>安装完成之后我们就可以使用 hexo 的工具来创建博客了。在电脑上创建一个目录并进入该目录，我起名叫做 javier-blog，刚才我们安装过 Git 工具这时候就派上用场了。在该目录内右键找到 Git Bash Here 点击打开一个 Git的命令行窗口或者你可以使用其他的命令行工具。执行以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo init </span><br><span class="line"></span><br><span class="line"># 下面是在执行上面的命令之后的结果</span><br><span class="line"></span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">INFO  Install dependencies</span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure>


<h6 id="启动-hexo-本地服务"><a href="#启动-hexo-本地服务" class="headerlink" title="启动 hexo 本地服务"></a>启动 hexo 本地服务</h6><p>安装完成 hexo程序直接执行 hexo s 命令就可以打开 hexo 的本地服务。在命令行上会显示启动后的服务地址。</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>


<p><img src="/...%5Cimg%5Cimage-20230530180853849.png" alt="image-20230530180853849"></p>
<p>以上就正式搭建完成 hexo 的博客程序了。</p>
<h5 id="修改博客的基本信息"><a href="#修改博客的基本信息" class="headerlink" title="修改博客的基本信息"></a>修改博客的基本信息</h5><p>修改 博客的标题，副标题，描述，语言时区等信息</p>
<p><img src="/......%5Cimg%5Ccf60858892fa440482540f548322cbfc.png" alt="在这里插入图片描述"></p>
<p>修改博客地址</p>
<p><img src="/...%5Cimg%5C5dce8878e1fd42228974ee532b328a31.png" alt="在这里插入图片描述"></p>
<p>创建 github 仓库<br>打开 <a href="https://github.com/">https://github.com/</a> 创建一个仓库用来存储我们的部署程序,创建后是这个样子的。</p>
<p><img src="/...%5Cimg%5C87e34403497b4e8092b8e234b7d154aa.png" alt="在这里插入图片描述"></p>
<p><img src="/...%5Cimg%5C2dce5d421d4a45ae8b2628b405f00c85.png" alt="在这里插入图片描述"></p>
<h5 id="同步本地-Hexo-部署页面到-github-中"><a href="#同步本地-Hexo-部署页面到-github-中" class="headerlink" title="同步本地 Hexo 部署页面到 github 中"></a>同步本地 Hexo 部署页面到 github 中</h5><h5 id="初始化-git-项目"><a href="#初始化-git-项目" class="headerlink" title="初始化 git 项目"></a>初始化 git 项目</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin https://github.com/runbrick/javier-blog.git</span><br></pre></td></tr></table></figure>


<p>打开本地 **hexo **项目目录并执行下面的命令,用来安装 git 的部署组件</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>安装之后在项目目录中找到<code>**_config.yml **</code>修改 deploy 参数</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy<span class="punctuation">:</span></span><br><span class="line">  type<span class="punctuation">:</span> &#x27;git&#x27;</span><br><span class="line">  repo<span class="punctuation">:</span> &#x27;https<span class="punctuation">:</span><span class="comment">//github.com/runbrick/javier-blog.git&#x27;</span></span><br><span class="line">  branch<span class="punctuation">:</span> &#x27;master&#x27;</span><br></pre></td></tr></table></figure>


<p>执行 <code>hexo g</code> 然后执行 <code>hexo d </code>将静态页面部署到 <strong>github</strong> 上，是这个样子的。</p>
<p><img src="/...%5Cimg%5C1ee6f73b701249a483c8022e90aa6d6d-1685510451300-24.png" alt="在这里插入图片描述"></p>
<h5 id="将项目部署到-vercel-上"><a href="#将项目部署到-vercel-上" class="headerlink" title="将项目部署到 vercel 上"></a>将项目部署到 vercel 上</h5><p>如果不需要部署到 vercel 上此步可以略过</p>
<p>在 **dashboard **上 选择 <strong>Create a New Project</strong></p>
<p><img src="/...%5Cimg%5C54ae8c862963400ea1c2b86c0bec2e79.png" alt="在这里插入图片描述"></p>
<p>在关联的 **github **账户中，找到刚才的博客仓库，选择 import</p>
<p><img src="/...%5Cimg%5C6a5b756f46bb4e3fb46a5d93bb32c5ca.png" alt="在这里插入图片描述"></p>
<p>进入部署页面选择 deploy</p>
<p><img src="/...%5Cimg%5Cd3f01706b7e84ac19d017b12b45cf23b.png" alt="在这里插入图片描述"></p>
<p>生成之后点击 Continue to Dashboard</p>
<p><img src="/...%5Cimg%5C83a40d63337d4c02a6ac9d7d8a336ca6.png" alt="在这里插入图片描述"></p>
<p>点击 Visit 就可以看到刚刚生成的博客程序了</p>
<p><img src="/...%5Cimg%5C73fea79fe1634cf897df435520360cc0.png" alt="在这里插入图片描述"></p>
<p>将项目资源文件放入同一个仓库中<br>在命令行创建一个新的分支并切换过去</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b source</span><br></pre></td></tr></table></figure>


<p>提交代码</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git push origin source</span><br></pre></td></tr></table></figure>

<p>常用命令</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;name&quot;       # 新建文章</span><br><span class="line">hexo new page &quot;name&quot;  # 新建页面</span><br><span class="line">hexo g                # 生成页面</span><br><span class="line">hexo d                # 部署</span><br><span class="line">hexo g -d             # 生成页面并部署</span><br><span class="line">hexo s                # 本地预览</span><br><span class="line">hexo clean            # 清除缓存和已生成的静态文件</span><br><span class="line">hexo help             # 帮助</span><br></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2023/05/30/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[vue 2.6 微网站授权登录方案]]></title>
      <url>/2021/12/06/sicker/vue%20authentication%20upon%20wechat%20official%20account/</url>
      <content type="html"><![CDATA[<h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 访问某个路由</span><br><span class="line">cond1=&gt;condition: 存在 token？</span><br><span class="line">cond2=&gt;condition: 跳转至登录页？</span><br><span class="line">cond3=&gt;condition: 存在白名单？</span><br><span class="line">cond4=&gt;condition: 存在角色？</span><br><span class="line"></span><br><span class="line">operation1=&gt;operation: 直接跳转</span><br><span class="line">operation2=&gt;operation: 跳转至 login 页，并将 path 传参</span><br><span class="line">operation3=&gt;operation: 跳转至首页</span><br><span class="line">operation4=&gt;operation: 获取用户信息，并将写入缓存</span><br><span class="line"></span><br><span class="line">st-&gt;cond1</span><br><span class="line">cond1(yes, right)-&gt;cond2</span><br><span class="line">cond1(no, bottom)-&gt;cond3</span><br><span class="line">cond2(yes, right)-&gt;operation3</span><br><span class="line">cond2(no, bottom)-&gt;cond4</span><br><span class="line">cond3(yes, bottom)-&gt;operation1</span><br><span class="line">cond3(no,left)-&gt;operation2</span><br><span class="line">cond4(yes, bottom)-&gt;operation1</span><br><span class="line">cond4(no, right)-&gt;operation4</span><br></pre></td></tr></table></figure>
<p>::: center<br>路由守卫流程图<br>:::</p>
<h2 id="路由守卫"><a href="#路由守卫" class="headerlink" title="路由守卫"></a>路由守卫</h2><p>在 <code>/src</code> 路径下建立 <code>permission.js</code> ，并在 <code>main.js</code> 中进行引入;</p>
<p>permission.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span> <span class="comment">// 路由，不展开</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span> <span class="comment">// vuex 入口，不展开</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NProgress</span> <span class="keyword">from</span> <span class="string">&#x27;nprogress&#x27;</span> <span class="comment">// progress bar，不展开</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;nprogress/nprogress.css&#x27;</span> <span class="comment">// progress bar style，不展开</span></span><br><span class="line"><span class="keyword">import</span> &#123; getToken &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/auth&#x27;</span> <span class="comment">// get token from cookie，不展开</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">NProgress</span>.<span class="title function_">configure</span>(&#123; <span class="attr">showSpinner</span>: <span class="literal">false</span> &#125;) <span class="comment">// NProgress Configuration</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> whiteList = [<span class="string">&#x27;/login&#x27;</span>, <span class="string">&#x27;/&#x27;</span>] <span class="comment">// no redirect whitelist</span></span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="title function_">async</span>(to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  <span class="comment">// start progress bar</span></span><br><span class="line">  <span class="title class_">NProgress</span>.<span class="title function_">start</span>()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// set page title</span></span><br><span class="line">  <span class="comment">/* 路由发生变化修改页面title */</span></span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">title</span> = to.<span class="property">meta</span>.<span class="property">title</span></span><br><span class="line">    ? to.<span class="property">meta</span>.<span class="property">title</span> + <span class="string">&#x27; - &#x27;</span> + process.<span class="property">env</span>.<span class="property">VUE_APP_SEO_NAME</span> <span class="comment">// 环境变量，不展开</span></span><br><span class="line">    : process.<span class="property">env</span>.<span class="property">VUE_APP_SEO_NAME</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// determine whether the user has logged in</span></span><br><span class="line">  <span class="keyword">const</span> hasToken = <span class="title function_">getToken</span>()</span><br><span class="line">  <span class="keyword">if</span> (hasToken) &#123;</span><br><span class="line">    <span class="keyword">if</span> (to.<span class="property">path</span> === <span class="string">&#x27;/login&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// if is logged in, redirect to the home page</span></span><br><span class="line">      <span class="title function_">next</span>(&#123; <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span> &#125;)</span><br><span class="line">      <span class="title class_">NProgress</span>.<span class="title function_">done</span>() <span class="comment">// hack: https://github.com/PanJiaChen/vue-element-admin/pull/2939</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// const hasRoles = store.getters.roles &amp;&amp; store.getters.roles.length &gt; 0</span></span><br><span class="line">      <span class="keyword">if</span> (store.<span class="property">getters</span>.<span class="property">roles</span>) &#123;</span><br><span class="line">        <span class="title function_">next</span>()</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/getInfo&#x27;</span>)</span><br><span class="line">          <span class="comment">/**</span></span><br><span class="line"><span class="comment">           * <span class="doctag">@TODO</span> VIP 逻辑</span></span><br><span class="line"><span class="comment">           */</span></span><br><span class="line">          <span class="title function_">next</span>(&#123; ...to, <span class="attr">replace</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">          <span class="comment">// remove token and go to login page to re-login</span></span><br><span class="line">          <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/resetToken&#x27;</span>)</span><br><span class="line">          <span class="title function_">next</span>(<span class="string">`/login?redirect=<span class="subst">$&#123;to.path&#125;</span>`</span>)</span><br><span class="line">          <span class="title class_">NProgress</span>.<span class="title function_">done</span>()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">/* has no token*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (whiteList.<span class="title function_">indexOf</span>(to.<span class="property">path</span>) !== -<span class="number">1</span>) &#123;</span><br><span class="line">      <span class="comment">// in the free login whitelist, go directly</span></span><br><span class="line">      <span class="title function_">next</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// other pages that do not have permission to access are redirected to the login page.</span></span><br><span class="line">      <span class="title function_">next</span>(<span class="string">`/login?redirect=<span class="subst">$&#123;to.path&#125;</span>`</span>)</span><br><span class="line">      <span class="title class_">NProgress</span>.<span class="title function_">done</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// finish progress bar</span></span><br><span class="line">  <span class="title class_">NProgress</span>.<span class="title function_">done</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>main.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">..</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./permission&#x27;</span> <span class="comment">// permission control</span></span><br><span class="line">..</span><br></pre></td></tr></table></figure>



<h2 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h2><p>router.js</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">..</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Login</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;微信授权登录&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">..</span><br></pre></td></tr></table></figure>

<p>login.vue</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;Login&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      redirect: undefined,</span><br><span class="line">      code: undefined,</span><br><span class="line">      otherQuery: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    $route: &#123;</span><br><span class="line">      handler: function(route) &#123;</span><br><span class="line">        const query = route.query</span><br><span class="line">        if (query) &#123;</span><br><span class="line">          this.redirect = route.query &amp;&amp; route.query.redirect</span><br><span class="line">          this.code = route.query &amp;&amp; route.query.code</span><br><span class="line">          this.otherQuery = this.getOtherQuery(query)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      immediate: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    if (process.env.NODE_ENV === &#x27;development&#x27;) &#123;</span><br><span class="line">      this.$store.dispatch(&#x27;user/login&#x27;, &#123; code: &#x27;test&#x27; &#125;).then(() =&gt; &#123;</span><br><span class="line">        this.$router.push(&#123; path: this.redirect || &#x27;/&#x27; &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      if (this.code) &#123;</span><br><span class="line">        this.$store.dispatch(&#x27;user/login&#x27;, &#123; code: this.code &#125;).then(() =&gt; &#123;</span><br><span class="line">          this.$router.push(&#123; path: this.redirect || &#x27;/&#x27; &#125;)</span><br><span class="line">          // this.loading = false</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        // const callbackUrl = window.location.origin + window.location.pathname</span><br><span class="line">        const callbackUrl = window.location.href</span><br><span class="line">        this.jump2Auth(callbackUrl)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    jump2Auth(callbackUrl) &#123;</span><br><span class="line">      // this.$api.login.then((r_url) =&gt; &#123;</span><br><span class="line">      const r_url =</span><br><span class="line">      `https://open.weixin.qq.com/connect/oauth2/authorize?&amp;response_type=code&amp;scope=snsapi_userinfo&amp;appid=$&#123;process.env.VUE_APP_API_APPID&#125;&amp;redirect_uri=$&#123;callbackUrl&#125;&amp;state=1111#wechat_redirect`</span><br><span class="line">      window.location.href = r_url</span><br><span class="line"></span><br><span class="line">      // &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    getOtherQuery(query) &#123;</span><br><span class="line">      return Object.keys(query).reduce((acc, cur) =&gt; &#123;</span><br><span class="line">        if ([&#x27;redirect&#x27;, &#x27;code&#x27;].includes(cur)) &#123;</span><br><span class="line">          acc[cur] = query[cur]</span><br><span class="line">        &#125;</span><br><span class="line">        return acc</span><br><span class="line">      &#125;, &#123;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      
        
        <tags>
            
            <tag> vue </tag>
            
            <tag> wechat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我是如何初始化一个 vue 的项目的]]></title>
      <url>/2021/11/22/sicker/how%20do%20I%20initialize%20the%20VUE%20project/</url>
      <content type="html"><![CDATA[<h2 id="风格指南"><a href="#风格指南" class="headerlink" title="风格指南"></a>风格指南</h2><ol>
<li><p>组件名应尽量使用多单词组合，避免撞车关键词<br>如班级学生组件，我将采用 <code>klass-student </code> 而避免使用 <code>class</code> 或者 <code>student</code></p>
</li>
<li><p>prop 使用参数校验</p>
</li>
<li><p>只应该拥有单个活跃实例的组件应该以 The 前缀命名，以示其唯一性。</p>
</li>
<li><p>和父组件紧密耦合的子组件应该以父组件名作为前缀命名。</p>
</li>
<li><p>模板中的组件名大小写<br>使用小写+横线连接的形式如 my-component</p>
</li>
<li><p>JS 、 VUE 文件命名遵循横线连接</p>
</li>
</ol>
<p><a href="https://cn.vuejs.org/v2/style-guide/index.html">官方风格</a></p>
<p><a href="https://panjiachen.github.io/vue-element-admin-site/zh/guide/advanced/style-guide.html">vue-element-admin</a></p>
<h2 id="使用-vue-cli"><a href="#使用-vue-cli" class="headerlink" title="使用 vue-cli"></a>使用 vue-cli</h2><ol>
<li>全局安装组件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure></li>
<li>创建项目<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create hello-world</span><br></pre></td></tr></table></figure></li>
<li>安装组件（自定义，需要逐个安装）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue add eslint [router vuex]</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><ol>
<li><p>继续通过 npm 安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D sass@1.26.2 sass-loader@8.0.2</span><br></pre></td></tr></table></figure></li>
<li><p>建设 scss 公共路径</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> src/assets/scss &amp;&amp; <span class="built_in">touch</span> src/assets/scss/index.scss</span><br></pre></td></tr></table></figure></li>
<li><p>新建 vue.config.js 配置文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> vue.config.js</span><br></pre></td></tr></table></figure></li>
<li><p>键入简单 webpack 初始化配置</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> port = process.<span class="property">env</span>.<span class="property">port</span> || process.<span class="property">env</span>.<span class="property">npm_config_port</span> || <span class="number">8888</span> <span class="comment">// dev port</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">css</span>: &#123;</span><br><span class="line">    <span class="attr">loaderOptions</span>: &#123;</span><br><span class="line">      <span class="attr">scss</span>: &#123;</span><br><span class="line">        <span class="attr">prependData</span>: <span class="string">`@import &quot;@/assets/scss/index.scss&quot;;`</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">port</span>: port,</span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">overlay</span>: &#123;</span><br><span class="line">      <span class="attr">warnings</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">errors</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// before: require(&#x27;./mock/mock-server.js&#x27;)</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">publicPath</span>: <span class="string">&#x27;./&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置代码格式</p>
</li>
</ol>
<ul>
<li>配置 vscode</li>
</ul>
<p>安装 vscode 组件 <code>vetur</code> <code>EditorConfig for VS Code</code> <code>ESLint</code> <code>Prettier - Code formatter</code><br><img src="/../../../images/fd4ffce6d3a2760f704c1863925ceed413b21c715c5eb455418062abda8cbfc7.png" alt="图 1"><br>修改 VSCode setting.json</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭自动保存</span></span><br><span class="line"><span class="string">&quot;files.autoSave&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line"><span class="comment"># 保存时美化文件</span></span><br><span class="line"><span class="string">&quot;editor.formatOnSave&quot;</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="comment"># 窗口缩放等级</span></span><br><span class="line"><span class="string">&quot;window.zoomLevel&quot;</span>: 1,</span><br><span class="line"><span class="comment"># eslint 配置</span></span><br><span class="line"><span class="string">&quot;eslint.validate&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;javascript&quot;</span>,</span><br><span class="line">    <span class="string">&quot;javascriptreact&quot;</span>,</span><br><span class="line">    <span class="string">&quot;html&quot;</span>,</span><br><span class="line">    <span class="string">&quot;vue&quot;</span>,</span><br><span class="line">],</span><br><span class="line"><span class="comment"># 保存时运行</span></span><br><span class="line"><span class="string">&quot;eslint.run&quot;</span>: <span class="string">&quot;onSave&quot;</span>,</span><br><span class="line"><span class="comment"># 保存时自动尝试修复</span></span><br><span class="line"><span class="string">&quot;editor.codeActionsOnSave&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;source.fixAll.eslint&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment"># eslint 包管理</span></span><br><span class="line"><span class="string">&quot;eslint.packageManager&quot;</span>: <span class="string">&quot;yarn&quot;</span>,</span><br><span class="line"><span class="comment"># vetur format 使用单引号、错误级别；</span></span><br><span class="line"><span class="string">&quot;vetur.format.defaultFormatterOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;prettier&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;singleQuote&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;semi&quot;</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;files.associations&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;*.cjson&quot;</span>: <span class="string">&quot;jsonc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;*.wxss&quot;</span>: <span class="string">&quot;css&quot;</span>,</span><br><span class="line">    <span class="string">&quot;*.wxs&quot;</span>: <span class="string">&quot;javascript&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;emmet.includeLanguages&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;wxml&quot;</span>: <span class="string">&quot;html&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment"># VSCode 默认终端</span></span><br><span class="line"><span class="string">&quot;terminal.integrated.profiles.windows&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;Git-Bash&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;path&quot;</span>: <span class="string">&quot;C:\\Program Files\\Git\\bin\\bash.exe&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;terminal.integrated.defaultProfile.windows&quot;</span>: <span class="string">&quot;Git-Bash&quot;</span>,</span><br><span class="line"><span class="comment"># 树形菜单缩进</span></span><br><span class="line"><span class="string">&quot;workbench.tree.indent&quot;</span>: 20</span><br></pre></td></tr></table></figure>
<ul>
<li><p>配置 .editorconfig</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> .editorconfig</span><br></pre></td></tr></table></figure>
<p>键入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://editorconfig.org</span></span><br><span class="line">root = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[*]</span><br><span class="line">charset = utf-8</span><br><span class="line"><span class="comment"># 缩进方式</span></span><br><span class="line">indent_style = space</span><br><span class="line"><span class="comment"># 缩进空格数</span></span><br><span class="line">indent_size = 2</span><br><span class="line"><span class="comment"># 定义换行符</span></span><br><span class="line">end_of_line = lf</span><br><span class="line"><span class="comment"># 文件是否以空白行结尾</span></span><br><span class="line">insert_final_newline = <span class="literal">true</span></span><br><span class="line"><span class="comment"># 是否去处行首行尾的空白字符</span></span><br><span class="line">trim_trailing_whitespace = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[*.md]</span><br><span class="line"><span class="comment"># 保存文件时是否在结尾添加一个新行</span></span><br><span class="line">insert_final_newline = <span class="literal">false</span></span><br><span class="line"><span class="comment"># 在新行之前是否移除所有的空格字符</span></span><br><span class="line">trim_trailing_whitespace = <span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置 elsint</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> .eslintrc.js</span><br></pre></td></tr></table></figure>
<p>键入</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    root: <span class="literal">true</span>,</span><br><span class="line">    parserOptions: &#123;</span><br><span class="line">        parser: <span class="string">&#x27;babel-eslint&#x27;</span>,</span><br><span class="line">        sourceType: <span class="string">&#x27;module&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">env</span>: &#123;</span><br><span class="line">        browser: <span class="literal">true</span>,</span><br><span class="line">        node: <span class="literal">true</span>,</span><br><span class="line">        es6: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    extends: [<span class="string">&#x27;plugin:vue/recommended&#x27;</span>, <span class="string">&#x27;eslint:recommended&#x27;</span>],</span><br><span class="line"></span><br><span class="line">    // add your custom rules here</span><br><span class="line">    //it is base on https://github.com/vuejs/eslint-config-vue</span><br><span class="line">    rules: &#123;</span><br><span class="line">        <span class="string">&quot;vue/max-attributes-per-line&quot;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&quot;singleline&quot;</span>: 10,</span><br><span class="line">            <span class="string">&quot;multiline&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;max&quot;</span>: 1,</span><br><span class="line">                <span class="string">&quot;allowFirstLine&quot;</span>: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&quot;vue/singleline-html-element-content-newline&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">        <span class="string">&quot;vue/multiline-html-element-content-newline&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">        <span class="string">&quot;vue/name-property-casing&quot;</span>: [<span class="string">&quot;error&quot;</span>, <span class="string">&quot;PascalCase&quot;</span>],</span><br><span class="line">        <span class="string">&quot;vue/no-v-html&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;accessor-pairs&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;arrow-spacing&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;before&#x27;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;after&#x27;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;block-spacing&#x27;</span>: [2, <span class="string">&#x27;always&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;brace-style&#x27;</span>: [2, <span class="string">&#x27;1tbs&#x27;</span>, &#123;</span><br><span class="line">            <span class="string">&#x27;allowSingleLine&#x27;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;camelcase&#x27;</span>: [0, &#123;</span><br><span class="line">            <span class="string">&#x27;properties&#x27;</span>: <span class="string">&#x27;always&#x27;</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;comma-dangle&#x27;</span>: [2, <span class="string">&#x27;never&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;comma-spacing&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;before&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&#x27;after&#x27;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;comma-style&#x27;</span>: [2, <span class="string">&#x27;last&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;constructor-super&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;curly&#x27;</span>: [2, <span class="string">&#x27;multi-line&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;dot-location&#x27;</span>: [2, <span class="string">&#x27;property&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;eol-last&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;eqeqeq&#x27;</span>: [<span class="string">&quot;error&quot;</span>, <span class="string">&quot;always&quot;</span>, &#123; <span class="string">&quot;null&quot;</span>: <span class="string">&quot;ignore&quot;</span> &#125;],</span><br><span class="line">        <span class="string">&#x27;generator-star-spacing&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;before&#x27;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;after&#x27;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;handle-callback-err&#x27;</span>: [2, <span class="string">&#x27;^(err|error)$&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;indent&#x27;</span>: [2, 2, &#123;</span><br><span class="line">            <span class="string">&#x27;SwitchCase&#x27;</span>: 1</span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;jsx-quotes&#x27;</span>: [2, <span class="string">&#x27;prefer-single&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;key-spacing&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;beforeColon&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&#x27;afterColon&#x27;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;keyword-spacing&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;before&#x27;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;after&#x27;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;new-cap&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;newIsCap&#x27;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;capIsNew&#x27;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;new-parens&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-array-constructor&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-caller&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-console&#x27;</span>: <span class="string">&#x27;off&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;no-class-assign&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-cond-assign&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-const-assign&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-control-regex&#x27;</span>: 0,</span><br><span class="line">        <span class="string">&#x27;no-delete-var&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-dupe-args&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-dupe-class-members&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-dupe-keys&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-duplicate-case&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-empty-character-class&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-empty-pattern&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-eval&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-ex-assign&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-extend-native&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-extra-bind&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-extra-boolean-cast&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-extra-parens&#x27;</span>: [2, <span class="string">&#x27;functions&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;no-fallthrough&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-floating-decimal&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-func-assign&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-implied-eval&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-inner-declarations&#x27;</span>: [2, <span class="string">&#x27;functions&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;no-invalid-regexp&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-irregular-whitespace&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-iterator&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-label-var&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-labels&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;allowLoop&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&#x27;allowSwitch&#x27;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;no-lone-blocks&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-mixed-spaces-and-tabs&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-multi-spaces&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-multi-str&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-multiple-empty-lines&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;max&#x27;</span>: 1</span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;no-native-reassign&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-negated-in-lhs&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-new-object&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-new-require&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-new-symbol&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-new-wrappers&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-obj-calls&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-octal&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-octal-escape&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-path-concat&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-proto&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-redeclare&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-regex-spaces&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-return-assign&#x27;</span>: [2, <span class="string">&#x27;except-parens&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;no-self-assign&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-self-compare&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-sequences&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-shadow-restricted-names&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-spaced-func&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-sparse-arrays&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-this-before-super&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-throw-literal&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-trailing-spaces&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-undef&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-undef-init&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-unexpected-multiline&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-unmodified-loop-condition&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-unneeded-ternary&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;defaultAssignment&#x27;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;no-unreachable&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-unsafe-finally&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-unused-vars&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;vars&#x27;</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;args&#x27;</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;no-useless-call&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-useless-computed-key&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-useless-constructor&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-useless-escape&#x27;</span>: 0,</span><br><span class="line">        <span class="string">&#x27;no-whitespace-before-property&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-with&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;one-var&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;initialized&#x27;</span>: <span class="string">&#x27;never&#x27;</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;operator-linebreak&#x27;</span>: [2, <span class="string">&#x27;after&#x27;</span>, &#123;</span><br><span class="line">            <span class="string">&#x27;overrides&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;?&#x27;</span>: <span class="string">&#x27;before&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;:&#x27;</span>: <span class="string">&#x27;before&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;padded-blocks&#x27;</span>: [2, <span class="string">&#x27;never&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;quotes&#x27;</span>: [2, <span class="string">&#x27;single&#x27;</span>, &#123;</span><br><span class="line">            <span class="string">&#x27;avoidEscape&#x27;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;allowTemplateLiterals&#x27;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;semi&#x27;</span>: [2, <span class="string">&#x27;never&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;semi-spacing&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;before&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&#x27;after&#x27;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;space-before-blocks&#x27;</span>: [2, <span class="string">&#x27;always&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;space-before-function-paren&#x27;</span>: [2, <span class="string">&#x27;never&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;space-in-parens&#x27;</span>: [2, <span class="string">&#x27;never&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;space-infix-ops&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;space-unary-ops&#x27;</span>: [2, &#123;</span><br><span class="line">            <span class="string">&#x27;words&#x27;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;nonwords&#x27;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;spaced-comment&#x27;</span>: [2, <span class="string">&#x27;always&#x27;</span>, &#123;</span><br><span class="line">            <span class="string">&#x27;markers&#x27;</span>: [<span class="string">&#x27;global&#x27;</span>, <span class="string">&#x27;globals&#x27;</span>, <span class="string">&#x27;eslint&#x27;</span>, <span class="string">&#x27;eslint-disable&#x27;</span>, <span class="string">&#x27;*package&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;,&#x27;</span>]</span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;template-curly-spacing&#x27;</span>: [2, <span class="string">&#x27;never&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;use-isnan&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;valid-typeof&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;wrap-iife&#x27;</span>: [2, <span class="string">&#x27;any&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;yield-star-spacing&#x27;</span>: [2, <span class="string">&#x27;both&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;yoda&#x27;</span>: [2, <span class="string">&#x27;never&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;prefer-const&#x27;</span>: 2,</span><br><span class="line">        <span class="string">&#x27;no-debugger&#x27;</span>: process.env.NODE_ENV === <span class="string">&#x27;production&#x27;</span> ? 2 : 0,</span><br><span class="line">        <span class="string">&#x27;object-curly-spacing&#x27;</span>: [2, <span class="string">&#x27;always&#x27;</span>, &#123;</span><br><span class="line">            objectsInObjects: <span class="literal">false</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&#x27;array-bracket-spacing&#x27;</span>: [2, <span class="string">&#x27;never&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> .eslintignore</span><br></pre></td></tr></table></figure>
<p>键入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">build/*.js</span><br><span class="line">src/assets</span><br><span class="line">public</span><br><span class="line">dist</span><br></pre></td></tr></table></figure>

<ul>
<li>配置 git 代码忽略<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> .gitignore</span><br></pre></td></tr></table></figure>
键入</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">node_modules/</span><br><span class="line">dist/</span><br><span class="line">npm-debug.log*</span><br><span class="line">yarn-debug.log*</span><br><span class="line">yarn-error.log*</span><br><span class="line">**/*.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">tests/**/coverage/</span><br><span class="line">tests/e2e/reports</span><br><span class="line">selenium-debug.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># Editor directories and files</span></span><br><span class="line">.idea</span><br><span class="line">.vscode</span><br><span class="line">*.suo</span><br><span class="line">*.ntvs*</span><br><span class="line">*.njsproj</span><br><span class="line">*.sln</span><br><span class="line">*.<span class="built_in">local</span></span><br><span class="line"></span><br><span class="line">package-lock.json</span><br><span class="line">yarn.lock</span><br></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在 ubuntu 上安装 docker 和 docker-compose]]></title>
      <url>/2021/08/25/sicker/how%20to%20install%20docker%20&amp;%20docker-compose%20on%20ubuntu/</url>
      <content type="html"><![CDATA[<blockquote>
<p>在 ubuntu 上安装 docker 和 docker-compose ，经常会用到，但一直没有编排好；这次作一个记录；</p>
</blockquote>
<ol>
<li>升级 apt</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>卸载 <code>docker</code> （如果有）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>更新依赖</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg \</span><br><span class="line">    lsb-release</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>添加Docker官方的GPG密钥：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>Docker存储库添加到APT源命令：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>安装 docker</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>

<p>:::tip<br>可以通过 <code>docker -v</code> 验证是否安装成功！<br>:::</p>
<ol start="7">
<li><p>启动 <code>docker</code> 服务</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl start docker</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过 <a href="https://github.com/docker/compose/releases">github</a> 上的发行版列表，找到自己喜欢的版本，并记录下 版本号</p>
</li>
</ol>
<p><img src="/../../../images/32d4abaae4a357af1e0038539a702d05289c78713899531d04968d10c3c1e117.png" alt="图 1">  </p>
<ol start="7">
<li>下载 <code>docker-compose</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></li>
</ol>
<p>:::tip<br>简单解释下命令：下载 <code>docker-compose-Linux-x86_64</code> 文件，并保存到 <code>/usr/local/bin/</code> 路径下，并重命名为 <code>docker-compose</code><br>:::</p>
<p><img src="/../../../images/5f36277084a04b548cddfbb455cf75561ee53332c65b123cd18e622a23afd31b.png" alt="图 2">  </p>
<ol start="8">
<li>为 <code>docker-compose</code> 授权执行权限</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<ol start="9">
<li>验证安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose version</span><br></pre></td></tr></table></figure></li>
</ol>
<hr>
<p>问题一览</p>
<ol>
<li>GPG报错<br>GPG error: <a href="https://download.docker.com/linux/ubuntu">https://download.docker.com/linux/ubuntu</a> bionic InRelease: The following signatures couldn’t be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8</li>
</ol>
<p>解决方案：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys　425956BB3E31DF51</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>查看cpu架构</li>
</ol>
<p>解决方案：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ lscpu</span><br><span class="line">Architecture:          x86_64  <span class="comment">##cpu架构</span></span><br></pre></td></tr></table></figure>

<hr>
<p>参考一览</p>
<p><a href="https://www.cnblogs.com/wuzm/p/11357894.html">linux下如何查看服务器的硬件配置信息</a></p>
<p><a href="https://www.cnblogs.com/yikoulinux/p/14401487.html">apt 和 apt-get 之间有什么区别？</a></p>
]]></content>
      
        
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[前端批量导出canvas方案]]></title>
      <url>/2021/06/30/sicker/frontend%20batch%20export%20canvas/</url>
      <content type="html"><![CDATA[<blockquote>
<p>在后台的时候，经常学会遇到批量导出的场景；通常我们可以交由后端去处理，然而最近在开发中遇到了需要绘制 canvas 后再导出的场景；</p>
</blockquote>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>面对这样的需求，提出了以下几个方案：</p>
<p><strong>方案一</strong>：后端绘制 canvas ，前端获取后端返回文件地址数组，然后遍历下载；</p>
<p><strong>方案二</strong>：后端绘制 canvas ，接着对文件进行打包压缩处理，然后前端下载一个压缩文件；</p>
<p><strong>方案三</strong>：后端绘制 canvas ，前端获取后端返回文件地址数组，然后遍历下载，接着前端来进行打包压缩处理。</p>
<p><strong>方案四</strong>：前端绘制 canvas ，然后遍历下载。</p>
<p><strong>方案五</strong>：前端绘制 canvas ，接着前端来进行打包压缩处理。</p>
<h2 id="方案简单分析"><a href="#方案简单分析" class="headerlink" title="方案简单分析"></a>方案简单分析</h2><p><img src="/../../../images/94b408a976b3d6440ab6686bf397590940a1e719264d1fb18098fc9324aa1d30.gif" alt="图 1">  </p>
<p>从图片可以看出，直接进行批量下载，非常的难看；所以，未经打包压缩直接下载，显然不够优雅，方案一、方案四 out。</p>
<p>而后端绘制 canvas ，又不够灵活，方案二、方案三也宣布 out。</p>
<p>剩下的便是方案五了；下面就让我们一起看看如何实现吧。</p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>这就要请出本期的嘉宾 <code>JSZip</code> 和 <code>FileSaver.js</code> 了。</p>
<p>JSZip： 大家好，我是 JSZip， 是一个 javascript 库，用于创建、读取和编辑 .zip 文件，带有一个可爱而简单的API。这是我的<a href="https://stuk.github.io/jszip/">简历</a>。请大家多多喜欢我。</p>
<p>FileSaver.js：好啊，我是 FileSaver，是一个在客户端保存文件的解决方案,适用 web 应用程序在客户端生成文件哦~ <a href="https://github.com/eligrey/FileSaver.js">康康我</a></p>
<p>最后，还有我们的特殊嘉宾 <code>qrcode</code> ！</p>
<p>qrcode：很高兴见到大家，我是 qrcode ，我的本领是生成二维码并保存成各种格式，可以在服务器和客户端运行呢。<a href="https://github.com/soldair/node-qrcode">我在这</a></p>
<hr>
<p>接下去，就让我们步入正题吧！让各位嘉宾与选手拿出他们的真本事。</p>
<p>只见， <code>canvas</code> 第一个站了出来，随着她的出现，编辑器上慢慢浮现出；</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;CANVAS&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">canvas.<span class="property">height</span> = <span class="number">120</span>;</span><br><span class="line">canvas.<span class="property">width</span> = <span class="number">300</span>;</span><br><span class="line">ctx.<span class="property">fillStyle</span> = <span class="string">&quot;white&quot;</span>;</span><br><span class="line">ctx.<span class="title function_">fillRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">120</span>);</span><br><span class="line">ctx.<span class="property">font</span> = <span class="string">&quot;16px 微软雅黑&quot;</span>;</span><br><span class="line">ctx.<span class="property">fillStyle</span> = <span class="string">&quot;red&quot;</span>;</span><br><span class="line">ctx.<span class="title function_">fillText</span>(<span class="string">`name ：sicker`</span>, <span class="number">130</span>, <span class="number">20</span>);</span><br><span class="line">ctx.<span class="title function_">fillText</span>(<span class="string">`number ：1024`</span>, <span class="number">130</span>, <span class="number">45</span>);</span><br><span class="line">ctx.<span class="title function_">fillText</span>(<span class="string">`fen ：200`</span>, <span class="number">130</span>, <span class="number">70</span>);</span><br><span class="line">ctx.<span class="property">fillStyle</span> = <span class="string">&quot;black&quot;</span>;</span><br><span class="line">ctx.<span class="title function_">fillText</span>(<span class="string">`一个没啥用的demo`</span>, <span class="number">130</span>, <span class="number">110</span>);</span><br><span class="line"><span class="keyword">let</span> base64 = canvas.<span class="title function_">toDataURL</span>(<span class="string">&quot;image/png&quot;</span>);</span><br></pre></td></tr></table></figure>
<p><img src="/../../../images/f569d0f44fe57724f272bcb5fc2b8dadd0f36432e2e00f54ee06569586529e19.png" alt="图 2">  </p>
<p>漂亮，我们的 <code>canvas</code> 选手，兔起鹘落间，已经在浏览器上画上了一个绝美的图卷；</p>
<p>然后，一旁的数据一看，就不满的叫嚷起来，「哼，没有我，终究是个死物」。</p>
<p><code>data</code> 选手，手一挥，编辑器上就留下了一排数据；</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">imgData</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;sicker&quot;</span>,</span><br><span class="line">        <span class="attr">number</span>: <span class="number">1024</span>,</span><br><span class="line">        <span class="attr">fen</span>: <span class="number">200</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;linvkey&quot;</span>,</span><br><span class="line">        <span class="attr">number</span>: <span class="number">123</span>,</span><br><span class="line">        <span class="attr">fen</span>: <span class="number">123</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;XBlack&quot;</span>,</span><br><span class="line">        <span class="attr">number</span>: <span class="number">520</span>,</span><br><span class="line">        <span class="attr">fen</span>: -<span class="number">52</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p><code>forEach</code> 见自己心水的 <code>canvas</code> 面露难色，忙站了出来，他说：「遍历的事情就交给我吧」。</p>
<p>说话间，只见编辑器上刷刷出现了数行代码。不一会儿与 <code>canvas</code> 相得益彰。真不愧是老牌的选手了。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;CANVAS&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">imgData</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  canvas.<span class="property">height</span> = <span class="number">120</span>;</span><br><span class="line">  canvas.<span class="property">width</span> = <span class="number">300</span>;</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;white&quot;</span>;</span><br><span class="line">  ctx.<span class="title function_">fillRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">120</span>);</span><br><span class="line">  ctx.<span class="property">font</span> = <span class="string">&quot;16px 微软雅黑&quot;</span>;</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;red&quot;</span>;</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`name ：<span class="subst">$&#123;e.name&#125;</span>`</span>, <span class="number">130</span>, <span class="number">20</span>);</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`number ：<span class="subst">$&#123;e.number&#125;</span>`</span>, <span class="number">130</span>, <span class="number">45</span>);</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`fen ：<span class="subst">$&#123;e.fen&#125;</span>`</span>, <span class="number">130</span>, <span class="number">70</span>);</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;black&quot;</span>;</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`一个没啥用的demo`</span>, <span class="number">130</span>, <span class="number">110</span>);</span><br><span class="line">  <span class="keyword">let</span> base64 = canvas.<span class="title function_">toDataURL</span>(<span class="string">&quot;image/png&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>果然， <code>data</code> 一看，竟是如此和谐，一时无话可说。只得退下；</p>
<p>然而文无第一，武无第二。这一对狗男女的配合虽然紧密无间，但是，终究无法折服所有人。</p>
<p>早已站在一侧的老牌强旅 <code>image</code> 悠悠然走上一步，道：「妙则妙矣，然任你多么精妙，还不是要依赖于我 image」。她指着 <code>let base64 = canvas.toDataURL(&quot;image/png&quot;);</code> ,缓缓将狗男女的弱点道了出来，紧接着，娇手一挥。编辑器也随着改变。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;CANVAS&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">imgData</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  canvas.<span class="property">height</span> = <span class="number">120</span>;</span><br><span class="line">  canvas.<span class="property">width</span> = <span class="number">300</span>;</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;white&quot;</span>;</span><br><span class="line">  ctx.<span class="title function_">fillRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">120</span>);</span><br><span class="line">  ctx.<span class="property">font</span> = <span class="string">&quot;16px 微软雅黑&quot;</span>;</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;red&quot;</span>;</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`name ：<span class="subst">$&#123;e.name&#125;</span>`</span>, <span class="number">130</span>, <span class="number">20</span>);</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`number ：<span class="subst">$&#123;e.number&#125;</span>`</span>, <span class="number">130</span>, <span class="number">45</span>);</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`fen ：<span class="subst">$&#123;e.fen&#125;</span>`</span>, <span class="number">130</span>, <span class="number">70</span>);</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;black&quot;</span>;</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`一个没啥用的demo`</span>, <span class="number">130</span>, <span class="number">110</span>);</span><br><span class="line">  <span class="keyword">let</span> base64 = canvas.<span class="title function_">toDataURL</span>(<span class="string">&quot;image/png&quot;</span>);</span><br><span class="line">  <span class="keyword">let</span> image = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">  image.<span class="property">src</span> = base64;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(image);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>「好好好」，却没想到，这次出来的竟是我们的嘉宾 3 人组。编辑器又是刷的一变。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> zip = <span class="keyword">new</span> <span class="title class_">JSZip</span>();</span><br><span class="line"><span class="keyword">let</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;CANVAS&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> qrcodeCanvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;CANVAS&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">imgData</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  canvas.<span class="property">height</span> = <span class="number">120</span>;</span><br><span class="line">  canvas.<span class="property">width</span> = <span class="number">300</span>;</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;white&quot;</span>;</span><br><span class="line">  ctx.<span class="title function_">fillRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">120</span>);</span><br><span class="line">  <span class="comment">// 绘制二维码</span></span><br><span class="line">  <span class="title class_">QRCode</span>.<span class="title function_">toCanvas</span>(</span><br><span class="line">    qrcodeCanvas,</span><br><span class="line">    <span class="string">`&#123;&quot;name&quot;:&quot;<span class="subst">$&#123;e.name&#125;</span>&quot;&#125;`</span>,</span><br><span class="line">    &#123; <span class="attr">width</span>: <span class="number">100</span>, <span class="attr">margin</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line">  <span class="comment">// 将二维码 canvas 画布 绘入新的画布</span></span><br><span class="line">  ctx.<span class="title function_">drawImage</span>(qrcodeCanvas, <span class="number">10</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">  ctx.<span class="property">font</span> = <span class="string">&quot;16px 微软雅黑&quot;</span>;</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;red&quot;</span>;</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`name ：<span class="subst">$&#123;e.name&#125;</span>`</span>, <span class="number">130</span>, <span class="number">20</span>);</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`number ：<span class="subst">$&#123;e.number&#125;</span>`</span>, <span class="number">130</span>, <span class="number">45</span>);</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`fen ：<span class="subst">$&#123;e.fen&#125;</span>`</span>, <span class="number">130</span>, <span class="number">70</span>);</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;black&quot;</span>;</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(<span class="string">`一个没啥用的demo`</span>, <span class="number">130</span>, <span class="number">110</span>);</span><br><span class="line">  <span class="keyword">let</span> base64 = canvas.<span class="title function_">toDataURL</span>(<span class="string">&quot;image/png&quot;</span>);</span><br><span class="line">  <span class="keyword">let</span> image = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">  image.<span class="property">src</span> = base64;</span><br><span class="line">  base64 = base64.<span class="title function_">replace</span>(<span class="regexp">/^data:image\/(png|jpg);base64,/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(image);</span><br><span class="line">  <span class="comment">// 将生成的 base64 对象置入 zip 对象中</span></span><br><span class="line">  zip.<span class="title function_">file</span>(<span class="string">`<span class="subst">$&#123;e.name&#125;</span>.png`</span>, base64, &#123; <span class="attr">base64</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 生成 zip 并打包为 example.zip</span></span><br><span class="line">zip.<span class="title function_">generateAsync</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;blob&quot;</span> &#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">content</span>) &#123;</span><br><span class="line">  <span class="title function_">saveAs</span>(content, <span class="string">&quot;example.zip&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>「一时技痒，献丑献丑！」</p>
<p>这一下，众人再也没有下场显圣之心，本场大赛风头最盛的竟是嘉宾三人组。众人悻悻然对冠军失去了兴趣；</p>
<p>最后由塞卡，订下这次赛事的主基调</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">batchDownload()</span><br></pre></td></tr></table></figure>

<p>嘉宾们也兴致很高的留下了签名</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">JSZip</span> <span class="keyword">from</span> <span class="string">&quot;jszip&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">QRCode</span> <span class="keyword">from</span> <span class="string">&quot;qrcode&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; saveAs &#125; <span class="keyword">from</span> <span class="string">&quot;file-saver&quot;</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/../../../images/2.gif" alt="图 3"></p>
]]></content>
      
        
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在 centos 上安装 docker 和 docker-compose]]></title>
      <url>/2021/06/16/sicker/how%20to%20install%20docker%20&amp;%20docker-compose%20on%20centos/</url>
      <content type="html"><![CDATA[<blockquote>
<p>在 centos 上安装 docker 和 docker-compose ，经常会用到，但一直没有编排好；这次作一个记录；</p>
</blockquote>
<ol>
<li><p>配置阿里源</p>
<p>登陆阿里云，然后访问： <a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">阿里容器加速</a> 按照官方提供的文档进行操作即可</p>
</li>
<li><p>安装 <code>yum-utils</code> 包</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install -y yum-utils</span><br></pre></td></tr></table></figure></li>
<li><p>配置 <code>yum</code> ，新增源</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>
<p>速度不理想的解决方案</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></li>
<li><p>一键安装 <code>docker</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure></li>
</ol>
<p>:::tip<br>可以通过 <code>docker -v</code> 验证是否安装成功！<br>:::</p>
<ol start="5">
<li><p>启动 <code>docker</code> 服务</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl start docker</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过 <a href="https://github.com/docker/compose/releases">github</a> 上的发行版列表，找到自己喜欢的版本，并记录下 版本号</p>
</li>
</ol>
<p><img src="/../../../images/32d4abaae4a357af1e0038539a702d05289c78713899531d04968d10c3c1e117.png" alt="图 1">  </p>
<ol start="7">
<li>下载 <code>docker-compose</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></li>
</ol>
<p>:::tip<br>简单解释下命令：下载 <code>docker-compose-Linux-x86_64</code> 文件，并保存到 <code>/usr/local/bin/</code> 路径下，并重命名为 <code>docker-compose</code><br>:::</p>
<p><img src="/../../../images/5f36277084a04b548cddfbb455cf75561ee53332c65b123cd18e622a23afd31b.png" alt="图 2">  </p>
<p>docker-compose 下载不动解决方案</p>
<p><a href="https://gitee.com/mirrors/docker-compose">gitee</a> 下载后上传该文件即可</p>
<ol start="8">
<li>为 <code>docker-compose</code> 授权执行权限</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<ol start="9">
<li>验证安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose version</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Zentao在Windows中安装部署]]></title>
      <url>/2021/05/26/XBlack/zentao%20deploy/</url>
      <content type="html"><![CDATA[<h2 id="一、下载"><a href="#一、下载" class="headerlink" title="一、下载"></a>一、下载</h2><p><a href="https://www.zentao.net/">zandao官网</a>,可以根据自己的的需求来下载对应的版本（不同版本Zentao也有官方文档）</p>
<p><img src="/./../../img/ZenTao/image-20210524153303665.png" alt="image-20210524153303665"></p>
<p>应为是自己使用，所以就用<font color = red ><strong>开源版12.5.3</strong></font>,点击后界面跳转至，找到下载地址后根据自己的需求来确定下载的软件需求，根据提示信息将软件保存至目标位置</p>
<p><img src="/./../../img/ZenTao/image-20210524154901790.png" alt="image-20210524154901790"></p>
<h2 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h2><p>双击刚刚下载的软件<img src="/./../../img/ZenTao/image-20210524162325341.png" alt="image-20210524162325341">，</p>
<p>根据提示选择软件保存的路径可以选择默认路径：<img src="/./../../img/ZenTao/image-20210524162911282.png" alt="image-20210524162911282"></p>
<p>也可以根据自己的要求来选择安装路径，点击“Extract”,进行下一步（如图所示），在此期间不要点击任何按钮直至安装完成</p>
<p><img src="/./../../img/ZenTao/image-20210524163358783.png" alt="image-20210524163358783"></p>
<h2 id="三、启动"><a href="#三、启动" class="headerlink" title="三、启动"></a>三、启动</h2><p>根据自己安装的路径找找到软件的安装包（D:\Software\ZenTao\xampp）这个是我自己的安装路径</p>
<p><img src="/./../../img/ZenTao/image-20210524163947809.png" alt="image-20210524163947809"></p>
<p>点击“start.exe”打开，弹出禅道的运行环境，点击“启动禅道“（使应为首次使用的原因，自身要安装一些环境）</p>
<p><img src="/./../../img/ZenTao/image-20210524164227561.png" alt="image-20210524164227561"></p>
<p>环境安装完成后，系统会提示你修改数据库密码，你也可以不选择修改（密码比较复杂，你会记不住的）</p>
<p><img src="/./../../img/ZenTao/image-20210524164809594.png" alt="image-20210524164809594"></p>
<p><strong>Apache用户访问验证：</strong></p>
<p>禅道启动后，默认是开启了Apache用户访问验证 ，如下图：</p>
<ul>
<li>如果不想开启访问验证功能，可以把 <strong>集成面板最后一行左侧</strong>的对号去掉</li>
<li>启用访问验证后，用户需要先输入集成面板最后一行的帐号密码（此帐号密码需要提供给所有禅道登录人员）才可以访问到禅道登录页面（登录页面需要输入禅道的登录帐号方可登录，默认登录禅道帐号：admin 密码：123456）</li>
<li>如果需要修改Apache用户访问验证的账号和密码，可以在运行集成面板 <strong>最后一行的“更改”按钮</strong> 进行修改</li>
</ul>
<p><img src="/./../../img/ZenTao/image-20210526130842593.png" alt="image-20210526130842593"></p>
<p>点击“访问禅道”，首次进入时（如下图所示），重新修改密码</p>
<p><img src="/./../../img/ZenTao/image-20210526131050384.png" alt="image-20210526131050384"></p>
<p>修改密码完成后，点击“保存”，（流程可以随便选择）</p>
<p><img src="/./../../img/ZenTao/image-20210526131845676.png" alt="image-20210526131845676"></p>
<p>点击“保存“后就进入禅道系统首页，这里就部署完成了，结下来就可以新建项目操作了</p>
<p><img src="/./../../img/ZenTao/image-20210526132212545.png" alt="image-20210526132212545"></p>
<p>备注：</p>
<p>点击：“数据库管理”</p>
<p><img src="/./../../img/ZenTao/image-20210524170538126.png" alt="image-20210524170538126"></p>
<p>页面跳转至数据库页面：并输入该开始时修改的数据库密码</p>
<p><img src="/./../../img/ZenTao/image-20210524170627458.png" alt="image-20210524170627458"></p>
<p>在登录页面填写 <strong>xampp&#x2F;zentao&#x2F;config&#x2F;my.php</strong> 里的对应参数，即可进入禅道数据库</p>
<p><strong>系   统</strong>：默认选择MySQL</p>
<p><strong>服务器</strong>：对应填写下图的$config-&gt;db -&gt;host和port的参数（比如下图 $config-&gt;db -&gt;host &#x3D; ‘127.0.0.1’， $config-&gt;db -&gt;port &#x3D; ‘3306’。那么服务器填写：127.0.0.1:3306）</p>
<p><strong>用户名</strong>：对应填写下图的 $config-&gt;db -&gt;user &#x3D; ‘zentao’ 。那么用户名就应该填写zentao</p>
<p><strong>密   码</strong>：对应填写下图的 $config-&gt;db -&gt;password &#x3D; ‘ ‘，中单引号里的值。（每个人的数据库密码会不一样，单引号里显示的值是什么，密码就填写什么）</p>
<p><strong>数据库</strong>：对应填写下图的 $config-&gt;db -&gt;name &#x3D; ‘zentao ‘ 中的zentao </p>
<p><img src="/./../../img/ZenTao/image-20210526114232121.png" alt="image-20210526114232121"></p>
]]></content>
      
        
        <tags>
            
            <tag> ZenTao </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[github提交流程]]></title>
      <url>/2021/05/26/sunyifang/gitFlow/</url>
      <content type="html"><![CDATA[<h3 id="进入git首页"><a href="#进入git首页" class="headerlink" title="进入git首页"></a>进入git首页</h3><p>点击fork复制一份代码到自己的线上库<br><img src="https://img-blog.csdnimg.cn/20210526152520208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="点击进入该项目fork地址（就是这个位置）"><a href="#点击进入该项目fork地址（就是这个位置）" class="headerlink" title="点击进入该项目fork地址（就是这个位置）"></a>点击进入该项目fork地址（就是这个位置）</h3><p><img src="https://img-blog.csdnimg.cn/20210526152811903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="克隆代码到本地"><a href="#克隆代码到本地" class="headerlink" title="克隆代码到本地"></a>克隆代码到本地</h3><p>在本地你可以自己随便搞 分支、开发、合并<br><img src="https://img-blog.csdnimg.cn/20210526152842881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="开发结束后优先拉取远端代码本地合并（若没有冲突下一步）"><a href="#开发结束后优先拉取远端代码本地合并（若没有冲突下一步）" class="headerlink" title="开发结束后优先拉取远端代码本地合并（若没有冲突下一步）"></a>开发结束后优先拉取远端代码本地合并（若没有冲突下一步）</h3><h3 id="开发结束后点击这里和并请求"><a href="#开发结束后点击这里和并请求" class="headerlink" title="开发结束后点击这里和并请求"></a>开发结束后点击这里和并请求</h3><p><img src="https://img-blog.csdnimg.cn/20210526153300687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="点击创建新的合并"><a href="#点击创建新的合并" class="headerlink" title="点击创建新的合并"></a>点击创建新的合并</h3><p>左侧为待合并、右侧为合并<br><img src="https://img-blog.csdnimg.cn/20210526153354737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="选择复核人员"><a href="#选择复核人员" class="headerlink" title="选择复核人员"></a>选择复核人员</h3><p><img src="https://img-blog.csdnimg.cn/20210526153556463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>待合并&#x2F;合并</p>
]]></content>
      
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JSON.parse方法是如何工作的？]]></title>
      <url>/2021/05/20/sicker/how%20does%20json%20parse%20work/</url>
      <content type="html"><![CDATA[<blockquote>
<p>JSON.parse 方法一直以为一直就这么用了，大致也知道它对于字符串格式比较严格，即便有时候可以通过编译器解释器，但是却若非标准 json 格式就无法转成 object。这次也因为后端一个奇怪的返回，我决定好好搞懂它。</p>
</blockquote>
<h2 id="代码验证"><a href="#代码验证" class="headerlink" title="代码验证"></a>代码验证</h2><p>首先，依据是老规矩，代码验证，因为后端返回的三种格式分别如下：</p>
<ul>
<li>‘[“sdalkjald”]’</li>
<li>‘{“attachment”:”请上传开发自测报告”}’</li>
<li>“服务器错误”</li>
</ul>
<p>于是，为了能兼容 3 者，我作了如下方法进行处理，</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;[&quot;sdalkjald&quot;]&#x27;</span>,</span><br><span class="line">    b = <span class="string">&#x27;&#123;&quot;attachment&quot;:&quot;请上传开发自测报告&quot;&#125;&#x27;</span>,</span><br><span class="line">    c = <span class="string">&quot;服务器错误&quot;</span>,</span><br><span class="line">    p = <span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(e);</span><br><span class="line">            <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj)) &#123;</span><br><span class="line">                <span class="keyword">return</span> obj[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> obj == <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`&quot;<span class="subst">$&#123;e&#125;</span>&quot;为正常 json 对象`</span>);</span><br><span class="line">                <span class="keyword">return</span> obj;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`&quot;<span class="subst">$&#123;e&#125;</span>&quot;无法被解析`</span>);</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title function_">h</span>(a));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title function_">h</span>(b));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title function_">h</span>(c));</span><br></pre></td></tr></table></figure>
<p>执行结果：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;[&quot;</span>sdalkjald<span class="string">&quot;]&quot;</span>解析为数组</span><br><span class="line">string</span><br><span class="line"><span class="string">&quot;&#123;&quot;</span>attachment<span class="string">&quot;:&quot;</span>请上传开发自测报告<span class="string">&quot;&#125;&quot;</span>解析为对象</span><br><span class="line">object</span><br><span class="line"><span class="string">&quot;服务器错误&quot;</span>无法被解析</span><br><span class="line">string</span><br></pre></td></tr></table></figure>
<p>一切似乎都在预期内，但是我总感觉，事情没这么简单。</p>
<p>本着折腾本腾的使命感，我打算继续塞些奇奇怪怪的参数进去跑一跑，为了方便测试，我对上述代码进行了改造</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> testArr = [</span><br><span class="line">    <span class="string">&#x27;[&quot;hello&quot;]&#x27;</span>,</span><br><span class="line">    [<span class="string">&quot;hello&quot;</span>],</span><br><span class="line">    <span class="string">&#x27;&#123;&quot;attachment&quot;:&quot;请上传开发自测报告&quot;&#125;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&#123;&quot;attachment&quot;:&quot;请上传开发自测报告&quot;,&#125;&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;服务器错误&quot;</span>,</span><br><span class="line">    <span class="string">&quot;true&quot;</span>,</span><br><span class="line">    <span class="literal">false</span>,</span><br><span class="line">    <span class="number">123</span>,</span><br><span class="line">    <span class="string">&quot;123&quot;</span>,</span><br><span class="line">    &#123;&#125;,</span><br><span class="line">    <span class="string">&quot;&#123;&#125;&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  p = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(e);</span><br><span class="line">      <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj)) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;e&#125;</span> =&gt; 数组`</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">switch</span> (<span class="keyword">typeof</span> obj) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;object&quot;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;number&quot;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;boolean&quot;</span>:</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;e&#125;</span> =&gt; <span class="subst">$&#123;<span class="keyword">typeof</span> e&#125;</span>`</span>)</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="comment">// 对象或者字符串将无法通过 JSON.parse</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;e&#125;</span> =&gt; 无法被解析`</span>)</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">testArr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> <span class="title function_">p</span>(e));</span><br></pre></td></tr></table></figure>
<p>为了方便对应，我直接给出了对照</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th>元数据类型</th>
<th>返回结果</th>
<th align="right">是否能被解析</th>
</tr>
</thead>
<tbody><tr>
<td align="left">‘[“hello”]’</td>
<td>string</td>
<td>object(array)</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">[“hello”]</td>
<td>object(array)</td>
<td>-</td>
<td align="right"></td>
</tr>
<tr>
<td align="left">‘{“attachment”:”请上传开发自测报告”,}’</td>
<td>string</td>
<td>-</td>
<td align="right"></td>
</tr>
<tr>
<td align="left">‘{“attachment”:”请上传开发自测报告”}’</td>
<td>string</td>
<td>object</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">“服务器错误”</td>
<td>string</td>
<td>-</td>
<td align="right"></td>
</tr>
<tr>
<td align="left">“true”</td>
<td>string</td>
<td>boolean</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">false</td>
<td>boolean</td>
<td>boolean</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">123</td>
<td>number</td>
<td>number</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">“123”</td>
<td>string</td>
<td>number</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">{}</td>
<td>object</td>
<td>-</td>
<td align="right"></td>
</tr>
<tr>
<td align="left">“{}”</td>
<td>string</td>
<td>object</td>
<td align="right">√</td>
</tr>
</tbody></table>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>对象、以及非特殊字符串无法被 <code>JSON.parse()</code> 解析到；</p>
<p>这让我想到了 <code>eval()</code> ，两者对于绝大多数的解析几乎一致；</p>
<p>将测试方法中的 <code>JSON.parse(e)</code> 更为 <code>eval(&quot;(&quot;+e+&quot;)&quot;)</code> 后，可以达到对照表</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th>元数据类型</th>
<th>返回结果</th>
<th align="right">是否能被解析</th>
<th align="right">是否与 JSON.parse() 结果一致</th>
</tr>
</thead>
<tbody><tr>
<td align="left">‘[“hello”]’</td>
<td>string</td>
<td>object(array)</td>
<td align="right">√</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">[“hello”]</td>
<td>object(array)</td>
<td>-</td>
<td align="right"></td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">‘{“attachment”:”请上传开发自测报告”,}’</td>
<td>string</td>
<td>object</td>
<td align="right">√</td>
<td align="right"></td>
</tr>
<tr>
<td align="left">‘{“attachment”:”请上传开发自测报告”}’</td>
<td>string</td>
<td>object</td>
<td align="right">√</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">“服务器错误”</td>
<td>string</td>
<td>-</td>
<td align="right"></td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">“true”</td>
<td>string</td>
<td>boolean</td>
<td align="right">√</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">false</td>
<td>boolean</td>
<td>boolean</td>
<td align="right">√</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">123</td>
<td>number</td>
<td>number</td>
<td align="right">√</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">“123”</td>
<td>string</td>
<td>number</td>
<td align="right">√</td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">{}</td>
<td>object</td>
<td>-</td>
<td align="right"></td>
<td align="right">√</td>
</tr>
<tr>
<td align="left">“{}”</td>
<td>string</td>
<td>object</td>
<td align="right">√</td>
<td align="right">√</td>
</tr>
</tbody></table>
<p>可以看到，两者确实存在极其相似的特性。</p>
<p>区别主要在于，字符串除了标准 <code>json</code> 串、 <code>number</code> 和 <code>boolean</code> 以外，非标准 <code>json</code> 串，亦可以解析。</p>
<p>那么是否 <code>eval()</code> 比 <code>JSON.parse()</code> 更佳呢？</p>
<p>答案是不能！</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> G = <span class="string">&#x27;&#123; &quot;title&quot; : &quot;some title&quot; , &quot;text&quot; : window.location.href=&quot;https://www.baidu.com&quot; &#125;&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>执行上述语句，可以看到，页面甚至跳转到了百度</p>
<p>所以，当数据来源无法可信时，使用 <code>eval</code> 并不安全。</p>
<p>so… </p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON">mdn</a></li>
<li><a href="https://www.cnblogs.com/lovesong/p/6036650.html">海角在眼前 博客</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[后台系统使用导出Excel组件]]></title>
      <url>/2021/05/19/linvkey/exporting%20excel%20table/</url>
      <content type="html"><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>最近在做后台项目中遇到要导出Excel的功能，这个功能当时特别紧急，几乎就是做完老板要用，所以慌的嘞，做完就赶紧复盘记录。</p>
<h3 id="实战例子"><a href="#实战例子" class="headerlink" title="实战例子"></a>实战例子</h3><p>1.首先需要在项目的src目录中的components文件夹下创建导出的子组件ExportExcel.vue</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-button :loading=&quot;downloadLoading&quot; type=&quot;primary&quot; @click=&quot;handleDownload&quot;</span><br><span class="line">      &gt;导出&lt;/el-button</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;ExportExcel&quot;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    list: &#123;</span><br><span class="line">      required: true,</span><br><span class="line">      type: Array,</span><br><span class="line">    &#125;,</span><br><span class="line">    tHeader: &#123;</span><br><span class="line">      required: true,</span><br><span class="line">      type: Array,</span><br><span class="line">    &#125;,</span><br><span class="line">    tValue: &#123;</span><br><span class="line">      required: true,</span><br><span class="line">      type: Array,</span><br><span class="line">    &#125;,</span><br><span class="line">    filename: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &quot;导出数据&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      downloadLoading: false,</span><br><span class="line">      autoWidth: true,</span><br><span class="line">      bookType: &quot;xlsx&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleDownload() &#123;</span><br><span class="line">      this.downloadLoading = true;</span><br><span class="line">      import(&quot;@/vendor/Export2Excel&quot;).then((excel) =&gt; &#123;</span><br><span class="line">        const data = this.formatJson(this.tValue, this.list);</span><br><span class="line">        excel.export_json_to_excel(&#123;</span><br><span class="line">          header: this.tHeader,</span><br><span class="line">          data,</span><br><span class="line">          filename: this.filename,</span><br><span class="line">          autoWidth: this.autoWidth,</span><br><span class="line">          bookType: this.bookType,</span><br><span class="line">        &#125;);</span><br><span class="line">        this.downloadLoading = false;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    formatJson(filterVal, jsonData) &#123;</span><br><span class="line">      return jsonData.map((v) =&gt;</span><br><span class="line">        filterVal.map((j) =&gt; &#123;</span><br><span class="line">          return v[j];</span><br><span class="line">        &#125;)</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-button &#123;</span><br><span class="line">  width: 70px;</span><br><span class="line">  height: 40px;</span><br><span class="line">  padding: 0;</span><br><span class="line">  margin: 0;</span><br><span class="line">  text-align: center;</span><br><span class="line">  background-color: #ffffff;</span><br><span class="line">  color: #606266;</span><br><span class="line">  border: 1px solid #dcdfe6;</span><br><span class="line">&#125;</span><br><span class="line">.el-button:hover &#123;</span><br><span class="line">  background-color: #ecf5ff;</span><br><span class="line">  color: #409eff;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>它需要引用@&#x2F;vendor&#x2F;Export2Excel</p>
<p>2.在src目录下创建vendor目录并创建Export2Excel.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* eslint-disable */</span></span><br><span class="line"><span class="keyword">import</span> &#123; saveAs &#125; <span class="keyword">from</span> <span class="string">&#x27;file-saver&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="variable constant_">XLSX</span> <span class="keyword">from</span> <span class="string">&#x27;xlsx&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateArray</span>(<span class="params">table</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> out = [];</span><br><span class="line">  <span class="keyword">var</span> rows = table.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> ranges = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> R = <span class="number">0</span>; R &lt; rows.<span class="property">length</span>; ++R) &#123;</span><br><span class="line">    <span class="keyword">var</span> outRow = [];</span><br><span class="line">    <span class="keyword">var</span> row = rows[R];</span><br><span class="line">    <span class="keyword">var</span> columns = row.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> C = <span class="number">0</span>; C &lt; columns.<span class="property">length</span>; ++C) &#123;</span><br><span class="line">      <span class="keyword">var</span> cell = columns[C];</span><br><span class="line">      <span class="keyword">var</span> colspan = cell.<span class="title function_">getAttribute</span>(<span class="string">&#x27;colspan&#x27;</span>);</span><br><span class="line">      <span class="keyword">var</span> rowspan = cell.<span class="title function_">getAttribute</span>(<span class="string">&#x27;rowspan&#x27;</span>);</span><br><span class="line">      <span class="keyword">var</span> cellValue = cell.<span class="property">innerText</span>;</span><br><span class="line">      <span class="keyword">if</span> (cellValue !== <span class="string">&quot;&quot;</span> &amp;&amp; cellValue == +cellValue) cellValue = +cellValue;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//Skip ranges</span></span><br><span class="line">      ranges.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">range</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (R &gt;= range.<span class="property">s</span>.<span class="property">r</span> &amp;&amp; R &lt;= range.<span class="property">e</span>.<span class="property">r</span> &amp;&amp; outRow.<span class="property">length</span> &gt;= range.<span class="property">s</span>.<span class="property">c</span> &amp;&amp; outRow.<span class="property">length</span> &lt;= range.<span class="property">e</span>.<span class="property">c</span>) &#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= range.<span class="property">e</span>.<span class="property">c</span> - range.<span class="property">s</span>.<span class="property">c</span>; ++i) outRow.<span class="title function_">push</span>(<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//Handle Row Span</span></span><br><span class="line">      <span class="keyword">if</span> (rowspan || colspan) &#123;</span><br><span class="line">        rowspan = rowspan || <span class="number">1</span>;</span><br><span class="line">        colspan = colspan || <span class="number">1</span>;</span><br><span class="line">        ranges.<span class="title function_">push</span>(&#123;</span><br><span class="line">          <span class="attr">s</span>: &#123;</span><br><span class="line">            <span class="attr">r</span>: R,</span><br><span class="line">            <span class="attr">c</span>: outRow.<span class="property">length</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">e</span>: &#123;</span><br><span class="line">            <span class="attr">r</span>: R + rowspan - <span class="number">1</span>,</span><br><span class="line">            <span class="attr">c</span>: outRow.<span class="property">length</span> + colspan - <span class="number">1</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//Handle Value</span></span><br><span class="line">      outRow.<span class="title function_">push</span>(cellValue !== <span class="string">&quot;&quot;</span> ? cellValue : <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//Handle Colspan</span></span><br><span class="line">      <span class="keyword">if</span> (colspan)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; colspan - <span class="number">1</span>; ++k) outRow.<span class="title function_">push</span>(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    out.<span class="title function_">push</span>(outRow);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> [out, ranges];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">datenum</span>(<span class="params">v, date1904</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (date1904) v += <span class="number">1462</span>;</span><br><span class="line">  <span class="keyword">var</span> epoch = <span class="title class_">Date</span>.<span class="title function_">parse</span>(v);</span><br><span class="line">  <span class="keyword">return</span> (epoch - <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="title class_">Date</span>.<span class="title function_">UTC</span>(<span class="number">1899</span>, <span class="number">11</span>, <span class="number">30</span>))) / (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sheet_from_array_of_arrays</span>(<span class="params">data, opts</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> ws = &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> range = &#123;</span><br><span class="line">    <span class="attr">s</span>: &#123;</span><br><span class="line">      <span class="attr">c</span>: <span class="number">10000000</span>,</span><br><span class="line">      <span class="attr">r</span>: <span class="number">10000000</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">e</span>: &#123;</span><br><span class="line">      <span class="attr">c</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">r</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> R = <span class="number">0</span>; R != data.<span class="property">length</span>; ++R) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> C = <span class="number">0</span>; C != data[R].<span class="property">length</span>; ++C) &#123;</span><br><span class="line">      <span class="keyword">if</span> (range.<span class="property">s</span>.<span class="property">r</span> &gt; R) range.<span class="property">s</span>.<span class="property">r</span> = R;</span><br><span class="line">      <span class="keyword">if</span> (range.<span class="property">s</span>.<span class="property">c</span> &gt; C) range.<span class="property">s</span>.<span class="property">c</span> = C;</span><br><span class="line">      <span class="keyword">if</span> (range.<span class="property">e</span>.<span class="property">r</span> &lt; R) range.<span class="property">e</span>.<span class="property">r</span> = R;</span><br><span class="line">      <span class="keyword">if</span> (range.<span class="property">e</span>.<span class="property">c</span> &lt; C) range.<span class="property">e</span>.<span class="property">c</span> = C;</span><br><span class="line">      <span class="keyword">var</span> cell = &#123;</span><br><span class="line">        <span class="attr">v</span>: data[R][C]</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">if</span> (cell.<span class="property">v</span> == <span class="literal">null</span>) <span class="keyword">continue</span>;</span><br><span class="line">      <span class="keyword">var</span> cell_ref = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">encode_cell</span>(&#123;</span><br><span class="line">        <span class="attr">c</span>: C,</span><br><span class="line">        <span class="attr">r</span>: R</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> cell.<span class="property">v</span> === <span class="string">&#x27;number&#x27;</span>) cell.<span class="property">t</span> = <span class="string">&#x27;n&#x27;</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> cell.<span class="property">v</span> === <span class="string">&#x27;boolean&#x27;</span>) cell.<span class="property">t</span> = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (cell.<span class="property">v</span> <span class="keyword">instanceof</span> <span class="title class_">Date</span>) &#123;</span><br><span class="line">        cell.<span class="property">t</span> = <span class="string">&#x27;n&#x27;</span>;</span><br><span class="line">        cell.<span class="property">z</span> = <span class="variable constant_">XLSX</span>.<span class="property">SSF</span>.<span class="property">_table</span>[<span class="number">14</span>];</span><br><span class="line">        cell.<span class="property">v</span> = <span class="title function_">datenum</span>(cell.<span class="property">v</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> cell.<span class="property">t</span> = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line"></span><br><span class="line">      ws[cell_ref] = cell;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (range.<span class="property">s</span>.<span class="property">c</span> &lt; <span class="number">10000000</span>) ws[<span class="string">&#x27;!ref&#x27;</span>] = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">encode_range</span>(range);</span><br><span class="line">  <span class="keyword">return</span> ws;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Workbook</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!(<span class="variable language_">this</span> <span class="keyword">instanceof</span> <span class="title class_">Workbook</span>)) <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Workbook</span>();</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">SheetNames</span> = [];</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">Sheets</span> = &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">s2ab</span>(<span class="params">s</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> buf = <span class="keyword">new</span> <span class="title class_">ArrayBuffer</span>(s.<span class="property">length</span>);</span><br><span class="line">  <span class="keyword">var</span> view = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(buf);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i != s.<span class="property">length</span>; ++i) view[i] = s.<span class="title function_">charCodeAt</span>(i) &amp; <span class="number">0xFF</span>;</span><br><span class="line">  <span class="keyword">return</span> buf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">export_table_to_excel</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> theTable = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(id);</span><br><span class="line">  <span class="keyword">var</span> oo = <span class="title function_">generateArray</span>(theTable);</span><br><span class="line">  <span class="keyword">var</span> ranges = oo[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* original data */</span></span><br><span class="line">  <span class="keyword">var</span> data = oo[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">var</span> ws_name = <span class="string">&quot;SheetJS&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> wb = <span class="keyword">new</span> <span class="title class_">Workbook</span>(),</span><br><span class="line">    ws = <span class="title function_">sheet_from_array_of_arrays</span>(data);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* add ranges to worksheet */</span></span><br><span class="line">  <span class="comment">// ws[&#x27;!cols&#x27;] = [&#x27;apple&#x27;, &#x27;banan&#x27;];</span></span><br><span class="line">  ws[<span class="string">&#x27;!merges&#x27;</span>] = ranges;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* add worksheet to workbook */</span></span><br><span class="line">  wb.<span class="property">SheetNames</span>.<span class="title function_">push</span>(ws_name);</span><br><span class="line">  wb.<span class="property">Sheets</span>[ws_name] = ws;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> wbout = <span class="variable constant_">XLSX</span>.<span class="title function_">write</span>(wb, &#123;</span><br><span class="line">    <span class="attr">bookType</span>: <span class="string">&#x27;xlsx&#x27;</span>,</span><br><span class="line">    <span class="attr">bookSST</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;binary&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">saveAs</span>(<span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="title function_">s2ab</span>(wbout)], &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;application/octet-stream&quot;</span></span><br><span class="line">  &#125;), <span class="string">&quot;test.xlsx&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">export_json_to_excel</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  multiHeader = [],</span></span><br><span class="line"><span class="params">  header,</span></span><br><span class="line"><span class="params">  data,</span></span><br><span class="line"><span class="params">  filename,</span></span><br><span class="line"><span class="params">  merges = [],</span></span><br><span class="line"><span class="params">  autoWidth = <span class="literal">true</span>,</span></span><br><span class="line"><span class="params">  bookType = <span class="string">&#x27;xlsx&#x27;</span></span></span><br><span class="line"><span class="params">&#125; = &#123;&#125;</span>) &#123;</span><br><span class="line">  <span class="comment">/* original data */</span></span><br><span class="line">  filename = filename || <span class="string">&#x27;excel-list&#x27;</span></span><br><span class="line">  data = [...data]</span><br><span class="line">  data.<span class="title function_">unshift</span>(header);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = multiHeader.<span class="property">length</span> - <span class="number">1</span>; i &gt; -<span class="number">1</span>; i--) &#123;</span><br><span class="line">    data.<span class="title function_">unshift</span>(multiHeader[i])</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> ws_name = <span class="string">&quot;SheetJS&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> wb = <span class="keyword">new</span> <span class="title class_">Workbook</span>(),</span><br><span class="line">    ws = <span class="title function_">sheet_from_array_of_arrays</span>(data);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (merges.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!ws[<span class="string">&#x27;!merges&#x27;</span>]) ws[<span class="string">&#x27;!merges&#x27;</span>] = [];</span><br><span class="line">    merges.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      ws[<span class="string">&#x27;!merges&#x27;</span>].<span class="title function_">push</span>(<span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">decode_range</span>(item))</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (autoWidth) &#123;</span><br><span class="line">    <span class="comment">/*设置worksheet每列的最大宽度*/</span></span><br><span class="line">    <span class="keyword">const</span> colWidth = data.<span class="title function_">map</span>(<span class="function"><span class="params">row</span> =&gt;</span> row.<span class="title function_">map</span>(<span class="function"><span class="params">val</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">/*先判断是否为null/undefined*/</span></span><br><span class="line">      <span class="keyword">if</span> (val == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          <span class="string">&#x27;wch&#x27;</span>: <span class="number">10</span></span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/*再判断是否为中文*/</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (val.<span class="title function_">toString</span>().<span class="title function_">charCodeAt</span>(<span class="number">0</span>) &gt; <span class="number">255</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          <span class="string">&#x27;wch&#x27;</span>: val.<span class="title function_">toString</span>().<span class="property">length</span> * <span class="number">2</span></span><br><span class="line">        &#125;;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          <span class="string">&#x27;wch&#x27;</span>: val.<span class="title function_">toString</span>().<span class="property">length</span></span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;))</span><br><span class="line">    <span class="comment">/*以第一行为初始值*/</span></span><br><span class="line">    <span class="keyword">let</span> result = colWidth[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; colWidth.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; colWidth[i].<span class="property">length</span>; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (result[j][<span class="string">&#x27;wch&#x27;</span>] &lt; colWidth[i][j][<span class="string">&#x27;wch&#x27;</span>]) &#123;</span><br><span class="line">          result[j][<span class="string">&#x27;wch&#x27;</span>] = colWidth[i][j][<span class="string">&#x27;wch&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ws[<span class="string">&#x27;!cols&#x27;</span>] = result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* add worksheet to workbook */</span></span><br><span class="line">  wb.<span class="property">SheetNames</span>.<span class="title function_">push</span>(ws_name);</span><br><span class="line">  wb.<span class="property">Sheets</span>[ws_name] = ws;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> wbout = <span class="variable constant_">XLSX</span>.<span class="title function_">write</span>(wb, &#123;</span><br><span class="line">    <span class="attr">bookType</span>: bookType,</span><br><span class="line">    <span class="attr">bookSST</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;binary&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="title function_">saveAs</span>(<span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="title function_">s2ab</span>(wbout)], &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;application/octet-stream&quot;</span></span><br><span class="line">  &#125;), <span class="string">`<span class="subst">$&#123;filename&#125;</span>.<span class="subst">$&#123;bookType&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>3.在需要导出成Excel的页面中导入组件</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import ExportExcel from &quot;../../components/ExportExcel&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">components: &#123; ExportExcel &#125;,</span><br></pre></td></tr></table></figure>

<p>在methods中还要定义两个方法分别关于调用下载函数和定义表格格式</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导出下载表格</span></span><br><span class="line"><span class="title function_">handleDownload</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">downloadLoading</span> = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">import</span>(<span class="string">&quot;@/vendor/Export2Excel&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">excel</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="variable language_">this</span>.<span class="title function_">formatJson</span>(filterVal)</span><br><span class="line">    excel.<span class="title function_">export_json_to_excel</span>(&#123;</span><br><span class="line">      <span class="attr">header</span>: tHeader,</span><br><span class="line">      data,</span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&quot;table-list&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">downloadLoading</span> = <span class="literal">false</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//定义导出表格的格式</span></span><br><span class="line"><span class="title function_">formatJson</span>(<span class="params">filterVal</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">tableData</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">v</span>) =&gt;</span></span><br><span class="line">    filterVal.<span class="title function_">map</span>(<span class="function">(<span class="params">j</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (j === <span class="string">&quot;timestamp&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">parseTime</span>(v[j])</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> v[j]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  )</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>最后在模板语法中使用</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;export-excel</span><br><span class="line"></span><br><span class="line">    v-if=&quot;exportList !== null&quot;</span><br><span class="line"></span><br><span class="line">    :list=&quot;exportList&quot;</span><br><span class="line"></span><br><span class="line">    :tHeader=&quot;tHeader&quot;</span><br><span class="line"></span><br><span class="line">    :tValue=&quot;tValue&quot;</span><br><span class="line"></span><br><span class="line">    filename=&quot;消毒灯后台管理系统_导出数据&quot;</span><br><span class="line"></span><br><span class="line">   \&gt;&lt;/export-excel&gt;</span><br></pre></td></tr></table></figure>





<p>:tHeader     是一个数组，它绑定的是自定义Excel的表头</p>
<p>在data中定义</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tHeader</span>:[<span class="string">&quot;序号&quot;</span>,<span class="string">&quot;姓名&quot;</span>,<span class="string">&quot;年龄&quot;</span>]</span><br></pre></td></tr></table></figure>

<p>:tValue 		是一个数组，它中绑定的是Excel每一列的值</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tValue</span>:[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;age&quot;</span>]</span><br></pre></td></tr></table></figure>

<p>注意：tHeader和tValue数组中的值必须一一对应</p>
<p>v-if  			 中判断的是要导出的数据源是否存在</p>
<p>:list 			 中绑定的是要导出的数据源，注意数据源最好是用对象数组的形式且对象中的数据只有一层</p>
<p>例如：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">exportList = [</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="attr">id</span>:<span class="number">1</span>,</span><br><span class="line">      <span class="attr">name</span>:<span class="string">&quot;张三&quot;</span>,</span><br><span class="line">      <span class="attr">age</span>:<span class="string">&quot;18&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="attr">id</span>:<span class="number">2</span>,</span><br><span class="line">      <span class="attr">name</span>:<span class="string">&quot;李四&quot;</span>,</span><br><span class="line">      <span class="attr">age</span>:<span class="string">&quot;21&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  ……</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>而不能</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">exportList2 = [</span><br><span class="line">  &#123;</span><br><span class="line">      id:1,</span><br><span class="line">      name:&quot;张三&quot;,</span><br><span class="line">      age:&quot;18&quot;,</span><br><span class="line">      school:&#123;</span><br><span class="line">         schoolName:&quot;XXX学校&quot;,</span><br><span class="line">         ……</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">      id:2,</span><br><span class="line">      name:&quot;李四&quot;,</span><br><span class="line">      age:&quot;21&quot;，</span><br><span class="line">      school:&#123;</span><br><span class="line">         schoolName:&quot;XXX学校&quot;,</span><br><span class="line">         ……</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  ……</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>如果你如上定义exportList2那么你想要取schoolName就必须school.schoolName,这样是不能作为表格的值来显示的</p>
<p>filename     中给的值是导出表格的名字</p>
<p>以上就是用vue开发后台系统项目中如何创建导出功能的内容。</p>
<p>亲测有效，奔走相告！</p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在vscode中断点调试node]]></title>
      <url>/2021/05/17/linvkey/debugging%20by%20vscode/</url>
      <content type="html"><![CDATA[<p>描述：</p>
<p>​		先利其器粮草行，最近在学习node，为了在以后的开发过程中减少吃瘪，现在来看看在vscode中如何调试node代码。</p>
<p>具体操作：</p>
<ol>
<li>vscode打开node项目点击左侧调试按钮</li>
</ol>
<p><img src="/./../../img/1621299855378.png" alt="1621299855378"></p>
<ol start="2">
<li><p>点击Run and Debug</p>
<p><img src="/./../../img/1621299907389.png" alt="1621299907389"></p>
</li>
<li><p>选择nodejs语言</p>
<p><img src="/./../../img/1621300040780.png" alt="1621300040780"></p>
</li>
<li><p>点击设置按钮添加配置 </p>
<p><img src="/./../../img/1621300061675.png" alt="1621300061675"></p>
</li>
</ol>
<p> 5.更改lanuch.json配置文件</p>
<p><img src="/./../../img/1621300077304.png" alt="1621300077304"></p>
<ol start="6">
<li><p>添加自己的项目启动脚本文件和配置 </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0.2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;configurations&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;node&quot;</span>,</span><br><span class="line">            <span class="string">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;启动程序&quot;</span>,</span><br><span class="line">            <span class="string">&quot;env&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;NODE_ENV&quot;</span>: <span class="string">&quot;development&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;program&quot;</span>: <span class="string">&quot;$&#123;workspaceFolder&#125;/bin/www&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//program这个是我自己的node项目的启动文件</span></span><br></pre></td></tr></table></figure>

<ol start="7">
<li><p>再次点击断点调试按钮启动断点调试 </p>
<p><img src="/./../../img/1621300135806.png" alt="1621300135806"></p>
</li>
</ol>
</li>
<li><p>直接点击启动程序启动断点调试</p>
<p><img src="/./../../img/1621300156010.png" alt="1621300156010"></p>
</li>
<li><p>直接在代码左侧需要断点的位置打个断点标记，执行方法是会自动出发断点</p>
</li>
</ol>
<p><img src="/./../../img/1621300181522.png" alt="1621300181522"></p>
<ol start="10">
<li><p>然后通过上面的调试按钮一步步断点 </p>
<p><img src="/./../../img/1621300206987.png" alt="1621300206987"></p>
</li>
<li><p>鼠标悬浮还可以看到断点的数据 </p>
<p><img src="/./../../img/1621300225881.png" alt="1621300225881"></p>
</li>
<li><p>当然也可在debug console控制台输出断点数据的结果 相当于浏览器断点是的console控制台 </p>
<p><img src="/./../../img/1621300258903.png" alt="1621300258903"></p>
</li>
<li><p>如果要结束断点直接点击上面的暂停键</p>
</li>
</ol>
<p><img src="/./../../img/1621300292442.png" alt="1621300292442"></p>
<p>上述就是vscode调试node代码的步骤</p>
<p>亲测有效，奔走相告！</p>
]]></content>
      
        
        <tags>
            
            <tag> node.js </tag>
            
            <tag> vscode </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[axios响应拦截器错误处理及思想]]></title>
      <url>/2021/05/17/sunyifang/axios-response/</url>
      <content type="html"><![CDATA[<h3 id="axios的拦截器分为两部分（以后源码还是要读的）"><a href="#axios的拦截器分为两部分（以后源码还是要读的）" class="headerlink" title="axios的拦截器分为两部分（以后源码还是要读的）"></a>axios的拦截器分为两部分（以后源码还是要读的）</h3><ol>
<li>服务器状态为300以下</li>
<li>服务器状态为300+</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加请求拦截器</span></span><br><span class="line">axios.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">config</span>) &#123;</span><br><span class="line">    <span class="comment">// 在发送请求之前做些什么</span></span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="comment">// 对请求错误做些什么</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加响应拦截器</span></span><br><span class="line">axios.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">    <span class="comment">// 对响应数据做点什么</span></span><br><span class="line">    <span class="keyword">return</span> response;</span><br><span class="line">  &#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="comment">// 对响应错误做点什么</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<h3 id="服务器状态为300以下"><a href="#服务器状态为300以下" class="headerlink" title="服务器状态为300以下"></a>服务器状态为300以下</h3><p>走response拦截器在其中判断，刨析res.code来判断</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> res = response.<span class="property">data</span></span><br><span class="line"><span class="comment">// console.log(res);</span></span><br><span class="line"><span class="comment">// 如果自定义代码不是20000，则判断为错误.</span></span><br><span class="line"><span class="keyword">if</span> (res.<span class="property">code</span> !== <span class="number">200</span>) &#123;</span><br><span class="line">  <span class="title class_">Message</span>(&#123;</span><br><span class="line">    <span class="attr">message</span>: res.<span class="property">message</span> || <span class="string">&#x27;Error&#x27;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">    <span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 50008: 非法token; 50012: 其他客户端已登录; 50014: Token 已过期;</span></span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">50008</span> || res.<span class="property">code</span> === <span class="number">50012</span> || res.<span class="property">code</span> === <span class="number">50014</span>) &#123;</span><br><span class="line">    <span class="comment">// to re-login</span></span><br><span class="line">    <span class="title class_">MessageBox</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;您已注销，可以取消以停留在此页面，或重新登录&#x27;</span>, <span class="string">&#x27;确认注销&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">confirmButtonText</span>: <span class="string">&#x27;Re-Login&#x27;</span>,</span><br><span class="line">      <span class="attr">cancelButtonText</span>: <span class="string">&#x27;Cancel&#x27;</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/resetToken&#x27;</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        location.<span class="title function_">reload</span>()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(res.<span class="property">message</span> || <span class="string">&#x27;Error&#x27;</span>))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="服务器状态为300"><a href="#服务器状态为300" class="headerlink" title="服务器状态为300+"></a>服务器状态为300+</h3><p>走ERROR 这里会直接返回一个error对象（error对象比较特殊但是也可以（.））<br>如果想在拦截器中处理就要用error.response即可打印http数据包<br>不过一般都是直接返回catch单一处理问题</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">error =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;err&#x27;</span> + error) <span class="comment">// for debug</span></span><br><span class="line">  <span class="title class_">Message</span>(&#123;</span><br><span class="line">    <span class="attr">message</span>: error.<span class="property">message</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">    <span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">axios.<span class="title function_">get</span>(<span class="string">&#x27;/user/12345&#x27;</span>)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (error.<span class="property">response</span>) &#123;</span><br><span class="line">      <span class="comment">// The request was made and the server responded with a status code</span></span><br><span class="line">      <span class="comment">// that falls out of the range of 2xx</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error.<span class="property">response</span>.<span class="property">data</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error.<span class="property">response</span>.<span class="property">status</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error.<span class="property">response</span>.<span class="property">headers</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error.<span class="property">request</span>) &#123;</span><br><span class="line">      <span class="comment">// The request was made but no response was received</span></span><br><span class="line">      <span class="comment">// `error.request` is an instance of XMLHttpRequest in the browser and an instance of</span></span><br><span class="line">      <span class="comment">// http.ClientRequest in node.js</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error.<span class="property">request</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// Something happened in setting up the request that triggered an Error</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Error&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error.<span class="property">config</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于node的基础学习]]></title>
      <url>/2021/05/16/linvkey/about%20the%20basics%20of%20node/</url>
      <content type="html"><![CDATA[<p><strong>1.说明</strong></p>
<p>客户端到服务器发送的请求取决于用户的网速</p>
<p>服务器到客户端的响应速度可以提升服务器的带宽</p>
<p>服务器的代码逻辑精简可以提升客户端的响应速度</p>
<p>致命在于服务器读写数据库的速度（IO）</p>
<p>node是单线程</p>
<p>目的用Js编写高性能服务器</p>
<p><strong>2.安装及运行</strong></p>
<p>在nodejs.org下载完node之后  在自己的盘符里新建一个js文件(里面可以输入console.log(123))，然后打开同级命令行窗口</p>
<p>运行 node 文件.js</p>
<p><strong>3.初始化项目</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init </span><br></pre></td></tr></table></figure>

<p>然后填写一些配置信息，然后会生成一个package.json配置文件</p>
<p><strong>4.安装插件</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install jquery </span><br></pre></td></tr></table></figure>



<p><strong>5.卸载插件</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall jquery </span><br></pre></td></tr></table></figure>



<p><strong>6.查看环境变量</strong></p>
<p>开发环境</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">process.env </span><br></pre></td></tr></table></figure>

<p>生产环境</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">process.dev </span><br></pre></td></tr></table></figure>



<p><strong>7.Node中的模块</strong></p>
<p>7.1全局模块：</p>
<p>任何时候都能访问，不需要引用</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">process.env </span><br><span class="line"></span><br><span class="line">process.argv </span><br></pre></td></tr></table></figure>

<p>7.2系统模块</p>
<p>7.2.1定义：要引用</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> path = require(<span class="string">&quot;path&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/./../../img/1621299934270.png"></p>
<p>7.2.2path:用于处理文件路径和目录路径的实用工具</p>
<p>第一个打印到最后的目录，第二个打印到1.jpg，最后一个打印出文件的后缀名</p>
<p>想获取一个文件的绝对路径，打印</p>
<p>path.resolve(__dirname,”文件名”) </p>
<p>7.2.3  fs用于文件读写操作</p>
<p>语法：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> fs = require(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line">读</span><br><span class="line">fs.readFile(<span class="string">&quot;读取的文件的相对路径&quot;</span>,(err,data)=&gt;&#123;	</span><br><span class="line">//回调方法体</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="/./../../img/1621299944464.png"></p>
<p>在同级目录下新建文件 b.text</p>
<p>写</p>
<p><img src="/./../../img/1621299950919.png"></p>
<p>追加内容</p>
<p><img src="/./../../img/1621299956007.png"></p>
<p>7.3自定义模块</p>
<p>定义：require自己封装的模块</p>
<p>exports</p>
<p>module.exports</p>
<p>require</p>
<p>前两个为导出，第三个是引用</p>
<p>7.3.1exports单个导出</p>
<p>7.3.2module.exports以对象的形式多个导出，也可以导出方法</p>
<p><img src="/./../../img/1621299962001.png"></p>
<p>调用方法</p>
<p><img src="/./../../img/1621299972252.png"></p>
<p>7.3.3require</p>
<p>1.如果有路径就访问路径的内容</p>
<p><img src="/./../../img/1621299978563.png"></p>
<p>2.如果没有指定路径，就默认访问node_modules文件夹</p>
<p><img src="/./../../img/1621299984197.png"></p>
<p>最后再去node的安装目录里找</p>
<p>7.3.4 http模块</p>
<p>服务器对象：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.createServer()</span><br></pre></td></tr></table></figure>

<p>可以快速搭建服务器</p>
<p>例子：</p>
<p>先引用http对象，再调用createServer方法，并且要给出监听的自定义端口号</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> http = require(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line">http.createServer(() =&gt; &#123;</span><br><span class="line">    console.log(&quot;我来了&quot;);</span><br><span class="line">&#125;).listen(<span class="number">8089</span>)</span><br></pre></td></tr></table></figure>

<p>在相同目录下运行 node 对应的脚本文件</p>
<p>打开浏览器访问端口</p>
<p> <a href="http://localhost:8089/">http://localhost:8089/</a> </p>
<p>此时在终端就会看到打印的内容</p>
<p><img src="/./../../img/1621299994258.png"></p>
<p>createServer中函数的参数(require,response)</p>
<p>request 是请求时携带的参数</p>
<p>response是请求后返回的数据</p>
<p>别忘了在结尾加上end()方法表示请求的内容结束了</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="comment">//request 是请求时携带的参数</span></span><br><span class="line"><span class="comment">//response是请求后返回的数据</span></span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// console.log(&quot;我来了&quot;);</span></span><br><span class="line">    response.<span class="title function_">write</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">    response.<span class="title function_">end</span>()</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">8089</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/./../../img/1621300001539.png"></p>
<p>搭建简易服务器并访问</p>
<p>response.writeHead访问后返回的状态码</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">response.<span class="title function_">end</span>(<span class="string">&#x27;404&#x27;</span>)  </span><br><span class="line"> <span class="comment">//就等于</span></span><br><span class="line">response.<span class="title function_">write</span>(<span class="string">&#x27;404&#x27;</span>);</span><br><span class="line">response.<span class="title function_">end</span>()</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="comment">//request 是请求时携带的参数</span></span><br><span class="line"><span class="comment">//response是请求后返回的数据</span></span><br><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// console.log(&quot;我来了&quot;);</span></span><br><span class="line">    <span class="comment">// response.write(&#x27;index&#x27;);</span></span><br><span class="line">    <span class="comment">// response.end()</span></span><br><span class="line">    fs.<span class="title function_">readFile</span>(<span class="string">`./<span class="subst">$&#123;request.url&#125;</span>`</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">            response.<span class="title function_">writeHead</span>(<span class="number">404</span>)</span><br><span class="line">            response.<span class="title function_">end</span>(<span class="string">&#x27;404&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// console.log(data);</span></span><br><span class="line">            response.<span class="title function_">writeHead</span>(<span class="number">200</span>)</span><br><span class="line">            response.<span class="title function_">end</span>(data)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(request.<span class="property">url</span>);</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">8089</span>)</span><br></pre></td></tr></table></figure>

<p><strong>8.get与post</strong></p>
<p>js中</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">url</span>);</span><br><span class="line">    <span class="comment">///aa?username=12312&amp;pwd=123</span></span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">8899</span>)</span><br></pre></td></tr></table></figure>

<p>html页面</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://localhost:8899/aa&quot;</span> <span class="attr">method</span>=<span class="string">&quot;GET&quot;</span>&gt;</span></span><br><span class="line">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">        密 码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>运行node index</p>
<p>手动打开h5页面 输入账密后得出结果</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aa?username=12312&amp;pwd=123</span><br></pre></td></tr></table></figure>

<p>如果要获取这一长串中的url或者想要别的部分，在node中可以不用split方法这么麻烦</p>
<p>只需要导入url 模块</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> url = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>) </span><br></pre></td></tr></table></figure>

<p>然后将请求的url作为第一个参数给url.parse来解析，就能得到表单请求时获取的url对象</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> url = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(url.<span class="title function_">parse</span>(req.<span class="property">url</span>));</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">8899</span>)</span><br></pre></td></tr></table></figure>

<p>查看打印效果</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">LinvKey@DESKTOP-TKPLAEN MINGW64 /d/study/node03</span><br><span class="line">$ node index</span><br><span class="line">Url &#123;</span><br><span class="line">  protocol: null,</span><br><span class="line">  slashes: null,</span><br><span class="line">  auth: null,</span><br><span class="line">  host: null,</span><br><span class="line">  port: null,</span><br><span class="line">  hostname: null,</span><br><span class="line">  <span class="built_in">hash</span>: null,</span><br><span class="line">  search: <span class="string">&#x27;?username=vcxx5otc&amp;pwd=123&#x27;</span>,</span><br><span class="line">  query: <span class="string">&#x27;username=vcxx5otc&amp;pwd=123&#x27;</span>,</span><br><span class="line">  pathname: <span class="string">&#x27;/aa&#x27;</span>,</span><br><span class="line">  path: <span class="string">&#x27;/aa?username=vcxx5otc&amp;pwd=123&#x27;</span>,</span><br><span class="line">  href: <span class="string">&#x27;/aa?username=vcxx5otc&amp;pwd=123&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>url.parse()的第二个参数 为布尔值，作用是将query属性的值变成对象，方便取值</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">LinvKey@DESKTOP-TKPLAEN MINGW64 /d/study/node03</span><br><span class="line">$ node index</span><br><span class="line">Url &#123;</span><br><span class="line">  protocol: null,</span><br><span class="line">  slashes: null, </span><br><span class="line">  auth: null,    </span><br><span class="line">  host: null,    </span><br><span class="line">  port: null,</span><br><span class="line">  hostname: null,</span><br><span class="line">  <span class="built_in">hash</span>: null,</span><br><span class="line">  search: <span class="string">&#x27;?username=admin&amp;pwd=admin&#x27;</span>,</span><br><span class="line">  query: [Object: null prototype] &#123; username: <span class="string">&#x27;admin&#x27;</span>, <span class="built_in">pwd</span>: <span class="string">&#x27;admin&#x27;</span> &#125;,</span><br><span class="line">  pathname: <span class="string">&#x27;/aa&#x27;</span>,</span><br><span class="line">  path: <span class="string">&#x27;/aa?username=admin&amp;pwd=admin&#x27;</span>,</span><br><span class="line">  href: <span class="string">&#x27;/aa?username=admin&amp;pwd=admin&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> node.js </tag>
            
            <tag> http </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript常用代码片段]]></title>
      <url>/2021/05/15/sicker/javascript%20code%20snippet/</url>
      <content type="html"><![CDATA[<h3 id="获取前一天、后一天"><a href="#获取前一天、后一天" class="headerlink" title="获取前一天、后一天"></a>获取前一天、后一天</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 明天</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Date</span>(<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()+(<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">1000</span>))</span><br><span class="line"><span class="comment">// 昨天</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Date</span>(<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()-(<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">1000</span>))</span><br></pre></td></tr></table></figure>

<h3 id="日期-farmat-内含补零方法"><a href="#日期-farmat-内含补零方法" class="headerlink" title="日期 farmat (内含补零方法)"></a>日期 farmat (内含补零方法)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取当前日期</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> foramt    array      格式化数组，共8个参数，-1则不显示（-1 ， 不是 &quot;-1&quot;），末尾若省缺，则默认为显示，具体看示例</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> foramt    Date对象</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> formatDate([&quot;年&quot;, &quot;月&quot;, &quot;日 &quot; ,&quot;:&quot;,&quot;:&quot;,&quot;:&quot;,&quot; &quot;,true])  =&gt; &quot;2021年5月15日 21:29:21:300  星期六&quot;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> formatDate([&quot;-&quot;, &quot;-&quot;, &quot; &quot; ,&quot;:&quot;,&quot;:&quot;,&quot; &quot;,-1,true])  =&gt; &quot;2021-5-15 21:34:59  星期六&quot;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> formatDate([&quot;/&quot;, &quot;/&quot;, &quot; &quot; ,&quot;:&quot;,&quot; &quot;,-1,-1,true])  =&gt; &quot;2021/5/15 21:36  星期六&quot;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> formatDate([&quot;/&quot;, &quot;/&quot;, &quot; &quot; ,&quot;:&quot;,&quot; &quot;,-1,-1,-1])  =&gt; &quot;2021/5/15 21:37&quot;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatDate</span>(<span class="params">format = [<span class="string">&quot;年&quot;</span>, <span class="string">&quot;月&quot;</span>, <span class="string">&quot;日 &quot;</span>, <span class="string">&quot;:&quot;</span>, <span class="string">&quot;:&quot;</span>, <span class="string">&quot;:&quot;</span>, <span class="string">&quot; &quot;</span>, <span class="literal">true</span>], d = <span class="keyword">new</span> <span class="built_in">Date</span>()</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> week = [<span class="string">&quot;日&quot;</span>, <span class="string">&quot;一&quot;</span>, <span class="string">&quot;二&quot;</span>, <span class="string">&quot;三&quot;</span>, <span class="string">&quot;四&quot;</span>, <span class="string">&quot;五&quot;</span>, <span class="string">&quot;六&quot;</span>];</span><br><span class="line">    <span class="keyword">return</span> (format[<span class="number">0</span>] !== <span class="literal">false</span> ? <span class="title function_">addZero</span>(d.<span class="title function_">getFullYear</span>(), <span class="number">4</span>, format[<span class="number">0</span>]) : <span class="string">&quot;&quot;</span>) +</span><br><span class="line">        (format[<span class="number">1</span>] !== -<span class="number">1</span> ? <span class="title function_">addZero</span>(d.<span class="title function_">getMonth</span>() + <span class="number">1</span>, <span class="number">2</span>, format[<span class="number">1</span>]) : <span class="string">&quot;&quot;</span>) +</span><br><span class="line">        (format[<span class="number">2</span>] !== -<span class="number">1</span> ? <span class="title function_">addZero</span>(d.<span class="title function_">getDate</span>(), <span class="number">2</span>, format[<span class="number">2</span>]) : <span class="string">&quot;&quot;</span>) +</span><br><span class="line">        (format[<span class="number">3</span>] !== -<span class="number">1</span> ? <span class="title function_">addZero</span>(d.<span class="title function_">getHours</span>(), <span class="number">2</span>, format[<span class="number">3</span>]) : <span class="string">&quot;&quot;</span>) +</span><br><span class="line">        (format[<span class="number">4</span>] !== -<span class="number">1</span> ? <span class="title function_">addZero</span>(d.<span class="title function_">getMinutes</span>(), <span class="number">2</span>, format[<span class="number">4</span>]) : <span class="string">&quot;&quot;</span>) +</span><br><span class="line">        (format[<span class="number">5</span>] !== -<span class="number">1</span> ? <span class="title function_">addZero</span>(d.<span class="title function_">getSeconds</span>(), <span class="number">2</span>, format[<span class="number">5</span>]) : <span class="string">&quot;&quot;</span>) +</span><br><span class="line">        (format[<span class="number">6</span>] !== -<span class="number">1</span> ? <span class="title function_">addZero</span>(d.<span class="title function_">getMilliseconds</span>(), <span class="number">3</span>, format[<span class="number">6</span>]) : <span class="string">&quot;&quot;</span>) +</span><br><span class="line">        (format[<span class="number">7</span>] !== -<span class="number">1</span> ? <span class="string">&quot; 星期&quot;</span> + week[d.<span class="title function_">getDay</span>()] : <span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后向前切割 length 位</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str       String/Number   任意字符串 或者 数字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> length    Number          str切割后的长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pad       String          切割后末尾添加的字符串 default 空</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span>         String          切割结果</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> addZero(&quot;abc&quot;, 4 , &quot;_&quot;)  =&gt; &quot;0abc_&quot;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> addZero(4, 3 , &quot;_&quot;)  =&gt; &quot;0003_&quot;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> addZero(2589, 3)  =&gt; &quot;589&quot;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> addZero(2589, 0)  =&gt; &quot;&quot;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> addZero(2589, -1)  =&gt; &quot;2589&quot;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addZero</span>(<span class="params">str, length, pad = <span class="string">&quot;&quot;</span></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (length == <span class="number">0</span>) <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (length &lt; <span class="number">0</span>) <span class="keyword">return</span> str; <span class="comment">//真没必要这样用。。</span></span><br><span class="line">    <span class="keyword">return</span> ((<span class="keyword">new</span> <span class="title class_">Array</span>(length)).<span class="title function_">join</span>(<span class="string">&quot;0&quot;</span>) + str).<span class="title function_">slice</span>(<span class="number">0</span> - length) + pad;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="返回n个重复相同的字符串"><a href="#返回n个重复相同的字符串" class="headerlink" title="返回n个重复相同的字符串"></a>返回n个重复相同的字符串</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> new Array(3).join(0)  =&gt; &quot;00&quot;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span> new Array(3).join(&quot;01&quot;)  =&gt; &quot;0101&quot;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">(<span class="keyword">new</span> <span class="title class_">Array</span>(n + <span class="number">1</span>)).<span class="title function_">join</span>(src);</span><br></pre></td></tr></table></figure>

<h3 id="判断空对象"><a href="#判断空对象" class="headerlink" title="判断空对象"></a>判断空对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法 1</span></span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data) == <span class="string">&quot;&#123;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法 2</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">function</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">b</span>(obj)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法 3</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> arr = <span class="title class_">Object</span>.<span class="title function_">keys</span>(obj);</span><br><span class="line">arr.<span class="property">length</span> == <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<h3 id="补零"><a href="#补零" class="headerlink" title="补零"></a>补零</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 前补零 padStart()</span></span><br><span class="line"><span class="string">&#x27;abc&#x27;</span>.<span class="title function_">padStart</span>(<span class="number">10</span>);         <span class="comment">// &quot;       abc&quot;</span></span><br><span class="line"><span class="string">&#x27;abc&#x27;</span>.<span class="title function_">padStart</span>(<span class="number">10</span>, <span class="string">&quot;foo&quot;</span>);  <span class="comment">// &quot;foofoofabc&quot;</span></span><br><span class="line"><span class="string">&#x27;abc&#x27;</span>.<span class="title function_">padStart</span>(<span class="number">6</span>,<span class="string">&quot;123465&quot;</span>); <span class="comment">// &quot;123abc&quot;</span></span><br><span class="line"><span class="string">&#x27;abc&#x27;</span>.<span class="title function_">padStart</span>(<span class="number">8</span>, <span class="string">&quot;0&quot;</span>);     <span class="comment">// &quot;00000abc&quot;</span></span><br><span class="line"><span class="string">&#x27;abc&#x27;</span>.<span class="title function_">padStart</span>(<span class="number">1</span>);          <span class="comment">// &quot;abc&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 后补零 padEnd()</span></span><br><span class="line"><span class="string">&#x27;abc&#x27;</span>.<span class="title function_">padEnd</span>(<span class="number">6</span>,<span class="string">&quot;123465&quot;</span>);  <span class="comment">// &quot;abc123&quot;</span></span><br><span class="line"><span class="string">&#x27;abc&#x27;</span>.<span class="title function_">padEnd</span>(<span class="number">1</span>,<span class="string">&quot;123465&quot;</span>);  <span class="comment">// &quot;abc&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 还可以使用 ### 日期 farmat (内含补零方法)  所使用的方法，有些场景更灵活  </span></span><br></pre></td></tr></table></figure>

<h3 id="字符串转对象"><a href="#字符串转对象" class="headerlink" title="字符串转对象"></a>字符串转对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(string)</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line"><span class="built_in">eval</span>(<span class="string">&quot;(&quot;</span>+string+<span class="string">&quot;)&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>扩展阅读：<a href="/2021/05/20/how-does-json-parse-work/">JSON.parse方法是如何工作的？</a></p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[oauth2简单理解]]></title>
      <url>/2021/05/14/WH/oauth2/</url>
      <content type="html"><![CDATA[<p><strong>描述</strong><br>oauth2简单理解与实现</p>
<p><strong>思路</strong></p>
<ol>
<li>资源服务器生成一个对应的appkey(公钥)与appsecret(私钥)，并下发给应用</li>
<li>应用服务器保存公钥与私钥，每次请求前使用私钥对参数进行一个签名</li>
<li>在请求资源服务器时带上请求的参数、签名与公钥</li>
<li>资源服务器根据接收到的公钥查询对应的私钥</li>
<li>资源服务器根据私钥对参数进行与应用一致的签名来验证俩次签名是否一致</li>
</ol>
<p><strong>思路</strong></p>
<p>每次请求带上四个固定参数</p>
<ol>
<li>timestamp<blockquote>
<p>请求的时候的时间戳 —– 超过请求时间戳5分种之后的请求默认不处理</p>
</blockquote>
</li>
<li>sign<blockquote>
<p>签名 —– 使用私钥对参数进行签名之后得到</p>
</blockquote>
</li>
<li>appKey<blockquote>
<p>应用的key —– 与私钥是对应的，在私钥不参与传递的情况使资源服务器知道使用哪个私钥对参数进行签名</p>
</blockquote>
</li>
<li>method<blockquote>
<p>请求的资源名称 —– 每个资源有对应的资源名称</p>
</blockquote>
</li>
</ol>
<p><strong>示例</strong></p>
<ol>
<li>将参数名称进行排序</li>
<li>将参数以键值对的形式生成一个字符串</li>
<li>在字符串的前面加上私钥与method，最后也加上一个私钥</li>
<li>进行sha&#x2F;md5排序签名</li>
</ol>
<p>备注：具体的签名方式根据情况而定，此处提供一个思路</p>
]]></content>
      
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[对Feign返回服务器状态码的处理]]></title>
      <url>/2021/05/13/WH/server%20code/</url>
      <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>在前端请求后端接口时，后端返回的返回类的code为500或其他的，<br>而服务器返回的状态全为200。导致于前端每次都要在200中判断code。</p>
<p><strong>如下图所示</strong><br><img src="/../../../images/java-server-1620868011888.png" alt="java-server-1620868011888"></p>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p><strong>思路</strong></p>
<ol>
<li>使用spring ResponseEntity处理 返回的状态码与返回的信息</li>
<li>使用ResultPackageToString工具类对service层抓取返回的code</li>
<li>根据返回的code返回对应的服务器状态码与信息</li>
</ol>
<p><strong>代码</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加登录用户</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> loginInfo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/manage/user/info/add&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;Result&gt; <span class="title function_">queryUserInfo</span><span class="params">(<span class="meta">@RequestHeader(&quot;X-Token&quot;)</span> String token,</span></span><br><span class="line"><span class="params"><span class="meta">@RequestBody</span> LoginInfo loginInfo)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ResultPackageToString(client.queryUserInfo(token,loginInfo));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ResponseEntity&lt;Result&gt; <span class="title function_">ResultPackageToResult</span><span class="params">(Result result)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (result.getCode())&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">401</span>:</span><br><span class="line">                <span class="keyword">return</span> ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(result);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">404</span>:</span><br><span class="line">                <span class="keyword">return</span> ResponseEntity.notFound().build();</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> ResponseEntity.ok().body(result);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>




]]></content>
      
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[群辉部署rap2流程详解与踩坑]]></title>
      <url>/2021/05/11/sicker/how%20to%20install%20rap2%20on%20synology%20nas/</url>
      <content type="html"><![CDATA[<blockquote>
<p>公司今天打算弃用 apidoc ，而转向淘宝的 rap2 ，因为考虑文档的敏感性，最佳方案肯定是装在现有的群辉 NAS 上。</p>
</blockquote>
<p>成功后来复盘做一记录</p>
<p>首先，我们打开项目地址，</p>
<p><a href="https://github.com/thx/rap2-delos">rap2-delos</a>: 后端服务器仓库</p>
<p><a href="https://github.com/thx/rap2-dolores">rap2-dolores</a>: 前端 <code>React</code> 项目仓库</p>
<p>因为我这边采用群辉的 <code>NAS</code> ，那么通过 <code>docker</code> 显然更佳：</p>
<ol>
<li>不怕污染环境，造成一些不可预计的错误</li>
<li>群辉套件中心可以方便的安装 <code>docker</code></li>
<li>如果出现问题，可以方便的使用 <code>NAS</code> 的可视化界面，轻松重启。<br>:::center<br><img src="/../../../images/bb1fc5151fa7bbcc3e5722f8da56a49fa936d51e8584fd33287c367447bbe8b4.png" alt="图 1"><br><small>docker 操作界面</small><br>:::</li>
</ol>
<p>::: danger 注意<br>docker 安装过程略，请自行确保安装成功<br>:::</p>
<p>所以，我们跟着 <code>rap2-delos</code> 的 <code>README</code>[^read] 直接进入主题<br>[^read]: <a href="https://github.com/thx/rap2-delos#%E5%AE%89%E8%A3%85-docker">rap2-delos 的 readme</a></p>
<p>接着，就直接下载 <code>Dockerfile.yaml</code> ，下载后，为了省事，可以选择跟笔者一样，通过 <code>NAS</code> 可视化界面直接上传到方便找到的位置。</p>
<p>:::details 点击查看 Dockerfile.yaml 文件</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># BUILDING</span><br><span class="line">FROM node:lts-alpine AS builder</span><br><span class="line"></span><br><span class="line"># base on work of llitfkitfk@gmail.com</span><br><span class="line">LABEL maintainer=&quot;chibing.fy@alibaba-inc.com&quot;</span><br><span class="line"></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"># cache dependencies</span><br><span class="line">COPY package.json ./</span><br><span class="line"></span><br><span class="line"># 在国内打开下面一行加速</span><br><span class="line">#RUN npm config set registry https://registry.npm.taobao.org/</span><br><span class="line"></span><br><span class="line"># instal dependencies</span><br><span class="line">RUN npm install typescript -g &amp;&amp; \</span><br><span class="line">    npm install</span><br><span class="line"></span><br><span class="line"># build</span><br><span class="line">COPY . ./</span><br><span class="line">RUN npm run build</span><br><span class="line"></span><br><span class="line"># RUNNING</span><br><span class="line">FROM node:lts-alpine</span><br><span class="line"></span><br><span class="line"># base on work of llitfkitfk@gmail.com</span><br><span class="line">LABEL maintainer=&quot;chibing.fy@alibaba-inc.com&quot;</span><br><span class="line"># use China mirror of: https://github.com/jgm/pandoc/releases/download/2.7.3/pandoc-2.7.3-linux.tar.gz</span><br><span class="line">RUN wget http://rap2-taobao-org.oss-cn-beijing.aliyuncs.com/pandoc-2.7.3-linux.tar.gz &amp;&amp; \</span><br><span class="line">    tar -xf pandoc-2.7.3-linux.tar.gz &amp;&amp; \</span><br><span class="line">    cp pandoc-2.7.3/bin/* /usr/bin/ &amp;&amp; \</span><br><span class="line">    pandoc -v &amp;&amp; \</span><br><span class="line">    rm -rf pandoc-2.7.3-linux.tar.gz pandoc-2.7.3</span><br><span class="line"></span><br><span class="line">WORKDIR /app</span><br><span class="line">COPY --from=builder /app/public .</span><br><span class="line">COPY --from=builder /app/dist .</span><br><span class="line">COPY --from=builder /app/node_modules ./node_modules</span><br></pre></td></tr></table></figure>
<p>:::</p>
<p><img src="/../../../images/d55a5b15fce2db18e6c32992674dca7627439eb95134c2753d165cf3e63ec994.png" alt="图 5">  </p>
<p>接着，随着下面图片的指引，打开 <code>NAS</code> 的 <code>ssh</code> 端口</p>
<p><img src="/../../../images/042faeb97362005dcc0b1b9fbee22b42aca0ca359f3d32597b6a8f12fe9ffdd4.png" alt="图 6">  </p>
<p>现在，我们就可以直接使用终端工具，连接到我们的 <code>NAS</code> 上了。</p>
<p>::: info<br>终端工具请自行下载，笔者采用的是 xshell<br>:::</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host : 192.168.2.100  // NAS 可视化界面的IP ，请按照实际情况自行判断</span><br><span class="line">user : sicker // NAS 可视化界面登录采用的用户名</span><br><span class="line">password : ******** // NAS 可视化界面登录采用的密码</span><br></pre></td></tr></table></figure>

<p>登录成功后，会提示类似如下的界面</p>
<p><img src="/../../../images/2f8cf58ce3ac24fd108bab6a67d297f650c792c1f5b5e31adb95068851340e9c.png" alt="图 7">  </p>
<p>键入 </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo docker -v</span><br><span class="line"></span><br><span class="line">Docker version 18.09.8, build bfed4f5</span><br></pre></td></tr></table></figure>
<p>验证 docker 是否安装成功。</p>
<p>如成功了，就可以去找到刚才上传 <code>Dockerfile.yaml</code> 文件。</p>
<p>找到后，在该路径直接键入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo docker-compose up -d</span><br></pre></td></tr></table></figure>

<p>如若安装成功，应可以看到 一排类似 <code>Creating rap_mysql_1 ... done</code> 的提示语句。</p>
<p>此时，可以键入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo docker ps</span><br><span class="line"></span><br><span class="line">CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS                PORTS                                                                 NAMES</span><br><span class="line">b0e0dae2b315        rapteam/rap2-delos:latest     <span class="string">&quot;docker-entrypoint.s…&quot;</span>   About an hour ago   Up About an hour      0.0.0.0:38080-&gt;38080/tcp                                              rap_delos_1</span><br><span class="line">4cc7a9187550        mysql:5.7                     <span class="string">&quot;docker-entrypoint.s…&quot;</span>   About an hour ago   Up About an hour      3306/tcp, 33060/tcp                                                   rap_mysql_1</span><br><span class="line">b58ee2820383        redis:4                       <span class="string">&quot;docker-entrypoint.s…&quot;</span>   3 hours ago         Up 3 hours            6379/tcp                                                              rap_redis_1</span><br><span class="line">77cfba326062        rapteam/rap2-dolores:latest   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   3 hours ago         Up 3 hours            80/tcp, 0.0.0.0:3000-&gt;38081/tcp                                       rap_dolores_1</span><br></pre></td></tr></table></figure>
<p>看到这 4 个项目起来啦，就说明成功啦！</p>
<p>但，也别高兴的太早，我们还差最后一步。参见文档，也可以看到。第一次运行需要手动初始化mysql数据库。最后，键入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; docker-compose <span class="built_in">exec</span> delos node scripts/init</span><br></pre></td></tr></table></figure>

<p>大功告成！现在打开你的 <code>$&#123;NAS IP&#125;:3000</code> 查看吧！</p>
<p><img src="/../../../images/ad4f6f403c19d301a68eb1a242d5eb611a68d1620a87d1042517440fa8d4858a.png" alt="图 8">  </p>
<p>如果你还是没成功，也许，你需要接着往下看</p>
<h2 id="Issues"><a href="#Issues" class="headerlink" title="Issues"></a>Issues</h2><ol>
<li>[ERROR] [Entrypoint]: MYSQL_USER&#x3D;”root”, MYSQL_USER and MYSQL_PASSWORD are for configuring a regular user and cannot be used for the root user<br>::: details 点开查看详细报错信息<figure class="highlight bash"><figcaption><span>&#123;7,9&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">2021-03-27 13:16:08+00:00 [Note] [Entrypoint]: Entrypoint script <span class="keyword">for</span> MySQL Server 8.0.23-1debian10 started.</span><br><span class="line"></span><br><span class="line">2021-03-27 13:16:08+00:00 [Note] [Entrypoint]: Switching to dedicated user <span class="string">&#x27;mysql&#x27;</span></span><br><span class="line"></span><br><span class="line">2021-03-27 13:16:08+00:00 [Note] [Entrypoint]: Entrypoint script <span class="keyword">for</span> MySQL Server 8.0.23-1debian10 started.</span><br><span class="line"></span><br><span class="line">2021-03-27 13:16:08+00:00 [ERROR] [Entrypoint]: MYSQL_USER=<span class="string">&quot;root&quot;</span>, MYSQL_USER and MYSQL_PASSWORD are <span class="keyword">for</span> configuring a regular user and cannot be used <span class="keyword">for</span> the root user</span><br><span class="line"></span><br><span class="line">Remove MYSQL_USER=<span class="string">&quot;root&quot;</span> and use one of the following to control the root user password:</span><br><span class="line"></span><br><span class="line">- MYSQL_ROOT_PASSWORD</span><br><span class="line"></span><br><span class="line">- MYSQL_ALLOW_EMPTY_PASSWORD</span><br><span class="line"></span><br><span class="line">- MYSQL_RANDOM_ROOT_PASSWORD</span><br></pre></td></tr></table></figure>
:::</li>
</ol>
<p>此解决方案就已经在报错中给予了提示。可以查看上述完整错误代码高亮处。大致翻译下来就是 <code>MYSQL_USER</code> 和 <code>MYSQL_PASSWORD</code> 用于配置常规用户，不能用于 <code>root</code> 用户,删除 <code>MYSQL_USER=&quot;root&quot;</code> 。</p>
<p>所以，让我们回头简单修改下 <code>Dockerfile.yaml:64</code> ,将 <code>MYSQL_USER: &quot;root&quot;</code> 前加一个 <code>#</code> ，即</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MYSQL_USER<span class="punctuation">:</span> <span class="string">&quot;root&quot;</span>  =&gt; # MYSQL_USER<span class="punctuation">:</span> <span class="string">&quot;root&quot;</span></span><br></pre></td></tr></table></figure>
<p>接着重新运行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo docker-compose up -d</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>mysql 5.7 启动后闪退</li>
</ol>
<p>同上</p>
<ol start="3">
<li>运行数据库初始化报错</li>
</ol>
<p>同上</p>
]]></content>
      
        
        <tags>
            
            <tag> Synology </tag>
            
            <tag> rap2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[动态代理（含基础代码）]]></title>
      <url>/2021/05/08/MTF/JDK_AOP/</url>
      <content type="html"><![CDATA[<blockquote>
<p>刚开始是为了解决实体类过多而想尝试创建动态实体类···</p>
</blockquote>
<p>一般动态代理是加载service层与dao层之间，用来有效控制对委托类对象的直接访问，也可以很好地隐藏和保护委托类对象（我不懂啥保护隐藏，我就是想让它自动创建实体类，或者通过父类去引导至实体类层），动态代理的底层实现逻辑大概就是···读写本地文本文件后将文件进行编译再运行实现的···</p>
<p><strong>编译java类方法</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">javac</span><span class="params">(String writerPath)</span>&#123;  </span><br><span class="line">    <span class="comment">//java编译器  </span></span><br><span class="line">    <span class="type">JavaCompiler</span> <span class="variable">compiler</span> <span class="operator">=</span> ToolProvider.getSystemJavaCompiler();  </span><br><span class="line">    <span class="comment">//文件管理器，参数1：diagnosticListener  监听器,监听编译过程中出现的错误  </span></span><br><span class="line">    <span class="type">StandardJavaFileManager</span> <span class="variable">manager</span> <span class="operator">=</span> compiler.getStandardFileManager(<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);  </span><br><span class="line">    <span class="comment">//java文件转换到java对象，可以是多个文件  </span></span><br><span class="line">    Iterable&lt;? <span class="keyword">extends</span> <span class="title class_">JavaFileObject</span>&gt; it = manager.getJavaFileObjects(writerPath);  </span><br><span class="line">    <span class="comment">//编译任务,可以编译多个文件  </span></span><br><span class="line">    <span class="type">CompilationTask</span> <span class="variable">t</span> <span class="operator">=</span> compiler.getTask(<span class="literal">null</span>, manager, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, it);  </span><br><span class="line">    <span class="comment">//执行任务  </span></span><br><span class="line">    t.call();  </span><br><span class="line">    <span class="keyword">try</span> &#123;  </span><br><span class="line">        manager.close();  </span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;  </span><br><span class="line">        e.printStackTrace();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<p><strong>运行java类方法</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/** </span></span><br><span class="line"><span class="comment"> * 利用反射，实例化对象，此方法可指定class路径，放在classpath下可能会和jdk编译的文件冲突 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> packPath </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">java</span><span class="params">(String packPath)</span>&#123;  </span><br><span class="line">    URL[] urls = <span class="literal">null</span>;  </span><br><span class="line">    <span class="keyword">try</span> &#123;  </span><br><span class="line">        <span class="comment">//类路径,url的本地文件格式需要加file:/  </span></span><br><span class="line">        urls = <span class="keyword">new</span> <span class="title class_">URL</span>[] &#123;<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;file:/&quot;</span>+System.getProperty(<span class="string">&quot;user.dir&quot;</span>)+<span class="string">&quot;/src/&quot;</span>)&#125;;  </span><br><span class="line">    &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;  </span><br><span class="line">        e.printStackTrace();  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">//类加载器  </span></span><br><span class="line">    <span class="type">URLClassLoader</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URLClassLoader</span>(urls);  </span><br><span class="line">    <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> <span class="literal">null</span>;  </span><br><span class="line">    <span class="keyword">try</span> &#123;  </span><br><span class="line">        <span class="comment">//加载到内存  </span></span><br><span class="line">        clazz = url.loadClass(packPath);  </span><br><span class="line">        <span class="comment">//实例化对象  </span></span><br><span class="line">        clazz.newInstance();  </span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;  </span><br><span class="line">        e.printStackTrace();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<blockquote>
<p>动态代理的底层就是编译运行动态java文件（感觉动态实体类指日可待了啊）</p>
</blockquote>
<p>动态代理目前了解到的几种方式：<br>1、JDK动态代理<br>2、CGLIB动态代理<br>最近接触到的框架那就是springboot，简单粗暴，内置org.springframework.cglib包，直接能用第二种···所以···走起（以下代码为转载···亲测可用）</p>
<p><strong>第一步：创建DynamicBean 实体类</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DynamicBean</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Object target;</span><br><span class="line">    <span class="keyword">private</span> BeanMap beanMap;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DynamicBean</span><span class="params">(Class superclass, Map&lt;String, Class&gt; propertyMap)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.target = generateBean(superclass, propertyMap);</span><br><span class="line">        <span class="built_in">this</span>.beanMap = BeanMap.create(<span class="built_in">this</span>.target);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setValue</span><span class="params">(String property, Object value)</span> &#123;</span><br><span class="line">        beanMap.put(property, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getValue</span><span class="params">(String property)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> beanMap.get(property);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getTarget</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.target;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据属性生成对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Object <span class="title function_">generateBean</span><span class="params">(Class superclass, Map&lt;String, Class&gt; propertyMap)</span> &#123;</span><br><span class="line">        <span class="type">BeanGenerator</span> <span class="variable">generator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanGenerator</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != superclass) &#123;</span><br><span class="line">            <span class="comment">//cglib需要指定父类</span></span><br><span class="line">            generator.setSuperclass(superclass);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanGenerator.addProperties(generator, propertyMap);</span><br><span class="line">        <span class="keyword">return</span> generator.create();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>第二步：创建映射类，用来生成动态bean</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReflectUtil</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(ReflectUtil.class);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getObject</span><span class="params">(Object dest, Map&lt;String, Object&gt; addProperties)</span> &#123;</span><br><span class="line">	    <span class="type">PropertyUtilsBean</span> <span class="variable">propertyUtilsBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PropertyUtilsBean</span>();</span><br><span class="line">	    PropertyDescriptor[] descriptors = propertyUtilsBean.getPropertyDescriptors(dest);</span><br><span class="line">	    Map&lt;String, Class&gt; propertyMap = Maps.newHashMap();</span><br><span class="line">	    <span class="keyword">for</span> (PropertyDescriptor d : descriptors) &#123;</span><br><span class="line">	        <span class="keyword">if</span> (!<span class="string">&quot;class&quot;</span>.equalsIgnoreCase(d.getName())) &#123;</span><br><span class="line">	            propertyMap.put(d.getName(), d.getPropertyType());</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    addProperties.forEach((k, v) -&gt; &#123;</span><br><span class="line">	    	<span class="type">String</span> <span class="variable">sclass</span> <span class="operator">=</span> v.getClass().toString();</span><br><span class="line">	    	<span class="keyword">if</span>(sclass.equals(<span class="string">&quot;class java.util.Date&quot;</span>)) &#123;<span class="comment">//对日期进行处理</span></span><br><span class="line">	    		propertyMap.put(k, Long.class);</span><br><span class="line">	    	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">	    		propertyMap.put(k, v.getClass());</span><br><span class="line">	    	&#125;</span><br><span class="line">	    	</span><br><span class="line">	    &#125;);</span><br><span class="line">	    <span class="type">DynamicBean</span> <span class="variable">dynamicBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DynamicBean</span>(dest.getClass(), propertyMap);</span><br><span class="line">	    propertyMap.forEach((k, v) -&gt; &#123;</span><br><span class="line">	        <span class="keyword">try</span> &#123;</span><br><span class="line">	            <span class="keyword">if</span> (!addProperties.containsKey(k)) &#123;</span><br><span class="line">	                dynamicBean.setValue(k, propertyUtilsBean.getNestedProperty(dest, k));</span><br><span class="line">	            &#125;</span><br><span class="line">	        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">	            logger.error(<span class="string">&quot;动态添加字段出错&quot;</span>, e);</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;);</span><br><span class="line">	    addProperties.forEach((k, v) -&gt; &#123;</span><br><span class="line">	        <span class="keyword">try</span> &#123;</span><br><span class="line">	        	<span class="type">String</span> <span class="variable">sclass</span> <span class="operator">=</span> v.getClass().toString();</span><br><span class="line">		    	<span class="keyword">if</span>(sclass.equals(<span class="string">&quot;class java.util.Date&quot;</span>)) &#123;<span class="comment">//动态添加的字段为date类型需要进行处理</span></span><br><span class="line">		    		<span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> (Date) v;</span><br><span class="line">		    		dynamicBean.setValue(k, date.getTime());</span><br><span class="line">		    	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		    		dynamicBean.setValue(k, v);</span><br><span class="line">		    	&#125;</span><br><span class="line">	        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">	        	logger.error(<span class="string">&quot;动态添加字段值出错&quot;</span>, e);</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;);</span><br><span class="line">	    <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> dynamicBean.getTarget();</span><br><span class="line">	    <span class="keyword">return</span> obj;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>第三步：增添属性值：</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">user.setName(<span class="string">&quot;Daisy&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;User：&quot;</span>+JSON.toJSONString(user));</span><br><span class="line">Map&lt;String,Object&gt; propertiesMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String,Object&gt;();</span><br><span class="line">propertiesMap.put(<span class="string">&quot;age&quot;</span>, <span class="number">18</span>);</span><br><span class="line"><span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ReflectUtil.getTarget(user, propertiesMap);</span><br><span class="line">System.out.println(<span class="string">&quot;动态为User添加age之后，User：&quot;</span>+JSON.toJSONString(obj));</span><br></pre></td></tr></table></figure>
<p>这样动态实体类就可以使用了<br><img src="https://img-blog.csdnimg.cn/2021050815572748.png" alt="在这里插入图片描述"></p>
<blockquote>
<p>然而···然而···有啥用呢？？？不同的service都需要请求不同的dao层，然而不同的dao层要通过这一个方法来改变这一个实体类···冲突是必然的，除非依然根据service来创建不同的实体类层···无非就是不用一遍遍删改里面的属性了···用list&lt;object[]&gt;不也很香？？？<br>(&#x2F;“≡ _ ≡)&#x2F;<del>┴┴   (&#x2F;“≡ _ ≡)&#x2F;</del>┴┴    (&#x2F;“≡ _ ≡)&#x2F;~┴┴</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于get请求和post请求]]></title>
      <url>/2021/05/07/linvkey/get%20and%20post/</url>
      <content type="html"><![CDATA[<h3 id="get和post请求的参数格式"><a href="#get和post请求的参数格式" class="headerlink" title="get和post请求的参数格式"></a>get和post请求的参数格式</h3><p>学习的路上，该踩的坑还是要踩的，再小的问题踩完就记录下来，让自己涨涨记性。</p>
<p>在做后台系统的项目中每次遇到请求数据时都想当然的以为参数的格式都一样，其实对于get和post请求时的参数格式是不一样的</p>
<p>&#x2F;&#x2F;1.get请求</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">this.$http.get(&quot;接口/&quot;+参数1+&quot;/&quot;+参数2+</span><br><span class="line">  &quot;/&quot;+&quot;参数n&quot;</span><br><span class="line">).then(res=&gt;&#123;</span><br><span class="line">  //处理逻辑</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>


<p>&#x2F;&#x2F;2.post请求</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">this.$http.post(&quot;接口&quot;，&#123;</span><br><span class="line">  键1:值1,</span><br><span class="line">  键2:值2，</span><br><span class="line">  ……</span><br><span class="line">&#125;).then(res=&gt;&#123;</span><br><span class="line">  //处理逻辑</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>如果请求成功，res就是从后端获取的数据合集</p>
<h3 id="get和post的一些区别"><a href="#get和post的一些区别" class="headerlink" title="get和post的一些区别"></a>get和post的一些区别</h3><ol>
<li><p>get在浏览器回退时不受影响而post会再次出发请求</p>
</li>
<li><p>get请求会被浏览器自动缓存(cache)，而post不会但可以手动设置</p>
</li>
<li><p>get请求只支持URL编码，而post支持多种编码( </p>
<p>application&#x2F;x-www-form-urlencoded如果表单的 enctype 属性不设置则post默认以这种方式编码，</p>
<p>multipart&#x2F;form-data使用form表单上传文件时设置enctype 为这个属性即可，这种编码方式对各大服务端语言有着良好的支持，</p>
<p> application&#x2F;json这种编码方式大都用作请求头来告诉后端消息主体是序列化后的 JSON 字符串 ，</p>
<p> text&#x2F;xml 这是一种使用 HTTP 作为传输协议的编码方式是远程调用规范能很好的支持已有的 XML-RPC 服务 </p>
<p> )</p>
</li>
<li><p>使用get而产生的URL地址可以被Bookmark书签记录(再次访问之前访问的位置中间的一系列环节都可以略过)，而post不可以</p>
</li>
<li><p>get请求参数会被完整保留在浏览器历史记录里，而post中的参数不会被保留 </p>
</li>
<li><p>get请求在URL中传送的参数是有长度限制的，而post没有限制 </p>
</li>
<li><p>对参数的数据类型，get只接受ASCII字符，而post没有限制 </p>
</li>
<li><p>get比post更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息</p>
</li>
</ol>
<p>其实网络请求http的底层是 TCP&#x2F;IP，而get和post的底层也是 TCP&#x2F;IP ，换言之它们都是通过TCP链接的，所以它们能做的事也是一样的，如果给get加上request,给post加上url参数，在技术上是行得通的。</p>
<h3 id="小故事"><a href="#小故事" class="headerlink" title="小故事"></a>小故事</h3><p>  其实在万维网中， TCP就像轮船，我们用TCP来运输数据，它从不会丢失数据因此非常可靠。但是当所有运输数据的轮船都长得一模一样的时候就分不清谁是谁了。所以交通规则http就诞生了，它给轮船在运输时设定了几种服务区， 有get, post, put, delete等等 。http规定每当轮船要行使get服务区时，要给在船身贴上get标签( 设置method为get ),而且要求把数据放在最显眼的甲板位置(url中)，如果要行使post服务区,就要在船身贴上post标签并且把数据放在船舱中，当然你在get服务区时也可以将数据不放在甲板，偷偷藏点放在船舱也行，虽然这样很不好。也可以傻傻在post服务区把数据放在甲板。毕竟http只负责开通服务区(get, post, put, delete等等)，轮船(TCP)才是主导数据究竟是按哪种方式传输的。</p>
<p>  而在万维网中还有一个重要的角色运输公司( 不同的浏览器（发起http请求）和服务器（接受http请求）就是不同的运输公司 )， 你可以在甲板上无限的堆货物（url中无限加参数）。但是运输公司可不傻，装货和卸货也是有很大成本的，他们会限制单次运输量来控制风险，数据量太大对浏览器和服务器都是很大负担。 </p>
<p>   业界不成文的规定是，大多数浏览器通常都会限制url长度在2K个字节，而（大多数）服务器最多处理64K大小的url。超过的部分，恕不处理。  如果你用GET服务，在request body偷偷藏了数据，不同服务器的处理方式也是不同的，有些服务器会帮你卸货，读出数据，有些服务器直接忽略，所以，虽然get可以带request body，也不能保证一定能被接收到。 </p>
<p>  所以get和post本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器&#x2F;服务器的限制，导致他们在应用过程中体现出一些不同。  </p>
<h3 id="结尾剧情反转"><a href="#结尾剧情反转" class="headerlink" title="结尾剧情反转"></a>结尾剧情反转</h3><p> get和post还有一个重大区别:</p>
<p> get产生一个TCP数据包；post产生两个TCP数据包。 </p>
<p>对于get方式的请求，浏览器会把http header和data一并发送出去，服务器响应200（返回数据）；</p>
<p>而对于post，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok（返回数据）。</p>
<p>也就是说使用get服务区，轮船只需要走一趟，而要使用post服务区，轮船要先去打一次招呼说我要走post服务区了，你安排一下，然后才会运货。</p>
<p> 据研究，在网络环境好的情况下，发一次包的时间和发两次包的时间差别基本可以无视。而在网络环境差的情况下，两次包的TCP在验证数据包完整性上，有非常大的优点。  也并不是所有浏览器都会在POST中发送两次包，Firefox就只发送一次。 </p>
<p>亲测有效，奔走相告！</p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
            <tag> http </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Webpack 循环依赖的问题 Error:Cyclic dependency]]></title>
      <url>/2021/05/07/sicker/resolve%20webpack%20error%20cyclic%20dependency/</url>
      <content type="html"><![CDATA[<p>错误代码</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\node_modules\toposort\index.js:35</span><br><span class="line">throw new Error(<span class="string">&#x27;Cyclic dependency&#x27;</span> + nodeRep)</span><br><span class="line">^</span><br><span class="line"></span><br><span class="line">Error: Cyclic dependency</span><br></pre></td></tr></table></figure>

<p>当我键入 <code>npm list toposort</code> 时，可以看到如下的结果</p>
<figure class="highlight bash"><figcaption><span>&#123;5&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vsite@1.0.0 D:\frontend\vue-dw</span><br><span class="line">└─┬ vuepress@1.8.2</span><br><span class="line">  └─┬ @vuepress/core@1.8.2</span><br><span class="line">    └─┬ vuepress-html-webpack-plugin@3.2.0</span><br><span class="line">      └── toposort@1.0.7</span><br></pre></td></tr></table></figure>

<p>可以看到该 <code>package</code> 被 <code>vuepress-html-webpack-plugin</code> 所依赖</p>
<p>经过查询，可以看到在 <code>toposort</code> 的 <code>issue</code>[^is] 中给出了解决方案</p>
<p>按照这个思路尝试打开 <code>/node_modules/vuepress-html-webpack-plugin/index.js:33</code> 将 <code>chunksSortMode</code> 修改为 <code>none</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">chunksSortMode</span>: <span class="string">&#x27;auto&#x27;</span>,    =&gt;   <span class="attr">chunksSortMode</span>: <span class="string">&#x27;none&#x27;</span>,  </span><br></pre></td></tr></table></figure>

<p>重新启动后，问题解决了。</p>
<hr>
<p>但是！</p>
<p>没错！</p>
<p>这样不够优雅。</p>
<p>从 <code>vuepress</code> 官方配置文档中可以找到关于修改 <code>wepack</code> 的章节<a href="%5BconfigureWebpack%5D(https://vuepress.vuejs.org/zh/config/#configurewebpack)">^docs</a></p>
<p>我们依样在 <code>config.js</code> 中添加</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fix Error: Cyclic dependency</span></span><br><span class="line"><span class="attr">configureWebpack</span>: <span class="function">(<span class="params">config, isServer</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!isServer) &#123;</span><br><span class="line">    config.<span class="property">plugins</span>[<span class="number">4</span>].<span class="property">options</span>.<span class="property">chunksSortMode</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>至此，问题的得到了优雅的解决。</p>
<p>[^is]: <a href="https://github.com/marcelklehr/toposort/issues/20">Cyclic dependency error</a></p>
]]></content>
      
        
        <tags>
            
            <tag> vuepress </tag>
            
            <tag> webpack </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue中关于mixin的使用]]></title>
      <url>/2021/05/07/sicker/vue%20mixin/</url>
      <content type="html"><![CDATA[<p>:::info<br>代码就是最好的语言，废话不多说，我们直接看示例<br>:::<br>mixin.vue</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import mixin from &quot;../mixin/mixin&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  mixins: [mixin],</span><br><span class="line">  data()&#123;</span><br><span class="line">      return &#123;</span><br><span class="line">          hello : &quot;mixin.vue&quot;,</span><br><span class="line">          count : 1</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    console.log(&quot;hello from mixin.vue&quot;);</span><br><span class="line">    console.log(this.hello);</span><br><span class="line">    this.text = &quot;has changed&quot;</span><br><span class="line">    this.add();</span><br><span class="line">    this.hi();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    hi() &#123;</span><br><span class="line">      console.log(&quot;hi method from mixin.vue&quot;);</span><br><span class="line">      console.log(this.count);</span><br><span class="line">    &#125;,</span><br><span class="line">    say() &#123;</span><br><span class="line">      console.log(&#x27;say something from mix.vue&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>..&#x2F;mixin&#x2F;mixin.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">hello</span>: <span class="string">&quot;mixin.js&quot;</span>,</span><br><span class="line">      <span class="attr">text</span>: <span class="string">&quot;change me&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello from mixin.js&#x27;</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">say</span>();</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">text</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">hi</span>();</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">hi</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我到底会不会执行！&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">add</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">count</span>++</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mixin.js:9 触发混入中created生命周期</span></span><br><span class="line">hello from mixin.js</span><br><span class="line"><span class="comment"># mixin.js:10 执行当前组件中的say方法</span></span><br><span class="line">say something from mix.vue</span><br><span class="line"><span class="comment"># mixin.vue:15 触发当前组件中的created生命周期</span></span><br><span class="line">hello from mixin.vue</span><br><span class="line"><span class="comment"># mixin.vue:16 打印当前组件中的hello属性</span></span><br><span class="line">mixin.vue</span><br><span class="line"><span class="comment"># mixin.vue:23 触发当前组件的hi方法</span></span><br><span class="line">hi method from mixin.vue</span><br><span class="line"><span class="comment"># mixin.vue:18 执行混入中的add方法，使得count++，后经过</span></span><br><span class="line"><span class="comment"># mixin.vue:19 中的hi方法打印出count</span></span><br><span class="line">2</span><br><span class="line"><span class="comment"># mixin.vue:17 当前组件修改了混入中text属性的值，经触发混入中mounted生命周期时，</span></span><br><span class="line"><span class="comment"># mixin.js:13 打印出混入中text的值</span></span><br><span class="line">has changed</span><br><span class="line"><span class="comment"># mixin.js:14 在混入中执行hi方法，发现其仍执行的是mixin.vue中的hi方法，证明了mixin.vue覆盖了混入中的方法</span></span><br><span class="line">hi method from mixin.vue</span><br><span class="line">2</span><br></pre></td></tr></table></figure>

<p>再解析一下：</p>
<ul>
<li>当引入的 mixin 中与当前组件同时存在同样的方法和属性时，将不会报错，当前组件的属性方法将覆盖混入中的</li>
<li>混入与当前组件的生命周期分别执行，同周期先行执行混入中的，不同周期按先后顺序执行</li>
<li>混入与当前组件能相互读取操作的对方的属性与方法</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vuepress中文标签或其他路径引发的404问题]]></title>
      <url>/2021/05/06/sicker/support%20chinese%20tags%20on%20vuepress/</url>
      <content type="html"><![CDATA[<p>这个问题其实已然不新鲜了，主要源于浏览器对直接输入的中文 <code>url</code> 做了一次 <code>encode</code> 导致 匹配不到 <code>vue-router</code> 对应的 <code>path</code></p>
<p>要解决这个问题，可以参照 <code>Pull requests</code> [^github]</p>
<p>[^github]: <a href="https://github.com/vuejs/vuepress/pull/473">Support filename that contains non-ASCII and unicode chars</a></p>
<p>有了这层思路，问题也就不难得到解决。</p>
<blockquote>
<p>方法1：纠正 router 的跳转</p>
</blockquote>
<p>因为 <code>vuepress</code> 的机制问题，没有匹配到 <code>layout</code> 的 <code>markdown</code> 文件，最终会自动导向 <code>404.vue</code> 或者 <code>NotFound.vue</code> 。了解到这层后，我们可以直接在导向的终点对其进行操作。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> routes = [<span class="variable language_">this</span>.<span class="property">$author</span>.<span class="property">_metaMap</span>, <span class="variable language_">this</span>.<span class="property">$tag</span>.<span class="property">_metaMap</span>],</span><br><span class="line">      routeList = []; <span class="comment">// 将所有包含中文需要重新匹配的 router path 写入一个数组中</span></span><br><span class="line">    routes.<span class="title function_">forEach</span>(<span class="function">(<span class="params">route</span>) =&gt;</span> &#123; <span class="comment">// 遍历将对象糅合成一个数组</span></span><br><span class="line">      <span class="title class_">Object</span>.<span class="title function_">keys</span>(route).<span class="title function_">forEach</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">        routeList.<span class="title function_">push</span>(route[key].<span class="property">path</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span>(routeList.<span class="title function_">includes</span>(<span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">pathMatch</span>))&#123; <span class="comment">// 判断是否存在当前 route ，存在则跳转</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">pathMatch</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>::: tip<br><code>this.$author._metaMap</code> 与 <code>this.$tag._metaMap</code> 来源于 <code>config.js</code> 中的 <code>frontmatters</code> ； 参照 <a href="https://vuepress-plugin-blog.ulivz.com/guide/getting-started.html#frontmatter-classifier">frontmatter-classifier</a><br>:::</p>
<blockquote>
<p>方法2：对 <code>url</code> 进行 <code>decode</code></p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// enhanceApp.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;history&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 防止相同路由跳转时报错</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">VueRouterPush</span> = <span class="title class_">Router</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">push</span></span><br><span class="line"><span class="title class_">Router</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">push</span> = <span class="keyword">function</span> <span class="title function_">push</span> (to) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">VueRouterPush</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, to).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> (&#123;</span><br><span class="line">  <span class="title class_">Vue</span>,</span><br><span class="line">  router</span><br><span class="line">&#125;) =&gt; &#123;</span><br><span class="line">  router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 解决非ASCII文件名的路由, 防止 404</span></span><br><span class="line">    <span class="keyword">const</span> decodedPath = <span class="built_in">decodeURIComponent</span>(to.<span class="property">path</span>)</span><br><span class="line">    <span class="keyword">if</span> (decodedPath !== to.<span class="property">path</span>) &#123;</span><br><span class="line">      <span class="title function_">next</span>(<span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;, to, &#123;</span><br><span class="line">        <span class="attr">fullPath</span>: <span class="built_in">decodeURIComponent</span>(to.<span class="property">fullPath</span>),</span><br><span class="line">        <span class="attr">path</span>: decodedPath</span><br><span class="line">      &#125;))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">next</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> vuepress </tag>
            
            <tag> 插件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Vue高德地图api使用指南（动态渲染信息窗体）]]></title>
      <url>/2021/05/06/sunyifang/gaodeMap/</url>
      <content type="html"><![CDATA[<p>**项目中用到了高德地图API，写完后感觉功能&#x2F;结构都很散乱，自己整理一下留以备用 **</p>
<h3 id="地图动态渲染样式（卡片内容可自定义）"><a href="#地图动态渲染样式（卡片内容可自定义）" class="headerlink" title="地图动态渲染样式（卡片内容可自定义）"></a>地图动态渲染样式（卡片内容可自定义）</h3><p><img src="https://img-blog.csdnimg.cn/20210506133935626.gif" alt="在这里插入图片描述"></p>
<h3 id="地图API的引入"><a href="#地图API的引入" class="headerlink" title="地图API的引入"></a>地图API的引入</h3><p>直接采用古老的方式index.heml中引入js<br>index.html</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;icon&quot; href=&quot;&lt;%= BASE_URL %&gt;favicon.ico&quot;&gt;</span><br><span class="line">    &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot; src=&quot;https://webapi.amap.com/maps?v=1.4.15&amp;key=aaaaaaaaaa&amp;plugin=AMap.InfoWindow&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;noscript&gt;</span><br><span class="line">      &lt;strong&gt;浏览器版本过旧，需要升级后使用&lt;/strong&gt;</span><br><span class="line">    &lt;/noscript&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;!-- built files will be auto injected --&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>在plugin中可以直接引入一些api（后续介绍动态引入方式）</p>
<h3 id="使用高德地图控件"><a href="#使用高德地图控件" class="headerlink" title="使用高德地图控件"></a>使用高德地图控件</h3><p><strong>因为使用方式大同小异这里仅介绍一种动态渲染的api</strong></p>
<h4 id="首先需要创建一个map对象"><a href="#首先需要创建一个map对象" class="headerlink" title="首先需要创建一个map对象"></a>首先需要创建一个map对象</h4><p>创建map后加入地图视野、模式、角度等参数。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Map</span>(<span class="string">&quot;container&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">mapStyle</span>: <span class="string">&quot;amap://styles/93cf8411173f9097e8488ab69af8bbc0&quot;</span>, <span class="comment">//自定义样式的地址</span></span><br><span class="line">  <span class="attr">zoom</span>: <span class="number">13</span>, <span class="comment">//级别</span></span><br><span class="line">  <span class="attr">zooms</span>: [<span class="number">13</span>, <span class="number">16</span>],</span><br><span class="line">  <span class="attr">layers</span>: [],</span><br><span class="line">  <span class="comment">// center: [121.498586, 31.239637],//上海</span></span><br><span class="line">  <span class="attr">center</span>: [<span class="number">120.5853</span>, <span class="number">31.298886</span>], <span class="comment">//苏州</span></span><br><span class="line">  <span class="attr">viewMode</span>: <span class="string">&quot;3D&quot;</span>, <span class="comment">//使用3D视图</span></span><br><span class="line">  <span class="attr">pitch</span>: <span class="number">40</span>, <span class="comment">// 地图俯仰角度，有效范围 0 度- 83 度</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="使用infowindow"><a href="#使用infowindow" class="headerlink" title="使用infowindow"></a>使用infowindow</h4><p>因为需要不断循环所以要在定时器中进行操作<strong>注意这里要在一个能访问到数据及map的作用域中</strong><br>卡片信息为jsx写法<br>步骤分为显示卡片、打开信息窗体、循环判断、关闭上一卡片</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  infowindow1?infowindow1.<span class="title function_">close</span>():<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="comment">//卡片信息</span></span><br><span class="line">  <span class="keyword">let</span> content = <span class="string">`&lt;div style=&quot;background-color:rgba(255,255,255,0.2);&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div&gt;位置名称:<span class="subst">$&#123;that.addressArr[that.index].name&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div&gt;经度:<span class="subst">$&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">      that.addressArr[that.index].longitude</span></span></span><br><span class="line"><span class="subst"><span class="string">    &#125;</span>&lt;/div&gt;&lt;div&gt;纬度:<span class="subst">$&#123;that.addressArr[that.index].latitude&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div&gt;设备总数:<span class="subst">$&#123;that.addressArr[that.index].value&#125;</span>&lt;div&gt;&lt;div&gt;</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line">  <span class="comment">//显示卡片</span></span><br><span class="line">  <span class="keyword">let</span> infowindow1 = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">InfoWindow</span>(&#123;</span><br><span class="line">    <span class="attr">content</span>: content,</span><br><span class="line">    <span class="attr">offset</span>: <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Pixel</span>(<span class="number">15</span>, <span class="number">10</span>),</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(that.<span class="property">index</span>,that.<span class="property">addressArr</span>[that.<span class="property">index</span>]);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(that.<span class="property">index</span>,that.<span class="property">addressArr</span>.<span class="property">length</span>);</span><br><span class="line">  <span class="comment">// 打开信息窗体</span></span><br><span class="line">  infowindow1.<span class="title function_">open</span>(map, [</span><br><span class="line">    that.<span class="property">addressArr</span>[that.<span class="property">index</span>].<span class="property">longitude</span>,</span><br><span class="line">    that.<span class="property">addressArr</span>[that.<span class="property">index</span>].<span class="property">latitude</span>,</span><br><span class="line">  ]);</span><br><span class="line">  that.<span class="property">index</span>++</span><br><span class="line">  <span class="keyword">if</span> (that.<span class="property">index</span> &gt; that.<span class="property">addressArr</span>.<span class="property">length</span>-<span class="number">1</span>) &#123;</span><br><span class="line">    that.<span class="property">index</span> = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure>
<h4 id="异步加载插件方法"><a href="#异步加载插件方法" class="headerlink" title="异步加载插件方法"></a>异步加载插件方法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">AMap</span>.<span class="title function_">plugin</span>([<span class="string">&quot;AMap.ToolBar&quot;</span>, <span class="string">&quot;AMap.Scale&quot;</span>], <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//异步加载插件</span></span><br><span class="line">  <span class="keyword">var</span> toolbar = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">ToolBar</span>();</span><br><span class="line">  map.<span class="title function_">addControl</span>(toolbar);</span><br><span class="line">  <span class="keyword">var</span> scale = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Scale</span>(&#123;</span><br><span class="line">    <span class="attr">offset</span>: <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Pixel</span>(<span class="number">10</span>, <span class="number">10</span>),</span><br><span class="line">  &#125;);</span><br><span class="line">  map.<span class="title function_">addControl</span>(scale);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// var geolocation = new AMap.Geolocation(&#123;</span></span><br><span class="line">  <span class="comment">//   // 是否使用高精度定位，默认：true</span></span><br><span class="line">  <span class="comment">//   enableHighAccuracy: true,</span></span><br><span class="line">  <span class="comment">//   // 设置定位超时时间，默认：无穷大</span></span><br><span class="line">  <span class="comment">//   timeout: 4000,</span></span><br><span class="line">  <span class="comment">//   // 定位按钮的停靠位置的偏移量，默认：Pixel(10, 20)</span></span><br><span class="line">  <span class="comment">//   // buttonOffset: new AMap.Pixel(5, 10),</span></span><br><span class="line">  <span class="comment">//   //  定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false</span></span><br><span class="line">  <span class="comment">//   zoomToAccuracy: true,</span></span><br><span class="line">  <span class="comment">//   //  定位按钮的排放位置,  RB表示右下</span></span><br><span class="line">  <span class="comment">//   buttonPosition: &quot;RB&quot;,</span></span><br><span class="line">  <span class="comment">// &#125;);</span></span><br><span class="line">  map.<span class="title function_">addControl</span>(geolocation);</span><br><span class="line">  geolocation.<span class="title function_">getCurrentPosition</span>(<span class="keyword">function</span> (<span class="params">status, result</span>) &#123;</span><br><span class="line">    <span class="comment">// console.log(status);</span></span><br><span class="line">    <span class="comment">// console.log(result);</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="具体JSAPI需要查看官方文档"><a href="#具体JSAPI需要查看官方文档" class="headerlink" title="具体JSAPI需要查看官方文档"></a>具体JSAPI需要查看官方文档</h3><p><a href="https://lbs.amap.com/api/javascript-api/guide/map/lifecycle">高德地图API官方文档</a><br><a href="https://lbs.amap.com/demo/javascript-api/example/map-lifecycle/map-show">高德地图在线调试文档</a></p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
            <tag> gaode-jsapi </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Vue绑定键盘按键并触发事件]]></title>
      <url>/2021/04/29/linvkey/vue%20binds%20keyboard%20event/</url>
      <content type="html"><![CDATA[<blockquote>
<p>在Vue中绑定键盘按键，并触发事件</p>
</blockquote>
<p>问题描述：<br>  在做项目的时候遇到 使用键盘的左右键来翻页的功能，一开始想当然的使用JS的绑定键盘事件发现并不好用<br>  在Vue中要借用$nextTick来处理一下</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">created() &#123;</span><br><span class="line">    //监听左右箭头按键的键盘按下事件</span><br><span class="line">    this.$nextTick(() =&gt; &#123;</span><br><span class="line">      document.onkeydown = (e) =&gt; &#123;</span><br><span class="line">        if (e.keyCode == 39 &amp;&amp; this.currentPage &lt; this.pageCount) &#123;</span><br><span class="line">          //这是右箭头，</span><br><span class="line">          this.currentPage++; </span><br><span class="line">        &#125; else if (e.keyCode == 37 &amp;&amp; this.currentPage &gt; 1) &#123;</span><br><span class="line">          //这是左箭头，</span><br><span class="line">          this.currentPage--; </span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>左右键分别是37和39</p>
<h2 id="附加："><a href="#附加：" class="headerlink" title="附加："></a>附加：</h2><p>键盘对应的键码值</p>
<p>::: center<br><img src="/./../../img/1619676179984.png" alt="1619676179984"></p>
<p>表一</p>
<p><img src="/./../../img/1619676338954.png" alt="1619676338954"></p>
<p>表二</p>
<p><img src="/./../../img/1619676401949.png" alt="1619676401949"></p>
<p>表三</p>
<p><img src="/./../../img/1619676421157.png" alt="1619676421157"></p>
<p>表四<br>:::</p>
<p>亲测有效，奔走相告！</p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue-element-admin的使用总结]]></title>
      <url>/2021/04/29/linvkey/vue-element-admin/</url>
      <content type="html"><![CDATA[<blockquote>
<p>关于后台系统这一块，一直用的都是vue-element-admin，这一套模板是基于 vue 和 element-ui实现的，动态路由，权限验证，提炼了典型的业务模型，提供了丰富的功能组件，它可以帮助你快速搭建企业级中后台产品原型。</p>
</blockquote>
<p><img src="/./../../img/1619662923651.png" alt="1619662923651"></p>
<p><img src="/./../../img/1619662936726.png" alt="1619662936726"></p>
<h3 id="文件1-user-js-登录登出"><a href="#文件1-user-js-登录登出" class="headerlink" title="文件1-user.js 登录登出"></a><strong>文件1-user.js 登录登出</strong></h3><p>在src目录下的api文件夹中会用到user.js</p>
<p>user.js中有三个方法，分别是</p>
<p>login登录方法，</p>
<p>getInfo获取登录信息的方法，</p>
<p>以及logout登出的方法</p>
<p>它们是基于utils&#x2F;request.js文件的</p>
<h3 id="文件2-request-js设置baseURL"><a href="#文件2-request-js设置baseURL" class="headerlink" title="文件2-request.js设置baseURL"></a><strong>文件2-request.js设置baseURL</strong></h3><p>在utils&#x2F;request.js这个文件中需要注意</p>
<p><img src="/./../../img/1619662946024.png" alt="1619662946024"></p>
<p><strong>2.1</strong></p>
<p>第一个红框对应的文件是baseURL</p>
<p>env.development和.env.production</p>
<p>它对应的文件是项目根目录下的</p>
<p><img src="/./../../img/1619662954053.png" alt="1619662954053"></p>
<p>.env.development和.env.production</p>
<p>这两个文件中</p>
<p>唯一的区别就是</p>
<p><img src="/./../../img/1619662963801.png" alt="1619662963801"></p>
<p>一个对应上线，一个对应开发</p>
<p>而VUE_APP_BASE_API熟不熟悉？</p>
<p>是的，就是文件2-utils&#x2F;request.js文件中的第一个红框</p>
<p>用于配置baseURL的</p>
<p>VUE_APP_BASE_API &#x3D; “路径值”</p>
<p>路径值就是后端给的baseURL</p>
<p><strong>2.2</strong></p>
<p>第二个红框 是在请求拦截器中</p>
<p>给请求投添加token</p>
<p>注意这个 “X-Token” 是可以和后端商量配合前端来命名的</p>
<p><strong>2.3</strong></p>
<p><img src="/./../../img/1619662971664.png" alt="1619662971664"></p>
<p>这个状态码，框架里给的是20000   而后端返回的大都是200所以要自己改一下</p>
<h3 id="文件3-auth-js设置token"><a href="#文件3-auth-js设置token" class="headerlink" title="文件3-auth.js设置token"></a><strong>文件3-auth.js设置token</strong></h3><p>在utils&#x2F;auth.js这个文件中需要注意</p>
<p><img src="/./../../img/1619662982576.png" alt="1619662982576"></p>
<p>这个项目用的是cookie来存储token</p>
<p>我在做项目的过程中使用同一个名字 TokenKey（当时都叫token）</p>
<p>结果出现一个项目登录之后，另一个项目无法登录的情况</p>
<p>所以在utils&#x2F;auth.js这个文件中最好还是改一下 TokenKey 比较好</p>
<h3 id="文件4-get-page-title-js设置标题"><a href="#文件4-get-page-title-js设置标题" class="headerlink" title="文件4-get-page-title.js设置标题"></a><strong>文件4-get-page-title.js设置标题</strong></h3><p>在utils&#x2F;get-page-title.js这个文件中需要注意</p>
<p>这个文件是设置网页标题的</p>
<p>而具体设置是在红框处，按住ctrl键</p>
<p><img src="/./../../img/1619662990738.png" alt="1619662990738"></p>
<p>点进去</p>
<p><img src="/./../../img/1619662998245.png" alt="1619662998245"></p>
<p>就可以修改网页标题了</p>
<p><img src="/./../../img/1619663048668.png" alt="1619663048668"></p>
<h3 id="文件5-在layout中的components中的Sidebar中的Logo-vue文件"><a href="#文件5-在layout中的components中的Sidebar中的Logo-vue文件" class="headerlink" title="文件5-在layout中的components中的Sidebar中的Logo.vue文件"></a><strong>文件5-在layout中的components中的Sidebar中的Logo.vue文件</strong></h3><p>把data中的数据改掉，以防日后出现</p>
<h3 id="文件6-在layout中的components中AppMain-vue"><a href="#文件6-在layout中的components中AppMain-vue" class="headerlink" title="文件6-在layout中的components中AppMain.vue"></a><strong>文件6-在layout中的components中AppMain.vue</strong></h3><p>transition标签的name属性，默认提供了fade和fade-transform两个转场动画</p>
<p>但是没啥区别</p>
<h3 id="文件7-在layout中的components中Navbar-vue"><a href="#文件7-在layout中的components中Navbar-vue" class="headerlink" title="文件7-在layout中的components中Navbar.vue"></a><strong>文件7-在layout中的components中Navbar.vue</strong></h3><p>可以设置下拉</p>
<p><img src="/./../../img/1619663057347.png" alt="1619663057347"></p>
<p>这里注释掉还剩最后一个退出按钮</p>
<p><img src="/./../../img/1619663066209.png" alt="1619663066209"></p>
<h3 id="文件8-router"><a href="#文件8-router" class="headerlink" title="文件8-router"></a><strong>文件8-router</strong></h3><p>在src的router文件夹的index.js中</p>
<p>有两种路由，</p>
<p>一种是不需要权限，所有人都能访问的页面constantRoutes</p>
<p>一种是需要权限，必须是指定的角色才能访问的页面asyncRoutes</p>
<p><img src="/./../../img/1619663073523.png" alt="1619663073523"></p>
<p>constantRoutes无需权限的路由配置</p>
<p><img src="/./../../img/1619663081036.png" alt="1619663081036"></p>
<p>asyncRoutes需要权限的路由配置</p>
<p><img src="/./../../img/1619663089294.png" alt="1619663089294"></p>
<h3 id="文件9-store"><a href="#文件9-store" class="headerlink" title="文件9-store"></a><strong>文件9-store</strong></h3><p>在store&#x2F;modules&#x2F;user.js这个文件中需要注意</p>
<p>在定义的actions里有三个方法分别对应api&#x2F;user.js下的</p>
<p>login登录方法，</p>
<p>getInfo获取登录信息的方法，</p>
<p>以及logout登出的方法。</p>
<p>1.login登录方法：</p>
<p><img src="/./../../img/1619663108953.png" alt="1619663108953"></p>
<p>这里需要修改红框处，由后端返回的账号密码两个字段，（有的时候，第二行结构赋值出的username和password也需要改成后端返回的账号密码字段）</p>
<p>2.getInfo获取登录信息的方法：</p>
<p><img src="/./../../img/1619663147879.png" alt="1619663147879"></p>
<p>在登录时后端一般会返回三个常用的值，分别是昵称，头像和token</p>
<p>token在login登录方法已经保存了</p>
<p>这里保存的是昵称和头像</p>
<p>3.登出方法</p>
<p>4.消除token方法 </p>
<p>这里不需要修改</p>
<h3 id="文件10-view"><a href="#文件10-view" class="headerlink" title="文件10-view"></a><strong>文件10-view</strong></h3><p>这个文件夹是存放页面的</p>
<p>要注意的有404页面和login页面</p>
<p>404页面只要注意到模板框架会有广告性的文字，改掉即可</p>
<p>在login页面</p>
<p>有</p>
<p>1.标题要修改</p>
<p><img src="/./../../img/1619663155422.png" alt="1619663155422"></p>
<p>2.登录表单的校验规则</p>
<p>还要留意handleLogin登录事件</p>
<h3 id="文件11-axios"><a href="#文件11-axios" class="headerlink" title="文件11-axios"></a><strong>文件11-axios</strong></h3><p>只需要保证请求头中的X-Token和后端一致就行了</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getToken &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/auth&#x27;</span></span><br><span class="line"><span class="comment">// 创建axios实例 </span></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;&#125;);</span><br><span class="line"><span class="comment">// request拦截器 </span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// config.headers[&quot;tokenid&quot;] = &quot;435065970&quot;; </span></span><br><span class="line">        <span class="comment">// 请求头中添加tokenid     </span></span><br><span class="line">        config.<span class="property">headers</span>[<span class="string">&quot;X-Token&quot;</span>] = <span class="title function_">getToken</span>();</span><br><span class="line">        <span class="comment">// 请求头中添加X-Token     </span></span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">// response拦截器 </span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (response) &#123;</span><br><span class="line">            <span class="keyword">return</span> response.<span class="property">data</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;error&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(error).<span class="title function_">includes</span>(<span class="string">&quot;401&quot;</span>)) &#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&quot;登录已过期，请重新登录！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">alert</span>(error);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service;</span><br></pre></td></tr></table></figure>

<h3 id="文件12-main-js"><a href="#文件12-main-js" class="headerlink" title="文件12-main.js"></a><strong>文件12-main.js</strong></h3><p>在main.js中</p>
<p><img src="/./../../img/1619663164642.png" alt="1619663164642"></p>
<p><img src="/./../../img/1619663177298.png" alt="1619663177298"></p>
<p>1.配置axios</p>
<p>2.设置全局样式类</p>
<p>3.定义自定义的过滤器用于更改字符格式</p>
<h3 id="封装方法"><a href="#封装方法" class="headerlink" title="封装方法"></a><strong>封装方法</strong></h3><p>1.统一在项目的src的api文件夹下 创建JS文件</p>
<p>第一步就要引入</p>
<p><code>import request from &#39;@/utils/request&#39; </code></p>
<p>然后导出方法</p>
<p>我这里封装的方法需要三个参数</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指令列表/&#123;pageNo&#125;/&#123;pageSize&#125;/&#123;did&#125;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">requst_instructions</span>(<span class="params">uri</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;/manage/command-list&#x27;</span>+uri,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.使用</p>
<p><img src="/./../../img/1619663186524.png" alt="1619663186524"></p>
<p>亲测有效，奔走相告！</p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vuepress 动态更换壁纸方案]]></title>
      <url>/2021/04/29/sicker/random%20wallpaper%20for%20vuepress/</url>
      <content type="html"><![CDATA[<p>直接贴代码啦。</p>
<p>在合适位置插入</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">randomWallpaper</span>(); <span class="comment">// 首次进入触发</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">afterEach</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">randomWallpaper</span>(); <span class="comment">// 切换路由触发</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="title function_">randomWallpaper</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 壁纸数组，请使用实际图片名称</span></span><br><span class="line">    <span class="keyword">var</span> wallpaper = [</span><br><span class="line">      <span class="string">&quot;girlwithNs.jpg&quot;</span>,</span><br><span class="line">      <span class="string">&quot;catgirl.jpg&quot;</span>,</span><br><span class="line">      <span class="string">&quot;catgirl2.jpg&quot;</span>,</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">let</span> randomCount = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * wallpaper.<span class="property">length</span>);</span><br><span class="line">    <span class="keyword">const</span> style = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>;</span><br><span class="line">    <span class="comment">// 为 body 设置样式，请使用实际图片路径</span></span><br><span class="line">    style.<span class="title function_">setProperty</span>(</span><br><span class="line">      <span class="string">&quot;background-image&quot;</span>,</span><br><span class="line">      <span class="string">`url(&#x27;/wallpaper/<span class="subst">$&#123;wallpaper[randomCount]&#125;</span>&#x27;)`</span></span><br><span class="line">    );</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>可以看到，这跟本站更换任意配色的组件是一个套路~</p>
<p>扩展阅读：<a href="/2021/03/23/color-theme-for-vuepress/">vuepress&#x2F;vue动态更换配色方案</a></p>
]]></content>
      
        
        <tags>
            
            <tag> vuepress </tag>
            
            <tag> 插件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue常用代码片段]]></title>
      <url>/2021/04/29/sicker/vue%20code%20snippet/</url>
      <content type="html"><![CDATA[<h3 id="跳转路由时返回顶部"><a href="#跳转路由时返回顶部" class="headerlink" title="跳转路由时返回顶部"></a>跳转路由时返回顶部</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">  routes,</span><br><span class="line">  scrollBehavior (to, <span class="keyword">from</span>, savedPosition) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: <span class="number">0</span> &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="修改当前页面title"><a href="#修改当前页面title" class="headerlink" title="修改当前页面title"></a>修改当前页面title</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> constantRoutes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/example&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/example&#x27;</span>),</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Example&#x27;</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;Example&#x27;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&#x27;el-icon-s-help&#x27;</span>,</span><br><span class="line">        <span class="attr">keepAlive</span>: <span class="literal">false</span> </span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"><span class="comment">// 路由拦截器</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 路由发生变化时触发</span></span><br><span class="line">  <span class="keyword">if</span> (to.<span class="property">meta</span>.<span class="property">title</span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = to.<span class="property">meta</span>.<span class="property">title</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="子组件向父组件传参"><a href="#子组件向父组件传参" class="headerlink" title="子组件向父组件传参"></a>子组件向父组件传参</h3><p>父组件</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;emit&quot;&gt;</span><br><span class="line">      &lt;textA @hello=&quot;handleChange&quot; /&gt;</span><br><span class="line">      hello &#123;&#123; words &#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import textA from &quot;../components/Text&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123; textA &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      words: &quot;sicker&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">      handleChange(e)&#123;</span><br><span class="line">          this.words = e;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>子组件 ..&#x2F;components&#x2F;Text.vue</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; @change=&quot;sayHello&quot; v-model=&quot;text&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            text:&#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        sayHello()&#123;</span><br><span class="line">            this.$emit(&quot;hello&quot;,this.text);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="动态组件"><a href="#动态组件" class="headerlink" title="动态组件"></a>动态组件</h3><p>父组件</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-for=&quot;(item, index) in componentList&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">    &lt;component :is=&quot;item.type&quot; @change=&quot;changeData&quot; :item=&quot;item&quot; /&gt; &lt;!--从循环体中获取到组件名 item.type 绑定 change 事件， prop 传参 item 对象--&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import checkbox from &quot;./components/checkbox&quot;;</span><br><span class="line">  import datepicker from &quot;./components/datepicker&quot;;</span><br><span class="line">  import datetime from &quot;./components/datetime&quot;;</span><br><span class="line">  ... // 所有涉及组件都需引入</span><br><span class="line">  export default &#123;</span><br><span class="line">  name: &quot;example&quot;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    checkbox,</span><br><span class="line">    datepicker,</span><br><span class="line">    datetime,</span><br><span class="line">    ...</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      componentList: [&#123;type:&#x27;checkbox&#x27;,fieldId:&#x27;10001&#x27;,...&#125;,...], // 组件列表对象数组</span><br><span class="line">      fields: [] // 用以收集表单数据</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  method() &#123;</span><br><span class="line">    changeData(e, item) &#123; // 绑定的 change 事件， 通过子组件 emit 触发 参照 ### 子组件向父组件传参</span><br><span class="line">      this.fields[item.fieldId] = e;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>动态组件 checkbox 示例</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;van-checkbox-group</span><br><span class="line">    v-model=&quot;value&quot;</span><br><span class="line">    @change=&quot;onChange&quot;</span><br><span class="line">    ref=&quot;checkboxGroup&quot;</span><br><span class="line">    class=&quot;checked-btn&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;van-cell-group&gt;</span><br><span class="line">      &lt;van-cell :title=&quot;item.name&quot;&gt;&lt;/van-cell&gt;</span><br><span class="line">      &lt;van-cell</span><br><span class="line">        v-for=&quot;(e, index) in item.operations&quot;</span><br><span class="line">        clickable</span><br><span class="line">        :key=&quot;e.id&quot;</span><br><span class="line">        :title=&quot;e.label&quot;</span><br><span class="line">        @click=&quot;toggle(index)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;template #right-icon&gt;</span><br><span class="line">          &lt;van-checkbox :name=&quot;e&quot; ref=&quot;checkboxes&quot; /&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/van-cell&gt;</span><br><span class="line">      &lt;div class=&quot;checkout&quot;&gt;</span><br><span class="line">        &lt;div @click=&quot;checkAll&quot; class=&quot;btn-tools&quot;&gt;全选&lt;/div&gt;</span><br><span class="line">        &lt;div @click=&quot;toggleAll&quot; class=&quot;btn-tools&quot;&gt;反选&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/van-cell-group&gt;</span><br><span class="line">  &lt;/van-checkbox-group&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      value: [],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: [&quot;item&quot;], // 接收父组件的 props</span><br><span class="line">  methods: &#123;</span><br><span class="line">    toggle(index) &#123;</span><br><span class="line">      this.$refs.checkboxes[index].toggle();</span><br><span class="line">    &#125;,</span><br><span class="line">    onChange() &#123;</span><br><span class="line">      let arr = [];</span><br><span class="line">      this.value.forEach((ele) =&gt; &#123;</span><br><span class="line">        arr.push(&#123; id: ele.id &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">      this.$emit(&quot;change&quot;, arr, this.item);</span><br><span class="line">    &#125;,</span><br><span class="line">    checkAll() &#123;</span><br><span class="line">      this.$refs.checkboxGroup.toggleAll(true);</span><br><span class="line">    &#125;,</span><br><span class="line">    toggleAll() &#123;</span><br><span class="line">      this.$refs.checkboxGroup.toggleAll();</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="mixin"><a href="#mixin" class="headerlink" title="mixin"></a>mixin</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> resizeMixins <span class="keyword">from</span> <span class="string">&quot;@/utils/resizeMixins&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;example&#x27;</span>,</span><br><span class="line">  <span class="attr">mixins</span>: [resizeMixins],</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>
<p>推荐阅读：<a href="/2021/05/07/vue-mixin/">vue mixin</a></p>
<h3 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h3><p><a href="/2021/02/24/fast-search-on-vue/">vue 文档速查</a></p>
]]></content>
      
        
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[前端学习笔记]]></title>
      <url>/2021/04/28/XBlack/front-end%20learning%20notes/</url>
      <content type="html"><![CDATA[<p><strong>html 基本结构</strong></p>
<p><code>html</code>标签是由<code>&lt;&gt;</code>包围的关键词</p>
<p>html标签通常成对出现，分为标签开头和标签结尾</p>
<p>有部分标签是没有结束标签的，为单标签，单标签必须使用<code>/</code>结尾</p>
<p>页面所有的内容，都在<code>html</code>标签中</p>
<p><code>html</code>标签分为三部分:<code>标签名称</code>，<code>标签内容</code>，<code>标签属性</code></p>
<p><code>html</code>标签具有语义化，可通过标签名能够判断出该标签的内容，语义化的作用是网页结构层次更清晰，更容易被搜索引擎收录，更容易让屏幕阅读器读出网页内容</p>
<p>标签的内容是在一对标签内部的内容</p>
<p>标签的内容可以是其他标签</p>
<p><strong>标签属性</strong></p>
<p><code>class</code>属性:用于定义元素的类名</p>
<p><code>id</code>属性:用于指定元素的唯一id，该属性的值在整个html文档中具有唯一性</p>
<p><code>style</code>属性:用于指定元素的行内样式，使用该属性后将会覆盖任何全局的样式设定</p>
<p><code>title</code>属性:用于指定元素的额外信息</p>
<p><code>accesskey</code>属性:用于指定激活元素的快捷键</p>
<p><code>tabindex</code>属性:用于指定元素在tab键下的次序</p>
<p><code>dir</code>属性:用于指定元素中内容的文本方向，属性只有<code>ltr</code>或<code>rtl</code>两种</p>
<p><code>lang</code>属性:用于指定元素内容的语言</p>
<p><strong>文本标签</strong></p>
<p>段落标签:<code>&lt;p&gt;&lt;/p&gt;</code>，段落标签用来描述一段文字</p>
<p>标题标签:<code>&lt;hx&gt;&lt;/hx&gt;</code>，标题标签用来描述一个标题，标题标签总共有六个级别，<code>&lt;h1&gt;&lt;/h1&gt;</code>标签在每个页面中通常只出现一次</p>
<p>强调语句标签:<code>&lt;em&gt;&lt;/em&gt;</code>，用于强调某些文字的重要性</p>
<p>更加强调标签:<code>&lt;strong&gt;&lt;/strong&gt;</code>和<code>&lt;em&gt;</code>标签一样，用于强调文本，但它强调的程度更强一些</p>
<p>无语义标签:<code>&lt;span&gt;&lt;/span&gt;</code>，标签是没有语义的</p>
<p>短文本引用标签:<code>&lt;q&gt;&lt;/q&gt;</code>，简短文字的引用</p>
<p>长文本引用标签<code>&lt;blockquote&gt;&lt;/blockquote&gt;</code>，定义长的文本引用</p>
<p>换行标签:<code>&lt;br/&gt;</code></p>
<p><strong>多媒体标签</strong></p>
<p>链接标签:<code>&lt;a&gt;&lt;/a&gt;</code></p>
<p>图片标签:<code>&lt;img/&gt;</code></p>
<p>视频标签:<code>&lt;video&gt;&lt;/video&gt;</code></p>
<p>音频标签:<code>&lt;audio&gt;&lt;/audio&gt;</code></p>
<p><strong>列表</strong></p>
<p>无序列表标签:<code>&lt;ul&gt;&lt;/ul&gt;</code>列表定义一个无序列表，<code>&lt;li&gt;&lt;/li&gt;</code>代表无需列表中的每一个元素</p>
<p>有序列表:<code>&lt;ol&gt;&lt;/ol&gt;</code>列表定义一个有序列表,<code>&lt;li&gt;&lt;/li&gt;</code>代表无需列表中的每一个元素</p>
<p>定义列表:<code>&lt;dl&gt;&lt;/dl&gt;</code>，定义列表通常和<code>&lt;dt&gt;&lt;/dt&gt;</code>和<code>&lt;dd&gt;&lt;/dd&gt;</code>标签一起使用</p>
<p><strong>表格</strong></p>
<p>表格标签:<code>&lt;table&gt;&lt;/table&gt;</code></p>
<p>表格的一行:<code>&lt;tr&gt;&lt;/tr&gt;</code></p>
<p>表格的表头:<code>&lt;th&gt;&lt;/th&gt;</code></p>
<p>单元格:<code>&lt;td&gt;&lt;/td&gt;</code></p>
<p>表格合并:同一行内，合并几列<code>colspan=&quot;2&quot;</code>，同一列内，合并几行<code>rowspan=&quot;3&quot;</code></p>
<p><strong>表单标签</strong></p>
<p>1.标单标签<code>&lt;form&gt;</code></p>
<p><code>&lt;form&gt;&lt;/form&gt;</code>表单是可以把浏览者输入的数据传送到服务器端，这样服务器端程序就可以处理表单传送过来的数据信息:<code>&lt;form method=&quot;传送方式&quot; action=&quot;服务器文件&quot;&gt;</code></p>
<p><code>method</code>:浏览者输入的数据被传送到的地方</p>
<p><code>action</code>:数据传输的方式</p>
<p>2.输入标签<code>&lt;input&gt;</code></p>
<p><code>name</code>:为文本框命名，用于提交表单，后台接收数据用</p>
<p><code>value</code>:为文本输入框设置默认值。</p>
<p><code>type</code>:通过定义不同的<code>type类型</code>，<code>input</code>的功能有所不同</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">url	        专门用于输入 url</span><br><span class="line">file        上传文件</span><br><span class="line">date	    选取日期和时间（还包含：month、week、time、datetime、datetime-local）</span><br><span class="line">text        单行文本输入框</span><br><span class="line">color	    选取颜色</span><br><span class="line">email	    专门用于输入 e-mail</span><br><span class="line">range	    显示为滑动条，用于输入一定范围内的值</span><br><span class="line">radio       单选框 （checked属性用于显示选中状态）</span><br><span class="line">reset	    重置按钮（点击按钮，会触发form表单的reset事件）</span><br><span class="line">button      普通按钮</span><br><span class="line">number	    专门用于number</span><br><span class="line">submit	    提交按钮（点击按钮，会吃饭form表单的submit事件）</span><br><span class="line">password    密码输入框（密码显示为***)</span><br><span class="line">checkbox    复选框（checked属性用于显示选中状态）</span><br></pre></td></tr></table></figure>

<p><code>button按钮</code>: <button type="button">我是Button按钮</button></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=<span class="string">&quot;button&quot;</span>&gt;我是<span class="title class_">Button</span>按钮&lt;/button&gt;</span><br></pre></td></tr></table></figure>

<p><code>select下拉选择框</code>: </p>
<select>
  <option value = "请选择">请选择...</option>
  <option value = "选择1">选择1</option>
  <option value = "选择2">选择2</option>
  <option value = "选择3">选择3</option>
</select>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;select&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> = <span class="string">&quot;请选择&quot;</span>&gt;</span>请选择...<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> = <span class="string">&quot;选择1&quot;</span>&gt;</span>选择1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> = <span class="string">&quot;选择2&quot;</span>&gt;</span>选择2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> = <span class="string">&quot;选择3&quot;</span>&gt;</span>选择3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure>

<p>3.<code>文本域</code>:<br/></p>
<textarea rows="5" cols="20">
cols:规定文本区内的可见宽度 
rows:规定文本区内的可见行数
</textarea>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea rows=<span class="string">&quot;5&quot;</span> cols=<span class="string">&quot;20&quot;</span>&gt;</span><br><span class="line"><span class="attr">cols</span>:规定文本区内的可见宽度 </span><br><span class="line"><span class="attr">rows</span>:规定文本区内的可见行数</span><br><span class="line">&lt;/textarea&gt;</span><br></pre></td></tr></table></figure>

<p><strong>其他语义化标签</strong></p>
<p>盒子:<code>&lt;div&gt;&lt;/div&gt;</code></p>
<p>导航:<code>&lt;nav&gt;&lt;/nav&gt;</code>，<code>html5</code>新增语义化标签，定义一个导航，主要用于布局，分割页面的结构</p>
<p>时间标签:<code>&lt;time&gt;&lt;/time&gt;</code>，语义化标签，定义一个时间</p>
<p>侧边栏:<code>&lt;aside&gt;&lt;/aside&gt;</code>，语义化标签，定义主题内容外的信息，主要用于布局，分割页面的结构</p>
<p>网页头部:<code>&lt;header&gt;&lt;/header&gt;</code>，<code>html5</code>新增语义化标签，定义网页的头部，主要用于布局，分割页面的结构</p>
<p>底部信息:<code>&lt;footer&gt;&lt;/footer&gt;</code>，<code>html5</code>新增语义化标签，定义网页的底部，主要用于布局，分割页面的结构</p>
<p>文章:<code>&lt;article&gt;&lt;/article&gt;</code>，<code>html5</code>新增语义化标签，定义一篇文章，主要用于布局，分割页面的结构</p>
]]></content>
      
        
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[yarn全局安装后无法使用命令]]></title>
      <url>/2021/04/28/sicker/global%20add%20does%20not%20work%20by%20yarn/</url>
      <content type="html"><![CDATA[<blockquote>
<p>yarn全局安装后无法使用命令，但npm -g却可以，这是为什么呢？</p>
</blockquote>
<p>首先通过 <code>npm help</code> 与 <code>yarn --help</code> 很容易能尝试得出全局安装的路径与命令的路径。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm 命令路径 与 全局安装路径</span></span><br><span class="line">$ npm root -g</span><br><span class="line">C:\Users\Sicker\AppData\Roaming\npm\node_modules</span><br><span class="line">$ npm bin -g</span><br><span class="line">C:\Users\Sicker\AppData\Roaming\npm</span><br><span class="line"></span><br><span class="line"><span class="comment"># yarn 命令路径 与 全局安装路径</span></span><br><span class="line">$ yarn global <span class="built_in">dir</span></span><br><span class="line">C:\Users\Sicker\AppData\Local\Yarn\Data\global</span><br><span class="line">$ yarn global bin</span><br><span class="line">C:\Users\Sicker\AppData\Local\Yarn\Data\global</span><br></pre></td></tr></table></figure>

<p>看到这里，很多有过后端语言基础的朋友应该就已经明白了。</p>
<p>没错，接着，打开资源管理器，</p>
<p><img src="/../../../images/e7ba51df5f6446ceb0e4be3a0fbd41c836ba79a9dacb69f74fc179dd8b4ebf87.png" alt="图 1">  </p>
<p>::: center<br><small style="color:red">点击图片可以放大哦~</small><br>:::</p>
<p>跟着如上操作一图流，可以看到 <code>npm</code> 的 <code>bin</code> 路径已然配置在了 <code>path</code> 中，那么是否将 <code>yarn</code> 的 <code>bin</code> 也配置好就OK了呢？</p>
<p>done！</p>
<p>你学废了吗？</p>
]]></content>
      
        
        <tags>
            
            <tag> yarn </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在国内一键安装electron]]></title>
      <url>/2021/04/28/sicker/how%20to%20install%20electron/</url>
      <content type="html"><![CDATA[<blockquote>
<p>electron 安装超时真的很烦，虽然可以自行下载压缩包绕过，但实在不够优雅。</p>
</blockquote>
<p>那么如何才能优雅的安装 electron 呢？</p>
<p>要解决先要分析原因；</p>
<p>首先先来看一下报错信息。</p>
<figure class="highlight bash"><figcaption><span>&#123;3&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; electron@12.0.5 postinstall C:\Users\Sicker\AppData\Roaming\npm\node_modules\electron</span><br><span class="line">&gt; node install.js</span><br><span class="line">RequestError: <span class="built_in">read</span> ECONNRESET</span><br><span class="line">    at ClientRequest.&lt;anonymous&gt; (C:\Users\Sicker\AppData\Roaming\npm\node_modules\electron\node_modules\got\<span class="built_in">source</span>\request-as-event-emitter.js:178:14)</span><br><span class="line">    at Object.onceWrapper (events.js:422:26)</span><br><span class="line">    at ClientRequest.emit (events.js:327:22)</span><br><span class="line">    at ClientRequest.origin.emit (C:\Users\Sicker\AppData\Roaming\npm\node_modules\electron\node_modules\@szmarczak\http-timer\<span class="built_in">source</span>\index.js:37:11)</span><br><span class="line">    at TLSSocket.socketErrorListener (_http_client.js:469:9)</span><br><span class="line">    at TLSSocket.emit (events.js:315:20)</span><br><span class="line">    at emitErrorNT (internal/streams/destroy.js:106:8)</span><br><span class="line">    at emitErrorCloseNT (internal/streams/destroy.js:74:3)</span><br><span class="line">    at processTicksAndRejections (internal/process/task_queues.js:80:21)</span><br><span class="line">npm ERR! code ELIFECYCLE</span><br><span class="line">npm ERR! errno 1</span><br><span class="line">npm ERR! electron@12.0.5 postinstall: `node install.js`</span><br><span class="line">npm ERR! Exit status 1</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! Failed at the electron@12.0.5 postinstall script.</span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span><br><span class="line"></span><br><span class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR!     C:\Users\Sicker\AppData\Roaming\npm-cache\_logs\2021-04-28T05_30_41_032Z-debug.log</span><br></pre></td></tr></table></figure>
<p>从日志高亮处，我们可以得出，这是一个连接超时的问题。</p>
<p>链接超时，显而易见。不是因为墙就是连接速度不济所引发。而多次尝试肯定是跟优雅不着边的，那么剩下的自然是解决墙的问题。</p>
<p>被「你怕吗」折腾过的同学肯定要抢答了，「用淘宝镜像呗」</p>
<p>没错，所以下属方法其实也就是围绕解决墙问题而展开罢了。</p>
<p>首先找到 <code>npm</code> 的本地配置路径</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">ls</span> -l</span><br></pre></td></tr></table></figure>

<p>仔细找找，可以找到 <code>.npmrc</code> 相关的条目，打开该路径的文件。</p>
<p>千万别客气，把以下配置通通加进去</p>
<blockquote>
<p>ELECTRON_MIRROR&#x3D;<a href="http://npm.taobao.org/mirrors/electron/">http://npm.taobao.org/mirrors/electron/</a><br>CHROMEDRIVER_CDNURL&#x3D;<a href="https://npm.taobao.org/mirrors/chromedriver">https://npm.taobao.org/mirrors/chromedriver</a><br>ELECTRON_BUILDER_BINARIES_MIRROR&#x3D;<a href="https://npm.taobao.org/mirrors/electron-builder-binaries/">https://npm.taobao.org/mirrors/electron-builder-binaries/</a><br>registry&#x3D;<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org/</a></p>
</blockquote>
<p>什么？你说你没有找到？</p>
<p>那只能麻烦你一条条添加啦</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line">npm config <span class="built_in">set</span> ELECTRON_MIRROR http://npm.taobao.org/mirrors/electron/</span><br><span class="line">npm config <span class="built_in">set</span> CHROMEDRIVER_CDNURL https://npm.taobao.org/mirrors/chromedriver</span><br><span class="line">npm config <span class="built_in">set</span> ELECTRON_BUILDER_BINARIES_MIRROR https://npm.taobao.org/mirrors/electron-builder-binaries/</span><br></pre></td></tr></table></figure>

<p>最后验证下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br><span class="line">npm config get ELECTRON_MIRROR</span><br><span class="line">npm config get CHROMEDRIVER_CDNURL</span><br><span class="line">npm config get ELECTRON_BUILDER_BINARIES_MIRROR</span><br></pre></td></tr></table></figure>

<p>最后安装成功后，运行 <code>electron</code>。</p>
<p><img src="/../../../images/7aacce3b767972f9d457e6d960b84901f66d928160da7843db4c980dda9624a9.png" alt="图 3">  </p>
<p>好了，感谢淘宝吧！</p>
<h3 id="issues"><a href="#issues" class="headerlink" title="issues"></a>issues</h3><ol>
<li>别再用 electron-rebuild 了</li>
</ol>
<p><img src="/../../../images/20e2a12b9ed36c9472cbcffd413ea39c1811668b672f11eb941c22e0c8df4333.png" alt="图 1">  </p>
<p>否则，安装的版本为 1.4.13 … 想必你也不想用远古版本的吧？</p>
<ol start="2">
<li>提示安装失败后，再次安装提示 文件已存在</li>
</ol>
<p><img src="/../../../images/1b51064e9819b9afa361a8c82462d158b1960abbf811397c4c4cf826294aad13.png" alt="图 2">  </p>
<p>移除 <code>npm -g bin</code> 路径已存在的如上图选中的三个文件后重试</p>
]]></content>
      
        
        <tags>
            
            <tag> electron </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java环境部署-Windows]]></title>
      <url>/2021/04/27/XBlack/java%20environment%20deployment/</url>
      <content type="html"><![CDATA[<h3 id="1-下载Java"><a href="#1-下载Java" class="headerlink" title="1.下载Java"></a>1.下载Java</h3><p>​	Java<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">下载</a>，点击连接后找到<font color = red><strong>Java SE Development Kit 8u291</strong></font>栏目下,根据自己电脑操作系统来选择<font color =  orange><strong>Product &#x2F; File Description</strong></font></p>
<p><img src="/./../../img/java/image-20210427131049079.png" alt="image-20210427131049079"></p>
<p>​	文件下载完成后，只要记住这个图标就行了，名字不一样也没有问题，只是软件的版本问题</p>
<p><img src="/./../../img/java/image-20210427131954430.png" alt="image-20210427131954430"></p>
<h3 id="2-安装Java"><a href="#2-安装Java" class="headerlink" title="2.安装Java"></a>2.安装Java</h3><p>​	双击该款软件并安装</p>
<p><img src="/./../../img/java/clip_image010.jpg" alt="img"></p>
<p>​	中间可能让你选择安装路径，我的建议默认安装不要修改安装路径，安装一直点击<strong>下一步</strong>就可以了。</p>
<p><img src="/./../../img/java/clip_image011.jpg" alt="img"></p>
<p>​	等待安装</p>
<p><img src="/./../../img/java/clip_image013.jpg" alt="img"></p>
<p>​	Java安装完成</p>
<p><img src="/./../../img/java/clip_image014.jpg" alt="img"></p>
<p>​	如果你是默认安装的你的Java文件在这个路径</p>
<p><img src="/./../../img/java/clip_image016.jpg" alt="img"></p>
<h3 id="3-配置环境"><a href="#3-配置环境" class="headerlink" title="3.配置环境"></a>3.配置环境</h3><p>​	选择我的电脑<img src="/./../../img/java/clip_image018.jpg" alt="img">右键，点击<strong>属性</strong>，进入你的电脑信息界面，点击<font color =red><strong>关于</strong></font>，</p>
<p>找到并点击<font color =red><strong>高级系统设置</strong></font></p>
<p><img src="/./../../img/java/clip_image020.jpg" alt="img"></p>
<p>​	找到并点击<font color = red><strong>环境变量</strong></font></p>
<p><img src="/./../../img/java/clip_image022.jpg" alt="img"></p>
<p>​	我之前安装过Java版本较低，所以你到的信息与我不同，这都没有关系</p>
<p><img src="/./../../img/java/clip_image024.jpg" alt="img"></p>
<p>​	我们要在<font color = red><strong>系统变量</strong></font>中要新建或者编辑下面3个变量分别是：<font color = red><strong>JAVA_HOME</strong></font>、<font color = red><strong>CLASSPATH</strong></font>、<font color = red><strong>Path</strong></font></p>
<p>​      新建变量名：<font color = red><strong>JAVA_HOME</strong></font></p>
<p>​      变量值：<strong>C:\Program Files\Java\jdk1.8.0_101</strong>（如果是默认安装的就去）</p>
<p><img src="/./../../img/java/clip_image026.jpg" alt="img"></p>
<p>​      变量名：<font color = red><strong>CLASSPATH</strong></font></p>
<p>​      变量值：**.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;**</p>
<p><img src="/./../../img/java/clip_image028.jpg" alt="img"></p>
<p>​      变量名：<font color = red><strong>Path</strong></font></p>
<p>​      变量值：**%JAVA_HOME%\bin**；</p>
<p>​             		<strong>%JAVA_HOME%\jre\bin</strong>；</p>
<p><img src="/./../../img/java/image-20210427134201181-1619503942962.png" alt="image-20210427134201181"></p>
<p>这时我们环境配置也完成了，看看能不能正常运行</p>
<p>我们这时用快捷键<font color = red><strong>Windows+R</strong></font>进入管理员命令窗口，在输入框内输入<font color = red><strong>cmd</strong></font></p>
<p><img src="/./../../img/java/clip_image032.jpg" alt="img"></p>
<p>点击确定</p>
<p><img src="/./../../img/java/clip_image034.jpg" alt="img"></p>
<p>我们分别输入<font color = red><strong>Java -version（Java后面要有空格）</strong></font></p>
<p><img src="/./../../img/java/clip_image036.jpg" alt="img"></p>
<p><font color = red><strong>输入Java</strong></font></p>
<p><img src="/./../../img/java/clip_image038.jpg" alt="img"></p>
<p><font color = red><strong>输入 <code>Javac</code></strong></font></p>
<p><img src="/./../../img/java/clip_image040.jpg" alt="img"></p>
<p>​		这时软件运行环境部署阶段全部完成！！！</p>
]]></content>
      
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JMeter环境配置-Windows]]></title>
      <url>/2021/04/27/XBlack/jmeter%20environment/</url>
      <content type="html"><![CDATA[<h3 id="1-JMeter-介绍"><a href="#1-JMeter-介绍" class="headerlink" title="1 JMeter 介绍"></a>1 JMeter 介绍</h3><p>​     Apache JMeter是100%纯JAVA桌面应用程序，被设计为用于测试客户端&#x2F;服务端结构的软件(例如web应用程序)。它可以用来测试静态和动态资源的性能，例如：静态文件，Java Servlet,CGI Scripts,Java Object,数据库和FTP服务器等等。JMeter可用于模拟大量负载来测试一台服务器，网络或者对象的健壮性或者分析不同负载下的整体性能。     同时，JMeter可以帮助你对你的应用程序进行回归测试。通过你创建的测试脚本和assertions来验证你的程序返回了所期待的值。为了更高的适应性，JMeter允许调用二次开发的jar包来丰富你的测试场景；JMeter允许你使用正则表达式来创建这些assertions.</p>
<h3 id="2-下载安装"><a href="#2-下载安装" class="headerlink" title="2 下载安装"></a>2 下载安装</h3><h3 id="2-1-JMeter安装"><a href="#2-1-JMeter安装" class="headerlink" title="2.1 JMeter安装"></a>2.1 JMeter安装</h3><p>​	2.1.1 JMeter<a href="http://jmeter.apache.org/download_jmeter.cgi">下载</a>，解压文件到目标目录</p>
<p><img src="/./../../img/jmeter/image-20210428084751957.png" alt="image-20210428084751957"></p>
<p>​	2.1.2 JMeter可以运行在如下操作系统上：Unix，Windows和Open VMS</p>
<p>​	2.1.3 应当避免jdk路径与jmeter路径有中文和空格，否则会有异常,也会导致远程测试出现问题</p>
<h3 id="2-2-环境配置"><a href="#2-2-环境配置" class="headerlink" title="2.2 环境配置"></a>2.2 环境配置</h3><p>​	2.2.1 系统要求：JMeter需要JDK1.6以上的版本支持运行</p>
<p>​	2.2.2 在运行JMeter前，查看电脑中是否已经配置Java环境，“打开命令窗口-&gt;输入java -version”,如果如下图示说明该电脑已经有Java环境</p>
<p><img src="/./../../img/jmeter/image-20210427111401013.png" alt="image-20210427111401013"></p>
<p>​	2.2.3 <a href="https://110501.com/2021/04/27/java/">Java环境配置</a></p>
<p>​	2.2.4 JMeter环境配置</p>
<p>​		2.2.4.1 将下载完成的JMeter放入目标目录下</p>
<p>​		2.2.4.2 <font color = red><strong>我的电脑-&gt;鼠标右键菜单-&gt;属性–&gt;高级系统设置-&gt;环境变量</strong></font>；</p>
<p>​					在系统变量中添加属性：<font color = red><strong>JMETER_HOME</strong></font></p>
<p>​					变量名：<font color = red><strong>JMETER_HOME</strong></font></p>
<p>​					变量值：根据自己将JMeter软件存放的路径复制一下，粘贴到变量值中，点击<font color = red><strong>确定</strong></font>就好了</p>
<p><img src="/./../../img/jmeter/image-20210428085811630.png" alt="image-20210428085811630"></p>
<p>​					在系统变量中编辑属性：<font color = red><strong>Path</strong></font></p>
<p>​					变量名：<font color = red><strong>Path</strong></font></p>
<p>​					变量值：<font color = red><strong>%JMETER_HOME%\bin</strong></font>(可以直接把我这一段变量值复制一下，粘贴到你们变量值中)，点击<font color = red><strong>确定</strong></font>就好了</p>
<p><img src="/./../../img/jmeter/image-20210428091038992.png" alt="image-20210428091038992"></p>
<h3 id="2-3-JMeter插件安装"><a href="#2-3-JMeter插件安装" class="headerlink" title="2.3 JMeter插件安装"></a>2.3 JMeter插件安装</h3><p>​	2.3.1 插件<a href="https://jmeter-plugins.org/install/Install/">下载</a> </p>
<p>​	2.3.2 插件下载完成后，将JMeterPlugins-Extras.jar，放到apache-jmeter-(JMeter版本号)\lib\ext目录</p>
<h3 id="2-4-运行JMeter"><a href="#2-4-运行JMeter" class="headerlink" title="2.4 运行JMeter"></a>2.4 运行JMeter</h3><p>​	2.4.1 第一种打开运行方式</p>
<p>找到你安装JMeter的安装目录，点击<font color = red><strong>apache-jmeter-(JMeter版本号)\bin文件架下的jmeter.bat文件</strong>（如果文件名称有后缀，请忽视；如果没有文件名称后缀：先点击查看，在文件扩展名上打钩，后缀名称就显示出来了）</font><img src="/./../../img/jmeter/image-20210428105008623.png" alt="image-20210428105008623"></p>
<p>​	双击<font color = red><strong>jmeter.bat文件</strong></font>,会先打开一个命令行窗口，在打开JMeter软件窗口<font color = red><strong>（不能因为命令行窗口恶心，就直接点击关闭，这样你JMeter软件也会关闭，点击最小化后就可以了，我们就可以正常使用JMeter软件）</strong></font></p>
<p><img src="/./../../img/jmeter/image-20210428105618635.png" alt="image-20210428105618635"></p>
<p>2.4.2 第二种打开运行方式</p>
<p>​	找到你安装JMeter的安装目录，点击<font color = red><strong>apache-jmeter-(JMeter版本号)\bin文件架下的ApacheJMeter.bat文件</strong>（如果文件名称有后缀，请忽视；如果没有文件名称后缀：先点击查看，在文件扩展名上打钩，后缀名称就显示出来了）</font></p>
<p><font color = red>备注：打开的时候会有只有一个窗口，JMeter的图形操作界面，和上边的不一样</font></p>
<p><img src="/./../../img/jmeter/image-20210511161455833.png" alt="image-20210511161455833"></p>
<h3 id="3-JMeter目录结构解析"><a href="#3-JMeter目录结构解析" class="headerlink" title="3 JMeter目录结构解析"></a>3 JMeter目录结构解析</h3><p>3.1 根目录</p>
<p>Jmeter安装包解压后的根目录如下图:</p>
<p><img src="/./../../img/jmeter/image-20210511164810941.png" alt="image-20210511164810941"></p>
<p>3.2 根目录说明（由上到下）</p>
<p>初始文件目录</p>
<p><img src="/./../../img/jmeter/image-20210513133725433.png" alt="image-20210513133725433"></p>
<p>3.2.1 backups目录 </p>
<pre><code>3.2.1.1 脚本备份目录，里边的文件都是以.jmx后缀结尾的文件
3.2.1.2 实际开始安装解压后是不存在这个目录的，这个是由使用过JMeter后，JMeter自动创建这个目录，然后备份了脚本文件
</code></pre>
<p><img src="/./../../img/jmeter/image-20210511173710596.png" alt="image-20210511173710596"></p>
<p>3.2.2 bin 目录为可执行文件目录</p>
<p><img src="/./../../img/jmeter/image-20210513135049032.png" alt="image-20210513135049032"></p>
<pre><code>3.2.2.1 examples：目录下包含Jmeter使用实例，打开里面是一个csv样例
3.2.2.2 ApacheJMeter.jar：JMeter源码包
3.2.2.3 jmeter.bat：windows的启动文件
3.2.2.4 jmeter.log：Jmeter运行日志文件
3.2.2.5 jmeter.properties：系统配置文件
3.2.2.6 jmeter-server.bat：windows分布式测试要用到的服务器，启动负载生成器服务文件
3.2.2.7 shutdown.cmd windows 下 jmeter 关闭文件
3.2.2.8 stoptest.cmd windows 下 jmeter 测试停止文件
</code></pre>
<p>3.2.3 docs目录</p>
<p>　　docs目录下的文件是JMeter的Java Docs,而printable_docs的usermanual子目录下的内容是JMeter的用户手册文档，其中component_reference.html是最常用到的核心元件帮助文档。该目录下存放的是jmeter官方文档的API文档，主要是用于二次开发</p>
<p><img src="/./../../img/jmeter/image-20210513135154403.png" alt="image-20210513135154403"></p>
<pre><code>3.2.3.1 api:api文件
3.2.3.2 css:CSS样式
3.2.3.3 images:图像样式
</code></pre>
<p>3.2.4 extras目录</p>
<p>　　该目录下的文件提供了对构建工具Ant的支持，可以使用Ant来实现测试自动化，例如批量脚本执行，产生HTML格式的报表，测试运行时，可以把测试数据记录下来，Jmeter会自动生成一个.jtl文件，将该文件放到extras目录下，运行“ant -Dtest&#x3D;文件名 report”，就可以生成测试统计报表。也可以用于持续集成</p>
<p>3.2.5 lib目录</p>
<p><img src="/./../../img/jmeter/image-20210513140159114.png" alt="image-20210513140159114"></p>
<pre><code>3.2.5.1 ext子目录存放有JMeter的核心jar包，
3.2.5.2 junit子目录存放JUnit测试脚本。
3.2.5.3 用户扩展所依赖的包，应该直接放到lib目录下，而非lib/ext下
注意：无法识别 zip 格式的包文件，所以需要的包文件均要求以 .jar 结尾
</code></pre>
<p>3.2.6 licenses软件许可文件目录</p>
<p>3.2.7 printable_docs目录</p>
<p><img src="/./../../img/jmeter/image-20210513140505406.png" alt="image-20210513140505406"></p>
<pre><code>3.2.7.1 该目录存放的是jmeter官方提供的帮助文档
3.2.7.2 demos子目录下有一些常用的JMeter脚本案例，可以作为参考。可打印半版本目录
</code></pre>
<p>3.2.8 LICENSE  ——许可说明</p>
<p>3.2.9 NOTICE ——简单信息说明</p>
<p>3.2.10 README.md ——JMeter 官方基本介</p>
<h3 id="4-JMeter主要配置文件"><a href="#4-JMeter主要配置文件" class="headerlink" title="4 JMeter主要配置文件"></a>4 JMeter主要配置文件</h3><h3 id="4-1-jmeter-properties配置文件"><a href="#4-1-jmeter-properties配置文件" class="headerlink" title="4.1 jmeter.properties配置文件"></a>4.1 jmeter.properties配置文件</h3><pre><code>jmeter.properties，定义jmeter运行的关键配置，列举了一下这个文件的关键配置如下：
4.1.1 默认语言设置:language=en(或者修改成中文:language=zh_CN)
4.1.2 捕捉cookie开关:CookieManager.save.cookies=true
4.1.3 配置编辑器的字体:jsyntaxtextarea.font.family=宋体
4.1.4 配置编辑器的尺寸:jsyntaxtextarea.font.size=20
4.1.5 配置默认编码格式:sampleresult.default.encoding=UTF-8
</code></pre>
<h3 id="4-2-SSL配置"><a href="#4-2-SSL配置" class="headerlink" title="4.2 SSL配置"></a>4.2 SSL配置</h3><pre><code>4.2.1 指定 HTTPS 协议层:https.default.protocol=TLS
4.2.2 指定 SSL 版本，实际应用中可能需要修改:https.default.protocol=SSLv3
4.2.3 设置启动的协议:https.socket.protocols=SSLv2Hello SSLv3 TLSv1
4.2.4 缓存控制，控制 SSL 是否可以在多个迭代中重用:https.use.cached.ssl.context=true
</code></pre>
<h3 id="4-3-JMeter-测试项目自动备份配置"><a href="#4-3-JMeter-测试项目自动备份配置" class="headerlink" title="4.3 JMeter 测试项目自动备份配置"></a>4.3 JMeter 测试项目自动备份配置</h3><pre><code>4.3.1 设置是否启用自动备份(默认是 true):jmeter.gui.action.save.backup_on_save=true
4.3.2 设置自动备份目录，默认备份至 JMeter 根目录的 backups下:jmeter.gui.action.save.backup_directory=
4.3.3 设置自动备份项目数，默认为最近 10 个:jmeter.gui.action.save.keep_backup_max_count=10
</code></pre>
<h3 id="4-4-远程主机配置"><a href="#4-4-远程主机配置" class="headerlink" title="4.4 远程主机配置"></a>4.4 远程主机配置</h3><pre><code>4.4.1 配置远程主机的 IP，默认为本机。用逗号&quot;,&quot;可以设置多个远程主机:remote_hosts=127.0.0.1
4.4.2 多个远程主机指定示例如下,其中:后为端口(remote_hosts=127.0.0.1:1099,127.0.0.1:1200,127.0.0.1:1300),
      对于 RMID 的配置请直接看配置文件中的选项说明
</code></pre>
<h3 id="4-5-日志管理配置"><a href="#4-5-日志管理配置" class="headerlink" title="4.5 日志管理配置"></a>4.5 日志管理配置</h3><pre><code>4.5.1 设置日志格式:log_format_type=default（部分版本可能查询不到）
4.5.2 设置日志输出级别:log_level.jmeter=INFO（部分版本可能查询不到）
4.5.3 设置 junit 日志输出级别:log_level.jmeter.junit=DEBUG（部分版本可能查询不到）
4.5.4 设置日志输出目标文件，默认为 jmeter.log(log_file=jmeter.log)
</code></pre>
<h3 id="4-6-设置输出报告模板格式"><a href="#4-6-设置输出报告模板格式" class="headerlink" title="4.6 设置输出报告模板格式"></a>4.6 设置输出报告模板格式</h3><pre><code> jmeter.save.saveservice.output_format = csv
</code></pre>
<h3 id="4-7-jmeter-bat-关键配置修改-这部分信息没有找到"><a href="#4-7-jmeter-bat-关键配置修改-这部分信息没有找到" class="headerlink" title="4.7 jmeter.bat 关键配置修改(这部分信息没有找到)"></a><font color = red>4.7 jmeter.bat 关键配置修改(这部分信息没有找到)</font></h3><pre><code>为了更优化的使用 jmeter，需要对 jmeter.bat 中的一些配置根据当前机器的配置进行优化，
这里进行关键配置项说明，大家根据自己的机器的配置来进行修改
jvm 相关配置，大概在 80 行左右，找到这些配置，对其中的数值根据当前机器的硬件配置来修改
set HEAP=-Xms2048m -Xmx2048m
set NEW=-XX:NewSize=512m -XX:MaxNewSize=512m
set SURVIVOR=-XX:SurvivorRatio=8 -XX:TargetSurvivorRatio=50%
set TENURING=-XX:MaxTenuringThreshold=2
if %current_minor% LEQ &quot;8&quot; (
    rem Increase MaxPermSize if you use a lot of Javascript in your Test Plan :
    set PERM=-XX:PermSize=512m -XX:MaxPermSize=1024m)
</code></pre>
<h3 id="4-8-system-properties配置文件"><a href="#4-8-system-properties配置文件" class="headerlink" title="4.8 system.properties配置文件"></a>4.8 system.properties配置文件</h3><pre><code>system.properties，定义Java进程的系统变量，通过System.getProperties()可查询
</code></pre>
<h3 id="4-9-user-properties配置文件"><a href="#4-9-user-properties配置文件" class="headerlink" title="4.9 user.properties配置文件"></a>4.9 user.properties配置文件</h3><pre><code>user.properties，自定义配置，可覆盖jmeter.properties
</code></pre>
]]></content>
      
        
        <tags>
            
            <tag> JMeter </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[文档书写规范]]></title>
      <url>/2021/04/27/sicker/docs%20regulation/</url>
      <content type="html"><![CDATA[<h2 id="中英文之间需要增加空格"><a href="#中英文之间需要增加空格" class="headerlink" title="中英文之间需要增加空格"></a>中英文之间需要增加空格</h2><p>正确：</p>
<blockquote>
<p>在 LeanCloud 上，数据存储是围绕 <code>AVObject</code> 进行的。</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>在LeanCloud上，数据存储是围绕<code>AVObject</code>进行的。<br>在 LeanCloud上，数据存储是围绕<code>AVObject</code> 进行的。</p>
</blockquote>
<h2 id="中文与数字之间需要增加空格"><a href="#中文与数字之间需要增加空格" class="headerlink" title="中文与数字之间需要增加空格"></a>中文与数字之间需要增加空格</h2><p>正确：</p>
<blockquote>
<p>今天出去买菜花了 <code>5000</code> 元。</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>今天出去买菜花了 <code>5000</code>元。<br>今天出去买菜花了<code>5000</code>元。</p>
</blockquote>
<h2 id="数字与单位之间需要增加空格"><a href="#数字与单位之间需要增加空格" class="headerlink" title="数字与单位之间需要增加空格"></a>数字与单位之间需要增加空格</h2><p>正确：</p>
<blockquote>
<p>我家的光纤入屋宽带有 <code>10</code> Gbps，SSD 一共有 <code>20</code> TB</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>我家的光纤入屋宽带有 <code>10</code>Gbps，SSD 一共有 <code>20</code>TB</p>
</blockquote>
<p>例外：</p>
<blockquote>
<p>度 &#x2F; 百分比与数字之间不需要增加空格： <code>10</code>% 、 <code>30</code>° 、 <code>30</code>℃</p>
</blockquote>
<h2 id="加亮加粗斜体链接两侧增加空格"><a href="#加亮加粗斜体链接两侧增加空格" class="headerlink" title="加亮加粗斜体链接两侧增加空格"></a>加亮加粗斜体链接两侧增加空格</h2><p>正确：</p>
<blockquote>
<p>请提交一个 <a href="##">issue</a> 并分配给相关同事。<br>我有一个 <em>大</em> 西瓜<br>我有一个 <strong>大</strong> 西瓜<br>我有一个 <span style="background-color:yellow">大</span> 西瓜<br>错误：</p>
</blockquote>
<blockquote>
<p>请提交一个<a href="##">issue</a>并分配给相关同事。<br>我有一个<em>大</em>西瓜<br>我有一个 <strong>大</strong> 西瓜<br>我有一个<span style="background-color:yellow">大</span>西瓜</p>
</blockquote>
<h2 id="全角标点与其他字符之间不加空格"><a href="#全角标点与其他字符之间不加空格" class="headerlink" title="全角标点与其他字符之间不加空格"></a>全角标点与其他字符之间不加空格</h2><p>正确：</p>
<blockquote>
<p>刚刚买了一部 iPhone<code>，</code>好开心！</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>刚刚买了一部 iPhone <code>，</code>好开心！<br>刚刚买了一部 iPhone<code>，</code> 好开心！</p>
</blockquote>
<h2 id="不重复使用标点符号"><a href="#不重复使用标点符号" class="headerlink" title="不重复使用标点符号"></a>不重复使用标点符号</h2><p>正确：</p>
<blockquote>
<p>德国队竟然战胜了巴西队<code>！</code><br>她竟然对你说「喵」<code>？！</code></p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>德国队竟然战胜了巴西队<code>！！</code><br>德国队竟然战胜了巴西队<code>？？？！！！！</code></p>
</blockquote>
<h2 id="正确使用半角和全角"><a href="#正确使用半角和全角" class="headerlink" title="正确使用半角和全角"></a>正确使用半角和全角</h2><p>英文采用英文半角标点符号，中文采用中文全角标点符号（一般输入法只要指定中英文符号即可），数字采用半角字符</p>
<p>正确：</p>
<blockquote>
<p>嗨<code>！</code>你好啊<code>！</code><br>核磁共振成像<code>（</code>NMRI<code>）</code>是什么原理都不知道<code>？</code><br>Stay hungry<code>,</code>stay foolish<code>.</code><br>145</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>嗨<code>!</code>你好啊<code>！</code><br>Stay hungry<code>，</code>stay foolish<code>。</code><br>１４５</p>
</blockquote>
<h2 id="专有名词使用约定通用的大小写"><a href="#专有名词使用约定通用的大小写" class="headerlink" title="专有名词使用约定通用的大小写"></a>专有名词使用约定通用的大小写</h2><p>正确：</p>
<blockquote>
<p> GitHub、Microsoft Corporation、Google、Facebook, Inc.</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p> github、microsoft corporation、google、facebook, inc.</p>
</blockquote>
<h2 id="勿使用容易歧义或者未约定成俗的缩写"><a href="#勿使用容易歧义或者未约定成俗的缩写" class="headerlink" title="勿使用容易歧义或者未约定成俗的缩写"></a>勿使用容易歧义或者未约定成俗的缩写</h2><p>正确：</p>
<blockquote>
<p>我们需要一位熟悉 JavaScript、HTML5，至少理解一种框架（如 Backbone.js、AngularJS、React 等）的前端开发者。</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>我们需要一位熟悉 Js、h5，至少理解一种框架（如 backbone、angular、RJS 等）的 FED。</p>
</blockquote>
<h2 id="使用直角引号"><a href="#使用直角引号" class="headerlink" title="使用直角引号"></a>使用直角引号</h2><p>正确：</p>
<blockquote>
<p>「老师，『有条不紊』的『紊』是什么意思？」</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>“老师，‘有条不紊’的‘紊’是什么意思？”</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> 规范 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在localStorage中存储布尔值]]></title>
      <url>/2021/04/27/sicker/how%20to%20save%20boolean%20fields%20to%20localstroage/</url>
      <content type="html"><![CDATA[<blockquote>
<p>localStorage存入取出后，会自动变成字符串类型，稍不注意容易导致一系列问题。如何优雅的存取布尔值呢？</p>
</blockquote>
<p>首先，我们先通过一段简单的代码来了解下它</p>
<p>::: demo 看看 localStorage 做了些啥</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>点我试试<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#hello&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> bool = <span class="literal">false</span>;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="title function_">typeof</span>(bool)) <span class="comment">// boolean</span></span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;bool&quot;</span>, bool);</span><br><span class="line">  <span class="title function_">alert</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;bool&quot;</span>)) <span class="comment">// &quot;false&quot;</span></span><br><span class="line">  <span class="title function_">alert</span>(<span class="title function_">typeof</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;bool&quot;</span>))) <span class="comment">// string</span></span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;bool&quot;</span>)?<span class="title function_">alert</span>(<span class="string">&quot;真&quot;</span>):<span class="title function_">alert</span>(<span class="string">&quot;假&quot;</span>) <span class="comment">// 真</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>:::</p>
<p>从上述简单的示例中，我们可以看到。即便将 <code>false</code> 原本存储进 <code>localstroage</code> ，待再取出的时候自动变成了字符串的格式。</p>
<blockquote>
<p>布尔值 false 变成了 字符串 “false”，如此一来，也使得再进行条件判断时出现了偏差。</p>
</blockquote>
<p>&#x3D;&#x3D;知道了原由，我们也就能对症下药。避免存储时，传入 false ，问题也就迎刃而解。&#x3D;&#x3D;</p>
<hr>
<p><strong>思路1：</strong></p>
<blockquote>
<p>if(null) 返回为 false</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 存储 true 时</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;bool&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储 false 时</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&quot;bool&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//取出 false 时</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;bool&quot;</span>);</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>思路2：</strong></p>
<blockquote>
<p>if(0) 返回为 false</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 存储 true 时</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;bool&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储 false 时</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;bool&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//取出 false 时</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;bool&quot;</span>));</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>思路3：</strong></p>
<blockquote>
<p>if(“”) 返回为 false</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 存储 true 时</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;bool&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储 false 时</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;bool&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//取出 false 时</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;bool&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[根据数组中对象的属性来分组]]></title>
      <url>/2021/04/26/linvkey/grouping%20by%20attribute/</url>
      <content type="html"><![CDATA[<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>如果获取到的数据格式是如下的</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [</span><br><span class="line">		    &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1001&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;值1&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;111&quot;</span>&#125;,</span><br><span class="line">		    &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1002&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;值2&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;222&quot;</span>&#125;,</span><br><span class="line">		    &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1002&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;值2&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;333&quot;</span>&#125;,</span><br><span class="line">		    &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1003&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;值3&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;444&quot;</span>&#125;,</span><br><span class="line">		    &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1003&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;值3&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;555&quot;</span>&#125;,</span><br><span class="line">		    &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1003&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;值3&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;666&quot;</span>&#125;</span><br><span class="line">		];</span><br></pre></td></tr></table></figure>
<p>需要进行如下处理</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> map = &#123;&#125;,</span><br><span class="line">    dest = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">var</span> ai = arr[i];</span><br><span class="line">          <span class="comment">//根据id属性来分组</span></span><br><span class="line">          <span class="comment">//如果id属性的值不存在则在对象中创建id属性</span></span><br><span class="line">    <span class="keyword">if</span>(!map[ai.<span class="property">id</span>])&#123;</span><br><span class="line">        dest.<span class="title function_">push</span>(&#123;</span><br><span class="line">            <span class="attr">id</span>: ai.<span class="property">id</span>,</span><br><span class="line">            <span class="attr">name</span>: ai.<span class="property">name</span>,</span><br><span class="line">            <span class="attr">data</span>: [ai]</span><br><span class="line">        &#125;);</span><br><span class="line">        map[ai.<span class="property">id</span>] = ai;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; dest.<span class="property">length</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">var</span> dj = dest[j];</span><br><span class="line">              	<span class="comment">//否则遍历出相同的id并且把值push进去</span></span><br><span class="line">            <span class="keyword">if</span>(dj.<span class="property">id</span> == ai.<span class="property">id</span>)&#123;</span><br><span class="line">                dj.<span class="property">data</span>.<span class="title function_">push</span>(ai);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dest);</span><br></pre></td></tr></table></figure>

<p>打印的结果为</p>
<p><img src="/./../../img/1619416030371.png" alt="1619416030371"></p>
<p>根据id来分组，将id值相同的分到同一个组里</p>
<p>亲测有效，奔走相告。</p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Jira学习01——应该掌握的词汇]]></title>
      <url>/2021/04/26/linvkey/the%20vocabulary%20of%20a/</url>
      <content type="html"><![CDATA[<h2 id="词汇记录"><a href="#词汇记录" class="headerlink" title="词汇记录"></a>词汇记录</h2><p>issue					(项目中跟踪的)问题</p>
<h3 id="issueType问题类型"><a href="#issueType问题类型" class="headerlink" title="issueType				问题类型"></a>issueType				问题类型</h3><p>JIRA 系统可以用于跟踪多种不同类型的问题。系统管理员可以根据需要添加。<br>New Feature			对系统提出的新功能<br>Task					需要完成的任务<br>Improvement			对现有系统功能的改进</p>
<h3 id="Priority-Levels优先级"><a href="#Priority-Levels优先级" class="headerlink" title="Priority Levels			优先级"></a>Priority Levels			优先级</h3><p>在 JIRA 系统中用优先级来表示问题的严重级别，系统管理员可以在 JIRA 系统中添加<br>优先级。<br>Blocker				阻塞开发或测试的工作进度，或影响系统无法运行的错误<br>Critical				系统崩溃，丢失数据或内存溢出等严重错误、或者必需完成的任务<br>Major				主要的功能无效、新增功能建议<br>Minor				功能部分无效或对现有系统的改进<br>Trivial  				拼写错误，文本未对齐等</p>
<h3 id="Status状态"><a href="#Status状态" class="headerlink" title="Status					状态"></a>Status					状态</h3><p>每个问题有一个状态，用来表明问题所处的阶段，问题通过开始于 open 状态，然后开<br>始处理&#x2F;Progress，再到解决&#x2F;Resolved，然后被关闭&#x2F;Closed。根据情况的不同，您<br>可以根据项目来定制问题状态以及工作流。</p>
<h3 id="Resolutions解决"><a href="#Resolutions解决" class="headerlink" title="Resolutions				解决"></a>Resolutions				解决</h3><p>一个问题可以用多种方式解决，系统管理员是可以在 JIRA 系统中定制解决方式。<br>Fixed					问题已经解决<br>Won’t Fix  				问题未解决 - 将不会解决的问题<br>Duplicate				重复的问题<br>Incomplete				问题描述得不够准确、完全<br>Cannot Reproduce		问题重现失败，或者无足够的信息重现问题</p>
<h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><p>项目版本<br>发布&#x2F;released<br>未发布&#x2F;unreleased<br>归档&#x2F;archived</p>
<h3 id="Assign-To分配给"><a href="#Assign-To分配给" class="headerlink" title="Assign To				分配给"></a>Assign To				分配给</h3><p>分配给&#x2F;Assign To：把某个问题 Issue 指定给某个团队成员去解决</p>
<h3 id="Attach-file-x2F-Screenshot上传附件或屏幕截图"><a href="#Attach-file-x2F-Screenshot上传附件或屏幕截图" class="headerlink" title="Attach file&#x2F;Screenshot	上传附件或屏幕截图"></a>Attach file&#x2F;Screenshot	上传附件或屏幕截图</h3><p>附加文件或屏幕截图说明 issue</p>
<h3 id="Voting投票"><a href="#Voting投票" class="headerlink" title="Voting					投票"></a>Voting					投票</h3><p>除了问题的创建人，其他人可以用投票来表明支持某个问题的内容</p>
<h3 id="Watching监视问题"><a href="#Watching监视问题" class="headerlink" title="Watching				监视问题"></a>Watching				监视问题</h3><p>每人都有一个 Watch List&#x2F;监视列表，可以监视自己感兴趣的 Issue 的状<br>态等</p>
<h3 id="工作流状态"><a href="#工作流状态" class="headerlink" title="工作流状态"></a>工作流状态</h3><p>Open					表示问题被提交等待有人处理<br>In Progress  			问题在处理当中，尚未完成<br>Resolved				问题曾解决，但解决结论未获认可，需要重新分派解决<br>Reopened				问题解决，等待结果确认，确认的结果是“Reopened”或者“Closed”<br>Closed				问题处理结果确认后，置于关闭状态</p>
<p>summary				摘要<br>component				(问题关联的项目)组件<br>affect version			(问题影响的项目)版本<br>resolved version			(问题将被解决的项目)版本</p>
<p>亲测有效，奔走相告。</p>
]]></content>
      
        
        <tags>
            
            <tag> Jira </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Fiddler 操作说明文档]]></title>
      <url>/2021/04/25/XBlack/fiddler%20instructions/</url>
      <content type="html"><![CDATA[<h3 id="一、Fiddler介绍"><a href="#一、Fiddler介绍" class="headerlink" title="一、Fiddler介绍"></a>一、Fiddler介绍</h3><p>​	Fiddler是最强大最好用的Web调试工具之一， 它能记录所有客户端和服务器的http和https请求。允许你监视、设置断点、甚至修改输入输出数据。Fiddler包含了一个强大的基于事件脚本的子系统，并且能使用.net语言进行扩展。换言之，你对HTTP 协议越了解，你就能越掌握Fiddler的使用方法。你越使用Fiddler，就越能帮助你了解HTTP协议。Fiddler无论对开发人员或者测试人员来说，都是非常有用的工具。</p>
<p>Fiddler<a href="https://www.telerik.com/download/fiddler">下载链接</a></p>
<h3 id="二、Fiddler的工作原理"><a href="#二、Fiddler的工作原理" class="headerlink" title="二、Fiddler的工作原理"></a>二、Fiddler的工作原理</h3><p>​	Fiddler 是以代理web服务器的形式工作的，它使用代理地址:127.0.0.1，端口:8888。Fiddler是一个抓包工具，当浏览器访问服务器会形成一个请求，此时，Fiddler就处于请求之间，当浏览器发送请求，会先经过Fiddler，然后在到服务器；当服务器有返回数据给浏览器显示时，也会先经过Fiddler，然后数据才到浏览器中显示，这样一个过程，Fiddler就抓取到了请求和响应的整个过程。</p>
<p>Fiddler界面介绍：<font color = red>功能区</font>、<font color = brown>工具区</font>、<font color = blue>会话列表区</font>、<font color = green>命令行区</font>、<font color = grey>请求、响应区</font></p>
<p><img src="/./../../img/Fiddler/image-20210425151606804.png" alt="image-20210425151606804"></p>
<p><font color = red>(1)抓取HTTPS数据包设置</font>:</p>
<p>点击“Tools-&gt;Options…-&gt;HTTPS”初始情况：</p>
<p><img src="/./../../img/Fiddler/image-20210426113037185.png" alt="image-20210426113037185"></p>
<p>修改完成后界面：</p>
<p><img src="/./../../img/Fiddler/image-20210426113107794.png" alt="image-20210426113107794"></p>
<p>在首次设置该配置的时候会有提示安装证书弹窗显示，点击安装，安装完成后，点击OK，重启Fiddler就可以了。</p>
<p>  但有时候没有弹窗安装证书或根本就没有提示，这种情况一般在Win7中较多出现，Win7的系统https方面 在.net Framework4.0上有bug<br>解决方式：<br>1.cmd 命令行，找到fiddler的安装目录；<br>2.然后执行以下命令：<br>  makecert.exe -r -ss my -n “CN&#x3D;DO_NOT_TRUST_FiddlerRoot, O&#x3D;DO_NOT_TRUST, OU&#x3D;Created by <a href="http://www.fiddler2.com”/">http://www.fiddler2.com”</a> -sky signature -eku 1.3.6.1.5.5.7.3.1 -h 1 -cy authority -a sha1 -m 120 -b 09&#x2F;11&#x2F;2099<br>  注意：这个命令最后的日期 09&#x2F;11&#x2F;2099 一定要大于现在的日期，否则创建证书是过期的；这样执行完之后，再去重新配置一次，就可以正确安装证书了。</p>
<p><font color = red>(2)设置远程连接及端口</font></p>
<p>点击“Tools-&gt;Options…-&gt;Connections”初始情况：一般端口默认为8888，自己也可以自定义端口，点击OK</p>
<p><img src="/./../../img/Fiddler/image-20210426133240604.png" alt="image-20210426133240604"></p>
<p><font color = blue>会话列表区界面展示</font></p>
<p><img src="/./../../img/Fiddler/image-20210425153541129.png" alt="image-20210425153541129"></p>
<p><font color = blue>#</font>：HTTP Request的顺序，从1开始，按照页面加载请求的顺序递增</p>
<p><font color = blue>Result</font>：HTTP响应的状态</p>
<p><font color = blue>Protocol</font>：请求使用的协议（如HTTP&#x2F;HTTPS）</p>
<p><font color = blue>Host</font>：请求地址的域名&#x2F;ip</p>
<p><font color = blue>URL</font>：请求的服务器路径和文件名，也包含GET参数</p>
<p><font color = blue>Body</font>：请求的大小，以byte为单位</p>
<p><font color = blue>Caching</font>：请求的缓存过期时间或缓存控制header的值</p>
<p><font color = blue>Content-Type</font>：请求响应的类型</p>
<p><font color = blue>Process</font>：发出此请求的Windows进程及进程ID</p>
<p><font color = blue>Comments</font>：用户通过脚本或者菜单给此session增加的备注</p>
<p><font color = blue>Custom</font>：用户可以通过脚本设置的自定义值</p>
<p><font color = grey>请求、响应区显示</font></p>
<p><img src="/./../../img/Fiddler/image-20210425152742139.png" alt="image-20210425152742139"></p>
<p><font color = grey>Statistics统计页签</font>：通过该页签， 用户可以通过选择多个会话来得来这几个会话的总的信息统计，比如多个请求和传输的字节数。选择第一个请求和最后一个请求， 可获得整个页面加载所消耗的总体时间。从条形图表中还可以分别出哪些请求耗时最多， 从而对页面的访问进行访问速度优化</p>
<p><font color = grey>inspectors检查页签</font>：它提供headers、textview、hexview,Raw等多种方式查看单条http请求的请求报文的信息，它分为上下两部分：上部分为HTTP Request（请求）展示，下部分为HTTPResponse（响应）展示</p>
<p><font color = grey>AutoResponse自动响应页签</font>：在开发或测试过程中，由于各种原因不能得到想要的数据，所以利用相关技术模拟出想要的数据，这种技术也就是Mock挡板技术。在软件测试中，特别是外接第三方接口时，经常用挡板技术模拟相关数据进行开发测试。我们这里只是简单用Fiddler工具来实现挡板技术，模拟服务器响应数据，并把数据自动返给客户端。Fiddler工具中设置AutoResponder选项就可以实现档板技术，自动返回自定义响应数据</p>
<p>AutoResponder 可用于拦截某一请求，进行如下操作：</p>
<ol>
<li>重定向到本地的资源；</li>
<li>使用fiddler的内置响应；</li>
<li>自定义响应；</li>
</ol>
<p><font color = grey>composer构建页签</font>：支持手动构建和发送HTTP， HTTPS和FTP请求， 我们还可以从web session列表中拖曳session， 把它放到composer选项卡中， 当我们点击Execute按钮， 把请求发送到服务器端</p>
<p><font color = grey>log日志页签</font>：打印日志</p>
<p><font color = grey>Filters过滤页签</font>：多维度的过滤规则，可根据主机、进程、请求头、响应头、状态码、响应类型和大小、断点进行请求的过滤</p>
<p><img src="/./../../img/Fiddler/image-20210426134247082.png" alt="image-20210426134247082"></p>
<p><font color = grey>Timeline时间轴页签</font>：时间轴，也称为Fiddler的瀑布图，展示网络请求时间的功能。 每个网络请求都会经历域名解析、建立连接、发送请求、接受数据等阶段。把多个请求以时间作为 X 轴， 用图表的形式展现出来， 就形成了瀑布图。 在左侧会话窗口点击一个或多个（同时按下 Ctrl 键），Timeline 便会显示指定内容从服务端传输到客户端的时间</p>
<h3 id="三、模拟网络环境"><a href="#三、模拟网络环境" class="headerlink" title="三、模拟网络环境"></a>三、模拟网络环境</h3><p>（1）模拟网络延迟</p>
<p>单击选择Rules-&gt;Performance-&gt;Simulate Modem Speeds</p>
<p><img src="/./../../img/Fiddler/image-20210426135226493.png" alt="image-20210426135226493"></p>
<p>再次打开浏览器访问系统，网络延迟几秒后打开页面。</p>
<p>(2)精准控制网速</p>
<p>点击选择Rules-&gt;Customize Rules…(或者快捷键Ctrl+R)，打开Fiddler ScriptEdittor文件，并在该文件找到该部分</p>
<pre><code>if (m_SimulateModem) &#123;
        // Delay sends by 300ms per KB uploaded.
        oSession[&quot;request-trickle-delay&quot;] = &quot;300&quot;; 
        // Delay receives by 150ms per KB downloaded.
        oSession[&quot;response-trickle-delay&quot;] = &quot;150&quot;; 
    &#125;
</code></pre>
<p><img src="/./../../img/Fiddler/image-20210426135823387.png" alt="image-20210426135823387"></p>
<p>根据实际修需修改网速后保存</p>
]]></content>
      
        
        <tags>
            
            <tag> Fiddler </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[对url上没有后缀的svg图标的处理]]></title>
      <url>/2021/04/21/WH/svg%20download%20solve/</url>
      <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>在做中转系统的时候，提供的图标地址为内网地址需要中转站将url<br>转为外网可以访问的图标，而提供给中转站的图标url不带图标名称<br>与后缀，直接转存后为二进制文件，文件打开后，末尾多了一串null。<br>导致于浏览器无法识别该svg文件</p>
<p><strong>如下图所示</strong></p>
<p>打开后显示<br><img src="/../../../images/java-svg-1618995999300.png" alt="java-svg-1618995999300"></p>
<p>浏览器中显示<br><img src="/../../../images/java-svg-1618996030300.png" alt="java-svg-1618996030300"></p>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p><strong>思路</strong></p>
<ol>
<li>先通过url拿到文件流(svg图片的文件流)</li>
<li>将文件流通过字符串的方式输出</li>
<li>再将字符串转为svg文件保存</li>
<li>通过springboot 访问静态文件</li>
</ol>
<p><strong>代码</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过网络url取文件，并保存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path 文件保存路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url  网络地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">uploadImage2</span><span class="params">(String path, String url)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取网络文件流</span></span><br><span class="line">            <span class="type">URL</span> <span class="variable">pathUrl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(url);</span><br><span class="line">            <span class="type">DataInputStream</span> <span class="variable">dataInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataInputStream</span>(pathUrl.openStream());</span><br><span class="line">            <span class="comment">// 创建文件流</span></span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断需要保存的文件路径存在不存在，若不存在则创建</span></span><br><span class="line">            <span class="type">File</span> <span class="variable">file1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;/app/application/hdrs/file/icon&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!file1.exists()) &#123;</span><br><span class="line">                file1.mkdirs();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4096</span>];</span><br><span class="line">            <span class="keyword">while</span> (dataInputStream.read(buffer) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                fileOutputStream.write(buffer);<span class="comment">//将buffer中的字节写入文件中区</span></span><br><span class="line">            &#125;</span><br><span class="line">            dataInputStream.close();<span class="comment">//关闭输入流</span></span><br><span class="line">            fileOutputStream.close();<span class="comment">//关闭输出流</span></span><br><span class="line"></span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line"></span><br><span class="line">            <span class="type">InputStreamReader</span> <span class="variable">isr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(fis, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            <span class="comment">//将file文件内容转成字符串</span></span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">bf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(isr);</span><br><span class="line">            <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="keyword">while</span> (content != <span class="literal">null</span>) &#123;</span><br><span class="line">                content = bf.readLine();</span><br><span class="line">                <span class="keyword">if</span> (content == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                sb.append(content.trim());</span><br><span class="line">            &#125;</span><br><span class="line">            bf.close();</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">fileStr</span> <span class="operator">=</span> sb.toString();</span><br><span class="line"></span><br><span class="line">            string2File(fileStr,path);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将字符串写入指定文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> res  原字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath 文件路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 成功标记</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">string2File</span><span class="params">(String res, String filePath)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">bufferedReader</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">bufferedWriter</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">File</span> <span class="variable">distFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(filePath);</span><br><span class="line">            <span class="keyword">if</span> (!distFile.getParentFile().exists()) distFile.getParentFile().mkdirs();</span><br><span class="line">            bufferedReader = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">StringReader</span>(res));</span><br><span class="line">            bufferedWriter = <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(distFile));</span><br><span class="line">            <span class="type">char</span> buf[] = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">1024</span>];         <span class="comment">//字符缓冲区</span></span><br><span class="line">            <span class="type">int</span> len;</span><br><span class="line">            <span class="keyword">while</span> ((len = bufferedReader.read(buf)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                bufferedWriter.write(buf, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line">            bufferedWriter.flush();</span><br><span class="line">            bufferedReader.close();</span><br><span class="line">            bufferedWriter.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span> flag;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (bufferedReader != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    bufferedReader.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>效果图</strong></p>
<p><img src="/../../../images/java-svg-1618996761300.png" alt="java-svg-1618996761300"></p>
]]></content>
      
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[性能测试概念描述]]></title>
      <url>/2021/04/21/XBlack/performance%20test%20concepts/</url>
      <content type="html"><![CDATA[<h2 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h2><h2 id="一、性能测试概念"><a href="#一、性能测试概念" class="headerlink" title="一、性能测试概念"></a>一、性能测试概念</h2><p>​	性能测试概括为三个方面：应用在客户端性能的测试、应用在网络上性能的测试和应用在服务器端性能的测试</p>
<h3 id="二、性能测试"><a href="#二、性能测试" class="headerlink" title="二、性能测试"></a>二、性能测试</h3><h3 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h3><p>​	通过自动化的测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行测试</p>
<h3 id="2-分类"><a href="#2-分类" class="headerlink" title="2.分类"></a>2.分类</h3><h3 id="2-1负载测试"><a href="#2-1负载测试" class="headerlink" title="2.1负载测试"></a>2.1负载测试</h3><p>​	系统在不同负载下的性能表现，通过负载测试能够测试出系统在各种负载下的性能变化曲线，发现系统的性能拐点，从而找出系统的最佳性能。举例：用户并发测试（递增并发用户数，查看系统性能指标变化）</p>
<h3 id="2-2压力测试"><a href="#2-2压力测试" class="headerlink" title="2.2压力测试"></a>2.2压力测试</h3><p>​	系统在高强度负载下的性能表现，通过压力测试可以测试出系统能够承受的最大负载。压测是一种寻求系统介于正常和不正常之间临界值的一种负载测试。压测不仅关注高负载下系统是否正常运行，同时关注负载减小后，系统是否能够恢复</p>
<h3 id="2-3基准测试"><a href="#2-3基准测试" class="headerlink" title="2.3基准测试"></a>2.3基准测试</h3><p>​	基准测试（benchmarking）是一种测量和评估软件性能指标的活动。在特定时期（系统稳定时）通过基准测试建立一个已知的性能水平（称为基准线），当系统的软硬件环境发生变化之后再进行一次基准测试以确定那些变化对性能的影响。基准测试可以比较系统在版本迭代过程中，各个性能指标的变化，为系统的版本迭代优化提供参考</p>
<h3 id="2-4配单测试"><a href="#2-4配单测试" class="headerlink" title="2.4配单测试"></a>2.4配单测试</h3><p>​	配单测试也叫配置项测试，对被测系统的软硬件参数进行配置的测试。通过配单测试可以找出系统各项资源指标的最佳分配比</p>
<h3 id="2-5容量设置"><a href="#2-5容量设置" class="headerlink" title="2.5容量设置"></a>2.5容量设置</h3><p>​	通过容量测试预先分析出反映软件系统应用特征的某项指标的极限值（如最大并发用户数、数据库记录数等），系统在其极限状态下没有出现任何软件故障或还能保持主要功能正常运行。软硬件固定的情况下，对系统进行一定规模的数据量操作，观察系统各项性能指标是否正常。举例：电子商务网站所能承受的、同时进行交易或结算的在线用户数</p>
<h3 id="2-6稳定性测试"><a href="#2-6稳定性测试" class="headerlink" title="2.6稳定性测试"></a>2.6稳定性测试</h3><p>​	通过对软件稳定性的测试可以观察在一个运行周期内、一定的压力条件下，软件的出错机率、性能劣化趋势等。进而大大减少软件上线后的崩溃卡死等现象，为软件的逐步优化提供方向及验证。在特定的负载下（正常或略高于正常的负载），在一段运行周期内，对被测系统进行一系列的正常操作，观察各个系统性能指标变化以及系统是否能够长期稳定运行</p>
<h3 id="2-7配置测试"><a href="#2-7配置测试" class="headerlink" title="2.7配置测试"></a>2.7配置测试</h3><p>​	基础设施不需要经常变更，应用之间较少依赖或耦合，可以对需求变更快速响应。架构设计会考虑到未来功能的可扩展性，所以当系统增加新功能时，不需要对现有系统的结构和代码进行修改。系统集群的扩展性测试，观察系统在集群服务器增加时，整体性能是否稳步提升，集群中的每台服务器性能是否有额外损耗等</p>
<h3 id="2-8-负载测试VS压力测试"><a href="#2-8-负载测试VS压力测试" class="headerlink" title="2.8 负载测试VS压力测试"></a>2.8 负载测试VS压力测试</h3><p>​	相同点：两种测试都是针对系统承受能力的测试，都是一种量的测试；<br>​	不同点:(1)负载测试是观察系统在不同负载下的测试，旨在找出系统的性能拐点或最佳性;<br>         (2)压力测试是观察系统在高负载下的运行情况，旨在找出系统所能承受的最大负载以及系统在高压下再减压后系统恢复正常的能力。</p>
<h2 id="三、专业术语"><a href="#三、专业术语" class="headerlink" title="三、专业术语"></a>三、专业术语</h2><h3 id="1-模拟用户"><a href="#1-模拟用户" class="headerlink" title="1.模拟用户"></a>1.模拟用户</h3><p>在测试环境中，使用一些性能测试工具，在物理计算机上来模拟实际用户</p>
<h3 id="2-并发和并发用户数"><a href="#2-并发和并发用户数" class="headerlink" title="2.并发和并发用户数"></a>2.并发和并发用户数</h3><p>（1）并发：强调大量用户，同事操作、该操作会对服务器产生压力</p>
<p>（2）系统用户数——可以理解为系统注册用户总数</p>
<p>（3）在线用户数——当前统计时正在访问的用户数</p>
<p>（4）并发用户数——同一时刻让服务器产生压力的用户数</p>
<h3 id="3-响应时间"><a href="#3-响应时间" class="headerlink" title="3.响应时间"></a>3.响应时间</h3><p>​	客户感受到的响应时间&#x3D;客户端响应时间+网络响应时间+服务器响应时间</p>
<h3 id="（1）客户端响应时间"><a href="#（1）客户端响应时间" class="headerlink" title="（1）客户端响应时间"></a>（1）客户端响应时间</h3><p>​	瘦客户端——可忽略不计胖</p>
<p>​	客户端——内嵌大量逻辑处理，可能耗时较大，需关注</p>
<h3 id="（2）网络响应时间"><a href="#（2）网络响应时间" class="headerlink" title="（2）网络响应时间"></a>（2）网络响应时间</h3><p>​	指网络传输交易结果所消耗的时间（客户端请求的网络延迟+服务器响应的网络延迟）		 </p>
<h3 id="（3）服务器响应时间"><a href="#（3）服务器响应时间" class="headerlink" title="（3）服务器响应时间"></a>（3）服务器响应时间</h3><p>​	服务器完成交易请求执行的时间（服务端的响应时间可以度量服务器的处理能力）</p>
<h3 id="（4）每秒通过事务数"><a href="#（4）每秒通过事务数" class="headerlink" title="（4）每秒通过事务数"></a>（4）每秒通过事务数</h3><p>​	每秒钟系统能够处理的交易或事务的数量，它是衡量系统处理能力的重要指标（TPS和吞吐率在性能测试中的曲线成正相关）</p>
<h3 id="（5）每秒单击数"><a href="#（5）每秒单击数" class="headerlink" title="（5）每秒单击数"></a>（5）每秒单击数</h3><p>​	每秒钟用户向Web服务器提交的HTTP请求数，这是Web应用特有的一个指标</p>
<h3 id="（6）吞吐量"><a href="#（6）吞吐量" class="headerlink" title="（6）吞吐量"></a>（6）吞吐量</h3><p>​	指一次性能测试过程中网络上传输的数据量的总和</p>
<h3 id="（7）吞吐率"><a href="#（7）吞吐率" class="headerlink" title="（7）吞吐率"></a>（7）吞吐率</h3><p>​	吞吐率&#x3D;吞吐量&#x2F;传输时间</p>
]]></content>
      
        
        <tags>
            
            <tag> Performance Test </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Docker部署教程-Linux]]></title>
      <url>/2021/04/20/XBlack/docker%20deploy/</url>
      <content type="html"><![CDATA[<h2 id="1-安装VM虚拟机"><a href="#1-安装VM虚拟机" class="headerlink" title="1.安装VM虚拟机"></a>1.安装VM虚拟机</h2><h3 id="1-1下载VM虚拟机"><a href="#1-1下载VM虚拟机" class="headerlink" title="1.1下载VM虚拟机"></a>1.1下载VM虚拟机</h3><p>进入<a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">VM官网</a>，根据不同系统的点击不同的下载方式（本人是安装在Windows系统上安装）</p>
<p><img src="/./../../img/docker/image-20210420114738530.png" alt="image-20210414131101787"></p>
<h3 id="1-2安装VM虚拟机"><a href="#1-2安装VM虚拟机" class="headerlink" title="1.2安装VM虚拟机"></a>1.2安装VM虚拟机</h3><p>双击VMware，跳出弹窗点击“是”，进入安装模式（如图所示）</p>
<p><img src="/./../../img/img/docker/image-20210414134449915.png" alt="image-20210414134449915"></p>
<p>先勾选，在点击“下一步”</p>
<p><img src="/./../../img/img/docker/image-20210414134519517.png" alt="image-20210414134519517"></p>
<p>先勾选，在点击“下一步”</p>
<p><img src="/./../../img/docker/image-20210414134607285.png" alt="image-20210414134607285"></p>
<p>安装位置根据自己意愿选择安装位置（可以选择默认），默认勾选，点击“下一步”</p>
<p><img src="/./../../img/docker/image-20210414134704346.png" alt="image-20210414134704346"></p>
<p>默认勾选，在点击“下一步”</p>
<p><img src="/./../../img/docker/image-20210414134750676.png" alt="image-20210414134750676"></p>
<p>默认勾选，在点击“下一步”</p>
<p><img src="/./../../img/docker/image-20210414134826070.png" alt="image-20210414134826070"></p>
<p>点击“安装”</p>
<p><img src="/./../../img/docker/image-20210414134851965.png" alt="image-20210414134851965"></p>
<p>进入安装步骤</p>
<p><img src="/./../../img/docker/image-20210414134912550.png" alt="image-20210414134912550"></p>
<p>点击”许可证”，</p>
<p><img src="/./../../img/docker/image-20210414135048162.png" alt="image-20210414135048162"></p>
<p>输入<font color=red>YF390-0HF8P-M81RQ-2DXQE-M2UT6</font>，点击“输入”</p>
<p><img src="/./../../img/docker/image-20210414135315935.png" alt="image-20210414135315935"></p>
<p>点击“完成”，安装安装步骤完成</p>
<p><img src="/./../../img/docker/image-20210414135926085.png" alt="image-20210414135926085"></p>
<h3 id="1-3部署虚拟机环境"><a href="#1-3部署虚拟机环境" class="headerlink" title="1.3部署虚拟机环境"></a>1.3部署虚拟机环境</h3><p>​	登录<a href="https://cn.ubuntu.com/download">ubuntu</a>，点击“下载”，选择下载的路径（本人路径选择桌面），完成linux系统下载</p>
<p><img src="/./../../img/docker/image-20210414141104980.png" alt="image-20210414141104980"></p>
<p>​	VMware 虚拟机安装完成后，双击“图标“</p>
<p><img src="/./../../img/docker/image-20210414140537345.png" alt="image-20210414140537345"></p>
<p>​	VMware软件打开，点击“创建新的虚拟机“</p>
<p><img src="/./../../img/docker/image-20210414140841175.png" alt="image-20210414140841175"></p>
<p>默认选项，点击“下一步”</p>
<p><img src="/./../../img/docker/image-20210414141205666.png" alt="image-20210414141205666"></p>
<p>​	如果刚刚liunx系统下载完成后，<font color=red>安装程序光盘将自动显示该系统</font>、然后点击“<font color=red>安装程序光盘映像文件</font>”选择刚才下载完成的Linux，再次选择“<font color=red>创建空白的硬盘</font>”,最后选择“下一步”。</p>
<p><img src="/./../../img/docker/image-20210414141338086.png" alt="image-20210414141338086"></p>
<p>选择Linux，点击版本并选择Ubuntu 64位，最后“下一步”</p>
<p><img src="/./../../img/docker/image-20210414142738052.png" alt="image-20210414142738052"></p>
<p>虚拟机名称可以默认，也可以自己编写，位置选择，（本人选择默认），最后点击下一步</p>
<p><img src="/./../../img/docker/image-20210414143104132.png" alt="image-20210414143104132"></p>
<p>磁盘大小按照自己意愿，虚拟磁盘选项为默认选项，最后点击“下一步”</p>
<p><img src="/./../../img/docker/image-20210414143311371.png" alt="image-20210414143311371"></p>
<p>点击“完成”，虚拟机部署完成</p>
<p><img src="/./../../img/docker/image-20210414143706453.png" alt="image-20210414143706453"></p>
<p>首先选择虚拟机，再点击“编辑虚拟机设置”，</p>
<p><img src="/./../../img/docker/image-20210414143742857.png" alt="image-20210414143742857">打开设置界面后，选择“CD&#x2F;DVD”选项，再点击“使用ISO映像文件”，最后点击“确定”，设置完成后，返回到首页</p>
<p><img src="/./../../img/docker/image-20210414144123252.png" alt="image-20210414144123252"></p>
<p>选择虚拟机后，再点击“开启次虚拟机”</p>
<p><img src="/./../../img/docker/image-20210414144409361.png" alt="image-20210414144409361"></p>
<h3 id="1-4Liunx安装"><a href="#1-4Liunx安装" class="headerlink" title="1.4Liunx安装"></a>1.4Liunx安装</h3><p>点击“确定”，开始Liunx的系统安装</p>
<p><img src="/./../../img/docker/image-20210414144509587.png" alt="image-20210414144509587"></p>
<p>选择语言，选择自己喜欢的语言，在点击“安装”</p>
<p><img src="/./../../img/docker/image-20210414144955090.png" alt="image-20210414144955090"></p>
<p>点击“继续”</p>
<p><img src="/./../../img/docker/image-20210414145053804.png" alt="image-20210414145053804"></p>
<p>所有选项为默认，在点击“继续”</p>
<p><img src="/./../../img/docker/image-20210414145350518.png" alt="image-20210414145350518"></p>
<p>所有选项为默认选项，点击“现在安装”，弹出界面点击“继续”</p>
<p><img src="/./../../img/docker/image-20210414145851394.png" alt="image-20210414145851394"></p>
<p>默认点击“继续”</p>
<p><img src="/./../../img/docker/image-20210414150012144.png" alt="image-20210414150012144"></p>
<p>输入信息后，点击“继续”后，等待一段较长时间，安装成功之后，再点击重启</p>
<p><img src="/./../../img/docker/image-20210414150058808.png" alt="image-20210414150058808"></p>
<p>重启完成后，系统安装成功.</p>
<p><img src="/./../../img/docker/image-20210414153327866.png" alt="image-20210414153327866"></p>
<h2 id="2-在Ubuntu环境下Docker部署"><a href="#2-在Ubuntu环境下Docker部署" class="headerlink" title="2.在Ubuntu环境下Docker部署"></a>2.在Ubuntu环境下Docker部署</h2><h3 id="2-1获取管理员权限"><a href="#2-1获取管理员权限" class="headerlink" title="2.1获取管理员权限"></a>2.1获取管理员权限</h3><p>进入终端：点击“在终端中打开”</p>
<p><img src="/./../../img/docker/image-20210414160054178.png" alt="image-20210414160054178"></p>
<p>获取管理员权限：</p>
<p>先输入命令：<font color=red>sudo passwd root</font></p>
<p>先输入电脑开机密码：</p>
<p>在输入新的密码：</p>
<p>重新输入新的密码：</p>
<p>提示更改密码成功</p>
<p>输入命令：su</p>
<p>输入新的登录密码</p>
<p>获取到管理员权限</p>
<p><img src="/./../../img/docker/image-20210414164141923.png" alt="image-20210414164141923"></p>
<p>部署docker</p>
<p>首先，更新现有的包列表命令：<font color=red>sudo apt update</font></p>
<p><img src="/./../../img/docker/image-20210414170503948.png" alt="image-20210414170503948"></p>
<p>安装一些允许通过HTTPS才能使用的软件包命令：<font color=red>sudo apt install apt-transport-https ca-certificates curl software-properties-common</font></p>
<p><img src="/./../../img/docker/image-20210414170708537.png" alt="image-20210414170708537"></p>
<p>Docker存储库的GPG密钥添加到您的系统命令: <font color=red>curl -fsSL <a href="https://download.docker.com/linux/ubuntu/gpg">https://download.docker.com/linux/ubuntu/gpg</a> | sudo apt-key add -</font></p>
<p><img src="/./../../img/docker/image-20210414171128549.png" alt="image-20210414171128549"></p>
<p>Docker存储库添加到APT源命令：<font color=red>sudo add-apt-repository “deb [arch&#x3D;amd64] <a href="https://download.docker.com/linux/ubuntu">https://download.docker.com/linux/ubuntu</a> bionic stable”</font></p>
<p><img src="/./../../img/docker/image-20210414171250228.png" alt="image-20210414171250228"></p>
<p>使用新添加的repo源中的Docker包更新包数据库命令：<font color=red>sudo apt update</font></p>
<p><img src="/./../../img/docker/image-20210414171537446.png" alt="image-20210414171537446"></p>
<p>确保您要从Docker repo安装而不是默认的Ubuntu repo命令：<font color=red>apt-cache policy docker-ce</font></p>
<p><img src="/./../../img/docker/image-20210414172009527.png" alt="image-20210414172009527"></p>
<p>安装Docker命令：<font color=red>sudo apt install docker-ce</font></p>
<p><img src="/./../../img/docker/image-20210414172659479.png" alt="image-20210414172659479"></p>
<p>检查Docker是否正在运行命令：<font color=red>sudo systemctl status docker</font></p>
<p><img src="/./../../img/docker/image-20210414173549291.png" alt="image-20210414173549291"></p>
<h3 id="2-2-使用Docker命令"><a href="#2-2-使用Docker命令" class="headerlink" title="2.2 使用Docker命令"></a>2.2 使用Docker命令</h3><p>查看所有子命令：<font color=red>docker</font></p>
<p><img src="/./../../img/docker/image-20210415104537374.png" alt="image-20210415104537374"></p>
<p>查看有关Docker的系统信息命令：<font color=red>docker info</font></p>
<p><img src="/./../../img/docker/image-20210415105125369.png" alt="image-20210415105125369"></p>
<h3 id="2-3-使用Docker镜像"><a href="#2-3-使用Docker镜像" class="headerlink" title="2.3 使用Docker镜像"></a>2.3 使用Docker镜像</h3><p>检查Docker Hub访问和下载镜像命令：<font color=red>docker run hello-world</font><img src="/./../../img/docker/image-20210415110908286.png" alt="image-20210415110908286"></p>
<p>可以使用docker带子命令的search命令搜索Docker Hub上可用的镜像。例如，要搜索Ubuntu映像，请输入：</p>
<p><font color=red>docker search ubuntu</font>,在OFFICIAL列中，带OK标记的表明这个镜像由公司构建和支持。其他镜像则由个人创建。确定要使用的映像后，可以使用命令pull将其下载到计算机。</p>
<p><img src="/./../../img/docker/image-20210415133715439.png" alt="image-20210415133715439"></p>
<p>执行以下ubuntu命令将官方映像下载到您的计算机：<font color=red>docker pull ubuntu</font></p>
<p><img src="/./../../img/docker/image-20210415134831436.png" alt="image-20210415134831436"></p>
<p>查看已下载到计算机的镜像命令：<font color=red>docker images</font></p>
<p><img src="/./../../img/docker/image-20210415135023235.png" alt="image-20210415135023235"></p>
<h3 id="2-4运行Docker容器"><a href="#2-4运行Docker容器" class="headerlink" title="2.4运行Docker容器"></a>2.4运行Docker容器</h3><p>使用Ubuntu的最新镜像运行一个容器命令：<font color=red>docker run -it ubuntu</font>,执行后我们进入docker内部</p>
<p><img src="/./../../img/docker/image-20210415140200965.png" alt="image-20210415140200965"></p>
<p>更新容器内的包数据库命令：<font color=red>apt update</font></p>
<p><img src="/./../../img/docker/image-20210415141205278.png" alt="image-20210415141205278"></p>
<p>安装Node.js命令:<font color=red>apt install nodejs</font>，如果遇到下列问题，根据提示先选择地区：<font color=red>6</font></p>
<p><img src="/./../../img/docker/image-20210416165521295.png" alt="image-20210416165521295"></p>
<p>选择城市：<font color=red>70</font></p>
<p><img src="/./../../img/docker/image-20210416171133393.png" alt="image-20210416171133393"></p>
<p>​	Ubuntu存储库中安装容器中的Node.js. 安装完成后，验证Node.js是否安装成功命令：<font color=red>node -v</font>，显示版本号后说明该容器Node.js已安装成功。在输入命令<font color="red">exit</font>，退出该容器</p>
<p><img src="/./../../img/docker/image-20210418083541373.png" alt="image-20210418083541373"></p>
<h3 id="2-5管理Docker容器"><a href="#2-5管理Docker容器" class="headerlink" title="2.5管理Docker容器"></a>2.5管理Docker容器</h3><p>使用一段时间docker后，计算机中应该部署了很多的Docker容器，输入<font color = red>docker ps</font>,可以查看当前运行的Docker容器。</p>
<p><img src="/./../../img/docker/image-20210418084217000.png" alt="image-20210418084217000"></p>
<p>输入命令 <font color=red>docker -ps -a</font>,可以查看该计算机内所有的容器</p>
<p><img src="/./../../img/docker/image-20210418085545595.png" alt="image-20210418085545595"></p>
<p>输入命令 <font color=red>docker -ps -l(L的小写)</font>,可以查看最新创建的容器</p>
<p><img src="/./../../img/docker/image-20210418090135076.png" alt="image-20210418090135076"></p>
<p>假如我想启动我最近一次创建的容器，启动容器命令：<font color=red>docker start +container id(该容器的ID)</font></p>
<p><img src="/./../../img/docker/image-20210418092034837.png" alt="image-20210418092034837"></p>
<p>我们这是输入当前运行的命令：<font color=red>docker ps</font></p>
<p><img src="/./../../img/docker/image-20210418092401547.png" alt="image-20210418092401547"></p>
<p>假如我想暂停当前运行的容器，启动容器命令：<font color=red>docker stop+container id(该容器的ID)</font></p>
<p><img src="/./../../img/docker/image-20210418105803791.png" alt="image-20210418105803791"></p>
<h3 id="2-6将容器中的更改提交到Docker镜像"><a href="#2-6将容器中的更改提交到Docker镜像" class="headerlink" title="2.6将容器中的更改提交到Docker镜像"></a>2.6将容器中的更改提交到Docker镜像</h3><p>将更改提交到新的Docker镜像命令：docker commit -m“描述” -a“作者名字” 容器ID 存储路径（XBlack&#x2F;ubuntu-nodejs）</p>
<p><img src="/./../../img/docker/image-20210420111900824.png" alt="image-20210420111900824"></p>
<p>检查该镜像是否已部署完成输入命令：<font color = red>docker images</font></p>
<p><img src="/./../../img/docker/image-20210420112159377.png" alt="image-20210420112159377"></p>
<h3 id="2-7将Docker镜像推送到Docker存储库"><a href="#2-7将Docker镜像推送到Docker存储库" class="headerlink" title="2.7将Docker镜像推送到Docker存储库"></a>2.7将Docker镜像推送到Docker存储库</h3><p>请先登录Docker Hub，命令：<font color =red>docker login -u 你的Docker Hub账号</font></p>
<p><img src="/./../../img/docker/image-20210420110214520.png" alt="image-20210420110214520"></p>
<p>将刚刚部署的新镜像推送Docker Hub存储库命令：<font color=red>docker push xblack1216&#x2F;ubuntu-nodejs</font>，表示上传成功。</p>
<p><img src="/./../../img/docker/image-20210420112353506.png" alt="image-20210420112353506"></p>
<p>我们可以去Docker Hub上查看镜像是否以上传完成</p>
<p><img src="/./../../img/docker/427d8d5f8483052a47429293093e118.png" alt="image-20210420112800690"></p>
]]></content>
      
        
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用VScode创建代码片段]]></title>
      <url>/2021/04/20/linvkey/use%20vscode%20to%20create%20code%20snippets/</url>
      <content type="html"><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><blockquote>
<p>在编码的时候会遇到一些经常要用到的代码片段，可以在VScode上定义好，通过特定的快捷方式呼出对应的代码段</p>
</blockquote>
<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>打开VScode——设置——用户代码片段</p>
<p><img src="/./../../img/1618897068401.png" alt="1618897068401"></p>
<p>选择新建全局代码片段文件</p>
<p><img src="/./../../img/1618897344774.png" alt="1618897344774"></p>
<p>给你要呼出的代码段取个快捷名称然后回车保存</p>
<p>接下来会跳转到要呼出的代码段页面</p>
<p>例如我创建一个Vue的模板</p>
<p>快捷名称取为：vue</p>
<p>然后在呼出的代码页面创建想要呼出的代码片段</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Print to console&quot;: &#123;</span><br><span class="line">      &quot;prefix&quot;: &quot;vue&quot;,</span><br><span class="line">      &quot;body&quot;: [</span><br><span class="line">        &quot;&lt;template&gt;&quot;,</span><br><span class="line">        &quot;  &lt;div&gt;&quot;,</span><br><span class="line">        &quot;     &quot;,</span><br><span class="line">        &quot;  &lt;/div&gt;&quot;,</span><br><span class="line">        &quot;&lt;/template&gt;&quot;,</span><br><span class="line">        &quot;&quot;,</span><br><span class="line">        &quot;&lt;script&gt;&quot;,</span><br><span class="line">        &quot;export default &#123;&quot;,</span><br><span class="line">        &quot;    name:&#x27;$0&#x27;,&quot;,</span><br><span class="line">        &quot;    data()&#123;&quot;,</span><br><span class="line">        &quot;      return&#123;&quot;,</span><br><span class="line">        &quot;          &quot;,</span><br><span class="line">        &quot;       &#125;&quot;,</span><br><span class="line">        &quot;    &#125;&quot;,</span><br><span class="line">        &quot;  &#125;&quot;,</span><br><span class="line">        &quot;&quot;,</span><br><span class="line">        &quot;&quot;,</span><br><span class="line">        &quot;&lt;/script&gt;&quot;,</span><br><span class="line">        &quot;&lt;style scoped&gt;&quot;,</span><br><span class="line">        &quot;&lt;/style&gt;&quot;</span><br><span class="line">    ],</span><br><span class="line">      &quot;description&quot;: &quot;Log output to console&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>$0 是每次呼出代码片段后鼠标光标悬停的位置</p>
<p>亲测有效，奔走相告。</p>
]]></content>
      
        
        <tags>
            
            <tag> VScode </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue的深度监听（对象数组同理）]]></title>
      <url>/2021/04/13/sunyifang/Vue-listening/</url>
      <content type="html"><![CDATA[<p>昨天在做项目时遇到了一个问题<br>在Vue中监听obj.name时新增了一个属性 但是发现属性并没有变化<br>后来查询了官方文档发现Vue不允许动态添加prototype来执行深度监听</p>
<h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p><img src="https://img-blog.csdnimg.cn/20210413141117212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;about&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;dataList.name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;dataList.id&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;dataList.type&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">dataList</span>:&#123;<span class="attr">name</span>:<span class="number">123</span>,<span class="attr">id</span>:<span class="number">456</span>&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// this.$set(this.dataList,&#x27;type&#x27;,&#x27;student&#x27;);</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">dataList</span>.<span class="property">type</span>=<span class="string">&#x27;student&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;, <span class="number">2000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>两秒后页面不会发生任何变化<br>改动后：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;about&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;dataList.name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;dataList.id&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;dataList.type&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">dataList</span>:&#123;<span class="attr">name</span>:<span class="number">123</span>,<span class="attr">id</span>:<span class="number">456</span>&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$set(<span class="variable language_">this</span>.<span class="property">dataList</span>,<span class="string">&#x27;type&#x27;</span>,<span class="string">&#x27;student&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// this.dataList.type=&#x27;student&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;, <span class="number">2000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>出现student</p>
<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;about&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; dataList.name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; dataList.id &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; dataList.type &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,idex) in dataArr&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;idex&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">dataList</span>: &#123; <span class="attr">name</span>: <span class="number">123</span>, <span class="attr">id</span>: <span class="number">456</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">dataArr</span>: [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// this.$set(this.dataList,&#x27;type&#x27;,&#x27;student&#x27;);</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// this.dataList.type=&#x27;student&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">dataArr</span>[<span class="number">0</span>] = <span class="string">&quot;4&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;, <span class="number">2000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>两秒后。。。什么都没有发生</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;about&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; dataList.name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; dataList.id &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; dataList.type &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,idex) in dataArr&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;idex&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">dataList</span>: &#123; <span class="attr">name</span>: <span class="number">123</span>, <span class="attr">id</span>: <span class="number">456</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">dataArr</span>: [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// this.$set(this.dataList,&#x27;type&#x27;,&#x27;student&#x27;);</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// this.dataList.type=&#x27;student&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// this.dataArr[0] = &quot;4&quot;;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">dataArr</span>.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;4&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;, <span class="number">2000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>成功刷新</p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
            <tag> demo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[npm包发布流程]]></title>
      <url>/2021/04/13/sunyifang/npmRelease/</url>
      <content type="html"><![CDATA[<h3 id="1-写好自己的代码"><a href="#1-写好自己的代码" class="headerlink" title="1.写好自己的代码"></a>1.写好自己的代码</h3><h3 id="2-代码根目录"><a href="#2-代码根目录" class="headerlink" title="2.代码根目录"></a>2.代码根目录</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure>
<h3 id="3-按照提示完成类似以下内容的输入"><a href="#3-按照提示完成类似以下内容的输入" class="headerlink" title="3.按照提示完成类似以下内容的输入"></a>3.按照提示完成类似以下内容的输入</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package <span class="attr">name</span>: (test-projects)</span><br><span class="line"><span class="attr">version</span>: (<span class="number">1.0</span><span class="number">.0</span>)</span><br><span class="line"><span class="attr">description</span>: <span class="variable language_">this</span> is my test-project <span class="keyword">for</span> npm publish</span><br><span class="line">entry <span class="attr">point</span>: (index.<span class="property">js</span>)</span><br><span class="line">test <span class="attr">command</span>: hello world.</span><br><span class="line">git <span class="attr">repository</span>: (<span class="attr">https</span>:<span class="comment">//github.com/loushengyue/test-projects.git)</span></span><br><span class="line"><span class="attr">keywords</span>: test test-pro test-projects</span><br><span class="line"><span class="attr">author</span>: loushengyue</span><br><span class="line"><span class="attr">license</span>: (<span class="variable constant_">ISC</span>)</span><br></pre></td></tr></table></figure>
<h3 id="4-注册npm账号"><a href="#4-注册npm账号" class="headerlink" title="4.注册npm账号"></a>4.注册npm账号</h3><h3 id="5-首次登录"><a href="#5-首次登录" class="headerlink" title="5.首次登录"></a>5.首次登录</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm login</span><br><span class="line"><span class="title class_">Username</span>: xxxxxx</span><br><span class="line"><span class="title class_">Password</span>: xxxxxx</span><br><span class="line"><span class="title class_">Email</span>:xxxxxx</span><br><span class="line"><span class="title class_">Logged</span> <span class="keyword">in</span> <span class="keyword">as</span> loushengyue on <span class="attr">https</span>:<span class="comment">//registry.npmjs.org/.</span></span><br></pre></td></tr></table></figure>
<h3 id="6-发布npm包"><a href="#6-发布npm包" class="headerlink" title="6.发布npm包"></a>6.发布npm包</h3><p>npm publish –access&#x3D;public</p>
<h3 id="7-包更新"><a href="#7-包更新" class="headerlink" title="7.包更新"></a>7.包更新</h3><p>改完pack.json后</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ npm publish</span><br><span class="line">npm notice</span><br><span class="line">npm notice <span class="attr">package</span>: sunyifangx@<span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">npm notice === <span class="title class_">Tarball</span> <span class="title class_">Contents</span> ===</span><br><span class="line">npm notice 556B   package.<span class="property">json</span></span><br><span class="line">npm notice <span class="number">28.</span>6kB aa.<span class="property">png</span></span><br><span class="line">npm notice <span class="number">5.</span>1kB  <span class="variable constant_">README</span>.<span class="property">md</span></span><br><span class="line">npm notice === <span class="title class_">Tarball</span> <span class="title class_">Details</span> ===</span><br><span class="line">npm notice <span class="attr">name</span>:          test-pro-xxxx</span><br><span class="line">npm notice <span class="attr">version</span>:       <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">npm notice package <span class="attr">size</span>:  <span class="number">30.7</span> kB</span><br><span class="line">npm notice unpacked <span class="attr">size</span>: <span class="number">34.2</span> kB</span><br><span class="line">npm notice <span class="attr">shasum</span>:        aa3736f226f22702dcdf64fe56c</span><br><span class="line">npm notice <span class="attr">integrity</span>:     sha512-p5OT3ONm+<span class="title class_">BgIJ</span>[...]it7/<span class="title class_">CMjELwqNg</span>==</span><br><span class="line">npm notice total <span class="attr">files</span>:   <span class="number">3</span></span><br><span class="line">npm notice</span><br><span class="line">+ sunyifangx1<span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>
<h3 id="8-卸载删除"><a href="#8-卸载删除" class="headerlink" title="8.卸载删除"></a>8.卸载删除</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm unpublish 依赖包名称 --force</span><br></pre></td></tr></table></figure>
<h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><p><strong>在根目录写个index.js（默认）把想导出的组件&#x2F;js文件放进去即可<br>如果遇到名称相同会报错</strong> </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="variable constant_">ERR</span>! publish <span class="title class_">Failed</span> <span class="variable constant_">PUT</span> <span class="number">403</span></span><br><span class="line">npm <span class="variable constant_">ERR</span>! code <span class="variable constant_">E403</span></span><br><span class="line">npm <span class="variable constant_">ERR</span>! <span class="title class_">Package</span> name too similar to existing packages; <span class="keyword">try</span> renaming your package to <span class="string">&#x27;@loushengyue/test-projects&#x27;</span> and publishing <span class="keyword">with</span> <span class="string">&#x27;npm publish --access=public&#x27;</span> instead : test-projects</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>改一下pack.json里面的name即可</strong></p>
]]></content>
      
        
        <tags>
            
            <tag> Vue </tag>
            
            <tag> NPM </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用swiper实现tab列表切换]]></title>
      <url>/2021/04/13/sunyifang/swiperForTab/</url>
      <content type="html"><![CDATA[<p><strong>结果如下：</strong><br><img src="https://img-blog.csdnimg.cn/img_convert/1ce5b8fc8c39cadb1cae1b3a7e393bd3.gif#pic_center" alt="在这里插入图片描述"></p>
<p>代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;swiper <span class="keyword">class</span>=<span class="string">&quot;swiper-class swiper-no-swiping&quot;</span> :options=<span class="string">&quot;swiperOption&quot;</span>&gt;</span><br><span class="line">        &lt;!-- 再次注意 指令内要用带引号括起来 --&gt;</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">swiper-slide</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">van-list</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">v-show</span>=<span class="string">&quot;!page&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">v-model</span>=<span class="string">&quot;myExaminationLoading&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:finished</span>=<span class="string">&quot;myExaminationinished&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">finished-text</span>=<span class="string">&quot;没有更多了&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            @<span class="attr">load</span>=<span class="string">&quot;myExaminationinOnLoads(1)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;jira-list-select-content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in listForExmation&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Jira-card-search</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  <span class="attr">:cardItem</span>=<span class="string">&quot;item&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  @<span class="attr">click.native</span>=<span class="string">&quot;goDetail(item.key)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                &gt;</span><span class="tag">&lt;/<span class="name">Jira-card-search</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">van-list</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">swiper-slide</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">swiper-slide</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">van-list</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">v-show</span>=<span class="string">&quot;page&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">v-model</span>=<span class="string">&quot;myLoading&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:finished</span>=<span class="string">&quot;myFinished&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">finished-text</span>=<span class="string">&quot;没有更多了&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            @<span class="attr">load</span>=<span class="string">&quot;myExaminationinOnLoads(2)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;jira-list-select-content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in listForMaine&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Jira-card-search</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  <span class="attr">:cardItem</span>=<span class="string">&quot;item&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  @<span class="attr">click.native</span>=<span class="string">&quot;goDetail(item.key)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                &gt;</span><span class="tag">&lt;/<span class="name">Jira-card-search</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">van-list</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">swiper-slide</span>&gt;</span></span></span><br><span class="line">      &lt;/swiper&gt;</span><br></pre></td></tr></table></figure>
<p>其中夹杂了一个vant<br>轮播图配置</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">swiperOption</span>: &#123;</span><br><span class="line">  <span class="comment">//轮播图配置</span></span><br><span class="line">  <span class="comment">//上一张下一张</span></span><br><span class="line">  <span class="attr">navigation</span>: &#123;</span><br><span class="line">    <span class="attr">nextEl</span>: <span class="string">&quot;.swiper-button-next&quot;</span>,</span><br><span class="line">    <span class="attr">prevEl</span>: <span class="string">&quot;.swiper-button-prev&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">observer</span>: <span class="literal">true</span>, <span class="comment">//修改swiper自己或子元素时，自动初始化swiper</span></span><br><span class="line">  <span class="attr">observeParents</span>: <span class="literal">true</span>, <span class="comment">//修改swiper的父元素时，自动初始化swiper</span></span><br><span class="line">  <span class="attr">onSlideChangeEnd</span>: <span class="function">(<span class="params">swiper</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//滑动之后回调函数</span></span><br><span class="line">    <span class="comment">//切换结束时，告诉我现在是第几个slide</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>给上面的tab+上一个<br>          nextEl: “.swiper-button-next”,<br>          prevEl: “.swiper-button-prev”,<br>          的类就可以控制轮播图的翻页操作了<br><strong>注：</strong><br>轮播图引入文件：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; swiper, swiperSlide, directive &#125; <span class="keyword">from</span> <span class="string">&quot;vue-awesome-swiper&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;swiper/src/swiper.scss&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>vue-awesome-swiper版本号：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;vue-awesome-swiper&quot;</span>: <span class="string">&quot;^3.1.3&quot;</span>,</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
            <tag> swiper </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于最近项目中使用vant的一些总结]]></title>
      <url>/2021/04/13/sunyifang/vantUi/</url>
      <content type="html"><![CDATA[<p><strong>vantUi是有赞团队开发的一款针对于小程序及手机端的一款UI框架<br>使用时非常方便 但是其中一些bug也很多 把项目中遇到的坑及小tipes分享一下<br>供自己记忆同时也分享给大家</strong></p>
<h1 id="好好读文档-好好读文档-好好读文档-important"><a href="#好好读文档-好好读文档-好好读文档-important" class="headerlink" title="好好读文档 好好读文档 好好读文档  !important"></a>好好读文档 好好读文档 好好读文档  !important</h1><h3 id="List-列表"><a href="#List-列表" class="headerlink" title="List 列表"></a>List 列表</h3><h5 id="list列表组件完全是全自动的"><a href="#list列表组件完全是全自动的" class="headerlink" title="list列表组件完全是全自动的"></a>list列表组件完全是全自动的</h5><p>自动请求、自动删除loading、页面刷新自动更新。。。<br>总之在list中你只要做两件事：</p>
<ol>
<li>在请求数据&#x3D;&#x3D; 数据库数据 时给list一个finished状态</li>
<li>填写你所需要的请求函数</li>
</ol>
<h5 id="重用list导致的bug"><a href="#重用list导致的bug" class="headerlink" title="重用list导致的bug"></a>重用list导致的bug</h5><p><img src="https://img-blog.csdnimg.cn/20210413092742547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在写如上代码时重用list列表 –导致左右击后每次选择条件onload函数会触发两变<br><strong>bug分析：</strong><br>由于每次切换当有的页面加载完成后finished状态会改变，<br>当其重新开启的时候会触发一次onload函数而我们正常来说也会手动触发一次请求数据<br>所以在每次请求时候判断一下 finished改变的时候就不要重新手动触发onload函数了<br>如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">page</span>) &#123;</span><br><span class="line">       sn = <span class="number">2</span>;</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">listForMaine</span> = [];</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">startAt</span> = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">myFinished</span>)&#123;</span><br><span class="line">         <span class="variable language_">this</span>.<span class="property">myFinished</span>= <span class="literal">false</span>;</span><br><span class="line">         hasChanged = <span class="literal">true</span></span><br><span class="line">       &#125; </span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       sn = <span class="number">1</span>;</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">listForExmation</span> = [];</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">startAtExamtion</span> = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">myExaminationinished</span>)&#123;</span><br><span class="line">         <span class="comment">// changed</span></span><br><span class="line">         <span class="variable language_">this</span>.<span class="property">myExaminationinished</span>= <span class="literal">false</span>;</span><br><span class="line">         hasChanged = <span class="literal">true</span></span><br><span class="line">       &#125; </span><br><span class="line">     &#125; </span><br><span class="line">     <span class="keyword">if</span>(!hasChanged)&#123;</span><br><span class="line">       <span class="variable language_">this</span>.<span class="title function_">getSourceDate</span>(sn)</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>
<h3 id="vant一些内置api也很好用"><a href="#vant一些内置api也很好用" class="headerlink" title="vant一些内置api也很好用"></a>vant一些内置api也很好用</h3><p>比如：<br><img src="https://img-blog.csdnimg.cn/20210413102439669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>通过ref绑定详细请阅读文档</p>
<h3 id="vant中的toast等代码形式的样式需要额外引入"><a href="#vant中的toast等代码形式的样式需要额外引入" class="headerlink" title="vant中的toast等代码形式的样式需要额外引入"></a>vant中的toast等代码形式的样式需要额外引入</h3><p>如：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Toast</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>然后再使用，否则会报错</p>
<h3 id="DatetimePicker-时间选择器"><a href="#DatetimePicker-时间选择器" class="headerlink" title="DatetimePicker 时间选择器"></a>DatetimePicker 时间选择器</h3><p>这个组件可以精确到分钟 已经很好用了</p>
<h3 id="Slider-滑块"><a href="#Slider-滑块" class="headerlink" title="Slider 滑块"></a>Slider 滑块</h3><p>其中有一个选项可以实现双滑块很舒服<br><img src="https://img-blog.csdnimg.cn/20210413103341386.png" alt="在这里插入图片描述"><br>妈妈再也不让我写原生了</p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
            <tag> Vant </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[有关恒大项目代码习惯的总结]]></title>
      <url>/2021/04/12/sunyifang/code-rules/</url>
      <content type="html"><![CDATA[<h3 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h3><p>尽量起一些名字较短 通俗易懂的id不要搞得太长看着不舒服<br>例如：listForExmation 可以写成：list4exma</p>
<h3 id="变量整理"><a href="#变量整理" class="headerlink" title="变量整理"></a>变量整理</h3><h5 id="将有联系的代码整理成一个对象，调用简单，看代码也很清晰"><a href="#将有联系的代码整理成一个对象，调用简单，看代码也很清晰" class="headerlink" title="将有联系的代码整理成一个对象，调用简单，看代码也很清晰"></a>将有联系的代码整理成一个对象，调用简单，看代码也很清晰</h5><p>例如：<br>listfor1，listfor2，listfor3，listfor4<br>可以写成listfor：{listfor1，listfor2，listfor3，listfor4}调用直接点</p>
<h5 id="根据返回的数据适当设置类型列表"><a href="#根据返回的数据适当设置类型列表" class="headerlink" title="根据返回的数据适当设置类型列表"></a>根据返回的数据适当设置类型列表</h5><p>比如传过来的格式：[{},{},{},{}]<br>接收也可以用同样的格式然后写一个forEach方法调用<br> 不用遍历出来</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">columnTime</span>: [<span class="string">&quot;全部&quot;</span>, <span class="string">&quot;昨天&quot;</span>, <span class="string">&quot;今天&quot;</span>, <span class="string">&quot;最近三天&quot;</span>, <span class="string">&quot;最近七天&quot;</span>], <span class="comment">//时间列表</span></span><br></pre></td></tr></table></figure>
<p>传参再以同样的形式传过去</p>
<h3 id="函数重用"><a href="#函数重用" class="headerlink" title="函数重用"></a>函数重用</h3><p>类型相似的函数可以传一些参数（参数可以给默认值）的形式<br>例如：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示状态picker</span></span><br><span class="line"><span class="title function_">showStatePicker</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">columns</span> = <span class="variable language_">this</span>.<span class="property">columnSate</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">pickerName</span> = <span class="string">&quot;columnSate&quot;</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">title</span> = <span class="string">&quot;状态&quot;</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">showPicker</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//显示类型picker</span></span><br><span class="line"><span class="title function_">showTypePicker</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">showPicker</span> = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">let</span> temp = []</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">columnType</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    temp.<span class="title function_">push</span>(res.<span class="property">name</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">columns</span> = temp</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">title</span> = <span class="string">&quot;类型&quot;</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">pickerName</span> = <span class="string">&quot;columnType&quot;</span>;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//显示时间picker</span></span><br><span class="line"><span class="title function_">showTimePicker</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">showPicker</span> = <span class="literal">true</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">columns</span> = <span class="variable language_">this</span>.<span class="property">columnTime</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">title</span> = <span class="string">&quot;时间&quot;</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">pickerName</span> = <span class="string">&quot;columnTime&quot;</span>;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>可以写成showPicker（a,b&#x3D;1）{}的形式</p>
<h3 id="注释也要多写一些不能光写一个函数自己都看不懂-。"><a href="#注释也要多写一些不能光写一个函数自己都看不懂-。" class="headerlink" title="注释也要多写一些不能光写一个函数自己都看不懂 -。-"></a>注释也要多写一些不能光写一个函数自己都看不懂 -。-</h3><h3 id="控制代码长度，慢慢变强"><a href="#控制代码长度，慢慢变强" class="headerlink" title="控制代码长度，慢慢变强"></a>控制代码长度，慢慢变强</h3>]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
            <tag> code </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vuepress插件medium-zoom在跳转后无法触发的问题]]></title>
      <url>/2021/03/30/sicker/lifecycle%20hooks%20does%20not%20work%20on%20plugin-medium-zoom/</url>
      <content type="html"><![CDATA[<blockquote>
<p>vuepress 插件 medium-zoom 在跳转后无法触发了，查询源码后发现竟然是生命周期钩子无法工作。虽然不确定是否存在普遍情况，但还是将解决方案放出，作为记录</p>
</blockquote>
<p>今天在为文章寻找一个灯箱组件时，竟然发现官方自带的 <code>medium-zoom</code> 插件就是我想要的。亏我之前一直以为它是一个全屏窗口的插件。但是集成后，事情却没有如愿解决。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  <span class="string">&#x27;@vuepress/medium-zoom&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">selector</span>: <span class="string">&#x27;.content__default:not(.custom) img&#x27;</span>,</span><br><span class="line">    <span class="comment">// medium-zoom options here</span></span><br><span class="line">    <span class="comment">// See: https://github.com/francoischalifour/medium-zoom#options</span></span><br><span class="line">    <span class="attr">options</span>: &#123;</span><br><span class="line">      <span class="attr">margin</span>: <span class="number">16</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>尝试在插件里增加如上配置，发现入口页确实达到了预期，但是跳转后，却失效了。</p>
<p><img src="/../../../images/52558245-c03a5d80-2e2c-11e9-9b3d-7281b0d7dda9.gif" alt="52558245-c03a5d80-2e2c-11e9-9b3d-7281b0d7dda9"></p>
<p>::: center<br><small>在 查阅解决方案时，找到的相同问题图片</small><a href="a%20href=%22https://github.com/vuejs/vuepress/issues/1276%22%3Evuepress%20issues/1276%3C/a">^first</a><br>:::</p>
<p>下方同时有 &#x3D;&#x3D;尤雨溪&#x3D;&#x3D; 大神亲自给出的解决方案，</p>
<p><img src="/../../../images/image-20210330185343779.png" alt="image-20210330185343779"></p>
<p>简单来说，就是…</p>
<p>升级版本！（希望对你的情况有所帮助）</p>
<p>遗憾的是，我的似乎并没有得到解决。</p>
<p>好在，源码异常的简单。抛去插件注册和样式，寥寥 21 句。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./style.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> zoom <span class="keyword">from</span> <span class="string">&#x27;medium-zoom&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">data</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">zoom</span>: <span class="literal">null</span> &#125;),</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">updateZoom</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">  updated () &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">updateZoom</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    updateZoom () &#123;</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">zoom</span>) &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">zoom</span>.<span class="title function_">detach</span>()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">zoom</span> = <span class="title function_">zoom</span>(<span class="variable constant_">SELECTOR</span>, <span class="variable constant_">OPTIONS</span>)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>我试着在 <code>updateZoom</code> 方法里打印了一个字符串。果不其然，这个字符串只有在第一次打开页面的时候打印了。之后，无论我怎么跳转都无法再打印出。</p>
<p>问题显而易见： <strong>updated() 这个生命周期的钩子不正常工作了！！</strong></p>
<p>问题找到了，但是我一时之间也有些不知所措。那么至少，暂且暴力解决下吧。</p>
<p>以下解决方案仅为临时方案，请大家谨慎使用，如有解决方案，请大家务必告诉笔者！谢谢！</p>
<p><code>\docs\.vuepress\theme\layouts\Post.vue</code> 中恰当的地方加入如下代码。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zoom <span class="keyword">from</span> <span class="string">&#x27;medium-zoom&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">data</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">zoom</span>: <span class="literal">null</span> &#125;),</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">zoom</span>) &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">zoom</span>.<span class="title function_">detach</span>()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">zoom</span> = <span class="title function_">zoom</span>(<span class="string">&#x27;.content__default:not(.custom) img&#x27;</span>,&#123;</span><br><span class="line">          <span class="attr">margin</span>: <span class="number">16</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">updateZoom</span>()</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.<span class="property">medium</span>-zoom-overlay &#123;</span><br><span class="line">  z-<span class="attr">index</span>: <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.<span class="property">medium</span>-zoom-overlay ~ img &#123;</span><br><span class="line">  z-<span class="attr">index</span>: <span class="number">101</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>另外，记得同时移除掉 <code>config.js</code> 中插件的配置。</p>
<p>这样，就搞定了。</p>
]]></content>
      
        
        <tags>
            
            <tag> vuepress </tag>
            
            <tag> 插件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[群辉安装gitlab，并解决clone的IP错误]]></title>
      <url>/2021/03/30/sicker/wrong%20cloned%20ip%20for%20synology%20nas%20gitlab/</url>
      <content type="html"><![CDATA[<blockquote>
<p>公司的群辉 NAS 装的 gitlab ，在 clone 项目的时候给的 IP 错误是错误的，每次 clone 项目都异常麻烦。今天终于忍无可忍打算解决掉它！</p>
</blockquote>
<p>如果你只是需要解决修复 gitlab clone 时，IP 不对的问题，请直接移步 <a href="#修复-gitlab-clone-时-ip-不对的问题">#修复 gitlab clone 时，IP 不对的问题</a></p>
<h2 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h2><p>首先，通过 &#x3D;&#x3D;套件中心&#x3D;&#x3D; 搜索 <code>docker</code></p>
<p><img src="/../../../images/image-20210330132955399.png" alt="image-20210330132955399"></p>
<p>安装成功后，进入该应用。（你也可以直接安装边上的 <code>gitlab</code> 因为笔者当时并没有选择直接安装它，所以安装方式不详）</p>
<p>在左侧菜单中选择 &#x3D;&#x3D;注册表&#x3D;&#x3D; 如下图搜索并选中 <code>gitlab/gitlab-ce</code> ，在左上方找到下载按钮点击下载！（亦可双击下载）版本直接选择 <code>latest</code> 最后版本。</p>
<p><img src="/../../../images/image-20210330133247420.png" alt="image-20210330133247420"></p>
<p><img src="/../../../images/image-20210330133950821.png" alt="image-20210330133950821"></p>
<p>接着在 &#x3D;&#x3D;映像&#x3D;&#x3D; 中即可找到该 <code>image</code> 点击启动，选取 &#x3D;&#x3D;高级设置&#x3D;&#x3D;</p>
<p><img src="/../../../images/image-20210330134114760.png" alt="image-20210330134114760"></p>
<p>在 &#x3D;&#x3D;卷&#x3D;&#x3D; 中，&#x3D;&#x3D; 添加文件夹 &#x3D;&#x3D; 配置文件映射 （<font color=red>重要</font>）</p>
<table>
<thead>
<tr>
<th>NAS 本地文件夹</th>
<th>DOCKER镜像被映射路径</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;docker&#x2F;gitlab&#x2F;data</td>
<td>&#x2F;var&#x2F;opt&#x2F;gitlab</td>
<td>存储数据</td>
</tr>
<tr>
<td>&#x2F;docker&#x2F;gitlab&#x2F;logs</td>
<td>&#x2F;var&#x2F;log&#x2F;gitlab</td>
<td>存储日志文文件</td>
</tr>
<tr>
<td>&#x2F;docker&#x2F;gitlab&#x2F;config</td>
<td>&#x2F;etc&#x2F;gitlab</td>
<td>存储配置文件</td>
</tr>
</tbody></table>
<p>配置完成后即可启动 <code>gitlab</code> 了。</p>
<h2 id="修复-gitlab-clone-时，IP-不对的问题"><a href="#修复-gitlab-clone-时，IP-不对的问题" class="headerlink" title="修复 gitlab clone 时，IP 不对的问题"></a>修复 gitlab clone 时，IP 不对的问题</h2><p>如果你又一定的变成基础，完全可以移步 <a href="#更暴力的解决方案" >#更暴力的解决方案</a></p>
<p>因为是 <code>docker</code> 驱动，所以，从群辉的面板中，我们是无法对其内的 <code>gitlab</code> 进行配置的。</p>
<p>但是，由于我们再安装时，配置了文件映射。</p>
<p>解决这个问题的突破点，也就依托在这里了。</p>
<p>从上文的表格中，我们也已经了解到了 <code>/docker/gitlab/config</code> 路径，映射的正是 <code>gitlab</code> 的配置文件。于是，我们可以通到群辉预装的 &#x3D;&#x3D;File Station&#x3D;&#x3D; 进入该路径。</p>
<p><img src="/../../../images/image-20210330135046705.png" alt="image-20210330135046705"></p>
<p>下载 <code>gitlab.rb</code> 在本地通过文本编辑器打开，（推荐 <code>Sublime Text</code>、<code>visual studio Code</code> ），当然你也可以使用记事本打开。</p>
<p>打开后，我们直接下拉到最底下，依据下文注释，新增如下行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">external_url <span class="string">&#x27;http://192.168.2.100:1080&#x27;</span> // 这里修改为你的 NAS IP ，以及端口号 </span><br><span class="line">nginx[<span class="string">&#x27;listen_port&#x27;</span>] = 80</span><br></pre></td></tr></table></figure>



<p>接着上传覆盖回去，打开 <code>gitlab</code> ，</p>
<p><img src="/../../../images/image-20210330135919571.png" alt="image-20210330135919571"></p>
<p>你的问题是否也解决了呢？</p>
<hr>
<h2 id="更暴力的解决方案"><a href="#更暴力的解决方案" class="headerlink" title="更暴力的解决方案"></a>更暴力的解决方案</h2><ol>
<li>打开 <code>ssh</code></li>
</ol>
<p><img src="/../../../images/image-20210330140946266.png" alt="image-20210330140946266"></p>
<p><img src="/../../../images/image-20210330141005254.png" alt="image-20210330141005254"></p>
<ol start="2">
<li>接着，我们即可通过管理员账号密码，连接我们的 <code>NAS</code></li>
</ol>
<p><img src="/../../../images/image-20210330141100355.png" alt="image-20210330141100355"></p>
<ol start="3">
<li>直接操作 <code>docker</code></li>
</ol>
<p>键入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps</span><br></pre></td></tr></table></figure>

<p><img src="/../../../images/image-20210330141234685.png" alt="image-20210330141234685"></p>
<p>可以看到，下载被挂载的镜像，仅有 <code>gitlab/gitlab-ce:latest</code></p>
<p>我们找到该镜像的 <code>CONTAINER ID</code> ，笔者的为 <code>f4bc755c7297</code> ，于是，我们就可以尝试进入该镜像啦！</p>
<p>键入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker <span class="built_in">exec</span> -it f4bc755c7297  /bin/bash  </span><br></pre></td></tr></table></figure>



<p><img src="/../../../images/image-20210330141623301.png" alt="image-20210330141623301"></p>
<p>从用户名判断，我们已经进入了该镜像内部。</p>
<p><img src="/../../../images/image-20210330142142149.png" alt="image-20210330142142149"></p>
<p><img src="/../../../images/image-20210330142331589.png" alt="image-20210330142331589"></p>
<p>接着依据上图进行操作，接着在编辑模式下，依据下文注释，新增如下行(按 shift + g ，可以快速移入最下行，按 i 进入编辑模式， 按 ctrl + c 退出编辑模式 键入 :wq 保存退出 ，具体可以自行学习)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">external_url <span class="string">&#x27;http://192.168.2.100:1080&#x27;</span> // 这里修改为你的 NAS IP ，以及端口号 </span><br><span class="line">nginx[<span class="string">&#x27;listen_port&#x27;</span>] = 80</span><br></pre></td></tr></table></figure>

<p>最后一步，重启镜像，看看效果吧。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://mixable.blog/gitlab-on-synology-set-external_url/">https://mixable.blog/gitlab-on-synology-set-external_url/</a></p>
]]></content>
      
        
        <tags>
            
            <tag> Synology </tag>
            
            <tag> gitlab </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Vue路由传参]]></title>
      <url>/2021/03/26/sunyifang/vue-router-param/</url>
      <content type="html"><![CDATA[<h2 id="name传参"><a href="#name传参" class="headerlink" title="name传参"></a>name传参</h2><p>发送参数：<br>在路由中写好<br>接收参数：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$route.name</span><br></pre></td></tr></table></figure>

<h2 id="命名路由（post传参）"><a href="#命名路由（post传参）" class="headerlink" title="命名路由（post传参）"></a>命名路由（post传参）</h2><p>发送参数：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123; name: &#x27;news&#x27;, params: &#123; userId: 123 &#125;&#125;);</span><br></pre></td></tr></table></figure>
<p>接收参数：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;this.$route.params.userId&#125;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="查询参数（get传参）"><a href="#查询参数（get传参）" class="headerlink" title="查询参数（get传参）"></a>查询参数（get传参）</h2><p>发送参数：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#x27;&#x27;/news&#x27;?userId=123 &#x27;)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123; path: &#x27;/news&#x27;, query: &#123; userId: 123 &#125;&#125;);</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123;</span><br><span class="line">       name: &quot;news&quot;,</span><br><span class="line">       query: &#123;</span><br><span class="line">         id: 123 </span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure>
<p>接收参数：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;this.$route.query.userId&#125;&#125;</span><br></pre></td></tr></table></figure>
<h4 id="二者区别："><a href="#二者区别：" class="headerlink" title="二者区别："></a>二者区别：</h4><p>1.命名路由搭配params，刷新页面参数会丢失<br>2.查询参数搭配query，刷新页面数据不会丢失<br>3.post 类型的传参必须用 name ，如果用 path，那么 addres 页面的 params 是空的。<br>4.不管是 get 类型的传参还是 post 类型的传参，但凡用 name 必须要在路由里配置好 name 属性。<br>5.参数为 Object 类型时要注意</p>
]]></content>
      
        
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Vue </tag>
            
            <tag> CSS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vuepress/vue动态更换配色方案]]></title>
      <url>/2021/03/23/sicker/color%20theme%20for%20vuepress/</url>
      <content type="html"><![CDATA[<blockquote>
<p>TODO 上一直挂着调色盘，原想可以去网上白嫖一个插件该是分分钟的事儿，没想怎么也没找到心仪的，只好自己动手改造了一个。<br>思路：</p>
</blockquote>
<ol>
<li><p>延续 <code>vuepress</code> 的 <code>css</code> 预处理器，为样式配置好各种颜色变量，接着在使用该颜色时，使用变量进行替代，以实现便捷地颜色大面积更换。<br>但很可惜的是， <code>stylus</code> 本身是无法使用脚本对其进行操作的。所以，我们只能折衷采用 <code>css</code> 的变量作为桥梁。<br>以 <code>vuepress</code> 默认博客主题为例，将入口文件 <code>docs\.vuepress\theme\styles\index.styl</code> 进行简单处理。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span></span><br><span class="line">  <span class="attr">--main-color</span> <span class="variable">$accentColor</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>检索主题下的所有文件，将所有采用 <code>$accentColor</code> 处（除配色版本身的变量配置与上述入口文件处），用 <code>var(--main-color)</code> 替代，因编译器限制，这里无法使用<code>stylus</code>的内置方法 <code>darken</code> 或 <code>lighten</code>，经测试，也无法采用原生的 <code>color</code> 函数[^f] ，只能妥协采用相同配色。</p>
</li>
<li><p>接着，参考 <code>vcolorpicker </code>[^s] 提取 <code>ColorPicker.vue</code><br>源码：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line">&lt;template lang=&quot;html&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;m-colorPicker&quot;  ref=&quot;colorPicker&quot; v-clickoutside=&quot;closePanel&quot; v-on:click=&quot;event =&gt; &#123; event.stopPropagation() &#125;&quot;&gt;</span><br><span class="line">    &lt;!-- 颜色显示小方块 --&gt;</span><br><span class="line">    &lt;div class=&quot;colorBtn&quot;</span><br><span class="line">      v-bind:style=&quot;`background-color: $&#123;showColor&#125;`&quot;</span><br><span class="line">      v-on:click=&quot;openPanel&quot;</span><br><span class="line">      v-bind:class=&quot;&#123; disabled: disabled &#125;&quot;</span><br><span class="line">    &gt;主&lt;/div&gt;</span><br><span class="line">    &lt;!-- 颜色色盘 --&gt;</span><br><span class="line">    &lt;div class=&quot;box&quot; v-bind:class=&quot;&#123; open: openStatus &#125;&quot; &gt;</span><br><span class="line">      &lt;div class=&quot;hd&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;colorView&quot; v-bind:style=&quot;`background-color: $&#123;showPanelColor&#125;`&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;defaultColor&quot;</span><br><span class="line">          v-on:click=&quot;handleDefaultColor&quot;</span><br><span class="line">          v-on:mouseover=&quot;hoveColor = defaultColor&quot;</span><br><span class="line">          v-on:mouseout=&quot;hoveColor = null&quot;</span><br><span class="line">        &gt;默认颜色&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;bd&quot;&gt;</span><br><span class="line">        &lt;h3&gt;主题颜色&lt;/h3&gt;</span><br><span class="line">        &lt;ul class=&quot;tColor&quot;&gt;</span><br><span class="line">          &lt;li</span><br><span class="line">            v-for=&quot;(color, index) of tColor&quot;</span><br><span class="line">            :key=&quot;index&quot;</span><br><span class="line">            v-bind:style=&quot;&#123; backgroundColor: color &#125;&quot;</span><br><span class="line">            v-on:mouseover=&quot;hoveColor = color&quot;</span><br><span class="line">            v-on:mouseout=&quot;hoveColor = null&quot;</span><br><span class="line">            v-on:click=&quot;updataValue(color)&quot;</span><br><span class="line">          &gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;ul class=&quot;bColor&quot;&gt;</span><br><span class="line">          &lt;li v-for=&quot;(item, index) of colorPanel&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">              &lt;li</span><br><span class="line">                v-for=&quot;(color, cindex) of item&quot;</span><br><span class="line">                :key=&quot;cindex&quot;</span><br><span class="line">                v-bind:style=&quot;&#123; backgroundColor: color &#125;&quot;</span><br><span class="line">                v-on:mouseover=&quot;hoveColor = color&quot;</span><br><span class="line">                v-on:mouseout=&quot;hoveColor = null&quot;</span><br><span class="line">                v-on:click=&quot;updataValue(color)&quot;</span><br><span class="line">              &gt;&lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;h3&gt;标准颜色&lt;/h3&gt;</span><br><span class="line">        &lt;ul class=&quot;tColor&quot;&gt;</span><br><span class="line">          &lt;li</span><br><span class="line">            v-for=&quot;(color, index) of bColor&quot;</span><br><span class="line">            :key=&quot;index&quot;</span><br><span class="line">            v-bind:style=&quot;&#123; backgroundColor: color &#125;&quot;</span><br><span class="line">            v-on:mouseover=&quot;hoveColor = color&quot;</span><br><span class="line">            v-on:mouseout=&quot;hoveColor = null&quot;</span><br><span class="line">            v-on:click=&quot;updataValue(color)&quot;</span><br><span class="line">          &gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;h3 v-on:click=&quot;triggerHtml5Color&quot;&gt;更多颜色...&lt;/h3&gt;</span><br><span class="line">        &lt;!-- 用以激活HTML5颜色面板 --&gt;</span><br><span class="line">        &lt;input type=&quot;color&quot;</span><br><span class="line">          ref=&quot;html5Color&quot;</span><br><span class="line">          v-model=&quot;html5Color&quot;</span><br><span class="line">          v-on:change=&quot;updataValue(html5Color)&quot;&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;colorPicker&quot;,</span><br><span class="line">  directives: &#123;</span><br><span class="line">    clickoutside,</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    // 当前颜色值</span><br><span class="line">    value: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      required: true,</span><br><span class="line">    &#125;,</span><br><span class="line">    // 默认颜色</span><br><span class="line">    defaultColor: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &quot;#000000&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    // 禁用状态</span><br><span class="line">    disabled: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      default: false,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // 面板打开状态</span><br><span class="line">      openStatus: false,</span><br><span class="line">      // 鼠标经过的颜色块</span><br><span class="line">      hoveColor: null,</span><br><span class="line">      // 主题颜色</span><br><span class="line">      tColor: [</span><br><span class="line">        &quot;#000000&quot;,</span><br><span class="line">        &quot;#ffffff&quot;,</span><br><span class="line">        &quot;#eeece1&quot;,</span><br><span class="line">        &quot;#1e497b&quot;,</span><br><span class="line">        &quot;#4e81bb&quot;,</span><br><span class="line">        &quot;#e2534d&quot;,</span><br><span class="line">        &quot;#9aba60&quot;,</span><br><span class="line">        &quot;#8165a0&quot;,</span><br><span class="line">        &quot;#47acc5&quot;,</span><br><span class="line">        &quot;#f9974c&quot;,</span><br><span class="line">      ],</span><br><span class="line">      // 颜色面板</span><br><span class="line">      colorConfig: [</span><br><span class="line">        [&quot;#7f7f7f&quot;, &quot;#f2f2f2&quot;],</span><br><span class="line">        [&quot;#0d0d0d&quot;, &quot;#808080&quot;],</span><br><span class="line">        [&quot;#1c1a10&quot;, &quot;#ddd8c3&quot;],</span><br><span class="line">        [&quot;#0e243d&quot;, &quot;#c6d9f0&quot;],</span><br><span class="line">        [&quot;#233f5e&quot;, &quot;#dae5f0&quot;],</span><br><span class="line">        [&quot;#632623&quot;, &quot;#f2dbdb&quot;],</span><br><span class="line">        [&quot;#4d602c&quot;, &quot;#eaf1de&quot;],</span><br><span class="line">        [&quot;#3f3150&quot;, &quot;#e6e0ec&quot;],</span><br><span class="line">        [&quot;#1e5867&quot;, &quot;#d9eef3&quot;],</span><br><span class="line">        [&quot;#99490f&quot;, &quot;#fee9da&quot;],</span><br><span class="line">      ],</span><br><span class="line">      // 标准颜色</span><br><span class="line">      bColor: [</span><br><span class="line">        &quot;#c21401&quot;,</span><br><span class="line">        &quot;#ff1e02&quot;,</span><br><span class="line">        &quot;#ffc12a&quot;,</span><br><span class="line">        &quot;#ffff3a&quot;,</span><br><span class="line">        &quot;#90cf5b&quot;,</span><br><span class="line">        &quot;#00af57&quot;,</span><br><span class="line">        &quot;#00afee&quot;,</span><br><span class="line">        &quot;#0071be&quot;,</span><br><span class="line">        &quot;#00215f&quot;,</span><br><span class="line">        &quot;#72349d&quot;,</span><br><span class="line">      ],</span><br><span class="line">      html5Color: this.value,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    // 显示面板颜色</span><br><span class="line">    showPanelColor() &#123;</span><br><span class="line">      if (this.hoveColor) &#123;</span><br><span class="line">        return this.hoveColor;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        return this.showColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示颜色</span><br><span class="line">    showColor() &#123;</span><br><span class="line">      if (this.value) &#123;</span><br><span class="line">        return this.value;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        return this.defaultColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 颜色面板</span><br><span class="line">    colorPanel() &#123;</span><br><span class="line">      let colorArr = [];</span><br><span class="line">      for (let color of this.colorConfig) &#123;</span><br><span class="line">        colorArr.push(this.gradient(color[1], color[0], 5));</span><br><span class="line">      &#125;</span><br><span class="line">      return colorArr;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    openPanel() &#123;</span><br><span class="line">      this.openStatus = !this.disabled;</span><br><span class="line">    &#125;,</span><br><span class="line">    closePanel() &#123;</span><br><span class="line">      this.openStatus = false;</span><br><span class="line">    &#125;,</span><br><span class="line">    triggerHtml5Color() &#123;</span><br><span class="line">      this.$refs.html5Color.click();</span><br><span class="line">    &#125;,</span><br><span class="line">    // 更新组件的值 value</span><br><span class="line">    updataValue(value) &#123;</span><br><span class="line">      this.$emit(&quot;input&quot;, value);</span><br><span class="line">      this.$emit(&quot;change&quot;, value);</span><br><span class="line">      this.openStatus = false;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 设置默认颜色</span><br><span class="line">    handleDefaultColor() &#123;</span><br><span class="line">      this.updataValue(this.defaultColor);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 格式化 hex 颜色值</span><br><span class="line">    parseColor(hexStr) &#123;</span><br><span class="line">      if (hexStr.length === 4) &#123;</span><br><span class="line">        hexStr =</span><br><span class="line">          &quot;#&quot; +</span><br><span class="line">          hexStr[1] +</span><br><span class="line">          hexStr[1] +</span><br><span class="line">          hexStr[2] +</span><br><span class="line">          hexStr[2] +</span><br><span class="line">          hexStr[3] +</span><br><span class="line">          hexStr[3];</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        return hexStr;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // RGB 颜色 转 HEX 颜色</span><br><span class="line">    rgbToHex(r, g, b) &#123;</span><br><span class="line">      let hex = ((r &lt;&lt; 16) | (g &lt;&lt; 8) | b).toString(16);</span><br><span class="line">      return &quot;#&quot; + new Array(Math.abs(hex.length - 7)).join(&quot;0&quot;) + hex;</span><br><span class="line">    &#125;,</span><br><span class="line">    // HEX 转 RGB 颜色</span><br><span class="line">    hexToRgb(hex) &#123;</span><br><span class="line">      hex = this.parseColor(hex);</span><br><span class="line">      let rgb = [];</span><br><span class="line">      for (let i = 1; i &lt; 7; i += 2) &#123;</span><br><span class="line">        rgb.push(parseInt(&quot;0x&quot; + hex.slice(i, i + 2)));</span><br><span class="line">      &#125;</span><br><span class="line">      return rgb;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 计算渐变过渡颜色</span><br><span class="line">    gradient(startColor, endColor, step) &#123;</span><br><span class="line">      // 讲 hex 转换为 rgb</span><br><span class="line">      let sColor = this.hexToRgb(startColor);</span><br><span class="line">      let eColor = this.hexToRgb(endColor);</span><br><span class="line">      // 计算R\G\B每一步的差值</span><br><span class="line">      let rStep = (eColor[0] - sColor[0]) / step;</span><br><span class="line">      let gStep = (eColor[1] - sColor[1]) / step;</span><br><span class="line">      let bStep = (eColor[2] - sColor[2]) / step;</span><br><span class="line">      let gradientColorArr = [];</span><br><span class="line">      // 计算每一步的hex值</span><br><span class="line">      for (let i = 0; i &lt; step; i++) &#123;</span><br><span class="line">        gradientColorArr.push(</span><br><span class="line">          this.rgbToHex(</span><br><span class="line">            parseInt(rStep * i + sColor[0]),</span><br><span class="line">            parseInt(gStep * i + sColor[1]),</span><br><span class="line">            parseInt(bStep * i + sColor[2])</span><br><span class="line">          )</span><br><span class="line">        );</span><br><span class="line">      &#125;</span><br><span class="line">      return gradientColorArr;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot; scoped&gt;</span><br><span class="line">.m-colorPicker &#123;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  outline: none;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker ul,</span><br><span class="line">li,</span><br><span class="line">ol &#123;</span><br><span class="line">  list-style: none;</span><br><span class="line">  margin: 0;</span><br><span class="line">  padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker .colorBtn &#123;</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line">  color:#fff;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker .colorBtn.disabled &#123;</span><br><span class="line">  cursor: no-drop;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker .box &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  width: 190px;</span><br><span class="line">  left:-195px;</span><br><span class="line">  background: #fff;</span><br><span class="line">  border: 1px solid #ddd;</span><br><span class="line">  visibility: hidden;</span><br><span class="line">  border-radius: 2px;</span><br><span class="line">  margin-top: 2px;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  padding-bottom: 5px;</span><br><span class="line">  box-shadow: 0 0 5px rgba(0, 0, 0, 0.15);</span><br><span class="line">  opacity: 0;</span><br><span class="line">  transition: all 0.3s ease;</span><br><span class="line">  box-sizing: content-box;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker .box h3 &#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">  margin-top: 10px;</span><br><span class="line">  margin-bottom: 5px;</span><br><span class="line">  line-height: 1;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker .box input &#123;</span><br><span class="line">  visibility: hidden;</span><br><span class="line">  position: absolute;</span><br><span class="line">  left: 0;</span><br><span class="line">  bottom: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.m-colorPicker .box.open &#123;</span><br><span class="line">  visibility: visible;</span><br><span class="line">  opacity: 1;</span><br><span class="line">  z-index: 1;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker .hd &#123;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  line-height: 29px;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker .hd .colorView &#123;</span><br><span class="line">  width: 100px;</span><br><span class="line">  height: 30px;</span><br><span class="line">  float: left;</span><br><span class="line">  transition: background-color 0.3s ease;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker .hd .defaultColor &#123;</span><br><span class="line">  width: 80px;</span><br><span class="line">  float: right;</span><br><span class="line">  text-align: center;</span><br><span class="line">  border: 1px solid #ddd;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.m-colorPicker .tColor li &#123;</span><br><span class="line">  width: 15px;</span><br><span class="line">  height: 15px;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  margin: 0 2px;</span><br><span class="line">  transition: all 0.3s ease;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker .tColor li:hover &#123;</span><br><span class="line">  box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);</span><br><span class="line">  transform: scale(1.3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.m-colorPicker .bColor li &#123;</span><br><span class="line">  width: 15px;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  margin: 0 2px;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker .bColor li li &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  width: 15px;</span><br><span class="line">  height: 15px;</span><br><span class="line">  transition: all 0.3s ease;</span><br><span class="line">  margin: 0;</span><br><span class="line">&#125;</span><br><span class="line">.m-colorPicker .bColor li li:hover &#123;</span><br><span class="line">  box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);</span><br><span class="line">  transform: scale(1.3);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<p><code>clickoutside.js</code>[^t]</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">validate</span>(<span class="params">binding</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> binding.<span class="property">value</span> !== <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[Vue-click-outside:] provided expression&#x27;</span>, binding.<span class="property">expression</span>, <span class="string">&#x27;is not a function.&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isPopup</span>(<span class="params">popupItem, elements</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!popupItem || !elements)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = elements.<span class="property">length</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (popupItem.<span class="title function_">contains</span>(elements[i])) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (elements[i].<span class="title function_">contains</span>(popupItem)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isServer</span>(<span class="params">vNode</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">typeof</span> vNode.<span class="property">componentInstance</span> !== <span class="string">&#x27;undefined&#x27;</span> &amp;&amp; vNode.<span class="property">componentInstance</span>.<span class="property">$isServer</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span> = <span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">bind</span>: <span class="keyword">function</span> (<span class="params">el, binding, vNode</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_">validate</span>(binding)) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Define Handler and cache it on the element</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">handler</span>(<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!vNode.<span class="property">context</span>) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// some components may have related popup item, on which we shall prevent the click outside event handler.</span></span><br><span class="line">      <span class="keyword">var</span> elements = e.<span class="property">path</span> || (e.<span class="property">composedPath</span> &amp;&amp; e.<span class="title function_">composedPath</span>())</span><br><span class="line">      elements &amp;&amp; elements.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; elements.<span class="title function_">unshift</span>(e.<span class="property">target</span>)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (el.<span class="title function_">contains</span>(e.<span class="property">target</span>) || <span class="title function_">isPopup</span>(vNode.<span class="property">context</span>.<span class="property">popupItem</span>, elements)) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">      el.<span class="property">__vueClickOutside__</span>.<span class="title function_">callback</span>(e)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// add Event Listeners</span></span><br><span class="line">    el.<span class="property">__vueClickOutside__</span> = &#123;</span><br><span class="line">      <span class="attr">handler</span>: handler,</span><br><span class="line">      <span class="attr">callback</span>: binding.<span class="property">value</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> clickHandler = <span class="string">&#x27;ontouchstart&#x27;</span> <span class="keyword">in</span> <span class="variable language_">document</span>.<span class="property">documentElement</span> ? <span class="string">&#x27;touchstart&#x27;</span> : <span class="string">&#x27;click&#x27;</span>;</span><br><span class="line">    !<span class="title function_">isServer</span>(vNode) &amp;&amp; <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(clickHandler, handler)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">update</span>: <span class="keyword">function</span> (<span class="params">el, binding</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">validate</span>(binding)) el.<span class="property">__vueClickOutside__</span>.<span class="property">callback</span> = binding.<span class="property">value</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">unbind</span>: <span class="keyword">function</span> (<span class="params">el, binding, vNode</span>) &#123;</span><br><span class="line">    <span class="comment">// Remove Event Listeners</span></span><br><span class="line">    <span class="keyword">const</span> clickHandler = <span class="string">&#x27;ontouchstart&#x27;</span> <span class="keyword">in</span> <span class="variable language_">document</span>.<span class="property">documentElement</span> ? <span class="string">&#x27;touchstart&#x27;</span> : <span class="string">&#x27;click&#x27;</span>;</span><br><span class="line">    !<span class="title function_">isServer</span>(vNode) &amp;&amp; el.<span class="property">__vueClickOutside__</span> &amp;&amp; <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(clickHandler, el.<span class="property">__vueClickOutside__</span>.<span class="property">handler</span>)</span><br><span class="line">    <span class="keyword">delete</span> el.<span class="property">__vueClickOutside__</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在想要使用的地方引入组件</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ColorPicker</span><br><span class="line">    v-model=&quot;color&quot; // 绑定的属性</span><br><span class="line">    defaultColor=&quot;#ef7c1e&quot; // 默认颜色</span><br><span class="line">    v-on:change=&quot;headleChangeColor&quot; // 绑定的 change 事件</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure>
<p>接着处理 <code>headleChangeColor</code> 事件</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> themeColor = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;themeColor&quot;</span>) || <span class="string">&quot;#ef7c1e&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span> (themeColor) <span class="variable language_">this</span>.<span class="title function_">headleChangeColor</span>(themeColor);</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">color</span> = themeColor;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="title function_">headleChangeColor</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> style = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>;</span><br><span class="line">    style.<span class="title function_">setProperty</span>(<span class="string">&quot;--main-color&quot;</span>, e);</span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;themeColor&quot;</span>, e);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,    </span><br></pre></td></tr></table></figure>
</li>
<li><p>对插件的样式进行适配调整<br>例，在 <code>index.stylus</code> 最下新增，覆盖默认样式：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.go-to-top</span></span><br><span class="line">  <span class="attribute">color</span> <span class="built_in">var</span>(--main-color)<span class="meta">!important</span></span><br><span class="line"><span class="selector-class">.pagination</span></span><br><span class="line">  <span class="selector-class">.active</span> &gt; <span class="selector-tag">a</span>, &gt; <span class="selector-class">.active</span> &gt; <span class="selector-tag">span</span>, &gt; <span class="selector-class">.active</span> &gt; <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>, &gt; <span class="selector-class">.active</span> &gt; <span class="selector-tag">span</span><span class="selector-pseudo">:hover</span>,&gt; <span class="selector-class">.active</span> &gt; <span class="selector-tag">a</span><span class="selector-pseudo">:focus</span>, &gt; <span class="selector-class">.active</span> &gt; <span class="selector-tag">span</span><span class="selector-pseudo">:focus</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--main-color)<span class="meta">!important</span></span><br><span class="line">    <span class="attribute">border-color</span>: <span class="built_in">var</span>(--main-color)<span class="meta">!important</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span><span class="meta">!important</span></span><br><span class="line">  &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">a</span>, <span class="selector-class">.pagination</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">span</span></span><br><span class="line">    <span class="attribute">color</span>:  <span class="built_in">var</span>(--main-color)<span class="meta">!important</span></span><br><span class="line">  &gt; <span class="selector-class">.disabled</span> &gt; <span class="selector-tag">span</span>, <span class="selector-class">.disabled</span> &gt; <span class="selector-tag">span</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.disabled</span> &gt; <span class="selector-tag">span</span><span class="selector-pseudo">:focus</span>, <span class="selector-class">.disabled</span> &gt; <span class="selector-tag">a</span>,  <span class="selector-class">.disabled</span> &gt; <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.disabled</span> &gt; <span class="selector-tag">a</span><span class="selector-pseudo">:focus</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ddd</span><span class="meta">!important</span></span><br><span class="line"><span class="selector-id">#nprogress</span> <span class="selector-class">.bar</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--main-color)<span class="meta">!important</span>;</span><br></pre></td></tr></table></figure></li>
</ol>
<p>最后去查看下效果吧。</p>
<p>当然，因为这边的需求较为简单，请依据个人需求自行再调试。</p>
<p>另外，经测试IE11下无效</p>
<p>[^f]: 例：<code>color(#efb4ea alpha(58%) hue(360) saturation(78%) shade(18%))</code> <a href="https://colorme.io/">参考</a><br>[^s]: <a href="https://github.com/zuley/vue-color-picker">vue-color-picker</a><br>[^t]: <a href="https://github.com/vue-bulma/click-outside">click-outside</a></p>
]]></content>
      
        
        <tags>
            
            <tag> vuepress </tag>
            
            <tag> 插件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何优雅的采用vercel托管vuepress静态网站]]></title>
      <url>/2021/03/23/sicker/how%20to%20use%20vercel/</url>
      <content type="html"><![CDATA[<h2 id="为什么使用-vercel-而非-xxxpages、obs等静态托管"><a href="#为什么使用-vercel-而非-xxxpages、obs等静态托管" class="headerlink" title="为什么使用 vercel 而非 xxxpages、obs等静态托管"></a>为什么使用 vercel 而非 xxxpages、obs等静态托管</h2><p>因某些不言而喻的原因，<code>git pages</code> 在国内的速度一言难尽。</p>
<p>又因为某些不言而喻的原因，我没法备案，也就无法绑定域名了，所以 <code>vercel</code> 也就成为了首选。</p>
<p>如果你没有域名，或者已经备案，同时又不经常更新。完全可以采用 <code>GITEE PAGES</code> 或者 腾讯、阿里、华为云的文件存储来托管。</p>
<h2 id="采用github-gitlab-bitbucket托管"><a href="#采用github-gitlab-bitbucket托管" class="headerlink" title="采用github|gitlab|bitbucket托管"></a>采用github|gitlab|bitbucket托管</h2><p>其实这个无甚好说，常规操作，应该绝大多数人采用的就是这种模式。</p>
<p>优点是自动更新无需打包，很是省力。</p>
<p>就简单说下如何去配置</p>
<ol>
<li>登录</li>
<li>新增项目</li>
<li>选取 <code>vuepress</code> 的库</li>
<li><code>import</code></li>
</ol>
<p><img src="/../../../images/image-20210323201345174.png" alt="image-20210323201345174"></p>
<p>选取根路径即可。</p>
<ol start="5">
<li>依据下图进行配置</li>
</ol>
<p><img src="/../../../images/image-20210323201545437.png" alt="image-20210323201545437"></p>
<ol start="6">
<li><p>等待 <code>yarn</code> 打包后即可</p>
<p><img src="/../../../images/image-20210323201935055.png" alt="image-20210323201935055"></p>
</li>
</ol>
<p>我们来看一下打包的日志</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">20:16:08.612  	Cloning github.com/sickeeer/warm-house (Branch: master, Commit: e3dd74f)</span><br><span class="line">20:16:09.765  	Cloning completed <span class="keyword">in</span> 1153ms</span><br><span class="line">20:16:09.769  	Analyzing <span class="built_in">source</span> code...</span><br><span class="line">20:16:10.332  	Installing build runtime...</span><br><span class="line">20:16:13.954  	Build runtime installed: 3621.746ms</span><br><span class="line">20:16:16.642  	Looking up build cache...</span><br><span class="line">20:16:16.982  	Build cache not found</span><br><span class="line">20:16:17.938  	Detected package.json</span><br><span class="line">20:16:17.939  	Installing dependencies...</span><br><span class="line">20:16:18.406  	yarn install v1.22.10</span><br><span class="line">20:16:18.491  	[1/4] Resolving packages...</span><br><span class="line">20:16:19.113  	[2/4] Fetching packages...</span><br><span class="line">20:16:25.973  	warning url-loader@1.1.2: Invalid bin field <span class="keyword">for</span> <span class="string">&quot;url-loader&quot;</span>.</span><br><span class="line">20:16:43.634  	info fsevents@1.2.13: The platform <span class="string">&quot;linux&quot;</span> is incompatible with this module.</span><br><span class="line">20:16:43.635  	info <span class="string">&quot;fsevents@1.2.13&quot;</span> is an optional dependency and failed compatibility check. Excluding it from installation.</span><br><span class="line">20:16:43.659  	info fsevents@2.3.2: The platform <span class="string">&quot;linux&quot;</span> is incompatible with this module.</span><br><span class="line">20:16:43.659  	info <span class="string">&quot;fsevents@2.3.2&quot;</span> is an optional dependency and failed compatibility check. Excluding it from installation.</span><br><span class="line">20:16:43.667  	[3/4] Linking dependencies...</span><br><span class="line">20:16:43.671  	warning <span class="string">&quot;@vuepress/theme-blog &gt; @vuepress/plugin-blog &gt; vuepress-plugin-sitemap@2.3.1&quot;</span> has unmet peer dependency <span class="string">&quot;chalk@^2.0.0&quot;</span>.</span><br><span class="line">20:16:43.672  	warning <span class="string">&quot;@vuepress/theme-blog &gt; @vuepress/plugin-blog &gt; vuepress-plugin-sitemap@2.3.1&quot;</span> has unmet peer dependency <span class="string">&quot;commander@^2.0.0&quot;</span>.</span><br><span class="line">20:16:43.672  	warning <span class="string">&quot;@vuepress/theme-blog &gt; @vuepress/plugin-blog &gt; vuepress-plugin-sitemap@2.3.1&quot;</span> has unmet peer dependency <span class="string">&quot;esm@^3.0.0&quot;</span>.</span><br><span class="line">20:16:52.826  	[4/4] Building fresh packages...</span><br><span class="line">20:16:54.021  	Done <span class="keyword">in</span> 35.62s.</span><br><span class="line">20:16:54.561  	yarn run v1.22.10</span><br><span class="line">20:16:54.597  	$ vuepress build docs</span><br><span class="line">20:16:55.856  	<span class="built_in">wait</span> Extracting site metadata...</span><br><span class="line">20:16:55.859  	tip Apply <span class="built_in">local</span> theme at /vercel/workpath0/docs/.vuepress/theme...</span><br><span class="line">20:16:55.884  	tip Apply theme <span class="built_in">local</span> ...</span><br><span class="line">20:16:55.912  	tip Apply plugin container (i.e. <span class="string">&quot;vuepress-plugin-container&quot;</span>) ...</span><br><span class="line">20:16:55.913  	tip Apply plugin @vuepress/register-components (i.e. <span class="string">&quot;@vuepress/plugin-register-components&quot;</span>) ...</span><br><span class="line">20:16:55.914  	tip Apply plugin @vuepress/nprogress (i.e. <span class="string">&quot;@vuepress/plugin-nprogress&quot;</span>) ...</span><br><span class="line">20:16:55.914  	tip Apply plugin @vuepress/medium-zoom (i.e. <span class="string">&quot;@vuepress/plugin-medium-zoom&quot;</span>) ...</span><br><span class="line">20:16:55.915  	tip Apply plugin @vuepress/search (i.e. <span class="string">&quot;@vuepress/plugin-search&quot;</span>) ...</span><br><span class="line">20:16:55.915  	tip Apply plugin @vuepress/blog (i.e. <span class="string">&quot;@vuepress/plugin-blog&quot;</span>) ...</span><br><span class="line">20:16:56.759  	[info] [webpackbar] Compiling Client</span><br><span class="line">20:16:56.782  	[info] [webpackbar] Compiling Server</span><br><span class="line">20:17:10.168  	[success] [webpackbar] Server: Compiled successfully <span class="keyword">in</span> 13.39s</span><br><span class="line">20:17:17.786  	[success] [webpackbar] Client: Compiled successfully <span class="keyword">in</span> 21.03s</span><br><span class="line">20:17:17.891  	<span class="built_in">wait</span> Rendering static HTML...</span><br><span class="line">20:17:18.472  	success Generated static files <span class="keyword">in</span> docs/.vuepress/dist.</span><br><span class="line">20:17:18.509  	Done <span class="keyword">in</span> 23.95s.</span><br><span class="line">20:17:19.488  	Uploading build outputs...</span><br><span class="line">20:17:20.796  	Deploying build outputs...</span><br><span class="line">20:17:26.598  	Build completed. Populating build cache...</span><br><span class="line">20:17:42.207  	Uploading build cache [17.36 MB]...</span><br><span class="line">20:17:43.850  	Build cache uploaded: 1642.714ms</span><br><span class="line">20:17:44.079  	Done with <span class="string">&quot;package.json&quot;</span></span><br></pre></td></tr></table></figure>

<p>可以看到， <code>vercel</code> 主要做了这些工作。</p>
<ul>
<li><code>clone</code> 下你的代码</li>
<li>通过 <code>yarn</code> or <code>npm</code> 安装依赖</li>
<li>运行打包</li>
</ul>
<p>每当代码库更新后，<code>vercel</code> 就会自动再次执行该流程。</p>
<p>但是，有优点就有缺点。首先，不算缺点的缺点，即是国内访问这些代码托管网站的速度异常的感人。</p>
<p>另我又遇到了另外一个问题，</p>
<p><img src="/../../../images/image-20210323204118205.png" alt="image-20210323204118205"></p>
<p>在代码打到一定复杂度后，会使得 <code>vercel</code> 无法正确打包。</p>
<p>此时，打包后上传到 <code>github</code> 上似乎成为了最后的选择。</p>
<p>但是，实在过于麻烦。不适合我这种懒人~由此契机，也就诞生了如下的方法。</p>
<h2 id="vercel-cli"><a href="#vercel-cli" class="headerlink" title="vercel-cli"></a>vercel-cli</h2><p><code>vercel-cli</code>[^f]，在本地直接打包上传至 <code>vercel</code></p>
<ol>
<li>安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i -g vercel</span><br><span class="line">or</span><br><span class="line">yarn global add vercel</span><br></pre></td></tr></table></figure></li>
<li>安装成功后，初始化 <code>vercel</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vercel</span><br></pre></td></tr></table></figure>
依提示键入注册 <code>vercel</code> 使用的邮箱</li>
<li>从邮箱激活账户<br>激活后，命令行会提示如下</li>
</ol>
<blockquote>
<p>√ Email confirmed<br>Congratulations! You are now logged in. In order to deploy something, run <code>vercel</code>.<br>💡  Connect your Git Repositories to deploy every branch push automatically (<a href="https://vercel.link/git">https://vercel.link/git</a>).</p>
</blockquote>
<ol start="4">
<li>初始化项目<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vercel deploy</span><br></pre></td></tr></table></figure>
依据提示关联或新建一个项目,当询问<blockquote>
<p>In which directory is your code located</p>
</blockquote>
</li>
</ol>
<p>直接跳过即可。</p>
<p>之后，会生成1个网站地址，暂时忽略。</p>
<p>此时就可以在根路径看到 <code>.vercel</code> 的文件夹了，反过来说如果不存在该文件夹，则失败了。</p>
<ol start="5">
<li><p>新建 <code>deploy.sh</code> 文件<br>键入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env sh</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成静态文件</span></span><br><span class="line">npm run docs:build</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -rvf .vercel docs/.vuepress/dist</span><br><span class="line"><span class="comment"># 进入生成的文件夹</span></span><br><span class="line"><span class="built_in">cd</span> docs/.vuepress/dist</span><br><span class="line"></span><br><span class="line">vercel --prod</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure>
</li>
<li><p>在命令行键入 <code>./deploy.sh</code> 测试<br>一键打包成功后，即可看到正常的页面。</p>
</li>
<li><p>其他命令<br><code>./pushToGit.sh</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保脚本抛出遇到的错误</span></span><br><span class="line"><span class="comment">#set -e</span></span><br><span class="line">time=$(<span class="built_in">date</span> <span class="string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line"><span class="comment">#当未配置远端时，将下方的 # 移除</span></span><br><span class="line"><span class="comment">#git remote set-url origin  https://gitee.com/sickeeer/blog-resource.git</span></span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&quot;<span class="variable">$time</span>&quot;</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></li>
</ol>
<p>至此，我们就可以优雅的将源码提交至代码库，而 <code>build</code> 的文件直接上传至 <code>vercel</code></p>
<p>再也不用忍受 <code>github</code> 的龟速，再也不用忍受 <code>vercel</code> 的龟速打包，再也不用苦逼的打包后上传静态文件！</p>
<p>优雅万岁！<br>[^f]:<a href="https://vercel.com/docs/cli">vercel-cli首页</a></p>
]]></content>
      
        
        <tags>
            
            <tag> vuepress </tag>
            
            <tag> vercel </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在vuepress中使用live2d看板娘]]></title>
      <url>/2021/03/21/sicker/live2d%20for%20vuepress/</url>
      <content type="html"><![CDATA[<ol>
<li><p>在合适的地方插入</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;live2d&quot;</span> <span class="attr">width</span>=<span class="string">&quot;280&quot;</span> <span class="attr">height</span>=<span class="string">&quot;250&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>将静态资源，即 <code>live2d</code> 所采用的模型 <code>model.moc</code> 、模型配置文件 <code>model.json</code> 、模型皮肤 <code>textures/some.png</code> 、 模型动作 <code>motions\*.mtn</code> 、声音 <code>sounds\*.mp3</code> 置入 <code>\docs\.vuepress\public\live2d</code> 中，这样在 <code>vuepress</code> 打包时，会自动置入静态文件夹中。</p>
</li>
<li><p>在 <code>script</code> 标签下的 <code>vue</code> 生命周期钩子 <code>mounted</code> 中引入调用方法，</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">import</span>(<span class="string">&#x27;./live2d.min.js&#x27;</span>).<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;<span class="title function_">loadlive2d</span>(<span class="string">&quot;live2d&quot;</span>, <span class="variable language_">this</span>.$withBase(<span class="string">&quot;/live2d/model.json&quot;</span>))&#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>注意引入 <code>js</code> 的路径，此案例中两者在同一路径，故使用 <code>./</code> ，请按照实际情况自行修正。</p>
</li>
<li><p>最后，别忘记在 <code>css</code> 中书写好 <code>canvas</code> 的样式。</p>
</li>
</ol>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">canvas</span><span class="selector-id">#live2d</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>出现的问题</li>
</ol>
<p>Q：<code>build</code> 时 <code>navigator is not defined</code> 问题</p>
<p>A：因 <code>live2d.min.js</code> 采用 <code>window</code> 以及 <code>navigator</code> 对象，需要在 <code>vue.js</code> 渲染页面后方可使用，应通过 <code>import</code> 方法，在回调中调用 <code>loadlive2d</code> 方法。</p>
<p>Q：为何要使用 <code>this.$withBase</code> 包裹路径</p>
<p>A：<code>this.$withBase</code> 是 <code>vuepress</code> 提供的自动包裹 <code>base</code> 的一个内置 <code>helper</code>,可以帮助你生成正确的路径。以避免修改 <code>config.js</code> 中的 <code>base</code> 项后，路径失效。</p>
]]></content>
      
        
        <tags>
            
            <tag> vuepress </tag>
            
            <tag> 插件 </tag>
            
            <tag> live2d </tag>
            
            <tag> 看板娘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[csdn置入图片后生成的水印问题]]></title>
      <url>/2021/03/15/linvkey/csdn%20watermark/</url>
      <content type="html"><![CDATA[<p><img src="/./../../img/clipboard-1615789642530.png" alt="img"></p>
<p>去掉image 后的&#x2F;watermark即可去除水印</p>
]]></content>
      
        
        <tags>
            
            <tag> markdown </tag>
            
            <tag> csdn </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[后台管理系统权限管理]]></title>
      <url>/2021/03/15/sunyifang/vue-element-admin-permissions/</url>
      <content type="html"><![CDATA[<h3 id="定义router-js"><a href="#定义router-js" class="headerlink" title="定义router.js"></a>定义router.js</h3><ol>
<li>引入官方layout组件</li>
<li>创建权限要求基页</li>
<li>创建权限要求界面</li>
<li>注册路由</li>
<li>写一些公用路由方法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Router</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Layout */</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&#x27;@/layout&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> constantRoutes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/login/index&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/404&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/404.vue&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> asyncRoutes = [</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户信息路由</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;User&#x27;</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;用户管理&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;el-icon-s-help&#x27;</span> &#125;,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;userInfo&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;userInfo&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/user/user&#x27;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;小程序用户&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;table&#x27;</span> &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;adminUserInfo&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;adminUserInfo&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/user/adminUserInfo&#x27;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;管理员用户&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;table&#x27;</span> ,<span class="attr">roles</span>: [ <span class="string">&#x27;editor&#x27;</span>]&#125; <span class="comment">// 您可以在根导航中设置角色&#125;</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  ]</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//这里显示设置显示普通用户可以看到的路由</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createRouter</span> = (<span class="params"></span>) =&gt; <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">  <span class="comment">// mode: &#x27;history&#x27;, // require service support</span></span><br><span class="line">  <span class="comment">//scrollBehavior这是封装的一个路由守卫</span></span><br><span class="line">  <span class="attr">scrollBehavior</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">y</span>: <span class="number">0</span> &#125;),</span><br><span class="line">  <span class="attr">routes</span>: constantRoutes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>()</span><br><span class="line">  <span class="comment">// Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">resetRouter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> newRouter = <span class="title function_">createRouter</span>()</span><br><span class="line">  router.<span class="property">matcher</span> = newRouter.<span class="property">matcher</span> <span class="comment">// reset router</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="再permission-js中加入路由守卫（根目录下）"><a href="#再permission-js中加入路由守卫（根目录下）" class="headerlink" title="再permission.js中加入路由守卫（根目录下）"></a>再permission.js中加入路由守卫（根目录下）</h3><ol>
<li><p>每次路由跳转判断权限<br><img src="https://img-blog.csdnimg.cn/20210513092721366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>调用Vuex种方法提交判断需求</p>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/getInfo&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> roles = store.<span class="property">state</span>.<span class="property">user</span>.<span class="property">permList</span>;</span><br><span class="line"><span class="comment">// generate accessible routes map based on roles</span></span><br><span class="line"><span class="comment">// root: A module use B module&#x27;s function</span></span><br><span class="line"><span class="keyword">const</span> accessRoutes = <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;permissions/generateRoutes&#x27;</span>, roles)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>读取出当前用户可以加载的路由  后判断当前路由表  做校验如果没有则插入（这里可以做判断如果有多余的要删除）</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="comment">// get user info (vuex-modules)</span></span><br><span class="line">  <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/getInfo&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> roles = store.<span class="property">state</span>.<span class="property">user</span>.<span class="property">permList</span>;</span><br><span class="line">  <span class="comment">// generate accessible routes map based on roles</span></span><br><span class="line">  <span class="comment">// root: A module use B module&#x27;s function</span></span><br><span class="line">  <span class="keyword">const</span> accessRoutes = <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;permissions/generateRoutes&#x27;</span>, roles)</span><br><span class="line">  <span class="comment">// dynamically add accessible routes</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(accessRoutes);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(router);</span><br><span class="line">  <span class="keyword">await</span> router.<span class="title function_">addRoutes</span>(accessRoutes);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(router);</span><br><span class="line">  <span class="comment">// this.$router.options.routes = this.$router.options.routes.concat(newRoutes);</span></span><br><span class="line">  <span class="title function_">next</span>(&#123; ...to, <span class="attr">replace</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">  <span class="comment">// remove token and go to login page to re-login</span></span><br><span class="line">  <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/resetToken&#x27;</span>)</span><br><span class="line">  <span class="comment">// Message.error(error || &#x27;Has Error&#x27;)</span></span><br><span class="line">  <span class="title function_">next</span>(<span class="string">`/login?redirect=<span class="subst">$&#123;to.path&#125;</span>`</span>)</span><br><span class="line">  <span class="title class_">NProgress</span>.<span class="title function_">done</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>这里的判断也可以学一下如果当前页面下没有权限 跳转404  重新进入后用redirect跳转回来</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// remove token and go to login page to re-login</span></span><br><span class="line"><span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/resetToken&#x27;</span>)</span><br><span class="line"><span class="comment">// Message.error(error || &#x27;Has Error&#x27;)</span></span><br><span class="line"><span class="title function_">next</span>(<span class="string">`/login?redirect=<span class="subst">$&#123;to.path&#125;</span>`</span>)</span><br><span class="line"><span class="title class_">NProgress</span>.<span class="title function_">done</span>()</span><br></pre></td></tr></table></figure>

<h3 id="权限判断放到了store-modules-permissions"><a href="#权限判断放到了store-modules-permissions" class="headerlink" title="权限判断放到了store.modules.permissions"></a>权限判断放到了store.modules.permissions</h3><ol>
<li>判断路由中的meta中是否有meta字段 如果有则判断没有则直接显示</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Use meta.role to determine if the current user has permission</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">roles</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">route</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hasPermission</span>(<span class="params">roles, route</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (route.<span class="property">meta</span> &amp;&amp; route.<span class="property">meta</span>.<span class="property">roles</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> roles.<span class="title function_">some</span>(<span class="function"><span class="params">role</span> =&gt;</span> route.<span class="property">meta</span>.<span class="property">roles</span>.<span class="title function_">includes</span>(role))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>同时过滤 他的children路由如果有则深度一直遍历下去</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Filter asynchronous routing tables by recursion</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> routes asyncRoutes</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">roles</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">filterAsyncRoutes</span>(<span class="params">routes, roles</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> res = []</span><br><span class="line"></span><br><span class="line">  routes.<span class="title function_">forEach</span>(<span class="function"><span class="params">route</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> tmp = &#123; ...route &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">hasPermission</span>(roles, tmp)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (tmp.<span class="property">children</span>) &#123;</span><br><span class="line">        tmp.<span class="property">children</span> = <span class="title function_">filterAsyncRoutes</span>(tmp.<span class="property">children</span>, roles)</span><br><span class="line">      &#125;</span><br><span class="line">      res.<span class="title function_">push</span>(tmp)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>将过滤出来的路由返回并放置到vuex中</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="title function_">generateRoutes</span>(<span class="params">&#123; commit &#125;, roles</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> accessedRoutes</span><br><span class="line">      <span class="keyword">if</span> (roles.<span class="title function_">includes</span>(<span class="string">&#x27;admin&#x27;</span>)) &#123;</span><br><span class="line">        accessedRoutes = asyncRoutes || []</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        accessedRoutes = <span class="title function_">filterAsyncRoutes</span>(asyncRoutes, roles);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(accessedRoutes);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">commit</span>(<span class="string">&#x27;SET_ROUTES&#x27;</span>, accessedRoutes)</span><br><span class="line">      <span class="title function_">resolve</span>(accessedRoutes)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="注意左侧索引栏"><a href="#注意左侧索引栏" class="headerlink" title="注意左侧索引栏"></a>注意左侧索引栏</h3><p>因为索引栏是根据router.options.routes来渲染的，Vue的addRouter api 不会自动将路由加到options中所以尽量用vuex来控制这里只是简单的实现一下。<br><img src="https://img-blog.csdnimg.cn/20210513092200885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="按钮级别"><a href="#按钮级别" class="headerlink" title="按钮级别"></a>按钮级别</h3><ol>
<li>定义permission.js(store就是单纯的取出权限列表)</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;@/store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Filter asynchronous routing tables by recursion</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> el current element</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> binding all value </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkPermission</span>(<span class="params">el, binding</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; value &#125; = binding</span><br><span class="line">  <span class="keyword">const</span> roles = store.<span class="property">getters</span> &amp;&amp; store.<span class="property">getters</span>.<span class="property">router</span></span><br><span class="line">  <span class="keyword">if</span> (value &amp;&amp; value <span class="keyword">instanceof</span> <span class="title class_">Array</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (value.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> permissionRoles = value</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> hasPermission = roles.<span class="title function_">some</span>(<span class="function"><span class="params">role</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(role === <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">return</span> permissionRoles.<span class="title function_">includes</span>(role)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!hasPermission) &#123;</span><br><span class="line">        el.<span class="property">parentNode</span> &amp;&amp; el.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(el)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`need roles! Like v-permission=&quot;[&#x27;admin&#x27;,&#x27;editor&#x27;]&quot;`</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// when this directive insert/update all use this method</span></span><br><span class="line">  <span class="title function_">inserted</span>(<span class="params">el, binding</span>) &#123;</span><br><span class="line">    <span class="title function_">checkPermission</span>(el, binding)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">update</span>(<span class="params">el, binding</span>) &#123;</span><br><span class="line">    <span class="title function_">checkPermission</span>(el, binding)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>单个页面引入</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> permission <span class="keyword">from</span> <span class="string">&#x27;./permission&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> install = <span class="keyword">function</span>(<span class="params">Vue</span>) &#123;</span><br><span class="line">  <span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;permission&#x27;</span>, permission)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">Vue</span>) &#123;</span><br><span class="line">  <span class="variable language_">window</span>[<span class="string">&#x27;permission&#x27;</span>] = permission</span><br><span class="line">  <span class="title class_">Vue</span>.<span class="title function_">use</span>(install); <span class="comment">// eslint-disable-line</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">permission.<span class="property">install</span> = install</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> permission</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> permission <span class="keyword">from</span> <span class="string">&#x27;@/directive/permission/index.js&#x27;</span> <span class="comment">// 权限判断指令</span></span><br><span class="line"><span class="keyword">import</span> rowClass <span class="keyword">from</span> <span class="string">&quot;../mixin/rowClass.mixin&quot;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Device&quot;</span>,</span><br><span class="line">  <span class="attr">mixins</span>: [rowClass],</span><br><span class="line">    <span class="attr">directives</span>: &#123; permission &#125;,</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>整体引入<br><img src="https://img-blog.csdnimg.cn/2021051314472073.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vueApiControl]]></title>
      <url>/2021/03/15/sunyifang/vueApiControl/</url>
      <content type="html"><![CDATA[<h3 id="首先根据接口写好对应页面的请求"><a href="#首先根据接口写好对应页面的请求" class="headerlink" title="首先根据接口写好对应页面的请求"></a>首先根据接口写好对应页面的请求</h3><p>内容如图尽量保证js文件名称与页面文件名称相同（易于查找）<br><img src="https://img-blog.csdnimg.cn/20210512175245369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3MyNDIyNjE3ODY0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="根据文件目录动态引入-x2F-导出接口"><a href="#根据文件目录动态引入-x2F-导出接口" class="headerlink" title="根据文件目录动态引入&#x2F;导出接口"></a>根据文件目录动态引入&#x2F;导出接口</h3><p>提高便捷性</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自动引入当前文件夹下所有module</span></span><br><span class="line"><span class="comment"> * require.context(directory, useSubdirectories = false, regExp = /^.//);</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; directory 读取文件的路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Boolean</span>&#125; directory 匹配文件的正则表达式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">regExp</span>&#125; regExp 读取文件的路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">const</span> modulesFiles = <span class="built_in">require</span>.<span class="title function_">context</span>(</span><br><span class="line">    <span class="string">&#x27;./&#x27;</span>, <span class="comment">// 在当前目录下查找</span></span><br><span class="line">    <span class="literal">false</span>, <span class="comment">// 不遍历子文件夹</span></span><br><span class="line">    <span class="regexp">/\.js$/</span> <span class="comment">// 正则匹配 以 .js结尾的文件</span></span><br><span class="line">)</span><br><span class="line"> <span class="keyword">const</span> modules = modulesFiles.<span class="title function_">keys</span>().<span class="title function_">reduce</span>(<span class="function">(<span class="params">modules, modulePath</span>) =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">const</span> moduleName = modulePath.<span class="title function_">replace</span>(<span class="regexp">/^.\/(.*)\.js/</span>,<span class="string">&#x27;$1&#x27;</span>)</span><br><span class="line">   <span class="keyword">const</span> value = <span class="title function_">modulesFiles</span>(modulePath)</span><br><span class="line">   modules[moduleName] = value.<span class="property">default</span></span><br><span class="line">   <span class="keyword">return</span> modules</span><br><span class="line">   &#125;, &#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> modules</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="根据项目情况编写拦截-x2F-插入内容"><a href="#根据项目情况编写拦截-x2F-插入内容" class="headerlink" title="根据项目情况编写拦截&#x2F;插入内容"></a>根据项目情况编写拦截&#x2F;插入内容</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MessageBox</span>, <span class="title class_">Message</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;@/store&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getToken &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/auth&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// create an axios instance</span></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span>, <span class="comment">// url = base url + request url</span></span><br><span class="line">  <span class="comment">// withCredentials: true, // send cookies when cross-domain requests</span></span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span> <span class="comment">// request timeout</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// request interceptor</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 在发送请求之前做些什么</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (store.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">      <span class="comment">// let each request carry token让每个请求携带令牌</span></span><br><span class="line">      <span class="comment">// [&#x27;X-Token&#x27;] is a custom headers key 是一个自定义标题键</span></span><br><span class="line">      <span class="comment">// please modify it according to the actual situation请根据实际情况修改</span></span><br><span class="line">      config.<span class="property">headers</span>[<span class="string">&#x27;X-Token&#x27;</span>] = <span class="title function_">getToken</span>()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// do something with request error</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error) <span class="comment">// for debug</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// response interceptor</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * If you want to get http information such as headers or status如果您想获取http信息，如标头或状态</span></span><br><span class="line"><span class="comment">   * Please return  response =&gt; response</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Determine the request status by custom code通过自定义代码确定请求状态</span></span><br><span class="line"><span class="comment">   * Here is just an example这里只是一个例子</span></span><br><span class="line"><span class="comment">   * You can also judge the status by HTTP Status Code您还可以通过HTTP状态码来判断状态</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = response.<span class="property">data</span></span><br><span class="line">    <span class="comment">// console.log(res);</span></span><br><span class="line">    <span class="comment">// 如果自定义代码不是20000，则判断为错误.</span></span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">code</span> !== <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="title class_">Message</span>(&#123;</span><br><span class="line">        <span class="attr">message</span>: res.<span class="property">message</span> || <span class="string">&#x27;Error&#x27;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">        <span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">      &#125;)</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 50008: 非法token; 50012: 其他客户端已登录; 50014: Token 已过期;</span></span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">50008</span> || res.<span class="property">code</span> === <span class="number">50012</span> || res.<span class="property">code</span> === <span class="number">50014</span>) &#123;</span><br><span class="line">        <span class="comment">// to re-login</span></span><br><span class="line">        <span class="title class_">MessageBox</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;您已注销，可以取消以停留在此页面，或重新登录&#x27;</span>, <span class="string">&#x27;确认注销&#x27;</span>, &#123;</span><br><span class="line">          <span class="attr">confirmButtonText</span>: <span class="string">&#x27;Re-Login&#x27;</span>,</span><br><span class="line">          <span class="attr">cancelButtonText</span>: <span class="string">&#x27;Cancel&#x27;</span>,</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">        &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/resetToken&#x27;</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            location.<span class="title function_">reload</span>()</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(res.<span class="property">message</span> || <span class="string">&#x27;Error&#x27;</span>))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> res</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;err&#x27;</span> + error) <span class="comment">// for debug</span></span><br><span class="line">    <span class="title class_">Message</span>(&#123;</span><br><span class="line">      <span class="attr">message</span>: error.<span class="property">message</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="编写env文件"><a href="#编写env文件" class="headerlink" title="编写env文件"></a>编写env文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># just a flag</span><br><span class="line"><span class="variable constant_">ENV</span> = <span class="string">&#x27;development&#x27;</span></span><br><span class="line"></span><br><span class="line"># base api</span><br><span class="line"><span class="variable constant_">VUE_APP_BASE_API</span> = <span class="string">&#x27;http://192.168.2.44:5001/v1&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="vue继承api"><a href="#vue继承api" class="headerlink" title="vue继承api"></a>vue继承api</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> serve <span class="keyword">from</span> <span class="string">&#x27;./api/index&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$api</span> = serve;</span><br></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getAssetsList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$api</span>.<span class="property">assets</span></span><br><span class="line">    .<span class="title function_">getAssetsList</span>(<span class="variable language_">this</span>.<span class="property">queryInfo</span>.<span class="property">num</span>, <span class="variable language_">this</span>.<span class="property">queryInfo</span>.<span class="property">size</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">assetsList</span> = res.<span class="property">data</span>.<span class="property">cards</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">total</span> = res.<span class="property">data</span>.<span class="property">page</span>.<span class="property">totalCount</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(&#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&quot;失败&quot;</span>,</span><br><span class="line">        <span class="attr">duration</span>: <span class="number">700</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[wxScroll-swiper]]></title>
      <url>/2021/03/15/sunyifang/wxScroll-swiper/</url>
      <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/2021031515240685.gif" alt="在这里插入图片描述"></p>
<h3 id="要点swiper内部套scroll-view"><a href="#要点swiper内部套scroll-view" class="headerlink" title="要点swiper内部套scroll-view"></a>要点swiper内部套scroll-view</h3><p><strong>注意：<br>1.scroll竖直滚动高度不能给百分比要给px&#x2F;rpx<br>2.swiper内部item posiiton定位高度100%<br>3.swiper高度要给定值<br>4.如果横向滚动也要给水平的宽度</strong></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>xml</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;swiper <span class="keyword">class</span>=<span class="string">&quot;tab-box&quot;</span> current=<span class="string">&quot;&#123;&#123;currentTab&#125;&#125;&quot;</span> duration=<span class="string">&quot;300&quot;</span> bindchange=<span class="string">&quot;switchTab&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">swiper-item</span> <span class="attr">class</span>=<span class="string">&quot;tab-content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-height&quot;</span> <span class="attr">scroll-y</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scroll-with-animation</span>=<span class="string">&quot;&#123;&#123;true&#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;cont&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;jira-card&quot;</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;jiraArray&#125;&#125;&quot;</span> <span class="attr">wx:for-index</span>=<span class="string">&quot;idx&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;itemJira&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;idx&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">card</span> <span class="attr">itemJira</span>=<span class="string">&quot;&#123;&#123;itemJira&#125;&#125;&quot;</span> <span class="attr">data-item</span>=<span class="string">&quot;&#123;&#123;itemJira&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;goDetail&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">card</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">swiper-item</span> <span class="attr">class</span>=<span class="string">&quot;tab-content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">class</span>=<span class="string">&quot;scroll-height&quot;</span> <span class="attr">scroll-y</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scroll-with-animation</span>=<span class="string">&quot;&#123;&#123;true&#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;cont&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;jira-card&quot;</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;jiraArray&#125;&#125;&quot;</span> <span class="attr">wx:for-index</span>=<span class="string">&quot;idx&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;itemJira&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;idx&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">card</span> <span class="attr">itemJira</span>=<span class="string">&quot;&#123;&#123;itemJira&#125;&#125;&quot;</span> <span class="attr">data-item</span>=<span class="string">&quot;&#123;&#123;itemJira&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;goDetail&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">card</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span></span><br><span class="line">&lt;/swiper&gt;</span><br></pre></td></tr></table></figure>
<p>wxss</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.<span class="property">tab</span>-box&#123;</span><br><span class="line">  <span class="attr">height</span>: 1040rpx;</span><br><span class="line">&#125;</span><br><span class="line">.<span class="property">scroll</span>-height &#123;</span><br><span class="line"><span class="attr">height</span>: 1040rpx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">myAudit</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">    <span class="attr">currentTab</span>:<span class="number">0</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">myInitiate</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">    <span class="attr">currentTab</span>:<span class="number">1</span>,</span><br><span class="line">      </span><br><span class="line">    <span class="comment">// jiraArray:[]</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">switchTab</span>(<span class="params">event</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> cur = event.<span class="property">detail</span>.<span class="property">current</span>;</span><br><span class="line">  <span class="keyword">var</span> singleNavWidth = <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">windowWidth</span> / <span class="number">5</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">currentTab</span>: cur,</span><br><span class="line">      <span class="attr">navScrollLeft</span>: (cur - <span class="number">2</span>) * singleNavWidth</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信小程序上手常用功能]]></title>
      <url>/2021/03/12/linvkey/wechat%20applet/</url>
      <content type="html"><![CDATA[<h3 id="创建pege"><a href="#创建pege" class="headerlink" title="创建pege"></a>创建pege</h3><p>创建页面在项目根目录下的page文件夹中创建文件夹，然后再【新建page】<br>这样就会在刚刚的新建文件夹中生成四个文件，这四个文件就是一个页面需要使用的配件<br>分别是</p>
<ul>
<li>.js文件</li>
<li>.json文件</li>
<li>.wxml文件</li>
<li>.wxss文件</li>
</ul>
<p>1，js文件<br>主体是</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data:&#123;&#125;,</span><br><span class="line">  //生命周期</span><br><span class="line">  onLoad: function (options) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line">  //自定义方法</span><br><span class="line">  方法名()&#123;</span><br><span class="line">    方法体</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>data中存放着页面定义的变量</p>
<p>2，json文件是用来配置页面<br>如果项目引用了LinUI那么使用插件就要在json文件中配置</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;usingComponents&quot;:&#123;</span><br><span class="line">        &quot;l-引入的插件名&quot;:&quot;/路径&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3，wxml文件<br>相当于Vue中的template<br>不过不需要内部有一个唯一的标签盛放所有代码</p>
<p>4，wxss文件<br>是编写css的文件</p>
<h3 id="页面跳转"><a href="#页面跳转" class="headerlink" title="页面跳转"></a>页面跳转</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.navigateTo(&#123;</span><br><span class="line">   url: &#x27;/pages/index/index&#x27;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="从一个小程序跳转到另一个小程序、"><a href="#从一个小程序跳转到另一个小程序、" class="headerlink" title="从一个小程序跳转到另一个小程序、"></a>从一个小程序跳转到另一个小程序、</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wx.navigateToMiniProgram(&#123;</span><br><span class="line">  appId: &#x27;wxf464401e737e8c62&#x27;, //另一个小程序的appid</span><br><span class="line">  path: &#x27;&#x27;, //path （为空时默认首页）</span><br><span class="line">  extraData: &#123; //参数</span><br><span class="line">    foo: &#x27;bar&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  envVersion: &#x27;develop&#x27;, //开发版  (develop 开发版  trial 体验版   release 正式版 )</span><br><span class="line">  success(res) &#123;</span><br><span class="line">    console.log(&#x27;成功&#x27;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><p>wx:for</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view wx:for=&quot;&#123;&#123; List &#125;&#125;&quot; wx:for-index=&quot;idx&quot; wx:for-item=&quot;item别名&quot; wx:key=&quot;idx&quot;</span><br></pre></td></tr></table></figure>
<p>wx:if</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wx:if=&quot;&#123;&#123;isTrue&#125;&#125;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>想用div就用 view标签，<br>想用span放文本就用text标签，<br>小程序中放图片用image标签 </p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信小程序常用API]]></title>
      <url>/2021/03/12/sunyifang/wechat%20commonly/</url>
      <content type="html"><![CDATA[<h3 id="1-wx-for"><a href="#1-wx-for" class="headerlink" title="1.wx:for"></a>1.wx:for</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;view  <span class="keyword">class</span>=<span class="string">&quot;jira-card&quot;</span> <span class="attr">wx</span>:<span class="keyword">for</span>=<span class="string">&quot;&#123;&#123;jiraArray&#125;&#125;&quot;</span> <span class="attr">wx</span>:<span class="keyword">for</span>-index=<span class="string">&quot;idx&quot;</span> <span class="attr">wx</span>:<span class="keyword">for</span>-item=<span class="string">&quot;itemJira&quot;</span> <span class="attr">wx</span>:key=<span class="string">&quot;idx&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">card</span> <span class="attr">itemJira</span>=<span class="string">&quot;&#123;&#123;itemJira&#125;&#125;&quot;</span> <span class="attr">data-item</span>=<span class="string">&quot;&#123;&#123;itemJira&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;goDetail&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">card</span>&gt;</span></span> </span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">itemJira：循环数据</span><br><span class="line">data-item=&quot;&#123;&#123;itemJira&#125;&#125;&quot; ：点击后传入的数据</span><br><span class="line">注意：data-item、bindtap要在一个标签上 </span><br></pre></td></tr></table></figure>

<h3 id="2-父传子"><a href="#2-父传子" class="headerlink" title="2.父传子"></a>2.父传子</h3><p><strong>父：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;card itemJira=<span class="string">&quot;&#123;&#123;itemJira&#125;&#125;&quot;</span> &gt;&lt;/card&gt; </span><br></pre></td></tr></table></figure>

<p><strong>子：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">properties</span>: &#123;</span><br><span class="line">  <span class="attr">itemJira</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="string">&quot;object&quot;</span>,</span><br><span class="line">    <span class="attr">value</span>:<span class="string">&quot;&#123;&#125;&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h3 id="3-子传父"><a href="#3-子传父" class="headerlink" title="3.子传父"></a>3.子传父</h3><p><strong>子：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="title function_">triggerEvent</span>(<span class="string">&quot;up&quot;</span>,res)  <span class="comment">//第一个是自定义事件名，第二个是要传递的值（可以为空）</span></span><br></pre></td></tr></table></figure>
<p><strong>父：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;music</span><br><span class="line">     id=<span class="string">&#x27;music&#x27;</span></span><br><span class="line">     list=<span class="string">&#x27;&#123;&#123;list&#125;&#125;&#x27;</span></span><br><span class="line">     <span class="attr">bind</span>:up=<span class="string">&quot;_up&quot;</span> </span><br><span class="line">        &gt;</span><br><span class="line">&lt;/music&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">javascript</span><br><span class="line">  methods: &#123;</span><br><span class="line">    _up(e) &#123; //e为子组件传过来的值</span><br><span class="line">      console.log(e.detail.data)</span><br><span class="line">      this.setData(&#123;</span><br><span class="line">        list: e.detail.data //这里是改变Page中data上的值</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意：在父组件中的js文件里获取子组件传过来的值,这里的自定义方法要写在Component构造器中的methods里，因为我写在Page中他不会被触发</strong></p>
<h3 id="4-根据值来给定不同的CSS样式"><a href="#4-根据值来给定不同的CSS样式" class="headerlink" title="4.根据值来给定不同的CSS样式"></a>4.根据值来给定不同的CSS样式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view <span class="keyword">class</span>=<span class="string">&quot;&#123;&#123;isChecked?&#x27;is_checked&#x27;:&#x27;normal&#x27;&#125;&#125;&quot;</span> bindtap=<span class="string">&quot;serviceSelection&quot;</span>&gt;&lt;/view&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.<span class="property">is_checked</span>&#123;  </span><br><span class="line">  <span class="attr">color</span>: #<span class="title class_">FE0002</span> ;  </span><br><span class="line">  <span class="attr">background</span>: #fff;  </span><br><span class="line">&#125;  </span><br><span class="line">.<span class="property">normal</span>&#123;  </span><br><span class="line">  <span class="attr">color</span>: #<span class="number">333</span>;  </span><br><span class="line">  <span class="attr">background</span>: #<span class="variable constant_">F0F1EC</span>;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p><strong>注意：样式要用引号包裹</strong></p>
<h3 id="5-禁止页面滚动"><a href="#5-禁止页面滚动" class="headerlink" title="5.禁止页面滚动"></a>5.禁止页面滚动</h3><p>json文件中配置：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;disableScroll&quot;: true</span><br></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Flex弹性布局]]></title>
      <url>/2021/03/11/linvkey/flex/</url>
      <content type="html"><![CDATA[<h2 id="1-flex布局的特性"><a href="#1-flex布局的特性" class="headerlink" title="1  flex布局的特性"></a>1  flex布局的特性</h2><p>任何容器都可以进行flex布局</p>
<h2 id="2-Flex特殊之处"><a href="#2-Flex特殊之处" class="headerlink" title="2  Flex特殊之处"></a>2  Flex特殊之处</h2><p>父容器开启Flex阵法之后，子元素的float 浮动，清楚clear，vartical-align都将失效，因为这一切都将由Flex掌管，也就是无需子元素设置那些属性</p>
<h2 id="3-Flex核心原理"><a href="#3-Flex核心原理" class="headerlink" title="3  Flex核心原理"></a>3  Flex核心原理</h2><p>通过给父容器添加flex属性，来控制子元素位置的排列方式</p>
<h2 id="4-父容器定制的规则"><a href="#4-父容器定制的规则" class="headerlink" title="4  父容器定制的规则"></a>4  父容器定制的规则</h2><p>以下6个属性是对父容器设定的：</p>
<p><strong>flex-direction：设置主轴的方向</strong></p>
<p><strong>justify-content：设置主轴上子元素的排列方式</strong></p>
<p><strong>flex-wrap：设置子元素是否换行</strong></p>
<p><strong>align-items：设置侧轴上子元素的排列方式（单行）</strong></p>
<p><strong>align-content：设置侧轴上子元素的排列方式（多行）</strong></p>
<p><strong>flex-flow：复合属性 相当于同时设置（flex-direction：设置主轴的方向）和（flex-wrap：设置子元素是否换行）</strong></p>
<h3 id="4-1-Flex-direction-设置主轴"><a href="#4-1-Flex-direction-设置主轴" class="headerlink" title="4.1  Flex-direction 设置主轴"></a>4.1  Flex-direction 设置主轴</h3><p>注意在设置这个属性之前，要先开启flex布局</p>
<p>也就是在父容器中先设置display:flex;</p>
<p>主轴侧轴</p>
<p><img src="/./../../img/clipboard-1615442943383.png" alt="img"></p>
<p>横向为主轴，纵向为测轴，当然也是可以变换的</p>
<p>主要通过flex-direction：设置谁为主轴，剩下的就是侧轴</p>
<p>而子元素是跟着主轴来排列的</p>
<p><strong>flex-direction</strong></p>
<p><img src="/./../../img/clipboard-1615442973080.png" alt="img"></p>
<p>开启Flex的口诀就是在父容器中设定：display:flex;</p>
<h3 id="4-1-1-flex-direction-row"><a href="#4-1-1-flex-direction-row" class="headerlink" title="4.1.1  flex-direction:row;"></a>4.1.1  flex-direction:row;</h3><p><img src="/./../../img/clipboard-1615443016680.png" alt="img"></p>
<h3 id="4-1-2-flex-direction-row-reverse"><a href="#4-1-2-flex-direction-row-reverse" class="headerlink" title="4.1.2  flex-direction:row-reverse;"></a>4.1.2  flex-direction:row-reverse;</h3><p>设置完横向反转后，原来是从左往右，现在是从右往左，</p>
<p>而且1 2 3 的顺序也变成了3 2 1</p>
<p><img src="/./../../img/clipboard-1615443045588.png" alt="img"></p>
<h3 id="4-1-3-flex-direction-column"><a href="#4-1-3-flex-direction-column" class="headerlink" title="4.1.3  flex-direction:column;"></a>4.1.3  flex-direction:column;</h3><p>刚刚的主轴是X轴，设置完flex-direction:column;后</p>
<p>主轴将变为为Y轴，也就是子元素开始以Y轴分布</p>
<p><img src="/./../../img/clipboard-1615443059981.png" alt="img"></p>
<h3 id="4-1-4-flex-direction-column-reverse"><a href="#4-1-4-flex-direction-column-reverse" class="headerlink" title="4.1.4 flex-direction:column-reverse;"></a>4.1.4 flex-direction:column-reverse;</h3><p>有横向反转就有纵向反转</p>
<p><img src="/./../../img/clipboard-1615443075803.png" alt="img"></p>
<h3 id="4-2-justify-content设置主轴上子元素的排列方式"><a href="#4-2-justify-content设置主轴上子元素的排列方式" class="headerlink" title="4.2 justify-content设置主轴上子元素的排列方式"></a>4.2 justify-content设置主轴上子元素的排列方式</h3><p>注意在设置这个属性之前，要先设置好主轴是哪个</p>
<p>（当然设置display:flex之后就默认有以X为主轴了）</p>
<p><strong>justify-content</strong></p>
<p><img src="/./../../img/clipboard-1615443097687.png" alt="img"></p>
<h3 id="4-2-1-justify-content-flex-start"><a href="#4-2-1-justify-content-flex-start" class="headerlink" title="4.2.1 justify-content:flex-start;"></a>4.2.1 justify-content:flex-start;</h3><p>其实在display:flex这句话一出来</p>
<p>就等于有了两句默认的布局</p>
<p>flex-direction:row;                       以X为主轴</p>
<p>justify-content:flex-start;             子元素从父容器的左侧开始分布</p>
<p><img src="/./../../img/clipboard-1615443108303.png" alt="img"></p>
<h3 id="4-2-2-justify-content-flex-end"><a href="#4-2-2-justify-content-flex-end" class="headerlink" title="4.2.2 justify-content:flex-end"></a>4.2.2 justify-content:flex-end</h3><p>子元素从父容器的右侧开始分布</p>
<p><img src="/./../../img/clipboard-1615443120773.png" alt="img"></p>
<h3 id="4-2-3-justify-content-center"><a href="#4-2-3-justify-content-center" class="headerlink" title="4.2.3 justify-content:center;"></a>4.2.3 justify-content:center;</h3><p>子元素从父容器的中间开始分布</p>
<p><img src="/./../../img/clipboard-1615443129040.png" alt="img"></p>
<h3 id="4-2-4-justify-content-space-around"><a href="#4-2-4-justify-content-space-around" class="headerlink" title="4.2.4 justify-content:space-around;"></a>4.2.4 justify-content:space-around;</h3><p>子元素平分主轴（可能是X轴也可能是Y轴）一行或一列的空间（如果主轴是X轴那么就平分一行的空间，如果主轴是Y轴就平分一列的空间）</p>
<p><img src="/./../../img/clipboard-1615443146032.png" alt="img"></p>
<h3 id="4-2-5-justify-content-space-between"><a href="#4-2-5-justify-content-space-between" class="headerlink" title="4.2.5 justify-content:space-between;"></a>4.2.5 justify-content:space-between;</h3><p>刚刚的justify-content:space-around;是不贴边分布</p>
<p>justify-content:space-between;是贴边分布</p>
<p><img src="/./../../img/clipboard-1615443154051.png" alt="img"></p>
<h2 id="4-3-flex-wrap"><a href="#4-3-flex-wrap" class="headerlink" title="4.3 flex-wrap"></a>4.3 flex-wrap</h2><p>在传统布局时，一般是用浮动进行横向排列然后再用margin进行分布</p>
<p>如果父容器宽度有限，则子元素就会在下一行分布（被迫被挤下来）</p>
<p>如果使用Flex布局则，那么子元素换不换行则完全取决于程序员自己</p>
<p>例如：</p>
<p>父容器宽为1000px</p>
<p>现有4个宽度为200px高度为100px，margin为10的子容器</p>
<p>也就是说子容器整体的宽度为200<em>4+10</em>8&#x3D;880px</p>
<p>所以现在父容器剩余的宽度为120px不能再容纳一个子容器了</p>
<p><img src="/./../../img/clipboard-1615443175212.png" alt="img"></p>
<p>但是再加一个子容器的话flex可以自动分配父容器的宽度</p>
<p><img src="/./../../img/clipboard-1615443181990.png" alt="img"></p>
<p>可以看到子容器的变化——宽度从原来的200px变为了180px</p>
<p>细心一点可以发现，flex只会改变子容器的大小而不会改变margin的大小</p>
<p>这样一来就不会影响到我们想要的布局</p>
<p><img src="/./../../img/clipboard-1615443195338.png" alt="img"></p>
<h3 id="4-3-1-flex-wrap-nowrap"><a href="#4-3-1-flex-wrap-nowrap" class="headerlink" title="4.3.1  flex-wrap:nowrap;"></a>4.3.1  flex-wrap:nowrap;</h3><p>在flex布局中默认不换行也就是 flex-wrap:nowrap;</p>
<p><img src="/./../../img/clipboard-1615443204617.png" alt="img"></p>
<h3 id="4-3-2-flex-wrap-wrap"><a href="#4-3-2-flex-wrap-wrap" class="headerlink" title="4.3.2  flex-wrap:wrap;"></a>4.3.2  flex-wrap:wrap;</h3><p> 当所有子容器的宽度加起来已经超过父容器的宽度时，若不想缩小子容器的宽度那就要设置换行  flex-wrap:wrap;</p>
<p><img src="/./../../img/clipboard-1615443216838.png" alt="img"></p>
<h3 id="4-4-align-items"><a href="#4-4-align-items" class="headerlink" title="4.4 align-items"></a>4.4 align-items</h3><p>设置侧轴上子元素的排列方式，如果主轴为X，侧轴就是Y（默认的）</p>
<p><img src="/./../../img/clipboard-1615443235394.png" alt="img"></p>
<p>例子：</p>
<h3 id="4-4-1-align-items-flex-start"><a href="#4-4-1-align-items-flex-start" class="headerlink" title="4.4.1  align-items:flex-start;"></a>4.4.1  align-items:flex-start;</h3><p>初始状态是 也是默认的效果 align-items:flex-start;</p>
<p><img src="/./../../img/clipboard-1615443246745.png" alt="img"></p>
<h3 id="4-4-2-align-items-flex-end"><a href="#4-4-2-align-items-flex-end" class="headerlink" title="4.4.2  align-items:flex-end;"></a>4.4.2  align-items:flex-end;</h3><p>加入 align-items:flex-end;时</p>
<p><img src="/./../../img/clipboard-1615443255144.png" alt="img"></p>
<h3 id="4-4-3-align-items-center"><a href="#4-4-3-align-items-center" class="headerlink" title="4.4.3  align-items:center;"></a>4.4.3  align-items:center;</h3><p>加入 align-items:center;时</p>
<p><img src="/./../../img/clipboard-1615443262532.png" alt="img"></p>
<h3 id="4-4-4-align-items-stretch"><a href="#4-4-4-align-items-stretch" class="headerlink" title="4.4.4  align-items:stretch;"></a>4.4.4  align-items:stretch;</h3><p>加入 align-items:stretch;时 注意要子容器不要设高度，因为这个属性会将子容器的高度拉升至父容器一样（包含子容器的margin）</p>
<p><img src="/./../../img/clipboard-1615443270594.png" alt="img"></p>
<h3 id="4-5-align-content"><a href="#4-5-align-content" class="headerlink" title="4.5 align-content"></a>4.5 align-content</h3><p>设置侧轴上子元素的排列方式（多行）</p>
<p>设置这个属性时，必须允许子元素换行——flex-wrap:wrap;</p>
<p><img src="/./../../img/clipboard-1615443280848.png" alt="img"></p>
<p>初始状态</p>
<p><img src="/./../../img/clipboard-1615443286815.png" alt="img"></p>
<h3 id="4-5-1-align-content-flex-start"><a href="#4-5-1-align-content-flex-start" class="headerlink" title="4.5.1  align-content:flex-start ;"></a>4.5.1  align-content:flex-start ;</h3><p>紧挨着的第一行</p>
<p><img src="/./../../img/clipboard-1615443295315.png" alt="img"></p>
<h3 id="4-5-2-align-content-flex-end"><a href="#4-5-2-align-content-flex-end" class="headerlink" title="4.5.2  align-content:flex-end ;"></a>4.5.2  align-content:flex-end ;</h3><p>从下面开始分布</p>
<p><img src="/./../../img/clipboard-1615443311404.png" alt="img"></p>
<h3 id="4-5-3-align-content-center"><a href="#4-5-3-align-content-center" class="headerlink" title="4.5.3  align-content:center ;"></a>4.5.3  align-content:center ;</h3><p>从中间开始分布</p>
<p><img src="/./../../img/clipboard-1615443318058.png" alt="img"></p>
<h3 id="4-5-4-align-content-space-around"><a href="#4-5-4-align-content-space-around" class="headerlink" title="4.5.4  align-content:space-around;"></a>4.5.4  align-content:space-around;</h3><p><img src="/./../../img/clipboard-1615443326342.png" alt="img"></p>
<h3 id="4-5-5-align-content-space-between"><a href="#4-5-5-align-content-space-between" class="headerlink" title="4.5.5  align-content:space-between;"></a>4.5.5  align-content:space-between;</h3><p><img src="/./../../img/clipboard-1615443334093.png" alt="img"></p>
<p>align-content和align-items的区别：</p>
<p>align-items适用于单行情况下，只有上对齐、下对齐、居中和拉伸<br>align-content适应于换行(多行)的情况下（单行情况下无效)，可以设置上对齐、下对齐、居中、拉伸以及平均分配剩余空间等属性值。<br>总结就是单行找align-items多行找align-content</p>
<h3 id="4-6-flex-flow"><a href="#4-6-flex-flow" class="headerlink" title="4.6 flex-flow"></a>4.6 flex-flow</h3><p>flex-flow属性是flex-direction和flex-wrap的复合属性</p>
<p>例如：以X为主轴，并且能够换行</p>
<p>flex-flow:row wrap;即可</p>
<p>如果使用flex-direction和flex-wrap则需要写</p>
<p>flex-direction:row;</p>
<p>flex-wrap:wrap;</p>
<p>两行代码</p>
<p>所以 ：</p>
<p>| flex-direction:row; | 等于 | flex-flow:row wrap; |<br>| ——————- |<br>| flex-wrap:wrap;     |</p>
<h2 id="5-Felx布局子项常见属性"><a href="#5-Felx布局子项常见属性" class="headerlink" title="5 Felx布局子项常见属性"></a>5 Felx布局子项常见属性</h2><p>flex子项目占的份数<br>align-self控制子项自己在侧轴的排列方式order属性定义子项的排列顺序(前后顺序)</p>
<h3 id="5-1-1-flex"><a href="#5-1-1-flex" class="headerlink" title="5.1.1  flex"></a>5.1.1  flex</h3><p>flex属性定义子项目分配剩余空间，用flex来表示占多少份数。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line"><span class="attribute">flex</span>: &lt;number&gt;; l*default o*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>现在要做一个效果，在一行中有三个部分，左侧要固定，右侧要固定</p>
<p>剩下中间的部分自适应</p>
<p>html部分</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>  <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>felx布局的css部分</p>
<p>在第一个盒子和第三个盒子给了固定宽高的情况下注意看第二个盒子的样式</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;   </span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> auto;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>; </span><br><span class="line">    <span class="attribute">background</span>: pink;   </span><br><span class="line">    <span class="attribute">display</span>: flex; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;  </span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>; </span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">background</span>: red; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123; </span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">background</span>: green ; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123; </span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>; </span><br><span class="line">    <span class="attribute">background</span>: blue ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/./../../img/clipboard-1615443920955.png" alt="img"></p>
<p>并且屏幕缩小时绿色宽度是会进行自适应的</p>
<p>这就是淘宝有名的圣杯布局</p>
<p>-——————————————————————————–</p>
<p>现在要做，一行平均分三份</p>
<p>传统的百分比是将每个子元素的宽度设为33.3%</p>
<p>而flex是有几个子元素就将父容器平均分成几等分，然后每个子元素只占一份</p>
<p>html代码：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>felx布局的css部分</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> auto;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">background</span>: pink;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">     <span class="attribute">border</span>:<span class="number">1px</span> solid black;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/./../../img/clipboard-1615443977117.png" alt="img"></p>
<p>也可以指定性的不平均分配</p>
<p>比如想让第一个span多占一点</p>
<p>可以这样</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/./../../img/clipboard-1615444001189.png" alt="img"></p>
<p>而且在页面缩小时，子容器都会按此等分缩小</p>
<h3 id="5-1-2-align-self"><a href="#5-1-2-align-self" class="headerlink" title="5.1.2  align-self"></a>5.1.2  align-self</h3><p>控制子元素在侧轴上自己移动</p>
<p>看到现在可以发现，子容器的分布是在主轴上的，子容器的移动是在侧轴上的</p>
<p>例子1</p>
<p>现有父容器中有三个子容器</p>
<p><img src="/./../../img/clipboard-1615444015256.png" alt="img"></p>
<p>现在只想让第三个子容器移动到下方</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">    <span class="attribute">align-self</span>: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/./../../img/clipboard-1615444035763.png" alt="img"></p>
<h3 id="5-1-3-order"><a href="#5-1-3-order" class="headerlink" title="5.1.3  order"></a>5.1.3  order</h3><p>例子2</p>
<p>还是刚刚那三个子容器</p>
<p>现在想改变1号容器和2号容器的顺序</p>
<p>只需要改变2号容器的顺序即可，每个容器默认的order是0，也就是自己本身的位置</p>
<p>order设为1时代表自己向后移动一位</p>
<p>设为-1时代表自己向前移动一位</p>
<p>所以只需要将2号容器的顺序order设为-1向前移动一位即可</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="attribute">order</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/./../../img/clipboard-1615444338331.png" alt="img"></p>
<p>值得注意的是，如果有子容器1号2号3号，现在想把1号容器移动到2号之后3号之前  原理上是将1号容器的order设为1代表向后移动一位</p>
<p>可实际上</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="attribute">align-self</span>: flex-end;</span><br><span class="line">    <span class="attribute">order</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1号容器会直接跑到最后面</p>
<p><img src="/./../../img/clipboard-1615444364097.png" alt="img"></p>
<p>多加几个容器也是一样</p>
<p>现在发现，order改变顺序并不能使容器插队</p>
<p>你后来的人就要排队</p>
<p>如果所有项目的f1ex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的 flex-shtrink 属性为o，其他项目都为1，则空间不足时,前者不缩小。</p>
<p>好了Flex布局到这里已经足够一般开发使用了</p>
]]></content>
      
        
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
            <tag> flex </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为vuepres增加favicon站标]]></title>
      <url>/2021/03/09/sicker/add%20favicon%20to%20vuepress/</url>
      <content type="html"><![CDATA[<p>在 <code>.vuepress/config.js</code> 中在合适位置加入如下代码</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    <span class="attr">head</span>: [</span><br><span class="line">        [<span class="string">&#x27;link&#x27;</span>, &#123; <span class="attr">rel</span>: <span class="string">&#x27;icon&#x27;</span>, <span class="attr">href</span>: <span class="string">&#x27;/logo.png&#x27;</span> &#125;]</span><br><span class="line">    ],</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>准备 <code>logo.png</code> 或者 对应格式的图片文件，置入 <code>.vuepress/public</code> 下</p>
<p>打开站点，看看效果吧！</p>
]]></content>
      
        
        <tags>
            
            <tag> vuepress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在vuepress/markdown-it中加入checkbox支持]]></title>
      <url>/2021/03/09/sicker/use%20checkbox%20in%20vuepress/</url>
      <content type="html"><![CDATA[<h3 id="引入组件"><a href="#引入组件" class="headerlink" title="引入组件"></a>引入组件</h3><p>下载依赖</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add markdown-it-task-lists</span><br></pre></td></tr></table></figure>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在 <code>.vuepress</code> 下的 <code>config.js</code> 中，在如下位置加入</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    <span class="attr">markdown</span>: &#123;</span><br><span class="line">        <span class="attr">lineNumbers</span>: <span class="literal">true</span>, <span class="comment">// 该行与本文无关，用以使代码行增加行号</span></span><br><span class="line">        <span class="attr">extendMarkdown</span>: <span class="function"><span class="params">md</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 使用更多的 markdown-it 插件!</span></span><br><span class="line">            md.<span class="title function_">use</span>(<span class="built_in">require</span>(<span class="string">&#x27;markdown-it-task-lists&#x27;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> vuepress </tag>
            
            <tag> 插件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于VUE的SEO优化]]></title>
      <url>/2021/03/08/linvkey/vue%20seo/</url>
      <content type="html"><![CDATA[<p>1.在项目中安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install prerender-spa-plugin --save </span><br></pre></td></tr></table></figure>

<p>2.在vue.config.js中写入以下代码</p>
<p>注意修改routes数组的值</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">const PrerenderSPAPlugin = require(&#x27;prerender-spa-plugin&#x27;)</span><br><span class="line">const Renderer = PrerenderSPAPlugin.PuppeteerRenderer</span><br><span class="line">const path = require(&#x27;path&#x27;)</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    configureWebpack: config =&gt; &#123;</span><br><span class="line">        if (process.env.NODE_ENV !== &#x27;production&#x27;) return;</span><br><span class="line">        return &#123;</span><br><span class="line">            plugins: [</span><br><span class="line">                new PrerenderSPAPlugin(&#123;</span><br><span class="line">                   //网页包的路径将应用程序输出到prerender</span><br><span class="line">                    staticDir: path.join(__dirname,&#x27;dist&#x27;),</span><br><span class="line">                    //Routes to render 对应自己router</span><br><span class="line">                    routes: [&#x27;/&#x27;, &#x27;/home&#x27;,&#x27;/blog&#x27;,&#x27;/aboutMe&#x27;,&#x27;/message&#x27;],</span><br><span class="line">                    renderer: new Renderer(&#123;</span><br><span class="line">                        inject: &#123;</span><br><span class="line">                            foo: &#x27;bar&#x27;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        //渲染时显示浏览器窗口。对调试有用。</span><br><span class="line">                        headless: false,</span><br><span class="line">                        // // 在 main.js 中 document.dispatchEvent(new Event(&#x27;render-event&#x27;))，两者的事件名称要对应上。</span><br><span class="line">                        renderAfterDocumentEvent: &#x27;render-event&#x27;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;),</span><br><span class="line">            ],</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.在main.js中添加如下内容</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  render: h =&gt; h(App),</span><br><span class="line">  //这里与vue.config.js中的事件名相对应</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    document.dispatchEvent(new Event(&#x27;render-event&#x27;))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).$mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure>

<p>4.注意项目的router必须是history模式</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mode:&quot;history&quot;</span><br></pre></td></tr></table></figure>











<p>亲测有效！！！</p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
            <tag> SEO </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装Koa插件时遇到的问题]]></title>
      <url>/2021/03/05/linvkey/Koa%20plugins/</url>
      <content type="html"><![CDATA[<blockquote>
<p>安装Koa插件时遇到的问题</p>
</blockquote>
<span id="more"></span>

<p>问题描述：</p>
<p><img src="/./../../img/clipboard.png" alt="img"></p>
<p>  电脑中缺少python环境和桌面应用程序</p>
<p>解决方法：<br>  用Powershell或者cmd 用管理员身份打开</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">--global</span> <span class="literal">--production</span> windows<span class="literal">-build-tools</span>  </span><br></pre></td></tr></table></figure>

<p> 它会安装python 2.7 和  VisualStudio</p>
<p><img src="/./../../img/clipboard-1614914291135.png" alt="img"></p>
<p>注意</p>
<p>选择Visual C++生成工具</p>
<p>命令行执行完后请等待，此时你的C盘会有4G的占用 </p>
<p>当滑轮滚动命令行窗口 它不锁定  或者看到</p>
<p><img src="/./../../img/clipboard-1614914314053.png" alt="img"></p>
<p>All done!时</p>
<p> 方可关闭此窗口</p>
<p>强调！如果再安装Koa插件时依旧出现问题，那么请重复命令行操作</p>
<p>因为你的电脑可能因为网络问题而安装C++桌面应用程序不成功</p>
<p>安装过程可留意C盘的大小变化，安装成功大约占用4G内容</p>
<p>亲测有效！！！</p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
            <tag> Koa </tag>
            
            <tag> nuxtJS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信小程序输入框上移问题]]></title>
      <url>/2021/03/05/sunyifang/input/</url>
      <content type="html"><![CDATA[<h2 id="微信小程序输入框上移问题"><a href="#微信小程序输入框上移问题" class="headerlink" title="微信小程序输入框上移问题"></a>微信小程序输入框上移问题</h2><ul>
<li>缺陷：输入框顶起整个页面 包括自定义顶栏</li>
<li>解决方式：给input设置adjust-position&#x3D;”false“后自定义input高度</li>
<li>wxml</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;view <span class="keyword">class</span>=<span class="string">&quot;submit&quot;</span> style=<span class="string">&quot;bottom:&#123;&#123;bottom&#125;&#125;px&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;serch-view&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">bindconfirm</span>=<span class="string">&quot;toSubmit&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">value</span>=<span class="string">&quot;&#123;&#123;code&#125;&#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">bindfocus</span>=<span class="string">&quot;inputFocus&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">bindblur</span>=<span class="string">&quot;inputBlur&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">adjust-position</span>=<span class="string">&quot;&#123;&#123;false&#125;&#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">class</span>=<span class="string">&quot;block-main&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">confirm-type</span>=<span class="string">&quot;go&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">cursor-spacing</span>=<span class="string">&quot;100&quot;</span> <span class="attr">class</span>=<span class="string">&quot;course-search&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">bindtap</span>=<span class="string">&quot;search&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;search-button&quot;</span>&gt;</span>发 送<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li>js</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">inputFocus (e) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;<span class="attr">bottom</span>: e.<span class="property">detail</span>.<span class="property">height</span>&#125;)</span><br><span class="line">&#125;,</span><br><span class="line">inputBlur () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;<span class="attr">bottom</span>: <span class="number">0</span>&#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于el-input标签无法输入文字的问题]]></title>
      <url>/2021/03/04/linvkey/el-input%20question/</url>
      <content type="html"><![CDATA[<blockquote>
<p>关于el-input标签无法输入文字的问题</p>
</blockquote>
<p>问题描述：<br>  在项目中引用elementUI的<code>&lt;el-input&gt;&lt;/el-input&gt;</code>标签，打字时按空格键无法显示在文本框中。</p>
<p>解决方法：<br>  在<code>&lt;el-input&gt;</code>标签内使用 v-model属性，然后在data()中定义一个值为空，赋给v-model属性<br>  例如 </p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;el-input v-model=&quot;content&quot; /&gt; </span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  data()&#123;</span><br><span class="line">      return&#123;</span><br><span class="line">          content:&quot;&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>亲测有效！！！</p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
            <tag> ElementUI </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Vue 文档速查]]></title>
      <url>/2021/02/24/sicker/fast%20search%20on%20vue/</url>
      <content type="html"><![CDATA[<h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><p>vue 参数为html</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-html=&quot;someData&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>v-bind:id</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:id=&quot;someData&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&#123;&#123;number + 1&#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><p>v-if</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-if=&quot;a === 0&quot;&gt;看不看得到我？&lt;/div&gt;</span><br><span class="line">&lt;div v-else-if=&quot;a === 1&quot;&gt;你能看到第二行拉&lt;/div&gt;</span><br><span class="line">&lt;div v-else&gt;你看不到它&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>v-bind:href</p>
<p>缩写 :href</p>
<h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a v-on:[eventName]=&quot;doSomething&quot;&gt; ... &lt;/a&gt;</span><br></pre></td></tr></table></figure>

<p>如果 <code>eventName</code> 为 href ，则等价于 <code>v-bind:href</code></p>
<p>如果 <code>eventName</code> 为 focus，则等价于 <code>v-on:focus</code></p>
<p>避免使用大写字符来命名键名，因为浏览器会把 attribute 名全部强制转为小写</p>
<h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><h4 id="v-on-click"><a href="#v-on-click" class="headerlink" title="v-on:click"></a>v-on:click</h4><p>缩写:@click</p>
<p>后面可以接 表达式 或者 方法</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div @click=&quot;a+1&quot;&gt;点我&lt;/div&gt;</span><br><span class="line">&lt;div @click=&quot;hello(&#x27;hello&#x27;,$event)&quot;&gt;点我&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">	export default &#123;</span><br><span class="line">        methods: &#123;</span><br><span class="line">            hello(a,b)&#123;</span><br><span class="line">                alert(a)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>第二个参数 $event 可以获取到节点信息  </p>
<h4 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div @click=&quot;a&quot;&gt;</span><br><span class="line">    点我</span><br><span class="line">    &lt;div @click=&quot;b.stop&quot;&gt;</span><br><span class="line">        点我</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>阻止冒泡</p>
<p>其他修饰符</p>
<ul>
<li><p><code>.stop</code></p>
</li>
<li><p><code>.prevent</code></p>
</li>
<li><p><code>.capture</code></p>
</li>
<li><p><code>.self</code></p>
</li>
<li><p><code>.once</code></p>
</li>
<li><p><code>.passive</code></p>
</li>
<li><p><code>.enter</code></p>
</li>
<li><p><code>.tab</code></p>
</li>
<li><p><code>.delete</code> (捕获“删除”和“退格”键)</p>
</li>
<li><p><code>.esc</code></p>
</li>
<li><p><code>.space</code></p>
</li>
<li><p><code>.up</code></p>
</li>
<li><p><code>.down</code></p>
</li>
<li><p><code>.left</code></p>
</li>
<li><p><code>.right</code></p>
</li>
</ul>
<p>更多查看事件文档    <a href="https://cn.vuejs.org/v2/guide/events.html">https://cn.vuejs.org/v2/guide/events.html</a></p>
<h3 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h3><p>some.js</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;n&#x27;</span>,&#123;</span><br><span class="line"> <span class="attr">bind</span>: <span class="function">(<span class="params">el,binding</span>)=&gt;</span>&#123;</span><br><span class="line">    el.<span class="property">textContent</span>=<span class="title class_">Math</span>.<span class="title function_">pow</span>(binding.<span class="property">value</span>,<span class="number">2</span>)</span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="attr">update</span>: <span class="function">(<span class="params">el,binding</span>)=&gt;</span>&#123;</span><br><span class="line">    el.<span class="property">textContent</span>=<span class="title class_">Math</span>.<span class="title function_">pow</span>(binding.<span class="property">value</span>,<span class="number">2</span>)</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>some.vue</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;div v-n=&quot;32&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import  &#x27;./components/n&#x27;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h3 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &#123;&#123;c&#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            a:1,</span><br><span class="line">            b:2</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    computed:&#123;</span><br><span class="line">        c: function() &#123;</span><br><span class="line">            return this.b - this.a</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h3 id="样式-动态class"><a href="#样式-动态class" class="headerlink" title="样式 动态class"></a>样式 动态class</h3><h4 id="数组传输"><a href="#数组传输" class="headerlink" title="数组传输"></a>数组传输</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;div :class=&quot;[a,b]&quot;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">	export default &#123;</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                a:&#x27;min&#x27;,</span><br><span class="line">                b:&#x27;max&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="对象方式"><a href="#对象方式" class="headerlink" title="对象方式"></a>对象方式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;div :class=&quot;c&quot;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">	export default &#123;</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                c:&#123;&#x27;max&#x27;:true,&#x27;min&#x27;:false&#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-for=&quot;(item,index) in list&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">	&#123;&#123;index&#125;&#125;. &#123;&#123;item&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div v-for=&quot;(val, key) in object&quot; :key=&quot;key&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div v-for=&quot;(val, name, index) in object&quot; :key=&quot;name&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;span v-for=&quot;n in 10&quot;&gt;&#123;&#123; n &#125;&#125; &lt;/span&gt; &lt;!--直接输出从1开始的n个整数--&gt;</span><br></pre></td></tr></table></figure>

<p>也可以用 of 来等代替 in</p>
<h4 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;template v-for=&quot;(item,index) in object&quot;&gt;</span><br><span class="line">    &lt;li :key=&quot;item&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;li :key=&quot;index&quot; class=&quot;divider&quot; role=&quot;presentation&quot;&gt;line 2&lt;/li&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>

<p>两行需要绑定不同的 key</p>
<h4 id="触发监听"><a href="#触发监听" class="headerlink" title="触发监听"></a>触发监听</h4><p>Vue 将被侦听的数组的变更方法进行了包裹，所以它们也将会触发视图更新。这些被包裹过的方法包括：</p>
<ul>
<li><code>push()</code></li>
<li><code>pop()</code></li>
<li><code>shift()</code></li>
<li><code>unshift()</code></li>
<li><code>splice()</code></li>
<li><code>sort()</code></li>
<li><code>reverse()</code></li>
</ul>
<h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><h4 id="slot-插槽-与-传参-props"><a href="#slot-插槽-与-传参-props" class="headerlink" title="slot 插槽 与 传参 props"></a>slot 插槽 与 传参 props</h4><p>some.vue</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;navigation-link url=&quot;/profile&quot;&gt;</span><br><span class="line">      &lt;template #slot1&gt;这里会渲染slot1插槽&lt;/template&gt;</span><br><span class="line">      &lt;div&gt;-----父组件分割线---&lt;/div&gt;</span><br><span class="line">      &lt;template #slot2&gt;这里会渲染slot2插槽&lt;/template&gt;</span><br><span class="line">&lt;/navigation-link&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">	import navigationLink from ./navigationLink</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>navigationLink.vue</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;a</span><br><span class="line">  v-bind:href=&quot;url&quot;</span><br><span class="line">  class=&quot;nav-link&quot;</span><br><span class="line">&gt;</span><br><span class="line">    &lt;slot name=&quot;slot1&quot;&gt;默认插槽会显示我&lt;/slot&gt;</span><br><span class="line">    &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">    &lt;div&gt;-----子组件分割线---&lt;/div&gt;</span><br><span class="line">    &lt;slot name=&quot;slot2&quot;&gt;默认插槽会显示我 2&lt;/slot&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">	export default&#123;</span><br><span class="line">        props:&#123;</span><br><span class="line">            url: String,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>渲染成</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;/profile&quot; class=&quot;nav-link&quot;&gt;</span><br><span class="line">	这里会渲染slot1插槽</span><br><span class="line">    &lt;div&gt;-----父组件分割线---&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;-----子组件分割线---&lt;/div&gt;</span><br><span class="line">    这里会渲染slot2插槽</span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure>

<p>props类型</p>
<ul>
<li><code>String</code></li>
<li><code>Number</code></li>
<li><code>Boolean</code></li>
<li><code>Array</code></li>
<li><code>Object</code></li>
<li><code>Date</code></li>
<li><code>Function</code></li>
<li><code>Symbol</code></li>
</ul>
<p>多个可能的类型    prop: [String, Number]</p>
<p>示例</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="attr">props</span>:&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">        <span class="attr">default</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        	<span class="keyword">return</span> <span class="string">&#x27;success&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">		<span class="attr">validator</span>: <span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">            <span class="comment">// 这个值必须匹配下列字符串中的一个</span></span><br><span class="line">            <span class="keyword">return</span> [<span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;warning&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>].<span class="title function_">indexOf</span>(value) !== -<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>非 Prop 的 Attribute 将会被添加到这个组件的根元素上</p>
<p>如果子组件存在class、style，则会自动合并父组件外部提供给组件的值</p>
<p>如果你<strong>不</strong>希望组件的根元素继承 attribute，你可以在组件的选项中设置 <code>inheritAttrs: false</code>。</p>
<p>示例：</p>
<p>父组件提供 class</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">s</span> <span class="attr">class</span>=<span class="string">&quot;big&quot;</span> <span class="attr">a</span>=<span class="string">2222</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>子组件自带 class</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;div class=&quot;colorful&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">      name: &quot;HelloWorld&quot;,</span><br><span class="line">      inheritAttrs: false,</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>渲染后</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;colorful big&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意 <code>inheritAttrs: false</code> 选项<strong>不会</strong>影响 <code>style</code> 和 <code>class</code> 的绑定。</p>
<p><code>v-slot:header</code> 可以被重写为 <code>#header</code>：</p>
<p>更多见 <a href="https://cn.vuejs.org/v2/guide/components-slots.html">https://cn.vuejs.org/v2/guide/components-slots.html</a></p>
<h3 id="访问父子孙组件属性与方法"><a href="#访问父子孙组件属性与方法" class="headerlink" title="访问父子孙组件属性与方法"></a>访问父子孙组件属性与方法</h3><blockquote>
<p>以下示例均以 vue-cli 创建的默认实例为模板</p>
</blockquote>
<h4 id="根实例"><a href="#根实例" class="headerlink" title="根实例"></a>根实例</h4><p>在 <code>main.js</code> 实例化vue对象时，引入 <code>data</code> 与 <code>methods</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;<span class="attr">who</span>:<span class="string">&quot;我是main.js&quot;</span>&#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123; <span class="title function_">hello</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello from main.js&quot;</span>)&#125; &#125;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>那么所有的节点均可以以 <code>this.$root.xxx</code> 获取到属性与方法</p>
<h4 id="父级组件"><a href="#父级组件" class="headerlink" title="父级组件"></a>父级组件</h4><p>app.vue</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">who</span>: <span class="string">&quot;我是App.vue&quot;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123; <span class="title function_">hello</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello from parent component&quot;</span>)&#125; &#125;</span><br></pre></td></tr></table></figure>
<p>那么，其子组件 如 <code>helloworld.vue</code> 则可以通过 <code>this.$parents.xxx</code> 来获取其属性与方法</p>
<h4 id="子组件"><a href="#子组件" class="headerlink" title="子组件"></a>子组件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;HelloWorld ref=&quot;helloworld&quot; msg=&quot;Welcome to Your Vue.js App&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p>通过 <code>this.$refs.helloworld.XXX</code> 获取子组件的属性与方法</p>
<h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3><p>在最上级的组件中注入属性与方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;App&quot;</span>,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;&#125;,</span><br><span class="line">  <span class="attr">provide</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">provide</span>: <span class="variable language_">this</span>.<span class="property">provide</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>子孙组件通过</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;App&quot;</span>,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;&#125;,</span><br><span class="line">  <span class="attr">inject</span>: [<span class="string">&#x27;provide&#x27;</span>],</span><br><span class="line">  <span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;从祖节点获取到的provide：&quot;</span>,<span class="variable language_">this</span>.<span class="property">provide</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可直接使用该属性方法</p>
<h4 id="综合示例"><a href="#综合示例" class="headerlink" title="综合示例"></a>综合示例</h4><p>main.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;<span class="attr">who</span>:<span class="string">&quot;我是main.js&quot;</span>&#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;<span class="title function_">hello</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello from main.js&quot;</span>)&#125;&#125;,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot; /&gt;</span><br><span class="line">    &lt;HelloWorld ref=&quot;helloworld&quot; msg=&quot;Welcome to Your Vue.js App&quot; /&gt;</span><br><span class="line">    &lt;button @click=&quot;b = !b&quot;&gt;button&lt;/button&gt;</span><br><span class="line">    &lt;transition</span><br><span class="line">      name=&quot;slide-fade&quot;</span><br><span class="line">      :duration=&quot;&#123; enter: 500, leave: 800 &#125;&quot;</span><br><span class="line">      mode=&quot;out-in&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div v-if=&quot;b&quot;&gt;111&lt;/div&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line">    &lt;transition</span><br><span class="line">      name=&quot;custom-classes-transition&quot;</span><br><span class="line">      enter-active-class=&quot;animated tada&quot;</span><br><span class="line">      leave-active-class=&quot;animated bounceOutRight&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;p v-if=&quot;b&quot;&gt;需要配 animated.css 库&lt;/p&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HelloWorld from &quot;./components/HelloWorld.vue&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      who: &quot;我是App.vue&quot;,</span><br><span class="line">      provide: &quot;我是App.vue的提供者&quot;,</span><br><span class="line">      b: true,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    hello() &#123;</span><br><span class="line">      console.log(&quot;hello from parent component&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;&#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    console.log(this.$refs.helloworld.who);</span><br><span class="line">  &#125;,</span><br><span class="line">  provide: function () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      provide: this.provide,</span><br><span class="line">      hello: this.hello</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    HelloWorld,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<p>components&#x2F;HelloWorld.vue</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">    &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;HelloChild /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HelloChild from &#x27;./HelloChild.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;HelloWorld&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">    who: &quot;我是helloWorld.vue&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    HelloChild</span><br><span class="line">  &#125;,</span><br><span class="line">  inject: [&#x27;provide&#x27;],</span><br><span class="line">  props: &#123;</span><br><span class="line">    msg: String</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted()&#123;</span><br><span class="line">      console.log(&quot;父节点&quot;,this.$parent.who)</span><br><span class="line">      console.log(&quot;根节点&quot;,this.$root.who)</span><br><span class="line">      this.$root.hello()</span><br><span class="line">      this.$parent.hello()</span><br><span class="line">      console.log(&quot;从父节点获取到的provide：&quot;,this.provide)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">h3 &#123;</span><br><span class="line">  margin: 40px 0 0;</span><br><span class="line">&#125;</span><br><span class="line">ul &#123;</span><br><span class="line">  list-style-type: none;</span><br><span class="line">  padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">li &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  margin: 0 10px;</span><br><span class="line">&#125;</span><br><span class="line">a &#123;</span><br><span class="line">  color: #42b983;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<p>components&#x2F;HelloChild.vue</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">      我是 hello  的子组件</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;helloChild&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">    who: &quot;我是helloChild.vue&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  inject: [&#x27;provide&#x27;,&#x27;hello&#x27;],</span><br><span class="line">  mounted()&#123;</span><br><span class="line">    console.log(&quot;父节点&quot;,this.$parent.who)</span><br><span class="line">    console.log(&quot;从祖节点获取到的provide：&quot;,this.provide)</span><br><span class="line">    console.log(this.hello)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>输出结果</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">HelloChild.vue</span><br><span class="line">---</span><br><span class="line">父节点 我是helloWorld.vue</span><br><span class="line">从祖节点获取到的provide： 我是App.vue的提供者</span><br><span class="line">ƒ <span class="function"><span class="title">hello</span></span>() &#123;</span><br><span class="line">    console.log(<span class="string">&quot;hello from parent component&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">HelloWorld.vue</span><br><span class="line">---</span><br><span class="line">父节点 我是App.vue</span><br><span class="line">根节点 我是main.js</span><br><span class="line">从父节点获取到的provide： 我是App.vue的提供者</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">main.js</span><br><span class="line">---</span><br><span class="line">hello from main.js</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">App.vue</span><br><span class="line">---</span><br><span class="line">hello from parent component</span><br><span class="line">我是helloWorld.vue</span><br></pre></td></tr></table></figure>
<h4 id="vuex"><a href="#vuex" class="headerlink" title="vuex"></a>vuex</h4><p>…</p>
<h3 id="组件复用与自动销毁"><a href="#组件复用与自动销毁" class="headerlink" title="组件复用与自动销毁"></a>组件复用与自动销毁</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mounted</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">attachDatepicker</span>(<span class="string">&#x27;startDateInput&#x27;</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">attachDatepicker</span>(<span class="string">&#x27;endDateInput&#x27;</span>)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="attr">attachDatepicker</span>: <span class="keyword">function</span> (<span class="params">refName</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> picker = <span class="keyword">new</span> <span class="title class_">Pikaday</span>(&#123;</span><br><span class="line">      <span class="attr">field</span>: <span class="variable language_">this</span>.<span class="property">$refs</span>[refName],</span><br><span class="line">      <span class="attr">format</span>: <span class="string">&#x27;YYYY-MM-DD&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.$once(<span class="string">&#x27;hook:beforeDestroy&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      picker.<span class="title function_">destroy</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="过渡"><a href="#过渡" class="headerlink" title="过渡"></a>过渡</h3><p>template</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click=<span class="string">&quot;b = !b&quot;</span>&gt;button&lt;/button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">transition</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">name</span>=<span class="string">&quot;slide-fade&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:duration</span>=<span class="string">&quot;&#123; enter: 500, leave: 800 &#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">mode</span>=<span class="string">&quot;out-in&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;b&quot;</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">transition</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">name</span>=<span class="string">&quot;custom-classes-transition&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">enter-active-class</span>=<span class="string">&quot;animated tada&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">leave-active-class</span>=<span class="string">&quot;animated bounceOutRight&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;b&quot;</span>&gt;</span>需要配 animated.css 库<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">b</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>css</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.slide-fade-enter-active</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.slide-fade-leave-active</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.8s</span> <span class="built_in">cubic-bezier</span>(<span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.8</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.slide-fade-enter</span>, <span class="selector-class">.slide-fade-leave-to</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">10px</span>);</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h3><p><a href="/2021/04/29/vue-code-snippet/">vue 常用代码片段</a></p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
